	.text
	.file	"c64dvd-glsl.c"
	.globl	ERROREXIT               # -- Begin function ERROREXIT
	.p2align	4, 0x90
	.type	ERROREXIT,@function
ERROREXIT:                              # @ERROREXIT
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
# %bb.1:
	callq	fb_GfxScreenPtr@PLT
	movq	%rax, -40(%rbp)
	cmpq	$0, -40(%rbp)
	jne	.LBB0_3
# %bb.2:
	jmp	.LBB0_4
.LBB0_3:
	xorl	%eax, %eax
	movl	%eax, %edi
	movl	$8, %esi
	movl	%eax, %edx
	movl	%eax, %ecx
	movl	%eax, %r8d
	callq	fb_GfxScreen@PLT
.LBB0_4:
	xorl	%eax, %eax
	leaq	-16(%rbp), %rcx
	movq	%rcx, %rdi
	movl	%eax, %esi
	movl	$8, %ecx
	movq	%rcx, %rdx
	movl	%eax, -52(%rbp)         # 4-byte Spill
	movq	%rcx, -64(%rbp)         # 8-byte Spill
	callq	memset@PLT
	leaq	-24(%rbp), %rcx
	movq	%rcx, %rdi
	movl	-52(%rbp), %esi         # 4-byte Reload
	movq	-64(%rbp), %rdx         # 8-byte Reload
	callq	memset@PLT
	movq	-32(%rbp), %rsi
	movl	-52(%rbp), %edi         # 4-byte Reload
	movl	$1, %edx
	callq	fb_PrintString@PLT
	xorl	%edi, %edi
	movl	$1, %esi
	callq	fb_PrintVoid@PLT
	leaq	.L.str(%rip), %rdi
	movl	$17, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edi, %edi
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rsi
	movl	$1, %edx
	callq	fb_PrintString@PLT
	callq	fb_Beep@PLT
	movl	$4294967295, %edi       # imm = 0xFFFFFFFF
	callq	fb_Sleep@PLT
	movl	$1, %edi
	callq	fb_End@PLT
# %bb.5:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB0_7
# %bb.6:                                # %SP_return
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB0_7:                                # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end0:
	.size	ERROREXIT, .Lfunc_end0-ERROREXIT
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function GLSCREEN
.LCPI1_0:
	.quad	4621256167635550208     # double 9
.LCPI1_1:
	.quad	4625196817309499392     # double 16
	.text
	.globl	GLSCREEN
	.p2align	4, 0x90
	.type	GLSCREEN,@function
GLSCREEN:                               # @GLSCREEN
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$1824, %rsp             # imm = 0x720
                                        # kill: def $r8b killed $r8b killed $r8d
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -840(%rbp)
	movq	%rsi, -848(%rbp)
	movq	%rdx, -856(%rbp)
	movq	%rcx, -96(%rbp)
	movb	%r8b, -857(%rbp)
# %bb.1:
	xorl	%eax, %eax
	leaq	-152(%rbp), %rcx
	movq	%rcx, %rdi
	movl	%eax, %esi
	movl	$8, %ecx
	movq	%rcx, %rdx
	movl	%eax, -1380(%rbp)       # 4-byte Spill
	movq	%rcx, -1392(%rbp)       # 8-byte Spill
	callq	memset@PLT
	leaq	-160(%rbp), %rcx
	movq	%rcx, %rdi
	movl	-1380(%rbp), %esi       # 4-byte Reload
	movq	-1392(%rbp), %rdx       # 8-byte Reload
	callq	memset@PLT
	leaq	-168(%rbp), %rcx
	movq	%rcx, %rdi
	movl	-1380(%rbp), %esi       # 4-byte Reload
	movq	-1392(%rbp), %rdx       # 8-byte Reload
	callq	memset@PLT
	callq	fb_GfxScreenPtr@PLT
	movq	%rax, -904(%rbp)
	cmpq	$0, -904(%rbp)
	jne	.LBB1_3
# %bb.2:
	jmp	.LBB1_4
.LBB1_3:
	xorl	%eax, %eax
	movl	%eax, %edi
	movl	$8, %esi
	movl	%eax, %edx
	movl	%eax, %ecx
	movl	%eax, %r8d
	callq	fb_GfxScreen@PLT
.LBB1_4:
	xorl	%eax, %eax
	movl	%eax, %esi
	leaq	.L.str.1(%rip), %rdi
	callq	fb_StrAllocTempDescZEx@PLT
	movq	%rax, -912(%rbp)
	movq	$0, -120(%rbp)
	movq	$0, -112(%rbp)
	movq	$0, -104(%rbp)
	movq	-912(%rbp), %rax
	leaq	-152(%rbp), %rdi
	leaq	-160(%rbp), %rsi
	leaq	-168(%rbp), %rdx
	leaq	-104(%rbp), %rcx
	leaq	-112(%rbp), %r8
	leaq	-120(%rbp), %r9
	movq	%rax, (%rsp)
	callq	fb_GfxScreenInfo@PLT
	cmpq	$0, -840(%rbp)
	jle	.LBB1_6
# %bb.5:
	jmp	.LBB1_7
.LBB1_6:
	xorl	%eax, %eax
	cmpq	$0, -848(%rbp)
	setle	%cl
	andb	$1, %cl
	movzbl	%cl, %edx
	subl	%edx, %eax
	movslq	%eax, %rsi
	movq	%rsi, -872(%rbp)
	jmp	.LBB1_8
.LBB1_7:
	movq	$0, -872(%rbp)
.LBB1_8:
	cmpq	$0, -872(%rbp)
	jne	.LBB1_10
# %bb.9:
	jmp	.LBB1_11
.LBB1_10:
	movq	$640, -840(%rbp)        # imm = 0x280
	movq	$350, -848(%rbp)        # imm = 0x15E
	movb	$0, -857(%rbp)
	jmp	.LBB1_26
.LBB1_11:
	cmpq	$0, -840(%rbp)
	jg	.LBB1_13
# %bb.12:
	jmp	.LBB1_14
.LBB1_13:
	xorl	%eax, %eax
	cmpq	$0, -848(%rbp)
	setle	%cl
	andb	$1, %cl
	movzbl	%cl, %edx
	subl	%edx, %eax
	movslq	%eax, %rsi
	movq	%rsi, -880(%rbp)
	jmp	.LBB1_15
.LBB1_14:
	movq	$0, -880(%rbp)
.LBB1_15:
	cmpq	$0, -880(%rbp)
	jne	.LBB1_17
# %bb.16:
	jmp	.LBB1_18
.LBB1_17:
	movsd	.LCPI1_0(%rip), %xmm0   # xmm0 = mem[0],zero
	movsd	.LCPI1_1(%rip), %xmm1   # xmm1 = mem[0],zero
	cvtsi2sdq	-840(%rbp), %xmm2
	divsd	%xmm1, %xmm2
	mulsd	%xmm0, %xmm2
	movaps	%xmm2, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	%rax, -848(%rbp)
	jmp	.LBB1_26
.LBB1_18:
	cmpq	$0, -840(%rbp)
	jle	.LBB1_20
# %bb.19:
	jmp	.LBB1_21
.LBB1_20:
	xorl	%eax, %eax
	cmpq	$0, -848(%rbp)
	setg	%cl
	andb	$1, %cl
	movzbl	%cl, %edx
	subl	%edx, %eax
	movslq	%eax, %rsi
	movq	%rsi, -888(%rbp)
	jmp	.LBB1_22
.LBB1_21:
	movq	$0, -888(%rbp)
.LBB1_22:
	cmpq	$0, -888(%rbp)
	jne	.LBB1_24
# %bb.23:
	jmp	.LBB1_25
.LBB1_24:
	movsd	.LCPI1_1(%rip), %xmm0   # xmm0 = mem[0],zero
	movsd	.LCPI1_0(%rip), %xmm1   # xmm1 = mem[0],zero
	cvtsi2sdq	-848(%rbp), %xmm2
	divsd	%xmm1, %xmm2
	mulsd	%xmm0, %xmm2
	movaps	%xmm2, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	%rax, -840(%rbp)
.LBB1_25:
	jmp	.LBB1_26
.LBB1_26:
	cmpq	$16, -856(%rbp)
	jl	.LBB1_28
# %bb.27:
	jmp	.LBB1_29
.LBB1_28:
	movq	-168(%rbp), %rax
	movq	%rax, -856(%rbp)
	jmp	.LBB1_36
.LBB1_29:
	cmpq	$24, -856(%rbp)
	jl	.LBB1_31
# %bb.30:
	jmp	.LBB1_32
.LBB1_31:
	movq	$16, -856(%rbp)
	jmp	.LBB1_36
.LBB1_32:
	cmpq	$32, -856(%rbp)
	jl	.LBB1_34
# %bb.33:
	jmp	.LBB1_35
.LBB1_34:
	movq	$24, -856(%rbp)
	jmp	.LBB1_36
.LBB1_35:
	movq	$32, -856(%rbp)
.LBB1_36:
	cmpq	$0, -96(%rbp)
	jle	.LBB1_38
# %bb.37:
	jmp	.LBB1_39
.LBB1_38:
	movq	$0, -96(%rbp)
	jmp	.LBB1_46
.LBB1_39:
	cmpq	$16, -96(%rbp)
	jl	.LBB1_41
# %bb.40:
	jmp	.LBB1_42
.LBB1_41:
	movq	$16, -96(%rbp)
	jmp	.LBB1_46
.LBB1_42:
	cmpq	$32, -96(%rbp)
	jl	.LBB1_44
# %bb.43:
	jmp	.LBB1_45
.LBB1_44:
	movq	$24, -96(%rbp)
	jmp	.LBB1_46
.LBB1_45:
	movq	$32, -96(%rbp)
.LBB1_46:
	movl	$2147483648, %eax       # imm = 0x80000000
	movq	%rax, -144(%rbp)
	movq	%rax, -136(%rbp)
	movq	%rax, -128(%rbp)
	movl	$110, %edi
	leaq	-96(%rbp), %rsi
	leaq	-128(%rbp), %rdx
	leaq	-136(%rbp), %rcx
	leaq	-144(%rbp), %r8
	callq	fb_GfxControl_i@PLT
	movsbl	-857(%rbp), %edi
	cmpl	$0, %edi
	jne	.LBB1_48
# %bb.47:
	jmp	.LBB1_97
.LBB1_48:
	xorl	%eax, %eax
	cmpq	$640, -840(%rbp)        # imm = 0x280
	setl	%cl
	andb	$1, %cl
	movzbl	%cl, %edx
	movl	%eax, %esi
	subl	%edx, %esi
	movslq	%esi, %rdi
	cmpq	$480, -848(%rbp)        # imm = 0x1E0
	setl	%cl
	andb	$1, %cl
	movzbl	%cl, %edx
	subl	%edx, %eax
	movslq	%eax, %r8
	orq	%r8, %rdi
	cmpq	$0, %rdi
	jne	.LBB1_50
# %bb.49:
	jmp	.LBB1_51
.LBB1_50:
	movq	$640, -840(%rbp)        # imm = 0x280
	movq	$480, -848(%rbp)        # imm = 0x1E0
.LBB1_51:
	jmp	.LBB1_52
.LBB1_52:
	xorl	%esi, %esi
	leaq	-172(%rbp), %rax
	movq	%rax, %rdi
	movl	$4, %edx
	callq	memset@PLT
	movq	-856(%rbp), %rax
                                        # kill: def $eax killed $eax killed $rax
	movl	%eax, %edi
	callq	fb_GfxScreenList@PLT
	movl	%eax, -920(%rbp)
	movl	-920(%rbp), %eax
	movl	%eax, -916(%rbp)
	movslq	-916(%rbp), %rcx
	cmpq	$0, %rcx
	jne	.LBB1_54
# %bb.53:
	jmp	.LBB1_63
.LBB1_54:
	xorl	%eax, %eax
	movq	$1073741824, -928(%rbp) # imm = 0x40000000
	leaq	-184(%rbp), %rcx
	movq	%rcx, %rdi
	movl	%eax, %esi
	movl	$8, %ecx
	movq	%rcx, %rdx
	movl	%eax, -1396(%rbp)       # 4-byte Spill
	movq	%rcx, -1408(%rbp)       # 8-byte Spill
	callq	memset@PLT
	leaq	-192(%rbp), %rcx
	movq	%rcx, %rdi
	movl	-1396(%rbp), %esi       # 4-byte Reload
	movq	-1408(%rbp), %rdx       # 8-byte Reload
	callq	memset@PLT
.LBB1_55:                               # =>This Inner Loop Header: Depth=1
	movslq	-916(%rbp), %rax
	cmpq	$0, %rax
	jne	.LBB1_57
# %bb.56:
	jmp	.LBB1_62
.LBB1_57:                               #   in Loop: Header=BB1_55 Depth=1
	xorl	%eax, %eax
	movl	%eax, %ecx
	movslq	-916(%rbp), %rdx
	movl	$4294901760, %esi       # imm = 0xFFFF0000
	andq	%rsi, %rdx
	shrq	$16, %rdx
	subq	-840(%rbp), %rdx
	movq	%rcx, %rsi
	subq	%rdx, %rsi
	cmpq	$0, %rdx
	cmovlq	%rsi, %rdx
	movq	%rdx, -184(%rbp)
	movslq	-916(%rbp), %rdx
	andq	$65535, %rdx            # imm = 0xFFFF
	subq	-848(%rbp), %rdx
	subq	%rdx, %rcx
	cmpq	$0, %rdx
	cmovlq	%rcx, %rdx
	movq	%rdx, -192(%rbp)
	movq	-184(%rbp), %rcx
	addq	-192(%rbp), %rcx
	cmpq	-928(%rbp), %rcx
	jl	.LBB1_59
# %bb.58:                               #   in Loop: Header=BB1_55 Depth=1
	jmp	.LBB1_60
.LBB1_59:                               #   in Loop: Header=BB1_55 Depth=1
	movq	-184(%rbp), %rax
	addq	-192(%rbp), %rax
	movq	%rax, -928(%rbp)
	movl	-916(%rbp), %ecx
	movl	%ecx, -172(%rbp)
.LBB1_60:                               #   in Loop: Header=BB1_55 Depth=1
	jmp	.LBB1_61
.LBB1_61:                               #   in Loop: Header=BB1_55 Depth=1
	xorl	%edi, %edi
	callq	fb_GfxScreenList@PLT
	movl	%eax, -932(%rbp)
	movl	-932(%rbp), %eax
	movl	%eax, -916(%rbp)
	jmp	.LBB1_55
.LBB1_62:
	jmp	.LBB1_92
.LBB1_63:
	leaq	-16(%rbp), %rax
	xorl	%esi, %esi
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$8, %edx
	movq	%rax, -1416(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-1416(%rbp), %rax       # 8-byte Reload
	movq	%rax, -88(%rbp)
	movq	%rax, -80(%rbp)
	movq	$8, -72(%rbp)
	movq	$4, -64(%rbp)
	movq	$1, -56(%rbp)
	movq	$49, -48(%rbp)
	movq	$2, -40(%rbp)
	movq	$0, -32(%rbp)
	movq	$1, -24(%rbp)
	cmpq	$16, -856(%rbp)
	je	.LBB1_65
# %bb.64:
	jmp	.LBB1_66
.LBB1_65:
	movl	$32, -16(%rbp)
	movl	$24, -12(%rbp)
	jmp	.LBB1_70
.LBB1_66:
	cmpq	$24, -856(%rbp)
	je	.LBB1_68
# %bb.67:
	jmp	.LBB1_69
.LBB1_68:
	movl	$32, -16(%rbp)
	movl	$16, -12(%rbp)
	jmp	.LBB1_70
.LBB1_69:
	movl	$24, -16(%rbp)
	movl	$16, -12(%rbp)
.LBB1_70:
	movq	$0, -944(%rbp)
.LBB1_71:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB1_74 Depth 2
	movq	-944(%rbp), %rax
	shlq	$2, %rax
	movslq	-16(%rbp,%rax), %rax
	movq	%rax, -856(%rbp)
	movq	-856(%rbp), %rax
                                        # kill: def $eax killed $eax killed $rax
	movl	%eax, %edi
	callq	fb_GfxScreenList@PLT
	movl	%eax, -948(%rbp)
	movl	-948(%rbp), %eax
	movl	%eax, -916(%rbp)
	movslq	-916(%rbp), %rcx
	cmpq	$0, %rcx
	jne	.LBB1_73
# %bb.72:                               #   in Loop: Header=BB1_71 Depth=1
	jmp	.LBB1_82
.LBB1_73:                               #   in Loop: Header=BB1_71 Depth=1
	xorl	%eax, %eax
	movq	$1073741824, -960(%rbp) # imm = 0x40000000
	leaq	-200(%rbp), %rcx
	movq	%rcx, %rdi
	movl	%eax, %esi
	movl	$8, %ecx
	movq	%rcx, %rdx
	movl	%eax, -1420(%rbp)       # 4-byte Spill
	movq	%rcx, -1432(%rbp)       # 8-byte Spill
	callq	memset@PLT
	leaq	-208(%rbp), %rcx
	movq	%rcx, %rdi
	movl	-1420(%rbp), %esi       # 4-byte Reload
	movq	-1432(%rbp), %rdx       # 8-byte Reload
	callq	memset@PLT
.LBB1_74:                               #   Parent Loop BB1_71 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movslq	-916(%rbp), %rax
	cmpq	$0, %rax
	jne	.LBB1_76
# %bb.75:                               #   in Loop: Header=BB1_71 Depth=1
	jmp	.LBB1_81
.LBB1_76:                               #   in Loop: Header=BB1_74 Depth=2
	xorl	%eax, %eax
	movl	%eax, %ecx
	movslq	-916(%rbp), %rdx
	movl	$4294901760, %esi       # imm = 0xFFFF0000
	andq	%rsi, %rdx
	shrq	$16, %rdx
	subq	-840(%rbp), %rdx
	movq	%rcx, %rsi
	subq	%rdx, %rsi
	cmpq	$0, %rdx
	cmovlq	%rsi, %rdx
	movq	%rdx, -200(%rbp)
	movslq	-916(%rbp), %rdx
	andq	$65535, %rdx            # imm = 0xFFFF
	subq	-848(%rbp), %rdx
	subq	%rdx, %rcx
	cmpq	$0, %rdx
	cmovlq	%rcx, %rdx
	movq	%rdx, -208(%rbp)
	movq	-200(%rbp), %rcx
	addq	-208(%rbp), %rcx
	cmpq	-960(%rbp), %rcx
	jl	.LBB1_78
# %bb.77:                               #   in Loop: Header=BB1_74 Depth=2
	jmp	.LBB1_79
.LBB1_78:                               #   in Loop: Header=BB1_74 Depth=2
	movq	-200(%rbp), %rax
	addq	-208(%rbp), %rax
	movq	%rax, -960(%rbp)
	movl	-916(%rbp), %ecx
	movl	%ecx, -172(%rbp)
.LBB1_79:                               #   in Loop: Header=BB1_74 Depth=2
	jmp	.LBB1_80
.LBB1_80:                               #   in Loop: Header=BB1_74 Depth=2
	xorl	%edi, %edi
	callq	fb_GfxScreenList@PLT
	movl	%eax, -964(%rbp)
	movl	-964(%rbp), %eax
	movl	%eax, -916(%rbp)
	jmp	.LBB1_74
.LBB1_81:                               #   in Loop: Header=BB1_71 Depth=1
	jmp	.LBB1_82
.LBB1_82:                               #   in Loop: Header=BB1_71 Depth=1
	jmp	.LBB1_83
.LBB1_83:                               #   in Loop: Header=BB1_71 Depth=1
	movslq	-172(%rbp), %rax
	cmpq	$0, %rax
	jne	.LBB1_85
# %bb.84:                               #   in Loop: Header=BB1_71 Depth=1
	jmp	.LBB1_86
.LBB1_85:
	jmp	.LBB1_91
.LBB1_86:                               #   in Loop: Header=BB1_71 Depth=1
	jmp	.LBB1_87
.LBB1_87:                               #   in Loop: Header=BB1_71 Depth=1
	movq	-944(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -944(%rbp)
# %bb.88:                               #   in Loop: Header=BB1_71 Depth=1
	cmpq	$1, -944(%rbp)
	jg	.LBB1_90
# %bb.89:                               #   in Loop: Header=BB1_71 Depth=1
	jmp	.LBB1_71
.LBB1_90:
	jmp	.LBB1_91
.LBB1_91:
	jmp	.LBB1_92
.LBB1_92:
	movslq	-172(%rbp), %rax
	cmpq	$0, %rax
	jne	.LBB1_94
# %bb.93:
	jmp	.LBB1_95
.LBB1_94:
	movslq	-172(%rbp), %rax
	movl	$4294901760, %ecx       # imm = 0xFFFF0000
	andq	%rcx, %rax
	shrq	$16, %rax
	movq	%rax, -840(%rbp)
	movslq	-172(%rbp), %rax
	andq	$65535, %rax            # imm = 0xFFFF
	movq	%rax, -848(%rbp)
	jmp	.LBB1_96
.LBB1_95:
	movb	$0, -857(%rbp)
.LBB1_96:
	jmp	.LBB1_97
.LBB1_97:
	jmp	.LBB1_98
.LBB1_98:
	xorl	%eax, %eax
	movsbl	-857(%rbp), %ecx
	subl	%ecx, %eax
	movslq	%eax, %rdx
	cmpq	$0, %rdx
	jne	.LBB1_100
# %bb.99:
	jmp	.LBB1_101
.LBB1_100:
	movq	$1, -896(%rbp)
	jmp	.LBB1_102
.LBB1_101:
	movq	$0, -896(%rbp)
.LBB1_102:
	xorl	%r9d, %r9d
	movq	-840(%rbp), %rax
                                        # kill: def $eax killed $eax killed $rax
	movq	-848(%rbp), %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	movq	-856(%rbp), %rdx
                                        # kill: def $edx killed $edx killed $rdx
	movq	-896(%rbp), %rsi
	orq	$2, %rsi
                                        # kill: def $esi killed $esi killed $rsi
	movl	%eax, %edi
	movl	%esi, -1436(%rbp)       # 4-byte Spill
	movl	%ecx, %esi
	movl	$1, %ecx
	movl	-1436(%rbp), %r8d       # 4-byte Reload
	callq	fb_GfxScreenRes@PLT
	movl	%eax, -968(%rbp)
	movslq	-968(%rbp), %r10
	cmpq	$0, %r10
	jne	.LBB1_104
# %bb.103:
	jmp	.LBB1_109
.LBB1_104:
	xorl	%r9d, %r9d
	movb	$0, -857(%rbp)
	movq	-168(%rbp), %rax
                                        # kill: def $eax killed $eax killed $rax
	movl	$640, %edi              # imm = 0x280
	movl	$350, %esi              # imm = 0x15E
	movl	%eax, %edx
	movl	$1, %ecx
	movl	$2, %r8d
	callq	fb_GfxScreenRes@PLT
	movl	%eax, -972(%rbp)
	movslq	-972(%rbp), %r10
	cmpq	$0, %r10
	jne	.LBB1_106
# %bb.105:
	jmp	.LBB1_107
.LBB1_106:
	xorl	%esi, %esi
	leaq	-328(%rbp), %rax
	movq	%rax, %rdi
	movl	$24, %edx
	callq	memset@PLT
	movq	-160(%rbp), %rdi
	callq	fb_LongintToStr@PLT
	movq	%rax, -984(%rbp)
	movq	-152(%rbp), %rdi
	callq	fb_LongintToStr@PLT
	xorl	%esi, %esi
	movq	%rax, -992(%rbp)
	leaq	-232(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -1448(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-992(%rbp), %rax
	movq	-1448(%rbp), %rdi       # 8-byte Reload
	leaq	.L.str.2(%rip), %rsi
	movl	$11, %edx
	movq	%rax, %rcx
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -1000(%rbp)
	leaq	-256(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -1456(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-1000(%rbp), %rax
	movq	-1456(%rbp), %rdi       # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.3(%rip), %rcx
	movl	$2, %r8d
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -1008(%rbp)
	leaq	-280(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -1464(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-1008(%rbp), %rax
	movq	-984(%rbp), %rcx
	movq	-1464(%rbp), %rdi       # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rax
	movq	%rax, %rdx
	movq	%rax, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -1016(%rbp)
	leaq	-304(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -1472(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-1016(%rbp), %rax
	movq	-1472(%rbp), %rdi       # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.4(%rip), %rcx
	movl	$11, %r8d
	callq	fb_StrConcat@PLT
	xorl	%r8d, %r8d
	movq	%rax, -1024(%rbp)
	leaq	-328(%rbp), %rax
	movq	-1024(%rbp), %rcx
	movq	%rax, %rdi
	movq	$-1, %rax
	movq	%rax, %rsi
	movq	%rcx, %rdx
	movq	%rax, %rcx
	callq	fb_StrAssign@PLT
	movq	%rax, -1032(%rbp)
	leaq	-328(%rbp), %rdi
	callq	ERROREXIT
	leaq	-328(%rbp), %rdi
	callq	fb_StrDelete@PLT
.LBB1_107:
	jmp	.LBB1_108
.LBB1_108:
	jmp	.LBB1_109
.LBB1_109:
	jmp	.LBB1_110
.LBB1_110:
	movl	$4294967295, %eax       # imm = 0xFFFFFFFF
	movl	%eax, %edi
	movl	%eax, %esi
	callq	fb_GfxFlip@PLT
	leaq	.L.str.5(%rip), %rdi
	movl	%eax, -1476(%rbp)       # 4-byte Spill
	callq	fb_GfxGetGLProcAddress@PLT
	movq	%rax, -1040(%rbp)
	movq	-1040(%rbp), %rax
	movq	%rax, GLCREATESHADER$(%rip)
	movq	GLCREATESHADER$(%rip), %rax
	cmpq	$0, %rax
	je	.LBB1_112
# %bb.111:
	jmp	.LBB1_113
.LBB1_112:
	xorl	%eax, %eax
	leaq	-352(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	%eax, %esi
	movl	$24, %edx
	movl	%eax, -1480(%rbp)       # 4-byte Spill
	movq	%rcx, -1488(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-1488(%rbp), %rcx       # 8-byte Reload
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.5(%rip), %rdx
	movl	$15, %ecx
	movl	-1480(%rbp), %r8d       # 4-byte Reload
	callq	fb_StrAssign@PLT
	movq	%rax, -1048(%rbp)
	leaq	-352(%rbp), %rdi
	callq	ERROREXIT
	leaq	-352(%rbp), %rdi
	callq	fb_StrDelete@PLT
.LBB1_113:
	leaq	.L.str.6(%rip), %rdi
	callq	fb_GfxGetGLProcAddress@PLT
	movq	%rax, -1056(%rbp)
	movq	-1056(%rbp), %rax
	movq	%rax, GLDELETESHADER$(%rip)
	movq	GLDELETESHADER$(%rip), %rax
	cmpq	$0, %rax
	je	.LBB1_115
# %bb.114:
	jmp	.LBB1_116
.LBB1_115:
	xorl	%eax, %eax
	leaq	-376(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	%eax, %esi
	movl	$24, %edx
	movl	%eax, -1492(%rbp)       # 4-byte Spill
	movq	%rcx, -1504(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-1504(%rbp), %rcx       # 8-byte Reload
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.6(%rip), %rdx
	movl	$15, %ecx
	movl	-1492(%rbp), %r8d       # 4-byte Reload
	callq	fb_StrAssign@PLT
	movq	%rax, -1064(%rbp)
	leaq	-376(%rbp), %rdi
	callq	ERROREXIT
	leaq	-376(%rbp), %rdi
	callq	fb_StrDelete@PLT
.LBB1_116:
	leaq	.L.str.7(%rip), %rdi
	callq	fb_GfxGetGLProcAddress@PLT
	movq	%rax, -1072(%rbp)
	movq	-1072(%rbp), %rax
	movq	%rax, GLSHADERSOURCE$(%rip)
	movq	GLSHADERSOURCE$(%rip), %rax
	cmpq	$0, %rax
	je	.LBB1_118
# %bb.117:
	jmp	.LBB1_119
.LBB1_118:
	xorl	%eax, %eax
	leaq	-400(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	%eax, %esi
	movl	$24, %edx
	movl	%eax, -1508(%rbp)       # 4-byte Spill
	movq	%rcx, -1520(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-1520(%rbp), %rcx       # 8-byte Reload
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.7(%rip), %rdx
	movl	$15, %ecx
	movl	-1508(%rbp), %r8d       # 4-byte Reload
	callq	fb_StrAssign@PLT
	movq	%rax, -1080(%rbp)
	leaq	-400(%rbp), %rdi
	callq	ERROREXIT
	leaq	-400(%rbp), %rdi
	callq	fb_StrDelete@PLT
.LBB1_119:
	leaq	.L.str.8(%rip), %rdi
	callq	fb_GfxGetGLProcAddress@PLT
	movq	%rax, -1088(%rbp)
	movq	-1088(%rbp), %rax
	movq	%rax, GLCOMPILESHADER$(%rip)
	movq	GLCOMPILESHADER$(%rip), %rax
	cmpq	$0, %rax
	je	.LBB1_121
# %bb.120:
	jmp	.LBB1_122
.LBB1_121:
	xorl	%eax, %eax
	leaq	-424(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	%eax, %esi
	movl	$24, %edx
	movl	%eax, -1524(%rbp)       # 4-byte Spill
	movq	%rcx, -1536(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-1536(%rbp), %rcx       # 8-byte Reload
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.8(%rip), %rdx
	movl	$16, %ecx
	movl	-1524(%rbp), %r8d       # 4-byte Reload
	callq	fb_StrAssign@PLT
	movq	%rax, -1096(%rbp)
	leaq	-424(%rbp), %rdi
	callq	ERROREXIT
	leaq	-424(%rbp), %rdi
	callq	fb_StrDelete@PLT
.LBB1_122:
	leaq	.L.str.9(%rip), %rdi
	callq	fb_GfxGetGLProcAddress@PLT
	movq	%rax, -1104(%rbp)
	movq	-1104(%rbp), %rax
	movq	%rax, GLGETSHADERIV$(%rip)
	movq	GLGETSHADERIV$(%rip), %rax
	cmpq	$0, %rax
	je	.LBB1_124
# %bb.123:
	jmp	.LBB1_125
.LBB1_124:
	xorl	%eax, %eax
	leaq	-448(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	%eax, %esi
	movl	$24, %edx
	movl	%eax, -1540(%rbp)       # 4-byte Spill
	movq	%rcx, -1552(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-1552(%rbp), %rcx       # 8-byte Reload
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.9(%rip), %rdx
	movl	$14, %ecx
	movl	-1540(%rbp), %r8d       # 4-byte Reload
	callq	fb_StrAssign@PLT
	movq	%rax, -1112(%rbp)
	leaq	-448(%rbp), %rdi
	callq	ERROREXIT
	leaq	-448(%rbp), %rdi
	callq	fb_StrDelete@PLT
.LBB1_125:
	leaq	.L.str.10(%rip), %rdi
	callq	fb_GfxGetGLProcAddress@PLT
	movq	%rax, -1120(%rbp)
	movq	-1120(%rbp), %rax
	movq	%rax, GLGETSHADERINFOLOG$(%rip)
	movq	GLGETSHADERINFOLOG$(%rip), %rax
	cmpq	$0, %rax
	je	.LBB1_127
# %bb.126:
	jmp	.LBB1_128
.LBB1_127:
	xorl	%eax, %eax
	leaq	-472(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	%eax, %esi
	movl	$24, %edx
	movl	%eax, -1556(%rbp)       # 4-byte Spill
	movq	%rcx, -1568(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-1568(%rbp), %rcx       # 8-byte Reload
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.10(%rip), %rdx
	movl	$19, %ecx
	movl	-1556(%rbp), %r8d       # 4-byte Reload
	callq	fb_StrAssign@PLT
	movq	%rax, -1128(%rbp)
	leaq	-472(%rbp), %rdi
	callq	ERROREXIT
	leaq	-472(%rbp), %rdi
	callq	fb_StrDelete@PLT
.LBB1_128:
	leaq	.L.str.11(%rip), %rdi
	callq	fb_GfxGetGLProcAddress@PLT
	movq	%rax, -1136(%rbp)
	movq	-1136(%rbp), %rax
	movq	%rax, GLCREATEPROGRAM$(%rip)
	movq	GLCREATEPROGRAM$(%rip), %rax
	cmpq	$0, %rax
	je	.LBB1_130
# %bb.129:
	jmp	.LBB1_131
.LBB1_130:
	xorl	%eax, %eax
	leaq	-496(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	%eax, %esi
	movl	$24, %edx
	movl	%eax, -1572(%rbp)       # 4-byte Spill
	movq	%rcx, -1584(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-1584(%rbp), %rcx       # 8-byte Reload
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.11(%rip), %rdx
	movl	$16, %ecx
	movl	-1572(%rbp), %r8d       # 4-byte Reload
	callq	fb_StrAssign@PLT
	movq	%rax, -1144(%rbp)
	leaq	-496(%rbp), %rdi
	callq	ERROREXIT
	leaq	-496(%rbp), %rdi
	callq	fb_StrDelete@PLT
.LBB1_131:
	leaq	.L.str.12(%rip), %rdi
	callq	fb_GfxGetGLProcAddress@PLT
	movq	%rax, -1152(%rbp)
	movq	-1152(%rbp), %rax
	movq	%rax, GLDELETEPROGRAM$(%rip)
	movq	GLDELETEPROGRAM$(%rip), %rax
	cmpq	$0, %rax
	je	.LBB1_133
# %bb.132:
	jmp	.LBB1_134
.LBB1_133:
	xorl	%eax, %eax
	leaq	-520(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	%eax, %esi
	movl	$24, %edx
	movl	%eax, -1588(%rbp)       # 4-byte Spill
	movq	%rcx, -1600(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-1600(%rbp), %rcx       # 8-byte Reload
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.12(%rip), %rdx
	movl	$16, %ecx
	movl	-1588(%rbp), %r8d       # 4-byte Reload
	callq	fb_StrAssign@PLT
	movq	%rax, -1160(%rbp)
	leaq	-520(%rbp), %rdi
	callq	ERROREXIT
	leaq	-520(%rbp), %rdi
	callq	fb_StrDelete@PLT
.LBB1_134:
	leaq	.L.str.13(%rip), %rdi
	callq	fb_GfxGetGLProcAddress@PLT
	movq	%rax, -1168(%rbp)
	movq	-1168(%rbp), %rax
	movq	%rax, GLATTACHSHADER$(%rip)
	movq	GLATTACHSHADER$(%rip), %rax
	cmpq	$0, %rax
	je	.LBB1_136
# %bb.135:
	jmp	.LBB1_137
.LBB1_136:
	xorl	%eax, %eax
	leaq	-544(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	%eax, %esi
	movl	$24, %edx
	movl	%eax, -1604(%rbp)       # 4-byte Spill
	movq	%rcx, -1616(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-1616(%rbp), %rcx       # 8-byte Reload
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.13(%rip), %rdx
	movl	$15, %ecx
	movl	-1604(%rbp), %r8d       # 4-byte Reload
	callq	fb_StrAssign@PLT
	movq	%rax, -1176(%rbp)
	leaq	-544(%rbp), %rdi
	callq	ERROREXIT
	leaq	-544(%rbp), %rdi
	callq	fb_StrDelete@PLT
.LBB1_137:
	leaq	.L.str.14(%rip), %rdi
	callq	fb_GfxGetGLProcAddress@PLT
	movq	%rax, -1184(%rbp)
	movq	-1184(%rbp), %rax
	movq	%rax, GLDETACHSHADER$(%rip)
	movq	GLDETACHSHADER$(%rip), %rax
	cmpq	$0, %rax
	je	.LBB1_139
# %bb.138:
	jmp	.LBB1_140
.LBB1_139:
	xorl	%eax, %eax
	leaq	-568(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	%eax, %esi
	movl	$24, %edx
	movl	%eax, -1620(%rbp)       # 4-byte Spill
	movq	%rcx, -1632(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-1632(%rbp), %rcx       # 8-byte Reload
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.14(%rip), %rdx
	movl	$15, %ecx
	movl	-1620(%rbp), %r8d       # 4-byte Reload
	callq	fb_StrAssign@PLT
	movq	%rax, -1192(%rbp)
	leaq	-568(%rbp), %rdi
	callq	ERROREXIT
	leaq	-568(%rbp), %rdi
	callq	fb_StrDelete@PLT
.LBB1_140:
	leaq	.L.str.15(%rip), %rdi
	callq	fb_GfxGetGLProcAddress@PLT
	movq	%rax, -1200(%rbp)
	movq	-1200(%rbp), %rax
	movq	%rax, GLLINKPROGRAM$(%rip)
	movq	GLLINKPROGRAM$(%rip), %rax
	cmpq	$0, %rax
	je	.LBB1_142
# %bb.141:
	jmp	.LBB1_143
.LBB1_142:
	xorl	%eax, %eax
	leaq	-592(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	%eax, %esi
	movl	$24, %edx
	movl	%eax, -1636(%rbp)       # 4-byte Spill
	movq	%rcx, -1648(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-1648(%rbp), %rcx       # 8-byte Reload
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.15(%rip), %rdx
	movl	$14, %ecx
	movl	-1636(%rbp), %r8d       # 4-byte Reload
	callq	fb_StrAssign@PLT
	movq	%rax, -1208(%rbp)
	leaq	-592(%rbp), %rdi
	callq	ERROREXIT
	leaq	-592(%rbp), %rdi
	callq	fb_StrDelete@PLT
.LBB1_143:
	leaq	.L.str.16(%rip), %rdi
	callq	fb_GfxGetGLProcAddress@PLT
	movq	%rax, -1216(%rbp)
	movq	-1216(%rbp), %rax
	movq	%rax, GLGETPROGRAMIV$(%rip)
	movq	GLGETPROGRAMIV$(%rip), %rax
	cmpq	$0, %rax
	je	.LBB1_145
# %bb.144:
	jmp	.LBB1_146
.LBB1_145:
	xorl	%eax, %eax
	leaq	-616(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	%eax, %esi
	movl	$24, %edx
	movl	%eax, -1652(%rbp)       # 4-byte Spill
	movq	%rcx, -1664(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-1664(%rbp), %rcx       # 8-byte Reload
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.16(%rip), %rdx
	movl	$15, %ecx
	movl	-1652(%rbp), %r8d       # 4-byte Reload
	callq	fb_StrAssign@PLT
	movq	%rax, -1224(%rbp)
	leaq	-616(%rbp), %rdi
	callq	ERROREXIT
	leaq	-616(%rbp), %rdi
	callq	fb_StrDelete@PLT
.LBB1_146:
	leaq	.L.str.17(%rip), %rdi
	callq	fb_GfxGetGLProcAddress@PLT
	movq	%rax, -1232(%rbp)
	movq	-1232(%rbp), %rax
	movq	%rax, GLGETPROGRAMINFOLOG$(%rip)
	movq	GLGETPROGRAMINFOLOG$(%rip), %rax
	cmpq	$0, %rax
	je	.LBB1_148
# %bb.147:
	jmp	.LBB1_149
.LBB1_148:
	xorl	%eax, %eax
	leaq	-640(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	%eax, %esi
	movl	$24, %edx
	movl	%eax, -1668(%rbp)       # 4-byte Spill
	movq	%rcx, -1680(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-1680(%rbp), %rcx       # 8-byte Reload
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.17(%rip), %rdx
	movl	$20, %ecx
	movl	-1668(%rbp), %r8d       # 4-byte Reload
	callq	fb_StrAssign@PLT
	movq	%rax, -1240(%rbp)
	leaq	-640(%rbp), %rdi
	callq	ERROREXIT
	leaq	-640(%rbp), %rdi
	callq	fb_StrDelete@PLT
.LBB1_149:
	leaq	.L.str.18(%rip), %rdi
	callq	fb_GfxGetGLProcAddress@PLT
	movq	%rax, -1248(%rbp)
	movq	-1248(%rbp), %rax
	movq	%rax, GLUSEPROGRAM$(%rip)
	movq	GLUSEPROGRAM$(%rip), %rax
	cmpq	$0, %rax
	je	.LBB1_151
# %bb.150:
	jmp	.LBB1_152
.LBB1_151:
	xorl	%eax, %eax
	leaq	-664(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	%eax, %esi
	movl	$24, %edx
	movl	%eax, -1684(%rbp)       # 4-byte Spill
	movq	%rcx, -1696(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-1696(%rbp), %rcx       # 8-byte Reload
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.18(%rip), %rdx
	movl	$13, %ecx
	movl	-1684(%rbp), %r8d       # 4-byte Reload
	callq	fb_StrAssign@PLT
	movq	%rax, -1256(%rbp)
	leaq	-664(%rbp), %rdi
	callq	ERROREXIT
	leaq	-664(%rbp), %rdi
	callq	fb_StrDelete@PLT
.LBB1_152:
	leaq	.L.str.19(%rip), %rdi
	callq	fb_GfxGetGLProcAddress@PLT
	movq	%rax, -1264(%rbp)
	movq	-1264(%rbp), %rax
	movq	%rax, GLGETUNIFORMLOCATION$(%rip)
	movq	GLGETUNIFORMLOCATION$(%rip), %rax
	cmpq	$0, %rax
	je	.LBB1_154
# %bb.153:
	jmp	.LBB1_155
.LBB1_154:
	xorl	%eax, %eax
	leaq	-688(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	%eax, %esi
	movl	$24, %edx
	movl	%eax, -1700(%rbp)       # 4-byte Spill
	movq	%rcx, -1712(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-1712(%rbp), %rcx       # 8-byte Reload
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.19(%rip), %rdx
	movl	$21, %ecx
	movl	-1700(%rbp), %r8d       # 4-byte Reload
	callq	fb_StrAssign@PLT
	movq	%rax, -1272(%rbp)
	leaq	-688(%rbp), %rdi
	callq	ERROREXIT
	leaq	-688(%rbp), %rdi
	callq	fb_StrDelete@PLT
.LBB1_155:
	leaq	.L.str.20(%rip), %rdi
	callq	fb_GfxGetGLProcAddress@PLT
	movq	%rax, -1280(%rbp)
	movq	-1280(%rbp), %rax
	movq	%rax, GLUNIFORM1I$(%rip)
	movq	GLUNIFORM1I$(%rip), %rax
	cmpq	$0, %rax
	je	.LBB1_157
# %bb.156:
	jmp	.LBB1_158
.LBB1_157:
	xorl	%eax, %eax
	leaq	-712(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	%eax, %esi
	movl	$24, %edx
	movl	%eax, -1716(%rbp)       # 4-byte Spill
	movq	%rcx, -1728(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-1728(%rbp), %rcx       # 8-byte Reload
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.20(%rip), %rdx
	movl	$12, %ecx
	movl	-1716(%rbp), %r8d       # 4-byte Reload
	callq	fb_StrAssign@PLT
	movq	%rax, -1288(%rbp)
	leaq	-712(%rbp), %rdi
	callq	ERROREXIT
	leaq	-712(%rbp), %rdi
	callq	fb_StrDelete@PLT
.LBB1_158:
	leaq	.L.str.21(%rip), %rdi
	callq	fb_GfxGetGLProcAddress@PLT
	movq	%rax, -1296(%rbp)
	movq	-1296(%rbp), %rax
	movq	%rax, GLUNIFORM1F$(%rip)
	movq	GLUNIFORM1F$(%rip), %rax
	cmpq	$0, %rax
	je	.LBB1_160
# %bb.159:
	jmp	.LBB1_161
.LBB1_160:
	xorl	%eax, %eax
	leaq	-736(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	%eax, %esi
	movl	$24, %edx
	movl	%eax, -1732(%rbp)       # 4-byte Spill
	movq	%rcx, -1744(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-1744(%rbp), %rcx       # 8-byte Reload
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.21(%rip), %rdx
	movl	$12, %ecx
	movl	-1732(%rbp), %r8d       # 4-byte Reload
	callq	fb_StrAssign@PLT
	movq	%rax, -1304(%rbp)
	leaq	-736(%rbp), %rdi
	callq	ERROREXIT
	leaq	-736(%rbp), %rdi
	callq	fb_StrDelete@PLT
.LBB1_161:
	leaq	.L.str.22(%rip), %rdi
	callq	fb_GfxGetGLProcAddress@PLT
	movq	%rax, -1312(%rbp)
	movq	-1312(%rbp), %rax
	movq	%rax, GLUNIFORM3F$(%rip)
	movq	GLUNIFORM3F$(%rip), %rax
	cmpq	$0, %rax
	je	.LBB1_163
# %bb.162:
	jmp	.LBB1_164
.LBB1_163:
	xorl	%eax, %eax
	leaq	-760(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	%eax, %esi
	movl	$24, %edx
	movl	%eax, -1748(%rbp)       # 4-byte Spill
	movq	%rcx, -1760(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-1760(%rbp), %rcx       # 8-byte Reload
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.22(%rip), %rdx
	movl	$12, %ecx
	movl	-1748(%rbp), %r8d       # 4-byte Reload
	callq	fb_StrAssign@PLT
	movq	%rax, -1320(%rbp)
	leaq	-760(%rbp), %rdi
	callq	ERROREXIT
	leaq	-760(%rbp), %rdi
	callq	fb_StrDelete@PLT
.LBB1_164:
	leaq	.L.str.23(%rip), %rdi
	callq	fb_GfxGetGLProcAddress@PLT
	movq	%rax, -1328(%rbp)
	movq	-1328(%rbp), %rax
	movq	%rax, GLUNIFORM3FV$(%rip)
	movq	GLUNIFORM3FV$(%rip), %rax
	cmpq	$0, %rax
	je	.LBB1_166
# %bb.165:
	jmp	.LBB1_167
.LBB1_166:
	xorl	%eax, %eax
	leaq	-784(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	%eax, %esi
	movl	$24, %edx
	movl	%eax, -1764(%rbp)       # 4-byte Spill
	movq	%rcx, -1776(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-1776(%rbp), %rcx       # 8-byte Reload
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.23(%rip), %rdx
	movl	$13, %ecx
	movl	-1764(%rbp), %r8d       # 4-byte Reload
	callq	fb_StrAssign@PLT
	movq	%rax, -1336(%rbp)
	leaq	-784(%rbp), %rdi
	callq	ERROREXIT
	leaq	-784(%rbp), %rdi
	callq	fb_StrDelete@PLT
.LBB1_167:
	leaq	.L.str.24(%rip), %rdi
	callq	fb_GfxGetGLProcAddress@PLT
	movq	%rax, -1344(%rbp)
	movq	-1344(%rbp), %rax
	movq	%rax, GLUNIFORM4F$(%rip)
	movq	GLUNIFORM4F$(%rip), %rax
	cmpq	$0, %rax
	je	.LBB1_169
# %bb.168:
	jmp	.LBB1_170
.LBB1_169:
	xorl	%eax, %eax
	leaq	-808(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	%eax, %esi
	movl	$24, %edx
	movl	%eax, -1780(%rbp)       # 4-byte Spill
	movq	%rcx, -1792(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-1792(%rbp), %rcx       # 8-byte Reload
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.24(%rip), %rdx
	movl	$12, %ecx
	movl	-1780(%rbp), %r8d       # 4-byte Reload
	callq	fb_StrAssign@PLT
	movq	%rax, -1352(%rbp)
	leaq	-808(%rbp), %rdi
	callq	ERROREXIT
	leaq	-808(%rbp), %rdi
	callq	fb_StrDelete@PLT
.LBB1_170:
	leaq	.L.str.25(%rip), %rdi
	callq	fb_GfxGetGLProcAddress@PLT
	movq	%rax, -1360(%rbp)
	movq	-1360(%rbp), %rax
	movq	%rax, GLUNIFORM4FV$(%rip)
	movq	GLUNIFORM4FV$(%rip), %rax
	cmpq	$0, %rax
	je	.LBB1_172
# %bb.171:
	jmp	.LBB1_173
.LBB1_172:
	xorl	%eax, %eax
	leaq	-832(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	%eax, %esi
	movl	$24, %edx
	movl	%eax, -1796(%rbp)       # 4-byte Spill
	movq	%rcx, -1808(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-1808(%rbp), %rcx       # 8-byte Reload
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.25(%rip), %rdx
	movl	$13, %ecx
	movl	-1796(%rbp), %r8d       # 4-byte Reload
	callq	fb_StrAssign@PLT
	movq	%rax, -1368(%rbp)
	leaq	-832(%rbp), %rdi
	callq	ERROREXIT
	leaq	-832(%rbp), %rdi
	callq	fb_StrDelete@PLT
.LBB1_173:
	leaq	.L.str.26(%rip), %rdi
	movl	$37, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	movq	%rax, -1376(%rbp)
	movq	-1376(%rbp), %rdi
	callq	fb_GfxSetWindowTitle@PLT
# %bb.174:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB1_176
# %bb.175:                              # %SP_return
	addq	$1824, %rsp             # imm = 0x720
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB1_176:                              # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end1:
	.size	GLSCREEN, .Lfunc_end1-GLSCREEN
	.cfi_endproc
                                        # -- End function
	.globl	_ZN9SHADERTOYD1Ev       # -- Begin function _ZN9SHADERTOYD1Ev
	.p2align	4, 0x90
	.type	_ZN9SHADERTOYD1Ev,@function
_ZN9SHADERTOYD1Ev:                      # @_ZN9SHADERTOYD1Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movl	4(%rax), %ecx
	movl	%ecx, %eax
	cmpq	$0, %rax
	jne	.LBB2_3
# %bb.2:
	jmp	.LBB2_8
.LBB2_3:
	xorl	%edi, %edi
	callq	*GLUSEPROGRAM$(%rip)
	movq	-8(%rbp), %rax
	movl	(%rax), %ecx
	movl	%ecx, %eax
	cmpq	$0, %rax
	jne	.LBB2_5
# %bb.4:
	jmp	.LBB2_6
.LBB2_5:
	movq	GLDETACHSHADER$(%rip), %rax
	movq	-8(%rbp), %rcx
	movl	4(%rcx), %edi
	movq	-8(%rbp), %rcx
	movl	(%rcx), %esi
	callq	*%rax
	movq	GLDELETESHADER$(%rip), %rax
	movq	-8(%rbp), %rcx
	movl	(%rcx), %edi
	callq	*%rax
.LBB2_6:
	jmp	.LBB2_7
.LBB2_7:
	movq	GLDELETEPROGRAM$(%rip), %rax
	movq	-8(%rbp), %rcx
	movl	4(%rcx), %edi
	callq	*%rax
.LBB2_8:
	jmp	.LBB2_9
.LBB2_9:
	jmp	.LBB2_10
.LBB2_10:
	movq	-8(%rbp), %rax
	addq	$8, %rax
	movq	%rax, %rdi
	callq	fb_StrDelete@PLT
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end2:
	.size	_ZN9SHADERTOYD1Ev, .Lfunc_end2-_ZN9SHADERTOYD1Ev
	.cfi_endproc
                                        # -- End function
	.globl	_ZN9SHADERTOY11COMPILEFILEER8FBSTRING # -- Begin function _ZN9SHADERTOY11COMPILEFILEER8FBSTRING
	.p2align	4, 0x90
	.type	_ZN9SHADERTOY11COMPILEFILEER8FBSTRING,@function
_ZN9SHADERTOY11COMPILEFILEER8FBSTRING:  # @_ZN9SHADERTOY11COMPILEFILEER8FBSTRING
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$304, %rsp              # imm = 0x130
	xorl	%eax, %eax
	movq	%fs:40, %rcx
	movq	%rcx, -8(%rbp)
	movq	%rdi, -144(%rbp)
	movq	%rsi, -152(%rbp)
	leaq	-9(%rbp), %rdi
	movl	%eax, %esi
	movl	$1, %edx
	callq	memset@PLT
# %bb.1:
	xorl	%esi, %esi
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movl	$24, %edx
	callq	memset@PLT
	callq	fb_FileFree@PLT
	xorl	%ecx, %ecx
	movl	%eax, -160(%rbp)
	movl	-160(%rbp), %eax
	movl	%eax, -156(%rbp)
	movq	-152(%rbp), %rdi
	movl	-156(%rbp), %r8d
	movl	$2, %esi
	movl	%ecx, %edx
	movl	%ecx, -232(%rbp)        # 4-byte Spill
	movl	-232(%rbp), %r9d        # 4-byte Reload
	callq	fb_FileOpen@PLT
	movl	%eax, -164(%rbp)
	movslq	-164(%rbp), %rdi
	cmpq	$0, %rdi
	jne	.LBB3_3
# %bb.2:
	jmp	.LBB3_4
.LBB3_3:
	xorl	%esi, %esi
	leaq	-64(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -240(%rbp)        # 8-byte Spill
	callq	memset@PLT
	movq	-152(%rbp), %rax
	movq	-240(%rbp), %rdi        # 8-byte Reload
	leaq	.L.str.27(%rip), %rsi
	movl	$21, %edx
	movq	%rax, %rcx
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -176(%rbp)
	leaq	-88(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -248(%rbp)        # 8-byte Spill
	callq	memset@PLT
	movq	-176(%rbp), %rax
	movq	-248(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.28(%rip), %rcx
	movl	$2, %r8d
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -184(%rbp)
	leaq	-112(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -256(%rbp)        # 8-byte Spill
	callq	memset@PLT
	movq	-184(%rbp), %rax
	movq	-256(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.29(%rip), %rcx
	movl	$3, %r8d
	callq	fb_StrConcat@PLT
	xorl	%r8d, %r8d
	movq	%rax, -192(%rbp)
	movq	-144(%rbp), %rax
	addq	$8, %rax
	movq	-192(%rbp), %rcx
	movq	%rax, %rdi
	movq	$-1, %rax
	movq	%rax, %rsi
	movq	%rcx, %rdx
	movq	%rax, %rcx
	callq	fb_StrAssign@PLT
	movq	%rax, -200(%rbp)
	movb	$0, -9(%rbp)
	leaq	-40(%rbp), %rdi
	callq	fb_StrDelete@PLT
	jmp	.LBB3_10
.LBB3_4:
	jmp	.LBB3_5
.LBB3_5:
	jmp	.LBB3_6
.LBB3_6:                                # =>This Inner Loop Header: Depth=1
	movl	-156(%rbp), %edi
	callq	fb_FileEof@PLT
	movl	%eax, -204(%rbp)
	movslq	-204(%rbp), %rcx
	xorq	$-1, %rcx
	cmpq	$0, %rcx
	jne	.LBB3_8
# %bb.7:
	jmp	.LBB3_9
.LBB3_8:                                #   in Loop: Header=BB3_6 Depth=1
	xorl	%eax, %eax
	leaq	-136(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	%eax, %esi
	movl	$24, %edx
	movl	%eax, -260(%rbp)        # 4-byte Spill
	movq	%rcx, -272(%rbp)        # 8-byte Spill
	callq	memset@PLT
	movl	-156(%rbp), %edi
	movq	-272(%rbp), %rcx        # 8-byte Reload
	movq	%rcx, %rsi
	movq	$-1, %rdx
	movl	-260(%rbp), %ecx        # 4-byte Reload
	callq	fb_FileLineInput@PLT
	xorl	%r8d, %r8d
	leaq	-40(%rbp), %rdx
	leaq	-136(%rbp), %rsi
	movq	%rdx, %rdi
	movq	$-1, %rdx
	movq	%rsi, -280(%rbp)        # 8-byte Spill
	movq	%rdx, %rsi
	movq	-280(%rbp), %r9         # 8-byte Reload
	movq	%rdx, -288(%rbp)        # 8-byte Spill
	movq	%r9, %rdx
	movq	-288(%rbp), %rcx        # 8-byte Reload
	movl	%eax, -292(%rbp)        # 4-byte Spill
	callq	fb_StrConcatAssign@PLT
	xorl	%r8d, %r8d
	movq	%rax, -216(%rbp)
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.30(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrConcatAssign@PLT
	movq	%rax, -224(%rbp)
	leaq	-136(%rbp), %rdi
	callq	fb_StrDelete@PLT
	jmp	.LBB3_6
.LBB3_9:
	movl	-156(%rbp), %edi
	callq	fb_FileClose@PLT
	movq	-144(%rbp), %rdi
	leaq	-40(%rbp), %rsi
	movl	%eax, -296(%rbp)        # 4-byte Spill
	callq	_ZN9SHADERTOY11COMPILECODEER8FBSTRING
	movb	%al, -225(%rbp)
	movb	-225(%rbp), %al
	movb	%al, -9(%rbp)
	leaq	-40(%rbp), %rdi
	callq	fb_StrDelete@PLT
.LBB3_10:
	movb	-9(%rbp), %al
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movb	%al, -297(%rbp)         # 1-byte Spill
	jne	.LBB3_12
# %bb.11:                               # %SP_return
	movb	-297(%rbp), %al         # 1-byte Reload
	movsbl	%al, %eax
	addq	$304, %rsp              # imm = 0x130
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB3_12:                               # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end3:
	.size	_ZN9SHADERTOY11COMPILEFILEER8FBSTRING, .Lfunc_end3-_ZN9SHADERTOY11COMPILEFILEER8FBSTRING
	.cfi_endproc
                                        # -- End function
	.globl	_ZN9SHADERTOY11COMPILECODEER8FBSTRING # -- Begin function _ZN9SHADERTOY11COMPILECODEER8FBSTRING
	.p2align	4, 0x90
	.type	_ZN9SHADERTOY11COMPILECODEER8FBSTRING,@function
_ZN9SHADERTOY11COMPILECODEER8FBSTRING:  # @_ZN9SHADERTOY11COMPILECODEER8FBSTRING
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$736, %rsp              # imm = 0x2E0
	xorl	%eax, %eax
	movq	%fs:40, %rcx
	movq	%rcx, -8(%rbp)
	movq	%rdi, -232(%rbp)
	movq	%rsi, -240(%rbp)
	leaq	-57(%rbp), %rdi
	movl	%eax, %esi
	movl	$1, %edx
	callq	memset@PLT
# %bb.1:
	xorl	%eax, %eax
	leaq	-64(%rbp), %rcx
	movq	%rcx, %rdi
	movl	%eax, %esi
	movl	$4, %ecx
	movq	%rcx, %rdx
	movl	%eax, -636(%rbp)        # 4-byte Spill
	movq	%rcx, -648(%rbp)        # 8-byte Spill
	callq	memset@PLT
	leaq	-68(%rbp), %rcx
	movq	%rcx, %rdi
	movl	-636(%rbp), %esi        # 4-byte Reload
	movq	-648(%rbp), %rdx        # 8-byte Reload
	callq	memset@PLT
	leaq	-96(%rbp), %rcx
	movq	%rcx, %rdi
	movl	-636(%rbp), %esi        # 4-byte Reload
	movl	$24, %ecx
	movq	%rcx, %rdx
	movq	%rcx, -656(%rbp)        # 8-byte Spill
	callq	memset@PLT
	leaq	-120(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	-636(%rbp), %esi        # 4-byte Reload
	movq	-656(%rbp), %rdx        # 8-byte Reload
	movq	%rcx, -664(%rbp)        # 8-byte Spill
	callq	memset@PLT
	movq	-664(%rbp), %rcx        # 8-byte Reload
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.31(%rip), %rdx
	movl	$14, %ecx
	movl	-636(%rbp), %r8d        # 4-byte Reload
	callq	fb_StrAssign@PLT
	xorl	%r8d, %r8d
	leaq	-96(%rbp), %rcx
	leaq	-120(%rbp), %rdx
	movq	%rcx, %rdi
	movq	$-1, %rcx
	movq	%rcx, %rsi
	movq	%rax, -672(%rbp)        # 8-byte Spill
	callq	fb_StrAssign@PLT
	xorl	%r8d, %r8d
	movq	%rax, -248(%rbp)
	leaq	-96(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.32(%rip), %rdx
	movl	$32, %ecx
	callq	fb_StrConcatAssign@PLT
	xorl	%r8d, %r8d
	movq	%rax, -256(%rbp)
	leaq	-96(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.33(%rip), %rdx
	movl	$26, %ecx
	callq	fb_StrConcatAssign@PLT
	xorl	%r8d, %r8d
	movq	%rax, -264(%rbp)
	leaq	-96(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.34(%rip), %rdx
	movl	$32, %ecx
	callq	fb_StrConcatAssign@PLT
	xorl	%r8d, %r8d
	movq	%rax, -272(%rbp)
	leaq	-96(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.35(%rip), %rdx
	movl	$31, %ecx
	callq	fb_StrConcatAssign@PLT
	xorl	%r8d, %r8d
	movq	%rax, -280(%rbp)
	leaq	-96(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.36(%rip), %rdx
	movl	$31, %ecx
	callq	fb_StrConcatAssign@PLT
	xorl	%r8d, %r8d
	movq	%rax, -288(%rbp)
	leaq	-96(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.37(%rip), %rdx
	movl	$27, %ecx
	callq	fb_StrConcatAssign@PLT
	xorl	%r8d, %r8d
	movq	%rax, -296(%rbp)
	leaq	-96(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.38(%rip), %rdx
	movl	$36, %ecx
	callq	fb_StrConcatAssign@PLT
	xorl	%r8d, %r8d
	movq	%rax, -304(%rbp)
	leaq	-96(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.39(%rip), %rdx
	movl	$42, %ecx
	callq	fb_StrConcatAssign@PLT
	xorl	%r8d, %r8d
	movq	%rax, -312(%rbp)
	leaq	-96(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.40(%rip), %rdx
	movl	$32, %ecx
	callq	fb_StrConcatAssign@PLT
	xorl	%r8d, %r8d
	movq	%rax, -320(%rbp)
	leaq	-96(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.41(%rip), %rdx
	movl	$27, %ecx
	callq	fb_StrConcatAssign@PLT
	xorl	%r8d, %r8d
	movq	%rax, -328(%rbp)
	leaq	-96(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.42(%rip), %rdx
	movl	$26, %ecx
	callq	fb_StrConcatAssign@PLT
	xorl	%r8d, %r8d
	movq	%rax, -336(%rbp)
	leaq	-96(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.43(%rip), %rdx
	movl	$30, %ecx
	callq	fb_StrConcatAssign@PLT
	xorl	%r8d, %r8d
	movq	%rax, -344(%rbp)
	leaq	-96(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.44(%rip), %rdx
	movl	$30, %ecx
	callq	fb_StrConcatAssign@PLT
	xorl	%r8d, %r8d
	movq	%rax, -352(%rbp)
	leaq	-96(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.45(%rip), %rdx
	movl	$30, %ecx
	callq	fb_StrConcatAssign@PLT
	xorl	%r8d, %r8d
	movq	%rax, -360(%rbp)
	leaq	-96(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.46(%rip), %rdx
	movl	$30, %ecx
	callq	fb_StrConcatAssign@PLT
	xorl	%r8d, %r8d
	movq	%rax, -368(%rbp)
	leaq	-96(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.47(%rip), %rdx
	movl	$28, %ecx
	callq	fb_StrConcatAssign@PLT
	xorl	%esi, %esi
	movq	%rax, -376(%rbp)
	leaq	-144(%rbp), %rax
	movq	%rax, %rdi
	movl	$24, %edx
	callq	memset@PLT
	movsd	SWCH$(%rip), %xmm0      # xmm0 = mem[0],zero
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB4_2
	jp	.LBB4_2
	jmp	.LBB4_3
.LBB4_2:
	jmp	.LBB4_4
.LBB4_3:
	xorl	%r8d, %r8d
	leaq	-144(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.48(%rip), %rdx
	movl	$15, %ecx
	callq	fb_StrConcatAssign@PLT
	xorl	%r8d, %r8d
	movq	%rax, -384(%rbp)
	leaq	-144(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.49(%rip), %rdx
	movl	$15, %ecx
	callq	fb_StrConcatAssign@PLT
	xorl	%r8d, %r8d
	movq	%rax, -392(%rbp)
	leaq	-144(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.50(%rip), %rdx
	movl	$23, %ecx
	callq	fb_StrConcatAssign@PLT
	xorl	%r8d, %r8d
	movq	%rax, -400(%rbp)
	leaq	-144(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.51(%rip), %rdx
	movl	$38, %ecx
	callq	fb_StrConcatAssign@PLT
	xorl	%r8d, %r8d
	movq	%rax, -408(%rbp)
	leaq	-144(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.52(%rip), %rdx
	movl	$18, %ecx
	callq	fb_StrConcatAssign@PLT
	xorl	%r8d, %r8d
	movq	%rax, -416(%rbp)
	leaq	-144(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.53(%rip), %rdx
	movl	$25, %ecx
	callq	fb_StrConcatAssign@PLT
	xorl	%r8d, %r8d
	movq	%rax, -424(%rbp)
	leaq	-144(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.54(%rip), %rdx
	movl	$3, %ecx
	callq	fb_StrConcatAssign@PLT
	movq	%rax, -432(%rbp)
	jmp	.LBB4_5
.LBB4_4:
	xorl	%r8d, %r8d
	leaq	-144(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.55(%rip), %rdx
	movl	$29, %ecx
	callq	fb_StrConcatAssign@PLT
	xorl	%r8d, %r8d
	movq	%rax, -440(%rbp)
	leaq	-144(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.56(%rip), %rdx
	movl	$29, %ecx
	callq	fb_StrConcatAssign@PLT
	xorl	%r8d, %r8d
	movq	%rax, -448(%rbp)
	leaq	-144(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.57(%rip), %rdx
	movl	$29, %ecx
	callq	fb_StrConcatAssign@PLT
	xorl	%r8d, %r8d
	movq	%rax, -456(%rbp)
	leaq	-144(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.58(%rip), %rdx
	movl	$33, %ecx
	callq	fb_StrConcatAssign@PLT
	xorl	%r8d, %r8d
	movq	%rax, -464(%rbp)
	leaq	-144(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.59(%rip), %rdx
	movl	$21, %ecx
	callq	fb_StrConcatAssign@PLT
	xorl	%r8d, %r8d
	movq	%rax, -472(%rbp)
	leaq	-144(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.48(%rip), %rdx
	movl	$15, %ecx
	callq	fb_StrConcatAssign@PLT
	xorl	%r8d, %r8d
	movq	%rax, -480(%rbp)
	leaq	-144(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.49(%rip), %rdx
	movl	$15, %ecx
	callq	fb_StrConcatAssign@PLT
	xorl	%r8d, %r8d
	movq	%rax, -488(%rbp)
	leaq	-144(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.50(%rip), %rdx
	movl	$23, %ecx
	callq	fb_StrConcatAssign@PLT
	xorl	%r8d, %r8d
	movq	%rax, -496(%rbp)
	leaq	-144(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.60(%rip), %rdx
	movl	$39, %ecx
	callq	fb_StrConcatAssign@PLT
	xorl	%r8d, %r8d
	movq	%rax, -504(%rbp)
	leaq	-144(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.52(%rip), %rdx
	movl	$18, %ecx
	callq	fb_StrConcatAssign@PLT
	xorl	%r8d, %r8d
	movq	%rax, -512(%rbp)
	leaq	-144(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.53(%rip), %rdx
	movl	$25, %ecx
	callq	fb_StrConcatAssign@PLT
	xorl	%r8d, %r8d
	movq	%rax, -520(%rbp)
	leaq	-144(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.54(%rip), %rdx
	movl	$3, %ecx
	callq	fb_StrConcatAssign@PLT
	movq	%rax, -528(%rbp)
.LBB4_5:
	xorl	%esi, %esi
	leaq	-32(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -680(%rbp)        # 8-byte Spill
	callq	memset@PLT
	leaq	-96(%rbp), %rax
	movq	-240(%rbp), %rcx
	movq	-680(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rax
	movq	%rax, %rdx
	movq	%rax, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -536(%rbp)
	leaq	-56(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -688(%rbp)        # 8-byte Spill
	callq	memset@PLT
	movq	-536(%rbp), %rax
	leaq	-144(%rbp), %rcx
	movq	-688(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rax
	movq	%rax, %rdx
	movq	%rax, %r8
	callq	fb_StrConcat@PLT
	xorl	%r8d, %r8d
	movq	%rax, -544(%rbp)
	leaq	-168(%rbp), %rax
	movq	-544(%rbp), %rcx
	movq	%rax, %rdi
	movq	$-1, %rax
	movq	%rax, %rsi
	movq	%rcx, %rdx
	movq	%rax, %rcx
	callq	fb_StrInit@PLT
	movq	%rax, -552(%rbp)
	movl	$35632, %edi            # imm = 0x8B30
	callq	*GLCREATESHADER$(%rip)
	movl	%eax, -556(%rbp)
	movl	-556(%rbp), %eax
	movq	-232(%rbp), %rcx
	movl	%eax, (%rcx)
	movq	-232(%rbp), %rcx
	movl	(%rcx), %eax
	movl	%eax, %ecx
	cmpq	$0, %rcx
	je	.LBB4_7
# %bb.6:
	jmp	.LBB4_8
.LBB4_7:
	xorl	%r8d, %r8d
	movq	-232(%rbp), %rax
	addq	$8, %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.61(%rip), %rdx
	movl	$44, %ecx
	callq	fb_StrAssign@PLT
	movb	$0, -57(%rbp)
	leaq	-168(%rbp), %rdi
	movq	%rax, -696(%rbp)        # 8-byte Spill
	callq	fb_StrDelete@PLT
	leaq	-144(%rbp), %rdi
	callq	fb_StrDelete@PLT
	leaq	-120(%rbp), %rdi
	callq	fb_StrDelete@PLT
	leaq	-96(%rbp), %rdi
	callq	fb_StrDelete@PLT
	jmp	.LBB4_22
.LBB4_8:
	jmp	.LBB4_9
.LBB4_9:
	xorl	%eax, %eax
	movl	%eax, %ecx
	movq	-168(%rbp), %rdx
	movq	%rdx, -176(%rbp)
	movq	GLSHADERSOURCE$(%rip), %rdx
	movq	-232(%rbp), %rsi
	movl	(%rsi), %edi
	movl	$1, %esi
	leaq	-176(%rbp), %r8
	movq	%rdx, -704(%rbp)        # 8-byte Spill
	movq	%r8, %rdx
	movq	-704(%rbp), %r8         # 8-byte Reload
	callq	*%r8
	movq	GLCOMPILESHADER$(%rip), %rcx
	movq	-232(%rbp), %rdx
	movl	(%rdx), %edi
	callq	*%rcx
	movq	GLGETSHADERIV$(%rip), %rcx
	movq	-232(%rbp), %rdx
	movl	(%rdx), %edi
	movl	$35713, %esi            # imm = 0x8B81
	leaq	-68(%rbp), %rdx
	callq	*%rcx
	movslq	-68(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB4_11
# %bb.10:
	jmp	.LBB4_12
.LBB4_11:
	movq	GLGETSHADERIV$(%rip), %rax
	movq	-232(%rbp), %rcx
	movl	(%rcx), %edi
	movl	$35716, %esi            # imm = 0x8B84
	leaq	-64(%rbp), %rdx
	callq	*%rax
	movslq	-64(%rbp), %rdi
	callq	fb_SPACE@PLT
	xorl	%r8d, %r8d
	movq	%rax, -568(%rbp)
	movq	-232(%rbp), %rax
	addq	$8, %rax
	movq	-568(%rbp), %rcx
	movq	%rax, %rdi
	movq	$-1, %rax
	movq	%rax, %rsi
	movq	%rcx, %rdx
	movq	%rax, %rcx
	callq	fb_StrAssign@PLT
	xorl	%r8d, %r8d
	movl	%r8d, %edx
	movq	%rax, -576(%rbp)
	movq	GLGETSHADERINFOLOG$(%rip), %rax
	movq	-232(%rbp), %rcx
	movl	(%rcx), %edi
	movl	-64(%rbp), %esi
	movq	-232(%rbp), %rcx
	movq	8(%rcx), %rcx
	callq	*%rax
	xorl	%esi, %esi
	leaq	-200(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -712(%rbp)        # 8-byte Spill
	callq	memset@PLT
	movq	-232(%rbp), %rax
	addq	$8, %rax
	movq	-712(%rbp), %rdi        # 8-byte Reload
	leaq	.L.str.62(%rip), %rsi
	movl	$42, %edx
	movq	%rax, %rcx
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%r8d, %r8d
	movq	%rax, -584(%rbp)
	movq	-232(%rbp), %rax
	addq	$8, %rax
	movq	-584(%rbp), %rcx
	movq	%rax, %rdi
	movq	$-1, %rax
	movq	%rax, %rsi
	movq	%rcx, %rdx
	movq	%rax, %rcx
	callq	fb_StrAssign@PLT
	movq	%rax, -592(%rbp)
	movq	GLDELETESHADER$(%rip), %rax
	movq	-232(%rbp), %rcx
	movl	(%rcx), %edi
	callq	*%rax
	movq	-232(%rbp), %rax
	movl	$0, (%rax)
	movb	$0, -57(%rbp)
	leaq	-168(%rbp), %rdi
	callq	fb_StrDelete@PLT
	leaq	-144(%rbp), %rdi
	callq	fb_StrDelete@PLT
	leaq	-120(%rbp), %rdi
	callq	fb_StrDelete@PLT
	leaq	-96(%rbp), %rdi
	callq	fb_StrDelete@PLT
	jmp	.LBB4_22
.LBB4_12:
	jmp	.LBB4_13
.LBB4_13:
	callq	*GLCREATEPROGRAM$(%rip)
	movl	%eax, -596(%rbp)
	movl	-596(%rbp), %eax
	movq	-232(%rbp), %rcx
	movl	%eax, 4(%rcx)
	movq	-232(%rbp), %rcx
	movl	4(%rcx), %eax
	movl	%eax, %ecx
	cmpq	$0, %rcx
	je	.LBB4_15
# %bb.14:
	jmp	.LBB4_16
.LBB4_15:
	xorl	%r8d, %r8d
	movq	-232(%rbp), %rax
	addq	$8, %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.63(%rip), %rdx
	movl	$27, %ecx
	callq	fb_StrAssign@PLT
	movq	GLDELETESHADER$(%rip), %rcx
	movq	-232(%rbp), %rdx
	movl	(%rdx), %edi
	movq	%rax, -720(%rbp)        # 8-byte Spill
	callq	*%rcx
	movq	-232(%rbp), %rax
	movl	$0, (%rax)
	movb	$0, -57(%rbp)
	leaq	-168(%rbp), %rdi
	callq	fb_StrDelete@PLT
	leaq	-144(%rbp), %rdi
	callq	fb_StrDelete@PLT
	leaq	-120(%rbp), %rdi
	callq	fb_StrDelete@PLT
	leaq	-96(%rbp), %rdi
	callq	fb_StrDelete@PLT
	jmp	.LBB4_22
.LBB4_16:
	jmp	.LBB4_17
.LBB4_17:
	movq	GLATTACHSHADER$(%rip), %rax
	movq	-232(%rbp), %rcx
	movl	4(%rcx), %edi
	movq	-232(%rbp), %rcx
	movl	(%rcx), %esi
	callq	*%rax
	movq	GLLINKPROGRAM$(%rip), %rax
	movq	-232(%rbp), %rcx
	movl	4(%rcx), %edi
	callq	*%rax
	movq	GLGETPROGRAMIV$(%rip), %rax
	movq	-232(%rbp), %rcx
	movl	4(%rcx), %edi
	movl	$35714, %esi            # imm = 0x8B82
	leaq	-68(%rbp), %rdx
	callq	*%rax
	movslq	-68(%rbp), %rax
	cmpq	$0, %rax
	je	.LBB4_19
# %bb.18:
	jmp	.LBB4_20
.LBB4_19:
	movq	GLGETPROGRAMIV$(%rip), %rax
	movq	-232(%rbp), %rcx
	movl	4(%rcx), %edi
	movl	$35716, %esi            # imm = 0x8B84
	leaq	-64(%rbp), %rdx
	callq	*%rax
	movslq	-64(%rbp), %rdi
	callq	fb_SPACE@PLT
	xorl	%r8d, %r8d
	movq	%rax, -608(%rbp)
	movq	-232(%rbp), %rax
	addq	$8, %rax
	movq	-608(%rbp), %rcx
	movq	%rax, %rdi
	movq	$-1, %rax
	movq	%rax, %rsi
	movq	%rcx, %rdx
	movq	%rax, %rcx
	callq	fb_StrAssign@PLT
	xorl	%r8d, %r8d
	movl	%r8d, %edx
	movq	%rax, -616(%rbp)
	movq	GLGETPROGRAMINFOLOG$(%rip), %rax
	movq	-232(%rbp), %rcx
	movl	4(%rcx), %edi
	movl	-64(%rbp), %esi
	movq	-232(%rbp), %rcx
	movq	8(%rcx), %rcx
	callq	*%rax
	xorl	%esi, %esi
	leaq	-224(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -728(%rbp)        # 8-byte Spill
	callq	memset@PLT
	movq	-232(%rbp), %rax
	addq	$8, %rax
	movq	-728(%rbp), %rdi        # 8-byte Reload
	leaq	.L.str.64(%rip), %rsi
	movl	$26, %edx
	movq	%rax, %rcx
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%r8d, %r8d
	movq	%rax, -624(%rbp)
	movq	-232(%rbp), %rax
	addq	$8, %rax
	movq	-624(%rbp), %rcx
	movq	%rax, %rdi
	movq	$-1, %rax
	movq	%rax, %rsi
	movq	%rcx, %rdx
	movq	%rax, %rcx
	callq	fb_StrAssign@PLT
	movq	%rax, -632(%rbp)
	movq	GLDELETESHADER$(%rip), %rax
	movq	-232(%rbp), %rcx
	movl	(%rcx), %edi
	callq	*%rax
	movq	-232(%rbp), %rax
	movl	$0, (%rax)
	movb	$0, -57(%rbp)
	leaq	-168(%rbp), %rdi
	callq	fb_StrDelete@PLT
	leaq	-144(%rbp), %rdi
	callq	fb_StrDelete@PLT
	leaq	-120(%rbp), %rdi
	callq	fb_StrDelete@PLT
	leaq	-96(%rbp), %rdi
	callq	fb_StrDelete@PLT
	jmp	.LBB4_22
.LBB4_20:
	jmp	.LBB4_21
.LBB4_21:
	movb	$1, -57(%rbp)
	leaq	-168(%rbp), %rdi
	callq	fb_StrDelete@PLT
	leaq	-144(%rbp), %rdi
	callq	fb_StrDelete@PLT
	leaq	-120(%rbp), %rdi
	callq	fb_StrDelete@PLT
	leaq	-96(%rbp), %rdi
	callq	fb_StrDelete@PLT
.LBB4_22:
	movb	-57(%rbp), %al
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movb	%al, -729(%rbp)         # 1-byte Spill
	jne	.LBB4_24
# %bb.23:                               # %SP_return
	movb	-729(%rbp), %al         # 1-byte Reload
	movsbl	%al, %eax
	addq	$736, %rsp              # imm = 0x2E0
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB4_24:                               # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end4:
	.size	_ZN9SHADERTOY11COMPILECODEER8FBSTRING, .Lfunc_end4-_ZN9SHADERTOY11COMPILECODEER8FBSTRING
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function _ZN5C64_TC1Ev
.LCPI5_0:
	.quad	4624633867356078080     # double 15
.LCPI5_1:
	.quad	4607182418800017408     # double 1
	.text
	.globl	_ZN5C64_TC1Ev
	.p2align	4, 0x90
	.type	_ZN5C64_TC1Ev,@function
_ZN5C64_TC1Ev:                          # @_ZN5C64_TC1Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$192, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -64(%rbp)
# %bb.1:
	xorl	%eax, %eax
	leaq	-48(%rbp), %rcx
	movq	%rcx, %rdi
	movl	%eax, %esi
	movl	$8, %ecx
	movq	%rcx, %rdx
	movl	%eax, -140(%rbp)        # 4-byte Spill
	movq	%rcx, -152(%rbp)        # 8-byte Spill
	callq	memset@PLT
	leaq	-56(%rbp), %rcx
	movq	%rcx, %rdi
	movl	-140(%rbp), %esi        # 4-byte Reload
	movq	-152(%rbp), %rdx        # 8-byte Reload
	callq	memset@PLT
	movq	-64(%rbp), %rcx
	movq	%rcx, %rdi
	movl	-140(%rbp), %esi        # 4-byte Reload
	movq	-152(%rbp), %rdx        # 8-byte Reload
	callq	memset@PLT
	movq	-64(%rbp), %rcx
	addq	$8, %rcx
	movq	%rcx, %rdi
	movl	-140(%rbp), %esi        # 4-byte Reload
	movq	-152(%rbp), %rdx        # 8-byte Reload
	callq	memset@PLT
	movl	$1920, %edi             # imm = 0x780
	movl	$1080, %esi             # imm = 0x438
	movl	$32, %edx
	movl	-140(%rbp), %ecx        # 4-byte Reload
	movl	$64, %r8d
	movl	-140(%rbp), %r9d        # 4-byte Reload
	callq	fb_GfxScreenRes@PLT
	movl	$4294901760, %edi       # imm = 0xFFFF0000
	movl	%eax, -156(%rbp)        # 4-byte Spill
	callq	fb_Cls@PLT
	xorl	%eax, %eax
	movl	%eax, %esi
	leaq	.L.str.1(%rip), %rdi
	callq	fb_StrAllocTempDescZEx@PLT
	movq	%rax, -88(%rbp)
	movq	$0, -40(%rbp)
	movq	$0, -32(%rbp)
	movq	$0, -24(%rbp)
	movq	$0, -16(%rbp)
	movq	-88(%rbp), %rax
	leaq	SCR_W$(%rip), %rdi
	leaq	SCR_H$(%rip), %rsi
	leaq	-16(%rbp), %rdx
	leaq	-24(%rbp), %rcx
	leaq	-32(%rbp), %r8
	leaq	-40(%rbp), %r9
	movq	%rax, (%rsp)
	callq	fb_GfxScreenInfo@PLT
	xorl	%r10d, %r10d
	movq	SCR_W$(%rip), %rax
                                        # kill: def $eax killed $eax killed $rax
	movq	SCR_H$(%rip), %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	movl	%eax, %edi
	movl	%ecx, %esi
	movl	%r10d, %edx
	movl	$32, %ecx
	movl	%r10d, %r8d
	callq	fb_GfxImageCreate@PLT
	xorl	%ecx, %ecx
	movq	%rax, -96(%rbp)
	movq	-96(%rbp), %rax
	movq	%rax, BGIMAGE$(%rip)
	movq	SCR_W$(%rip), %rax
                                        # kill: def $eax killed $eax killed $rax
	movq	SCR_H$(%rip), %r9
                                        # kill: def $r9d killed $r9d killed $r9
	movl	%eax, %edi
	movl	%r9d, %esi
	movl	%ecx, %edx
	movl	$32, %eax
	movl	%ecx, -160(%rbp)        # 4-byte Spill
	movl	%eax, %ecx
	movl	-160(%rbp), %r8d        # 4-byte Reload
	callq	fb_GfxImageCreate@PLT
	xorl	%ecx, %ecx
	movq	%rax, -104(%rbp)
	movq	-104(%rbp), %rax
	movq	%rax, FGIMAGE$(%rip)
	movq	SCR_W$(%rip), %rax
                                        # kill: def $eax killed $eax killed $rax
	movl	%eax, %edi
	movl	%ecx, %esi
	movl	%ecx, %edx
	movl	$32, %eax
	movl	%ecx, -164(%rbp)        # 4-byte Spill
	movl	%eax, %ecx
	movl	-164(%rbp), %r8d        # 4-byte Reload
	callq	fb_GfxImageCreate@PLT
	xorl	%ecx, %ecx
	movq	%rax, -112(%rbp)
	movq	-112(%rbp), %rax
	movq	%rax, RASTER$(%rip)
	movq	SCR_W$(%rip), %rax
                                        # kill: def $eax killed $eax killed $rax
	movl	%eax, %edi
	movl	$1080, %esi             # imm = 0x438
	movl	%ecx, %edx
	movl	$32, %eax
	movl	%ecx, -168(%rbp)        # 4-byte Spill
	movl	%eax, %ecx
	movl	-168(%rbp), %r8d        # 4-byte Reload
	callq	fb_GfxImageCreate@PLT
	movq	%rax, -120(%rbp)
	movq	-120(%rbp), %rax
	movq	%rax, RENDER$(%rip)
	movq	$0, -48(%rbp)
.LBB5_2:                                # =>This Inner Loop Header: Depth=1
	leaq	-56(%rbp), %rdi
	callq	fb_DataReadLongint@PLT
	movq	-48(%rbp), %rax
                                        # kill: def $eax killed $eax killed $rax
	movq	-56(%rbp), %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	movl	%eax, %edi
	movl	%ecx, %esi
	movl	$4294967295, %eax       # imm = 0xFFFFFFFF
	movl	%eax, %edx
	movl	%eax, %ecx
	callq	fb_GfxPalette@PLT
	movsd	.LCPI5_0(%rip), %xmm0   # xmm0 = mem[0],zero
	movsd	.LCPI5_1(%rip), %xmm1   # xmm1 = mem[0],zero
	cvtsi2sdq	-48(%rbp), %xmm2
	addsd	%xmm1, %xmm2
	movsd	%xmm0, -176(%rbp)       # 8-byte Spill
	movaps	%xmm2, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %r8
	movq	%r8, -48(%rbp)
	cvtsi2sdq	-48(%rbp), %xmm0
	movsd	-176(%rbp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	ucomisd	%xmm1, %xmm0
	jb	.LBB5_4
# %bb.3:
	jmp	.LBB5_5
.LBB5_4:                                #   in Loop: Header=BB5_2 Depth=1
	jmp	.LBB5_2
.LBB5_5:
	movl	$134755848, %edi        # imm = 0x8083608
	callq	malloc@PLT
	movq	%rax, -128(%rbp)
	movq	-128(%rbp), %rax
	movq	%rax, -72(%rbp)
	cmpq	$0, -72(%rbp)
	jne	.LBB5_7
# %bb.6:
	jmp	.LBB5_8
.LBB5_7:
	movq	-72(%rbp), %rdi
	callq	_ZN8MEMORY_TC1Ev
.LBB5_8:
	movq	-72(%rbp), %rax
	movq	-64(%rbp), %rcx
	movq	%rax, (%rcx)
	movl	$14720, %edi            # imm = 0x3980
	callq	malloc@PLT
	movq	%rax, -136(%rbp)
	movq	-136(%rbp), %rax
	movq	%rax, -80(%rbp)
	cmpq	$0, -80(%rbp)
	jne	.LBB5_10
# %bb.9:
	jmp	.LBB5_11
.LBB5_10:
	movq	-80(%rbp), %rdi
	movq	-64(%rbp), %rax
	movq	(%rax), %rsi
	callq	_ZN7CPU6510C1EP8MEMORY_T
.LBB5_11:
	movq	-80(%rbp), %rax
	movq	-64(%rbp), %rcx
	movq	%rax, 8(%rcx)
# %bb.12:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB5_14
# %bb.13:                               # %SP_return
	addq	$192, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB5_14:                               # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end5:
	.size	_ZN5C64_TC1Ev, .Lfunc_end5-_ZN5C64_TC1Ev
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function _ZN8MEMORY_TC1Ev
.LCPI6_0:
	.quad	4676988213024260096     # double 49152
.LCPI6_1:
	.quad	4647697223260307456     # double 511
.LCPI6_2:
	.quad	4607182418800017408     # double 1
.LCPI6_3:
	.quad	4652209618980700160     # double 1023
.LCPI6_4:
	.quad	4643176031446892544     # double 255
.LCPI6_5:
	.quad	4645023210981556224     # double 359
.LCPI6_6:
	.quad	4640537203540230144     # double 180
.LCPI6_7:
	.quad	4614256656552045848     # double 3.1415926535897931
.LCPI6_8:
	.quad	4677020373739372544     # double 49386
.LCPI6_9:
	.quad	4619567317775286272     # double 7
.LCPI6_10:
	.quad	4677020236300419072     # double 49385
.LCPI6_11:
	.quad	4677020098861465600     # double 49384
.LCPI6_12:
	.quad	4611686018427387904     # double 2
.LCPI6_13:
	.quad	4677019961422512128     # double 49383
.LCPI6_14:
	.quad	4677554461512564736     # double 53272
.LCPI6_15:
	.quad	4629418941960159232     # double 31
.LCPI6_16:
	.quad	4648911084097372160     # double 648
.LCPI6_17:
	.quad	4616189618054758400     # double 4
.LCPI6_18:
	.quad	4677029994466115584     # double 49456
.LCPI6_19:
	.quad	4676989449974841344     # double 49161
.LCPI6_20:
	.quad	4676988900219027456     # double 49157
.LCPI6_21:
	.quad	4676988762780073984     # double 49156
.LCPI6_22:
	.quad	4676988625341120512     # double 49155
.LCPI6_23:
	.quad	4676988487902167040     # double 49154
.LCPI6_24:
	.quad	4665728114444206080     # double 8191
.LCPI6_25:
	.quad	4665729213955833856     # double 8192
.LCPI6_26:
	.quad	4670232263827390464     # double 16383
.LCPI6_27:
	.quad	4677011715085303808     # double 49323
.LCPI6_28:
	.quad	4636455816377925632     # double 96
.LCPI6_29:
	.quad	4677011577646350336     # double 49322
.LCPI6_30:
	.quad	4640959416005296128     # double 192
.LCPI6_31:
	.quad	4677011440207396864     # double 49321
.LCPI6_32:
	.quad	4677011302768443392     # double 49320
.LCPI6_33:
	.quad	4639165013028765696     # double 141
.LCPI6_34:
	.quad	4677011165329489920     # double 49319
.LCPI6_35:
	.quad	4677011027890536448     # double 49318
.LCPI6_36:
	.quad	4640150175447252992     # double 169
.LCPI6_37:
	.quad	4679239600521084928     # double 65533
.LCPI6_38:
	.quad	9218868437227405312     # double +Inf
.LCPI6_39:
	.quad	4679239463082131456     # double 65532
.LCPI6_40:
	.quad	4634204016564240384     # double 64
.LCPI6_41:
	.quad	4629700416936869888     # double 32
.LCPI6_42:
	.quad	4631107791820423168     # double 42
.LCPI6_43:
	.quad	4632233691727265792     # double 50
.LCPI6_44:
	.quad	4638918722424143872     # double 134
.LCPI6_45:
	.quad	4634344754052595712     # double 66
.LCPI6_46:
	.quad	4634696597773484032     # double 71
.LCPI6_47:
	.quad	4643000109586448384     # double 250
	.text
	.globl	_ZN8MEMORY_TC1Ev
	.p2align	4, 0x90
	.type	_ZN8MEMORY_TC1Ev,@function
_ZN8MEMORY_TC1Ev:                       # @_ZN8MEMORY_TC1Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$896, %rsp              # imm = 0x380
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -56(%rbp)
# %bb.1:
	movsd	.LCPI6_0(%rip), %xmm0   # xmm0 = mem[0],zero
	xorl	%eax, %eax
	movq	-56(%rbp), %rcx
	movq	%rcx, %rdi
	movl	%eax, %esi
	movl	$134217728, %edx        # imm = 0x8000000
	movsd	%xmm0, -368(%rbp)       # 8-byte Spill
	movl	%eax, -372(%rbp)        # 4-byte Spill
	callq	memset@PLT
	movq	-56(%rbp), %rcx
	addq	$134217728, %rcx        # imm = 0x8000000
	movq	%rcx, %rdi
	movl	-372(%rbp), %esi        # 4-byte Reload
	movl	$131072, %ecx           # imm = 0x20000
	movq	%rcx, %rdx
	movq	%rcx, -384(%rbp)        # 8-byte Spill
	callq	memset@PLT
	movq	-56(%rbp), %rcx
	addq	$134348800, %rcx        # imm = 0x8020000
	movq	%rcx, %rdi
	movl	-372(%rbp), %esi        # 4-byte Reload
	movq	-384(%rbp), %rdx        # 8-byte Reload
	callq	memset@PLT
	movq	-56(%rbp), %rcx
	addq	$134479872, %rcx        # imm = 0x8040000
	movq	%rcx, %rdi
	movl	-372(%rbp), %esi        # 4-byte Reload
	movl	$262024, %edx           # imm = 0x3FF88
	callq	memset@PLT
	movq	-56(%rbp), %rcx
	addq	$134741896, %rcx        # imm = 0x807FF88
	movq	%rcx, %rdi
	movl	-372(%rbp), %esi        # 4-byte Reload
	movl	$8192, %edx             # imm = 0x2000
	callq	memset@PLT
	movq	-56(%rbp), %rcx
	addq	$134750088, %rcx        # imm = 0x8081F88
	movq	%rcx, %rdi
	movl	-372(%rbp), %esi        # 4-byte Reload
	movl	$2880, %ecx             # imm = 0xB40
	movq	%rcx, %rdx
	movq	%rcx, -392(%rbp)        # 8-byte Spill
	callq	memset@PLT
	movq	-56(%rbp), %rcx
	addq	$134752968, %rcx        # imm = 0x8082AC8
	movq	%rcx, %rdi
	movl	-372(%rbp), %esi        # 4-byte Reload
	movq	-392(%rbp), %rdx        # 8-byte Reload
	callq	memset@PLT
	movsd	-368(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	%xmm0, SYS_OFFSET$(%rip)
	movq	$0, -16(%rbp)
	movq	$0, -64(%rbp)
.LBB6_2:                                # =>This Inner Loop Header: Depth=1
	leaq	-16(%rbp), %rdi
	callq	fb_DataReadLongint@PLT
	movsd	.LCPI6_1(%rip), %xmm0   # xmm0 = mem[0],zero
	movsd	.LCPI6_2(%rip), %xmm1   # xmm1 = mem[0],zero
	cvtsi2sdq	-16(%rbp), %xmm2
	movq	-56(%rbp), %rax
	movq	-64(%rbp), %rcx
	shlq	$3, %rcx
	movsd	%xmm2, (%rax,%rcx)
	cvtsi2sdq	-64(%rbp), %xmm2
	addsd	%xmm1, %xmm2
	movsd	%xmm0, -400(%rbp)       # 8-byte Spill
	movaps	%xmm2, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	%rax, -64(%rbp)
	cvtsi2sdq	-64(%rbp), %xmm0
	movsd	-400(%rbp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	ucomisd	%xmm1, %xmm0
	jbe	.LBB6_4
# %bb.3:
	jmp	.LBB6_5
.LBB6_4:                                #   in Loop: Header=BB6_2 Depth=1
	jmp	.LBB6_2
.LBB6_5:
	movq	$512, -64(%rbp)         # imm = 0x200
.LBB6_6:                                # =>This Inner Loop Header: Depth=1
	movsd	.LCPI6_3(%rip), %xmm0   # xmm0 = mem[0],zero
	movsd	.LCPI6_2(%rip), %xmm1   # xmm1 = mem[0],zero
	movsd	.LCPI6_4(%rip), %xmm2   # xmm2 = mem[0],zero
	movq	-56(%rbp), %rax
	movq	-64(%rbp), %rcx
	shlq	$3, %rcx
	movsd	%xmm2, (%rax,%rcx)
	cvtsi2sdq	-64(%rbp), %xmm2
	addsd	%xmm1, %xmm2
	movsd	%xmm0, -408(%rbp)       # 8-byte Spill
	movaps	%xmm2, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	%rax, -64(%rbp)
	cvtsi2sdq	-64(%rbp), %xmm0
	movsd	-408(%rbp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	ucomisd	%xmm1, %xmm0
	jbe	.LBB6_8
# %bb.7:
	jmp	.LBB6_9
.LBB6_8:                                #   in Loop: Header=BB6_6 Depth=1
	jmp	.LBB6_6
.LBB6_9:
	movq	$0, -64(%rbp)
.LBB6_10:                               # =>This Inner Loop Header: Depth=1
	movsd	.LCPI6_5(%rip), %xmm0   # xmm0 = mem[0],zero
	movsd	.LCPI6_2(%rip), %xmm1   # xmm1 = mem[0],zero
	movsd	.LCPI6_6(%rip), %xmm2   # xmm2 = mem[0],zero
	movsd	.LCPI6_7(%rip), %xmm3   # xmm3 = mem[0],zero
	cvtsi2sdq	-64(%rbp), %xmm4
	mulsd	%xmm3, %xmm4
	divsd	%xmm2, %xmm4
	movsd	%xmm0, -416(%rbp)       # 8-byte Spill
	movaps	%xmm4, %xmm0
	movsd	%xmm1, -424(%rbp)       # 8-byte Spill
	movsd	%xmm2, -432(%rbp)       # 8-byte Spill
	movsd	%xmm3, -440(%rbp)       # 8-byte Spill
	callq	sin@PLT
	movq	-56(%rbp), %rax
	movq	-64(%rbp), %rcx
	shlq	$3, %rcx
	movsd	%xmm0, 134750088(%rax,%rcx)
	cvtsi2sdq	-64(%rbp), %xmm0
	movsd	-440(%rbp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	mulsd	%xmm1, %xmm0
	movsd	-432(%rbp), %xmm2       # 8-byte Reload
                                        # xmm2 = mem[0],zero
	divsd	%xmm2, %xmm0
	callq	cos@PLT
	movq	-56(%rbp), %rax
	movq	-64(%rbp), %rcx
	shlq	$3, %rcx
	movsd	%xmm0, 134752968(%rax,%rcx)
	cvtsi2sdq	-64(%rbp), %xmm0
	movsd	-424(%rbp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	addsd	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	%rax, -64(%rbp)
	cvtsi2sdq	-64(%rbp), %xmm0
	movsd	-416(%rbp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	ucomisd	%xmm1, %xmm0
	jbe	.LBB6_12
# %bb.11:
	jmp	.LBB6_13
.LBB6_12:                               #   in Loop: Header=BB6_10 Depth=1
	jmp	.LBB6_10
.LBB6_13:
	movsd	.LCPI6_23(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI6_4(%rip), %xmm1   # xmm1 = mem[0],zero
	movq	-56(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI6_22(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI6_4(%rip), %xmm1   # xmm1 = mem[0],zero
	movq	-56(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI6_21(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI6_4(%rip), %xmm1   # xmm1 = mem[0],zero
	movq	-56(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI6_20(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI6_4(%rip), %xmm1   # xmm1 = mem[0],zero
	movq	-56(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI6_19(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI6_4(%rip), %xmm1   # xmm1 = mem[0],zero
	movq	-56(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI6_18(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI6_4(%rip), %xmm1   # xmm1 = mem[0],zero
	movq	-56(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI6_16(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI6_17(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-56(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI6_14(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI6_15(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-56(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI6_13(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-56(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI6_11(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI6_12(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-56(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI6_10(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI6_9(%rip), %xmm1   # xmm1 = mem[0],zero
	movq	-56(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI6_8(%rip), %xmm0   # xmm0 = mem[0],zero
	movsd	.LCPI6_9(%rip), %xmm1   # xmm1 = mem[0],zero
	movq	-56(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	xorl	%esi, %esi
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -72(%rbp)
	leaq	-17(%rbp), %rdi
	movl	$1, %edx
	callq	memset@PLT
	leaq	.L.str.65(%rip), %rdi
	movl	$17, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%ecx, %ecx
	movq	%rax, -80(%rbp)
	movq	-80(%rbp), %rdi
	movl	%ecx, %esi
	movl	%ecx, %edx
	movl	%ecx, -444(%rbp)        # 4-byte Spill
	movl	$1, %r8d
	movl	-444(%rbp), %r9d        # 4-byte Reload
	callq	fb_FileOpen@PLT
.LBB6_14:                               # =>This Inner Loop Header: Depth=1
	movsd	.LCPI6_24(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI6_2(%rip), %xmm1   # xmm1 = mem[0],zero
	xorl	%eax, %eax
	movl	%eax, %esi
	movl	$1, %edi
	leaq	-17(%rbp), %rdx
	movl	$1, %ecx
	movsd	%xmm0, -456(%rbp)       # 8-byte Spill
	movsd	%xmm1, -464(%rbp)       # 8-byte Spill
	callq	fb_FileGetLarge@PLT
	movzbl	-17(%rbp), %edi
	cvtsi2sd	%edi, %xmm0
	movq	-56(%rbp), %rcx
	movsd	-72(%rbp), %xmm1        # xmm1 = mem[0],zero
	movsd	%xmm0, -472(%rbp)       # 8-byte Spill
	movaps	%xmm1, %xmm0
	movl	%eax, -476(%rbp)        # 4-byte Spill
	movq	%rcx, -488(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movq	-488(%rbp), %rdx        # 8-byte Reload
	movsd	-472(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	%xmm0, 134348800(%rdx,%rcx)
	movsd	-464(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	-72(%rbp), %xmm0
	movsd	%xmm0, -72(%rbp)
	movsd	-72(%rbp), %xmm0        # xmm0 = mem[0],zero
	movsd	-456(%rbp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	ucomisd	%xmm1, %xmm0
	jbe	.LBB6_16
# %bb.15:
	jmp	.LBB6_17
.LBB6_16:                               #   in Loop: Header=BB6_14 Depth=1
	jmp	.LBB6_14
.LBB6_17:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -72(%rbp)
.LBB6_18:                               # =>This Inner Loop Header: Depth=1
	movsd	.LCPI6_24(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI6_2(%rip), %xmm1   # xmm1 = mem[0],zero
	xorl	%eax, %eax
	movl	%eax, %esi
	movl	$1, %edi
	leaq	-17(%rbp), %rdx
	movl	$1, %ecx
	movsd	%xmm0, -496(%rbp)       # 8-byte Spill
	movsd	%xmm1, -504(%rbp)       # 8-byte Spill
	callq	fb_FileGetLarge@PLT
	movzbl	-17(%rbp), %edi
	cvtsi2sd	%edi, %xmm0
	movq	-56(%rbp), %rcx
	movsd	-72(%rbp), %xmm1        # xmm1 = mem[0],zero
	movsd	%xmm0, -512(%rbp)       # 8-byte Spill
	movaps	%xmm1, %xmm0
	movl	%eax, -516(%rbp)        # 4-byte Spill
	movq	%rcx, -528(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movq	-528(%rbp), %rdx        # 8-byte Reload
	movsd	-512(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	%xmm0, 134217728(%rdx,%rcx)
	movsd	-504(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	-72(%rbp), %xmm0
	movsd	%xmm0, -72(%rbp)
	movsd	-72(%rbp), %xmm0        # xmm0 = mem[0],zero
	movsd	-496(%rbp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	ucomisd	%xmm1, %xmm0
	jbe	.LBB6_20
# %bb.19:
	jmp	.LBB6_21
.LBB6_20:                               #   in Loop: Header=BB6_18 Depth=1
	jmp	.LBB6_18
.LBB6_21:
	movl	$1, %edi
	callq	fb_FileClose@PLT
	leaq	.L.str.66(%rip), %rdi
	movl	$15, %esi
	movl	%eax, -532(%rbp)        # 4-byte Spill
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%ecx, %ecx
	movq	%rax, -88(%rbp)
	movq	-88(%rbp), %rdi
	movl	%ecx, %esi
	movl	%ecx, %edx
	movl	%ecx, -536(%rbp)        # 4-byte Spill
	movl	$1, %r8d
	movl	-536(%rbp), %r9d        # 4-byte Reload
	callq	fb_FileOpen@PLT
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -72(%rbp)
.LBB6_22:                               # =>This Inner Loop Header: Depth=1
	movsd	.LCPI6_24(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI6_2(%rip), %xmm1   # xmm1 = mem[0],zero
	xorl	%eax, %eax
	movl	%eax, %esi
	movl	$1, %edi
	leaq	-17(%rbp), %rdx
	movl	$1, %ecx
	movsd	%xmm0, -544(%rbp)       # 8-byte Spill
	movsd	%xmm1, -552(%rbp)       # 8-byte Spill
	callq	fb_FileGetLarge@PLT
	movzbl	-17(%rbp), %edi
	cvtsi2sd	%edi, %xmm0
	movq	-56(%rbp), %rcx
	movsd	-72(%rbp), %xmm1        # xmm1 = mem[0],zero
	movsd	%xmm0, -560(%rbp)       # 8-byte Spill
	movaps	%xmm1, %xmm0
	movl	%eax, -564(%rbp)        # 4-byte Spill
	movq	%rcx, -576(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movq	-576(%rbp), %rdx        # 8-byte Reload
	movsd	-560(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	%xmm0, 134479872(%rdx,%rcx)
	movsd	-552(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	-72(%rbp), %xmm0
	movsd	%xmm0, -72(%rbp)
	movsd	-72(%rbp), %xmm0        # xmm0 = mem[0],zero
	movsd	-544(%rbp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	ucomisd	%xmm1, %xmm0
	jbe	.LBB6_24
# %bb.23:
	jmp	.LBB6_25
.LBB6_24:                               #   in Loop: Header=BB6_22 Depth=1
	jmp	.LBB6_22
.LBB6_25:
	xorl	%eax, %eax
	movl	%eax, %esi
	movl	$1, %edi
	callq	fb_FileSeekLarge@PLT
	movsd	.LCPI6_25(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -72(%rbp)
.LBB6_26:                               # =>This Inner Loop Header: Depth=1
	movsd	.LCPI6_26(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI6_2(%rip), %xmm1   # xmm1 = mem[0],zero
	xorl	%eax, %eax
	movl	%eax, %esi
	movl	$1, %edi
	leaq	-17(%rbp), %rdx
	movl	$1, %ecx
	movsd	%xmm0, -584(%rbp)       # 8-byte Spill
	movsd	%xmm1, -592(%rbp)       # 8-byte Spill
	callq	fb_FileGetLarge@PLT
	movzbl	-17(%rbp), %edi
	cvtsi2sd	%edi, %xmm0
	movq	-56(%rbp), %rcx
	movsd	-72(%rbp), %xmm1        # xmm1 = mem[0],zero
	movsd	%xmm0, -600(%rbp)       # 8-byte Spill
	movaps	%xmm1, %xmm0
	movl	%eax, -604(%rbp)        # 4-byte Spill
	movq	%rcx, -616(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movq	-616(%rbp), %rdx        # 8-byte Reload
	movsd	-600(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	%xmm0, 134479872(%rdx,%rcx)
	movsd	-592(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	-72(%rbp), %xmm0
	movsd	%xmm0, -72(%rbp)
	movsd	-72(%rbp), %xmm0        # xmm0 = mem[0],zero
	movsd	-584(%rbp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	ucomisd	%xmm1, %xmm0
	jbe	.LBB6_28
# %bb.27:
	jmp	.LBB6_29
.LBB6_28:                               #   in Loop: Header=BB6_26 Depth=1
	jmp	.LBB6_26
.LBB6_29:
	movl	$1, %edi
	callq	fb_FileClose@PLT
	movsd	.LCPI6_38(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-56(%rbp), %rdi
	xorps	%xmm0, %xmm0
	movl	%eax, -620(%rbp)        # 4-byte Spill
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI6_2(%rip), %xmm0   # xmm0 = mem[0],zero
	movsd	.LCPI6_38(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-56(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI6_39(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI6_38(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-56(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI6_37(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI6_38(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-56(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	xorl	%eax, %eax
	movl	%eax, %esi
	leaq	.L.str.1(%rip), %rdi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%ecx, %ecx
	movl	%ecx, %edi
	xorl	%ecx, %ecx
	movq	%rax, -96(%rbp)
	movq	-96(%rbp), %rax
	xorps	%xmm0, %xmm0
	movss	%xmm0, -624(%rbp)       # 4-byte Spill
	movss	-624(%rbp), %xmm1       # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movl	$4278190080, %esi       # imm = 0xFF000000
	movl	%ecx, %edx
	movl	%ecx, -628(%rbp)        # 4-byte Spill
	movq	%rax, %rcx
	movl	-628(%rbp), %r8d        # 4-byte Reload
	movl	$1073741828, %r9d       # imm = 0x40000004
	callq	fb_GfxPaint@PLT
	movsd	.LCPI6_35(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI6_36(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-56(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI6_34(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-56(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI6_32(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI6_33(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-56(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI6_31(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-56(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI6_29(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI6_30(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-56(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI6_27(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI6_28(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-56(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	xorl	%edx, %edx
	movl	%edx, %esi
	movl	$1, %edi
	movb	$0, %al
	callq	fb_CHR@PLT
	xorl	%r8d, %r8d
	movq	%rax, -104(%rbp)
	leaq	-48(%rbp), %rax
	movq	-104(%rbp), %rcx
	movq	%rax, %rdi
	movq	$-1, %rax
	movq	%rax, %rsi
	movq	%rcx, %rdx
	movq	%rax, %rcx
	callq	fb_StrInit@PLT
	xorl	%r8d, %r8d
	movq	%rax, -112(%rbp)
	movq	$0, -120(%rbp)
	leaq	-48(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.67(%rip), %rdx
	movl	$6, %ecx
	callq	fb_StrAssign@PLT
	movq	$1, -120(%rbp)
.LBB6_30:                               # =>This Inner Loop Header: Depth=1
	xorl	%eax, %eax
	movsd	.LCPI6_40(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI6_15(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-120(%rbp), %rsi
	leaq	-48(%rbp), %rdi
	movl	$1, %ecx
	movq	%rcx, %rdx
	movl	%eax, -632(%rbp)        # 4-byte Spill
	movsd	%xmm0, -640(%rbp)       # 8-byte Spill
	movsd	%xmm1, -648(%rbp)       # 8-byte Spill
	movq	%rcx, -656(%rbp)        # 8-byte Spill
	callq	fb_StrMid@PLT
	movq	%rax, -128(%rbp)
	movq	-128(%rbp), %rdi
	movq	-656(%rbp), %rsi        # 8-byte Reload
	callq	fb_ASC@PLT
	movl	%eax, -132(%rbp)
	movl	-132(%rbp), %eax
	movl	%eax, %ecx
	cvtsi2sd	%rcx, %xmm0
	movq	-56(%rbp), %rcx
	movq	-120(%rbp), %rdx
	shlq	$3, %rdx
	movsd	%xmm0, 134226736(%rcx,%rdx)
	movq	-56(%rbp), %rcx
	movq	-120(%rbp), %rdx
	shlq	$3, %rdx
	movsd	134226736(%rcx,%rdx), %xmm0 # xmm0 = mem[0],zero
	movsd	-648(%rbp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	ucomisd	%xmm1, %xmm0
	seta	%r8b
	andb	$1, %r8b
	movzbl	%r8b, %eax
	movl	-632(%rbp), %r9d        # 4-byte Reload
	subl	%eax, %r9d
	movslq	%r9d, %rcx
	movq	-56(%rbp), %rdx
	movq	-120(%rbp), %rsi
	shlq	$3, %rsi
	movsd	-640(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	ucomisd	134226736(%rdx,%rsi), %xmm0
	seta	%r8b
	andb	$1, %r8b
	movzbl	%r8b, %eax
	movl	-632(%rbp), %r9d        # 4-byte Reload
	subl	%eax, %r9d
	movslq	%r9d, %rdx
	andq	%rdx, %rcx
	cmpq	$0, %rcx
	jne	.LBB6_32
# %bb.31:                               #   in Loop: Header=BB6_30 Depth=1
	jmp	.LBB6_33
.LBB6_32:                               #   in Loop: Header=BB6_30 Depth=1
	jmp	.LBB6_37
.LBB6_33:                               #   in Loop: Header=BB6_30 Depth=1
	movsd	.LCPI6_2(%rip), %xmm0   # xmm0 = mem[0],zero
	cvtsi2sdq	-120(%rbp), %xmm1
	addsd	%xmm0, %xmm1
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	%rax, -120(%rbp)
	leaq	-48(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	callq	fb_StrLen@PLT
	movq	%rax, -144(%rbp)
	movq	-120(%rbp), %rax
	cmpq	-144(%rbp), %rax
	jle	.LBB6_35
# %bb.34:
	jmp	.LBB6_36
.LBB6_35:                               #   in Loop: Header=BB6_30 Depth=1
	jmp	.LBB6_30
.LBB6_36:
	jmp	.LBB6_38
.LBB6_37:                               #   in Loop: Header=BB6_30 Depth=1
	movsd	.LCPI6_41(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movq	-120(%rbp), %rcx
	shlq	$3, %rcx
	addsd	134226736(%rax,%rcx), %xmm0
	movq	-56(%rbp), %rax
	movq	-120(%rbp), %rcx
	shlq	$3, %rcx
	movsd	%xmm0, 134226736(%rax,%rcx)
	jmp	.LBB6_30
.LBB6_38:
	xorl	%r8d, %r8d
	leaq	-48(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.68(%rip), %rdx
	movl	$5, %ecx
	callq	fb_StrAssign@PLT
	movq	$1, -120(%rbp)
.LBB6_39:                               # =>This Inner Loop Header: Depth=1
	xorl	%eax, %eax
	movsd	.LCPI6_40(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI6_15(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-120(%rbp), %rsi
	leaq	-48(%rbp), %rdi
	movl	$1, %ecx
	movq	%rcx, %rdx
	movl	%eax, -660(%rbp)        # 4-byte Spill
	movsd	%xmm0, -672(%rbp)       # 8-byte Spill
	movsd	%xmm1, -680(%rbp)       # 8-byte Spill
	movq	%rcx, -688(%rbp)        # 8-byte Spill
	callq	fb_StrMid@PLT
	movq	%rax, -152(%rbp)
	movq	-152(%rbp), %rdi
	movq	-688(%rbp), %rsi        # 8-byte Reload
	callq	fb_ASC@PLT
	movl	%eax, -156(%rbp)
	movl	-156(%rbp), %eax
	movl	%eax, %ecx
	cvtsi2sd	%rcx, %xmm0
	movq	-56(%rbp), %rcx
	movq	-120(%rbp), %rdx
	shlq	$3, %rdx
	movsd	%xmm0, 134226784(%rcx,%rdx)
	movq	-56(%rbp), %rcx
	movq	-120(%rbp), %rdx
	shlq	$3, %rdx
	movsd	134226784(%rcx,%rdx), %xmm0 # xmm0 = mem[0],zero
	movsd	-680(%rbp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	ucomisd	%xmm1, %xmm0
	seta	%r8b
	andb	$1, %r8b
	movzbl	%r8b, %eax
	movl	-660(%rbp), %r9d        # 4-byte Reload
	subl	%eax, %r9d
	movslq	%r9d, %rcx
	movq	-56(%rbp), %rdx
	movq	-120(%rbp), %rsi
	shlq	$3, %rsi
	movsd	-672(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	ucomisd	134226784(%rdx,%rsi), %xmm0
	seta	%r8b
	andb	$1, %r8b
	movzbl	%r8b, %eax
	movl	-660(%rbp), %r9d        # 4-byte Reload
	subl	%eax, %r9d
	movslq	%r9d, %rdx
	andq	%rdx, %rcx
	cmpq	$0, %rcx
	jne	.LBB6_41
# %bb.40:                               #   in Loop: Header=BB6_39 Depth=1
	jmp	.LBB6_42
.LBB6_41:                               #   in Loop: Header=BB6_39 Depth=1
	jmp	.LBB6_46
.LBB6_42:                               #   in Loop: Header=BB6_39 Depth=1
	movsd	.LCPI6_2(%rip), %xmm0   # xmm0 = mem[0],zero
	cvtsi2sdq	-120(%rbp), %xmm1
	addsd	%xmm0, %xmm1
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	%rax, -120(%rbp)
	leaq	-48(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	callq	fb_StrLen@PLT
	movq	%rax, -168(%rbp)
	movq	-120(%rbp), %rax
	cmpq	-168(%rbp), %rax
	jle	.LBB6_44
# %bb.43:
	jmp	.LBB6_45
.LBB6_44:                               #   in Loop: Header=BB6_39 Depth=1
	jmp	.LBB6_39
.LBB6_45:
	jmp	.LBB6_47
.LBB6_46:                               #   in Loop: Header=BB6_39 Depth=1
	movsd	.LCPI6_41(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movq	-120(%rbp), %rcx
	shlq	$3, %rcx
	addsd	134226784(%rax,%rcx), %xmm0
	movq	-56(%rbp), %rax
	movq	-120(%rbp), %rcx
	shlq	$3, %rcx
	movsd	%xmm0, 134226784(%rax,%rcx)
	jmp	.LBB6_39
.LBB6_47:
	xorl	%r8d, %r8d
	movsd	.LCPI6_41(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI6_42(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm1, 134226920(%rax)
	movq	-56(%rbp), %rax
	movsd	%xmm0, 134226928(%rax)
	movq	-56(%rbp), %rax
	movsd	%xmm0, 134226936(%rax)
	leaq	-48(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.69(%rip), %rdx
	movl	$10, %ecx
	callq	fb_StrAssign@PLT
	movq	$1, -120(%rbp)
.LBB6_48:                               # =>This Inner Loop Header: Depth=1
	xorl	%eax, %eax
	movsd	.LCPI6_40(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI6_15(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-120(%rbp), %rsi
	leaq	-48(%rbp), %rdi
	movl	$1, %ecx
	movq	%rcx, %rdx
	movl	%eax, -692(%rbp)        # 4-byte Spill
	movsd	%xmm0, -704(%rbp)       # 8-byte Spill
	movsd	%xmm1, -712(%rbp)       # 8-byte Spill
	movq	%rcx, -720(%rbp)        # 8-byte Spill
	callq	fb_StrMid@PLT
	movq	%rax, -176(%rbp)
	movq	-176(%rbp), %rdi
	movq	-720(%rbp), %rsi        # 8-byte Reload
	callq	fb_ASC@PLT
	movl	%eax, -180(%rbp)
	movl	-180(%rbp), %eax
	movl	%eax, %ecx
	cvtsi2sd	%rcx, %xmm0
	movq	-56(%rbp), %rcx
	movq	-120(%rbp), %rdx
	shlq	$3, %rdx
	movsd	%xmm0, 134226936(%rcx,%rdx)
	movq	-56(%rbp), %rcx
	movq	-120(%rbp), %rdx
	shlq	$3, %rdx
	movsd	134226936(%rcx,%rdx), %xmm0 # xmm0 = mem[0],zero
	movsd	-712(%rbp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	ucomisd	%xmm1, %xmm0
	seta	%r8b
	andb	$1, %r8b
	movzbl	%r8b, %eax
	movl	-692(%rbp), %r9d        # 4-byte Reload
	subl	%eax, %r9d
	movslq	%r9d, %rcx
	movq	-56(%rbp), %rdx
	movq	-120(%rbp), %rsi
	shlq	$3, %rsi
	movsd	-704(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	ucomisd	134226936(%rdx,%rsi), %xmm0
	seta	%r8b
	andb	$1, %r8b
	movzbl	%r8b, %eax
	movl	-692(%rbp), %r9d        # 4-byte Reload
	subl	%eax, %r9d
	movslq	%r9d, %rdx
	andq	%rdx, %rcx
	cmpq	$0, %rcx
	jne	.LBB6_50
# %bb.49:                               #   in Loop: Header=BB6_48 Depth=1
	jmp	.LBB6_51
.LBB6_50:                               #   in Loop: Header=BB6_48 Depth=1
	jmp	.LBB6_55
.LBB6_51:                               #   in Loop: Header=BB6_48 Depth=1
	movsd	.LCPI6_2(%rip), %xmm0   # xmm0 = mem[0],zero
	cvtsi2sdq	-120(%rbp), %xmm1
	addsd	%xmm0, %xmm1
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	%rax, -120(%rbp)
	leaq	-48(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	callq	fb_StrLen@PLT
	movq	%rax, -192(%rbp)
	movq	-120(%rbp), %rax
	cmpq	-192(%rbp), %rax
	jle	.LBB6_53
# %bb.52:
	jmp	.LBB6_54
.LBB6_53:                               #   in Loop: Header=BB6_48 Depth=1
	jmp	.LBB6_48
.LBB6_54:
	jmp	.LBB6_56
.LBB6_55:                               #   in Loop: Header=BB6_48 Depth=1
	movsd	.LCPI6_41(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movq	-120(%rbp), %rcx
	shlq	$3, %rcx
	addsd	134226936(%rax,%rcx), %xmm0
	movq	-56(%rbp), %rax
	movq	-120(%rbp), %rcx
	shlq	$3, %rcx
	movsd	%xmm0, 134226936(%rax,%rcx)
	jmp	.LBB6_48
.LBB6_56:
	xorl	%r8d, %r8d
	movsd	.LCPI6_41(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 134227016(%rax)
	leaq	-48(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.70(%rip), %rdx
	movl	$6, %ecx
	callq	fb_StrAssign@PLT
	movq	$1, -120(%rbp)
.LBB6_57:                               # =>This Inner Loop Header: Depth=1
	xorl	%eax, %eax
	movsd	.LCPI6_40(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI6_15(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-120(%rbp), %rsi
	leaq	-48(%rbp), %rdi
	movl	$1, %ecx
	movq	%rcx, %rdx
	movl	%eax, -724(%rbp)        # 4-byte Spill
	movsd	%xmm0, -736(%rbp)       # 8-byte Spill
	movsd	%xmm1, -744(%rbp)       # 8-byte Spill
	movq	%rcx, -752(%rbp)        # 8-byte Spill
	callq	fb_StrMid@PLT
	movq	%rax, -200(%rbp)
	movq	-200(%rbp), %rdi
	movq	-752(%rbp), %rsi        # 8-byte Reload
	callq	fb_ASC@PLT
	movl	%eax, -204(%rbp)
	movl	-204(%rbp), %eax
	movl	%eax, %ecx
	cvtsi2sd	%rcx, %xmm0
	movq	-56(%rbp), %rcx
	movq	-120(%rbp), %rdx
	shlq	$3, %rdx
	movsd	%xmm0, 134226688(%rcx,%rdx)
	movq	-56(%rbp), %rcx
	movq	-120(%rbp), %rdx
	shlq	$3, %rdx
	movsd	134226688(%rcx,%rdx), %xmm0 # xmm0 = mem[0],zero
	movsd	-744(%rbp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	ucomisd	%xmm1, %xmm0
	seta	%r8b
	andb	$1, %r8b
	movzbl	%r8b, %eax
	movl	-724(%rbp), %r9d        # 4-byte Reload
	subl	%eax, %r9d
	movslq	%r9d, %rcx
	movq	-56(%rbp), %rdx
	movq	-120(%rbp), %rsi
	shlq	$3, %rsi
	movsd	-736(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	ucomisd	134226688(%rdx,%rsi), %xmm0
	seta	%r8b
	andb	$1, %r8b
	movzbl	%r8b, %eax
	movl	-724(%rbp), %r9d        # 4-byte Reload
	subl	%eax, %r9d
	movslq	%r9d, %rdx
	andq	%rdx, %rcx
	cmpq	$0, %rcx
	jne	.LBB6_59
# %bb.58:                               #   in Loop: Header=BB6_57 Depth=1
	jmp	.LBB6_60
.LBB6_59:                               #   in Loop: Header=BB6_57 Depth=1
	jmp	.LBB6_67
.LBB6_60:                               #   in Loop: Header=BB6_57 Depth=1
	xorl	%eax, %eax
	movsd	.LCPI6_40(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI6_15(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-120(%rbp), %rsi
	leaq	-48(%rbp), %rdi
	movl	$1, %ecx
	movq	%rcx, %rdx
	movl	%eax, -756(%rbp)        # 4-byte Spill
	movsd	%xmm0, -768(%rbp)       # 8-byte Spill
	movsd	%xmm1, -776(%rbp)       # 8-byte Spill
	movq	%rcx, -784(%rbp)        # 8-byte Spill
	callq	fb_StrMid@PLT
	movq	%rax, -216(%rbp)
	movq	-216(%rbp), %rdi
	movq	-784(%rbp), %rsi        # 8-byte Reload
	callq	fb_ASC@PLT
	movl	%eax, -220(%rbp)
	movl	-220(%rbp), %eax
	movl	%eax, %ecx
	cvtsi2sd	%rcx, %xmm0
	movq	-56(%rbp), %rcx
	movq	-120(%rbp), %rdx
	shlq	$3, %rdx
	movsd	%xmm0, 134227016(%rcx,%rdx)
	movq	-56(%rbp), %rcx
	movq	-120(%rbp), %rdx
	shlq	$3, %rdx
	movsd	134227016(%rcx,%rdx), %xmm0 # xmm0 = mem[0],zero
	movsd	-776(%rbp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	ucomisd	%xmm1, %xmm0
	seta	%r8b
	andb	$1, %r8b
	movzbl	%r8b, %eax
	movl	-756(%rbp), %r9d        # 4-byte Reload
	subl	%eax, %r9d
	movslq	%r9d, %rcx
	movq	-56(%rbp), %rdx
	movq	-120(%rbp), %rsi
	shlq	$3, %rsi
	movsd	-768(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	ucomisd	134227016(%rdx,%rsi), %xmm0
	seta	%r8b
	andb	$1, %r8b
	movzbl	%r8b, %eax
	movl	-756(%rbp), %r9d        # 4-byte Reload
	subl	%eax, %r9d
	movslq	%r9d, %rdx
	andq	%rdx, %rcx
	cmpq	$0, %rcx
	jne	.LBB6_62
# %bb.61:                               #   in Loop: Header=BB6_57 Depth=1
	jmp	.LBB6_63
.LBB6_62:                               #   in Loop: Header=BB6_57 Depth=1
	jmp	.LBB6_68
.LBB6_63:                               #   in Loop: Header=BB6_57 Depth=1
	movsd	.LCPI6_2(%rip), %xmm0   # xmm0 = mem[0],zero
	cvtsi2sdq	-120(%rbp), %xmm1
	addsd	%xmm0, %xmm1
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	%rax, -120(%rbp)
	leaq	-48(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	callq	fb_StrLen@PLT
	movq	%rax, -232(%rbp)
	movq	-120(%rbp), %rax
	cmpq	-232(%rbp), %rax
	jle	.LBB6_65
# %bb.64:
	jmp	.LBB6_66
.LBB6_65:                               #   in Loop: Header=BB6_57 Depth=1
	jmp	.LBB6_57
.LBB6_66:
	jmp	.LBB6_69
.LBB6_67:                               #   in Loop: Header=BB6_57 Depth=1
	movsd	.LCPI6_41(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movq	-120(%rbp), %rcx
	shlq	$3, %rcx
	addsd	134226688(%rax,%rcx), %xmm0
	movq	-56(%rbp), %rax
	movq	-120(%rbp), %rcx
	shlq	$3, %rcx
	movsd	%xmm0, 134226688(%rax,%rcx)
	jmp	.LBB6_57
.LBB6_68:                               #   in Loop: Header=BB6_57 Depth=1
	movsd	.LCPI6_41(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movq	-120(%rbp), %rcx
	shlq	$3, %rcx
	addsd	134227016(%rax,%rcx), %xmm0
	movq	-56(%rbp), %rax
	movq	-120(%rbp), %rcx
	shlq	$3, %rcx
	movsd	%xmm0, 134227016(%rax,%rcx)
	jmp	.LBB6_57
.LBB6_69:
	xorl	%r8d, %r8d
	movsd	.LCPI6_42(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI6_41(%rip), %xmm1  # xmm1 = mem[0],zero
	movsd	.LCPI6_43(%rip), %xmm2  # xmm2 = mem[0],zero
	movsd	.LCPI6_44(%rip), %xmm3  # xmm3 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm1, 134227064(%rax)
	movq	-56(%rbp), %rax
	movsd	%xmm3, 134227072(%rax)
	movq	-56(%rbp), %rax
	movsd	%xmm2, 134227080(%rax)
	movq	-56(%rbp), %rax
	movsd	%xmm1, 134227088(%rax)
	movq	-56(%rbp), %rax
	movsd	%xmm0, 134227096(%rax)
	leaq	-48(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.71(%rip), %rdx
	movl	$12, %ecx
	callq	fb_StrAssign@PLT
	movq	$1, -120(%rbp)
.LBB6_70:                               # =>This Inner Loop Header: Depth=1
	xorl	%eax, %eax
	movsd	.LCPI6_40(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI6_15(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-120(%rbp), %rsi
	leaq	-48(%rbp), %rdi
	movl	$1, %ecx
	movq	%rcx, %rdx
	movl	%eax, -788(%rbp)        # 4-byte Spill
	movsd	%xmm0, -800(%rbp)       # 8-byte Spill
	movsd	%xmm1, -808(%rbp)       # 8-byte Spill
	movq	%rcx, -816(%rbp)        # 8-byte Spill
	callq	fb_StrMid@PLT
	movq	%rax, -240(%rbp)
	movq	-240(%rbp), %rdi
	movq	-816(%rbp), %rsi        # 8-byte Reload
	callq	fb_ASC@PLT
	movl	%eax, -244(%rbp)
	movl	-244(%rbp), %eax
	movl	%eax, %ecx
	cvtsi2sd	%rcx, %xmm0
	movq	-56(%rbp), %rcx
	movq	-120(%rbp), %rdx
	shlq	$3, %rdx
	movsd	%xmm0, 134227184(%rcx,%rdx)
	movq	-56(%rbp), %rcx
	movq	-120(%rbp), %rdx
	shlq	$3, %rdx
	movsd	134227112(%rcx,%rdx), %xmm0 # xmm0 = mem[0],zero
	movsd	-808(%rbp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	ucomisd	%xmm1, %xmm0
	seta	%r8b
	andb	$1, %r8b
	movzbl	%r8b, %eax
	movl	-788(%rbp), %r9d        # 4-byte Reload
	subl	%eax, %r9d
	movslq	%r9d, %rcx
	movq	-56(%rbp), %rdx
	movq	-120(%rbp), %rsi
	shlq	$3, %rsi
	movsd	-800(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	ucomisd	134227112(%rdx,%rsi), %xmm0
	seta	%r8b
	andb	$1, %r8b
	movzbl	%r8b, %eax
	movl	-788(%rbp), %r9d        # 4-byte Reload
	subl	%eax, %r9d
	movslq	%r9d, %rdx
	andq	%rdx, %rcx
	cmpq	$0, %rcx
	jne	.LBB6_72
# %bb.71:                               #   in Loop: Header=BB6_70 Depth=1
	jmp	.LBB6_73
.LBB6_72:                               #   in Loop: Header=BB6_70 Depth=1
	jmp	.LBB6_74
.LBB6_73:                               #   in Loop: Header=BB6_70 Depth=1
	jmp	.LBB6_74
.LBB6_74:                               #   in Loop: Header=BB6_70 Depth=1
	movsd	.LCPI6_2(%rip), %xmm0   # xmm0 = mem[0],zero
	cvtsi2sdq	-120(%rbp), %xmm1
	addsd	%xmm0, %xmm1
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	%rax, -120(%rbp)
	leaq	-48(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	callq	fb_StrLen@PLT
	movq	%rax, -256(%rbp)
	movq	-120(%rbp), %rax
	cmpq	-256(%rbp), %rax
	jle	.LBB6_76
# %bb.75:
	jmp	.LBB6_77
.LBB6_76:                               #   in Loop: Header=BB6_70 Depth=1
	jmp	.LBB6_70
.LBB6_77:
	jmp	.LBB6_78
.LBB6_78:
	movq	-56(%rbp), %rax
	movsd	(%rax), %xmm0           # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %edi
	callq	fb_GetMemAvail@PLT
	movq	%rax, -264(%rbp)
	movq	-264(%rbp), %rax
	shrq	$30, %rax
	movq	%rax, %rdi
	callq	fb_ULongintToStr@PLT
	xorl	%r8d, %r8d
	movq	%rax, -272(%rbp)
	leaq	-48(%rbp), %rax
	movq	-272(%rbp), %rcx
	movq	%rax, %rdi
	movq	$-1, %rax
	movq	%rax, %rsi
	movq	%rcx, %rdx
	movq	%rax, %rcx
	callq	fb_StrAssign@PLT
	movq	%rax, -280(%rbp)
	leaq	-48(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	callq	fb_StrLen@PLT
	movq	%rax, -288(%rbp)
	cmpq	$1, -288(%rbp)
	je	.LBB6_80
# %bb.79:
	jmp	.LBB6_81
.LBB6_80:
	jmp	.LBB6_85
.LBB6_81:
	leaq	-48(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	callq	fb_StrLen@PLT
	movq	%rax, -296(%rbp)
	cmpq	$2, -296(%rbp)
	je	.LBB6_83
# %bb.82:
	jmp	.LBB6_84
.LBB6_83:
	jmp	.LBB6_86
.LBB6_84:
	jmp	.LBB6_85
.LBB6_85:
	movsd	.LCPI6_45(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI6_46(%rip), %xmm1  # xmm1 = mem[0],zero
	leaq	-48(%rbp), %rdi
	movl	$1, %esi
	movsd	%xmm0, -824(%rbp)       # 8-byte Spill
	movsd	%xmm1, -832(%rbp)       # 8-byte Spill
	callq	fb_ASC@PLT
	movl	%eax, -300(%rbp)
	movl	-300(%rbp), %eax
	movl	%eax, %ecx
	cvtsi2sd	%rcx, %xmm0
	movq	-56(%rbp), %rcx
	movsd	%xmm0, 134227160(%rcx)
	movq	-56(%rbp), %rcx
	movsd	-832(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	%xmm0, 134227168(%rcx)
	movq	-56(%rbp), %rcx
	movsd	-824(%rbp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	movsd	%xmm1, 134227176(%rcx)
	jmp	.LBB6_91
.LBB6_86:
	xorl	%r8d, %r8d
	movsd	.LCPI6_45(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI6_46(%rip), %xmm1  # xmm1 = mem[0],zero
	leaq	-48(%rbp), %rax
	movl	$1, %ecx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	movq	%rcx, %rdx
	movl	%r8d, -836(%rbp)        # 4-byte Spill
	movsd	%xmm0, -848(%rbp)       # 8-byte Spill
	movsd	%xmm1, -856(%rbp)       # 8-byte Spill
	movq	%rax, -864(%rbp)        # 8-byte Spill
	movq	%rcx, -872(%rbp)        # 8-byte Spill
	callq	fb_StrMid@PLT
	movq	%rax, -312(%rbp)
	movq	-312(%rbp), %rdi
	movq	-872(%rbp), %rsi        # 8-byte Reload
	callq	fb_ASC@PLT
	movl	%eax, -316(%rbp)
	movl	-316(%rbp), %eax
	movl	%eax, %ecx
	cvtsi2sd	%rcx, %xmm0
	movq	-56(%rbp), %rcx
	movsd	%xmm0, 134227160(%rcx)
	movl	$2, %esi
	movq	-864(%rbp), %rdi        # 8-byte Reload
	movq	-872(%rbp), %rdx        # 8-byte Reload
	callq	fb_StrMid@PLT
	movq	%rax, -328(%rbp)
	movq	-328(%rbp), %rdi
	movq	-872(%rbp), %rsi        # 8-byte Reload
	callq	fb_ASC@PLT
	movl	%eax, -332(%rbp)
	movl	-332(%rbp), %eax
	movl	%eax, %ecx
	cvtsi2sd	%rcx, %xmm0
	movq	-56(%rbp), %rcx
	movsd	%xmm0, 134227168(%rcx)
	movq	-56(%rbp), %rcx
	movsd	-856(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	%xmm0, 134227176(%rcx)
	movq	-56(%rbp), %rcx
	movsd	-848(%rbp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	movsd	%xmm1, 134227184(%rcx)
	leaq	-48(%rbp), %rcx
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.71(%rip), %rdx
	movl	$12, %ecx
	movl	-836(%rbp), %r8d        # 4-byte Reload
	callq	fb_StrAssign@PLT
	movq	$1, -120(%rbp)
.LBB6_87:                               # =>This Inner Loop Header: Depth=1
	movsd	.LCPI6_2(%rip), %xmm0   # xmm0 = mem[0],zero
	movq	-120(%rbp), %rsi
	leaq	-48(%rbp), %rdi
	movl	$1, %eax
	movq	%rax, %rdx
	movsd	%xmm0, -880(%rbp)       # 8-byte Spill
	movq	%rax, -888(%rbp)        # 8-byte Spill
	callq	fb_StrMid@PLT
	movq	%rax, -344(%rbp)
	movq	-344(%rbp), %rdi
	movq	-888(%rbp), %rsi        # 8-byte Reload
	callq	fb_ASC@PLT
	movl	%eax, -348(%rbp)
	movl	-348(%rbp), %eax
	movl	%eax, %ecx
	cvtsi2sd	%rcx, %xmm0
	movq	-56(%rbp), %rcx
	movq	-120(%rbp), %rdx
	shlq	$3, %rdx
	movsd	%xmm0, 134227184(%rcx,%rdx)
	cvtsi2sdq	-120(%rbp), %xmm0
	movsd	-880(%rbp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	addsd	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	movq	%rcx, -120(%rbp)
	leaq	-48(%rbp), %rcx
	movq	%rcx, %rdi
	movq	$-1, %rsi
	callq	fb_StrLen@PLT
	movq	%rax, -360(%rbp)
	movq	-120(%rbp), %rax
	cmpq	-360(%rbp), %rax
	jle	.LBB6_89
# %bb.88:
	jmp	.LBB6_90
.LBB6_89:                               #   in Loop: Header=BB6_87 Depth=1
	jmp	.LBB6_87
.LBB6_90:
	movsd	.LCPI6_41(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 134227192(%rax)
	movq	-56(%rbp), %rax
	movsd	%xmm0, 134227224(%rax)
.LBB6_91:
	movsd	.LCPI6_4(%rip), %xmm0   # xmm0 = mem[0],zero
	movsd	.LCPI6_47(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm1, 134228392(%rax)
	movq	-56(%rbp), %rax
	movsd	%xmm0, 134244040(%rax)
	movq	-56(%rbp), %rax
	movsd	%xmm0, 134244048(%rax)
	leaq	-48(%rbp), %rdi
	callq	fb_StrDelete@PLT
# %bb.92:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB6_94
# %bb.93:                               # %SP_return
	addq	$896, %rsp              # imm = 0x380
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB6_94:                               # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end6:
	.size	_ZN8MEMORY_TC1Ev, .Lfunc_end6-_ZN8MEMORY_TC1Ev
	.cfi_endproc
                                        # -- End function
	.globl	_ZN7CPU6510C1EP8MEMORY_T # -- Begin function _ZN7CPU6510C1EP8MEMORY_T
	.p2align	4, 0x90
	.type	_ZN7CPU6510C1EP8MEMORY_T,@function
_ZN7CPU6510C1EP8MEMORY_T:               # @_ZN7CPU6510C1EP8MEMORY_T
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
# %bb.1:
	leaq	label$5073(%rip), %rax
	xorl	%ecx, %ecx
	movq	-8(%rbp), %rdx
	movq	%rdx, %rdi
	movl	%ecx, %esi
	movl	$1, %edx
	movq	%rdx, -40(%rbp)         # 8-byte Spill
	movq	%rax, -48(%rbp)         # 8-byte Spill
	movl	%ecx, -52(%rbp)         # 4-byte Spill
	callq	memset@PLT
	movq	-8(%rbp), %rax
	addq	$1, %rax
	movq	%rax, %rdi
	movl	-52(%rbp), %esi         # 4-byte Reload
	movq	-40(%rbp), %rdx         # 8-byte Reload
	callq	memset@PLT
	movq	-8(%rbp), %rax
	addq	$2, %rax
	movq	%rax, %rdi
	movl	-52(%rbp), %esi         # 4-byte Reload
	movq	-40(%rbp), %rdx         # 8-byte Reload
	callq	memset@PLT
	movq	-8(%rbp), %rax
	addq	$3, %rax
	movq	%rax, %rdi
	movl	-52(%rbp), %esi         # 4-byte Reload
	movq	-40(%rbp), %rdx         # 8-byte Reload
	callq	memset@PLT
	movq	-8(%rbp), %rax
	addq	$4, %rax
	movq	%rax, %rdi
	movl	-52(%rbp), %esi         # 4-byte Reload
	movl	$2, %eax
	movq	%rax, %rdx
	movq	%rax, -64(%rbp)         # 8-byte Spill
	callq	memset@PLT
	movq	-8(%rbp), %rax
	addq	$6, %rax
	movq	%rax, %rdi
	movl	-52(%rbp), %esi         # 4-byte Reload
	movq	-64(%rbp), %rdx         # 8-byte Reload
	callq	memset@PLT
	movq	-8(%rbp), %rax
	addq	$8, %rax
	movq	%rax, %rdi
	movl	-52(%rbp), %esi         # 4-byte Reload
	movl	$8, %edx
	callq	memset@PLT
	movq	-8(%rbp), %rax
	addq	$16, %rax
	movq	%rax, %rdi
	movl	-52(%rbp), %esi         # 4-byte Reload
	movl	$56, %edx
	callq	memset@PLT
	movq	-8(%rbp), %rax
	addq	$72, %rax
	movq	%rax, %rdi
	movl	-52(%rbp), %esi         # 4-byte Reload
	movl	$14336, %edx            # imm = 0x3800
	callq	memset@PLT
	movq	-8(%rbp), %rax
	addq	$14408, %rax            # imm = 0x3848
	movq	%rax, %rdi
	movl	-52(%rbp), %esi         # 4-byte Reload
	movl	$312, %edx              # imm = 0x138
	callq	memset@PLT
	movq	-16(%rbp), %rax
	movq	-8(%rbp), %rdx
	movq	%rax, 8(%rdx)
	movq	$0, -24(%rbp)
	movq	-48(%rbp), %rdi         # 8-byte Reload
	callq	fb_DataRestore@PLT
	movq	$0, -24(%rbp)
.LBB7_2:                                # =>This Inner Loop Header: Depth=1
	movq	-8(%rbp), %rax
	imulq	$56, -24(%rbp), %rcx
	addq	%rcx, %rax
	addq	$72, %rax
	movq	%rax, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, %rdi
	callq	fb_DataReadULongint@PLT
	xorl	%edx, %edx
	movq	-32(%rbp), %rax
	addq	$8, %rax
	movq	%rax, %rdi
	movl	$4, %esi
	callq	fb_DataReadStr@PLT
	movq	-32(%rbp), %rax
	addq	$16, %rax
	movq	%rax, %rdi
	callq	fb_DataReadULongint@PLT
	movq	-32(%rbp), %rax
	addq	$24, %rax
	movq	%rax, %rdi
	callq	fb_DataReadULongint@PLT
	movq	-32(%rbp), %rax
	addq	$32, %rax
	movq	%rax, %rdi
	callq	fb_DataReadULongint@PLT
	movq	-32(%rbp), %rax
	addq	$48, %rax
	movq	%rax, %rdi
	callq	fb_DataReadLongint@PLT
# %bb.3:                                #   in Loop: Header=BB7_2 Depth=1
	movq	-24(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -24(%rbp)
# %bb.4:                                #   in Loop: Header=BB7_2 Depth=1
	cmpq	$255, -24(%rbp)
	jg	.LBB7_6
# %bb.5:                                #   in Loop: Header=BB7_2 Depth=1
	jmp	.LBB7_2
.LBB7_6:
	jmp	.LBB7_7
.LBB7_7:
	leaq	label$5079(%rip), %rax
	movq	%rax, %rdi
	callq	fb_DataRestore@PLT
	movq	$0, -24(%rbp)
.LBB7_8:                                # =>This Inner Loop Header: Depth=1
	xorl	%edx, %edx
	movq	-8(%rbp), %rax
	imulq	$24, -24(%rbp), %rcx
	addq	%rcx, %rax
	addq	$14408, %rax            # imm = 0x3848
	movq	%rax, %rdi
	movq	$-1, %rsi
	callq	fb_DataReadStr@PLT
# %bb.9:                                #   in Loop: Header=BB7_8 Depth=1
	movq	-24(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -24(%rbp)
# %bb.10:                               #   in Loop: Header=BB7_8 Depth=1
	cmpq	$12, -24(%rbp)
	jg	.LBB7_12
# %bb.11:                               #   in Loop: Header=BB7_8 Depth=1
	jmp	.LBB7_8
.LBB7_12:
	jmp	.LBB7_13
.LBB7_13:
	movq	-8(%rbp), %rax
	movb	$1, 7(%rax)
	movq	-8(%rbp), %rax
	movw	$-798, 4(%rax)          # imm = 0xFCE2
# %bb.14:
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end7:
	.size	_ZN7CPU6510C1EP8MEMORY_T, .Lfunc_end7-_ZN7CPU6510C1EP8MEMORY_T
	.cfi_endproc
                                        # -- End function
	.globl	_ZN5C64_TD1Ev           # -- Begin function _ZN5C64_TD1Ev
	.p2align	4, 0x90
	.type	_ZN5C64_TD1Ev,@function
_ZN5C64_TD1Ev:                          # @_ZN5C64_TD1Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	cmpq	$0, 8(%rax)
	jne	.LBB8_3
# %bb.2:
	jmp	.LBB8_4
.LBB8_3:
	movq	-8(%rbp), %rax
	movq	8(%rax), %rdi
	callq	_ZN7CPU6510D1Ev
	movq	-8(%rbp), %rax
	movq	8(%rax), %rdi
	callq	free@PLT
.LBB8_4:
	movq	-8(%rbp), %rax
	cmpq	$0, (%rax)
	jne	.LBB8_6
# %bb.5:
	jmp	.LBB8_7
.LBB8_6:
	movq	-8(%rbp), %rax
	movq	(%rax), %rdi
	callq	_ZN8MEMORY_TD1Ev
	movq	-8(%rbp), %rax
	movq	(%rax), %rdi
	callq	free@PLT
.LBB8_7:
	movq	BGIMAGE$(%rip), %rdi
	callq	fb_GfxImageDestroy@PLT
	movq	FGIMAGE$(%rip), %rdi
	callq	fb_GfxImageDestroy@PLT
	movq	RASTER$(%rip), %rdi
	callq	fb_GfxImageDestroy@PLT
	movq	RENDER$(%rip), %rdi
	callq	fb_GfxImageDestroy@PLT
	movl	$1000, %edi             # imm = 0x3E8
	callq	fb_Sleep@PLT
# %bb.8:
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end8:
	.size	_ZN5C64_TD1Ev, .Lfunc_end8-_ZN5C64_TD1Ev
	.cfi_endproc
                                        # -- End function
	.globl	_ZN7CPU6510D1Ev         # -- Begin function _ZN7CPU6510D1Ev
	.p2align	4, 0x90
	.type	_ZN7CPU6510D1Ev,@function
_ZN7CPU6510D1Ev:                        # @_ZN7CPU6510D1Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -88(%rbp)
# %bb.1:
	jmp	.LBB9_2
.LBB9_2:
	movq	-88(%rbp), %rax
	addq	$14408, %rax            # imm = 0x3848
	movq	%rax, -80(%rbp)
	movq	-88(%rbp), %rax
	addq	$14408, %rax            # imm = 0x3848
	movq	%rax, -72(%rbp)
	movq	$312, -64(%rbp)         # imm = 0x138
	movq	$24, -56(%rbp)
	movq	$1, -48(%rbp)
	movq	$49, -40(%rbp)
	movq	$13, -32(%rbp)
	movq	$0, -24(%rbp)
	movq	$12, -16(%rbp)
	leaq	-80(%rbp), %rdi
	callq	fb_ArrayDestructStr@PLT
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB9_4
# %bb.3:                                # %SP_return
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB9_4:                                # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end9:
	.size	_ZN7CPU6510D1Ev, .Lfunc_end9-_ZN7CPU6510D1Ev
	.cfi_endproc
                                        # -- End function
	.globl	_ZN8MEMORY_TD1Ev        # -- Begin function _ZN8MEMORY_TD1Ev
	.p2align	4, 0x90
	.type	_ZN8MEMORY_TD1Ev,@function
_ZN8MEMORY_TD1Ev:                       # @_ZN8MEMORY_TD1Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
# %bb.1:
	jmp	.LBB10_2
.LBB10_2:
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end10:
	.size	_ZN8MEMORY_TD1Ev, .Lfunc_end10-_ZN8MEMORY_TD1Ev
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function _ZN8MEMORY_T6POKE64Edd
.LCPI11_0:
	.quad	4677973238003793920     # double 56319
.LCPI11_1:
	.quad	4677832637954392064     # double 55296
.LCPI11_2:
	.quad	-4545539398900383744    # double -55296
.LCPI11_3:
	.quad	4641205706609917952     # double 199
.LCPI11_4:
	.quad	4676988762780073984     # double 49156
.LCPI11_5:
	.quad	4676988625341120512     # double 49155
.LCPI11_6:
	.quad	4676988487902167040     # double 49154
.LCPI11_7:
	.quad	4607182418800017408     # double 1
.LCPI11_8:
	.quad	4640185359819341824     # double 170
.LCPI11_9:
	.quad	4611686018427387904     # double 2
.LCPI11_10:
	.quad	4613937818241073152     # double 3
.LCPI11_11:
	.quad	4616189618054758400     # double 4
.LCPI11_12:
	.quad	4617315517961601024     # double 5
.LCPI11_13:
	.quad	4618441417868443648     # double 6
.LCPI11_14:
	.quad	4635681760191971328     # double 85
.LCPI11_15:
	.quad	4619567317775286272     # double 7
.LCPI11_16:
	.quad	4620693217682128896     # double 8
.LCPI11_17:
	.quad	4621256167635550208     # double 9
.LCPI11_18:
	.quad	4643176031446892544     # double 255
.LCPI11_19:
	.quad	4621819117588971520     # double 10
.LCPI11_20:
	.quad	4622382067542392832     # double 11
.LCPI11_21:
	.quad	4622945017495814144     # double 12
.LCPI11_22:
	.quad	4623507967449235456     # double 13
.LCPI11_23:
	.quad	4624070917402656768     # double 14
.LCPI11_24:
	.quad	4624633867356078080     # double 15
.LCPI11_25:
	.quad	4625196817309499392     # double 16
.LCPI11_26:
	.quad	4625478292286210048     # double 17
.LCPI11_27:
	.quad	4626322717216342016     # double 20
.LCPI11_28:
	.quad	4625759767262920704     # double 18
.LCPI11_29:
	.quad	4629700416936869888     # double 32
.LCPI11_30:
	.quad	4626041242239631360     # double 19
.LCPI11_31:
	.quad	4631530004285489152     # double 45
.LCPI11_32:
	.quad	4633218854145753088     # double 57
.LCPI11_33:
	.quad	4626604192193052672     # double 21
.LCPI11_34:
	.quad	4634555860285128704     # double 69
.LCPI11_35:
	.quad	4626885667169763328     # double 22
.LCPI11_36:
	.quad	4635400285215260672     # double 81
.LCPI11_37:
	.quad	4627167142146473984     # double 23
.LCPI11_38:
	.quad	4636526185122103296     # double 97
.LCPI11_39:
	.quad	4627448617123184640     # double 24
.LCPI11_40:
	.quad	4637652085028945920     # double 113
.LCPI11_41:
	.quad	4627730092099895296     # double 25
.LCPI11_42:
	.quad	4638777984935788544     # double 130
.LCPI11_43:
	.quad	4628011567076605952     # double 26
.LCPI11_44:
	.quad	4639340934889209856     # double 146
.LCPI11_45:
	.quad	4628293042053316608     # double 27
.LCPI11_46:
	.quad	4639903884842631168     # double 162
.LCPI11_47:
	.quad	4628574517030027264     # double 28
.LCPI11_48:
	.quad	4640607572284407808     # double 182
.LCPI11_49:
	.quad	4628855992006737920     # double 29
.LCPI11_50:
	.quad	4641311259726184448     # double 202
.LCPI11_51:
	.quad	4629137466983448576     # double 30
.LCPI11_52:
	.quad	4642190869028405248     # double 227
.LCPI11_53:
	.quad	4629418941960159232     # double 31
.LCPI11_54:
	.quad	4629841154425225216     # double 33
.LCPI11_55:
	.quad	4634274385308418048     # double 65
.LCPI11_56:
	.quad	4629981891913580544     # double 34
.LCPI11_57:
	.quad	4638496509959077888     # double 125
.LCPI11_58:
	.quad	4630122629401935872     # double 35
.LCPI11_59:
	.quad	4640889047261118464     # double 190
.LCPI11_60:
	.quad	4630263366890291200     # double 36
.LCPI11_61:
	.quad	4630404104378646528     # double 37
.LCPI11_62:
	.quad	4630544841867001856     # double 38
.LCPI11_63:
	.quad	4630685579355357184     # double 39
.LCPI11_64:
	.quad	4630826316843712512     # double 40
.LCPI11_65:
	.quad	4630967054332067840     # double 41
.LCPI11_66:
	.quad	4631107791820423168     # double 42
.LCPI11_67:
	.quad	4631248529308778496     # double 43
.LCPI11_68:
	.quad	4631389266797133824     # double 44
.LCPI11_69:
	.quad	4631670741773844480     # double 46
.LCPI11_70:
	.quad	4631811479262199808     # double 47
.LCPI11_71:
	.quad	4631952216750555136     # double 48
.LCPI11_72:
	.quad	4632092954238910464     # double 49
.LCPI11_73:
	.quad	4632233691727265792     # double 50
.LCPI11_74:
	.quad	4632374429215621120     # double 51
.LCPI11_75:
	.quad	4632515166703976448     # double 52
.LCPI11_76:
	.quad	4632655904192331776     # double 53
.LCPI11_77:
	.quad	4632796641680687104     # double 54
.LCPI11_78:
	.quad	4632937379169042432     # double 55
.LCPI11_79:
	.quad	4633078116657397760     # double 56
.LCPI11_80:
	.quad	4639763147354275840     # double 158
.LCPI11_81:
	.quad	4633359591634108416     # double 58
.LCPI11_82:
	.quad	4633500329122463744     # double 59
.LCPI11_83:
	.quad	4642050131540049920     # double 223
.LCPI11_84:
	.quad	4633641066610819072     # double 60
.LCPI11_85:
	.quad	4633781804099174400     # double 61
.LCPI11_86:
	.quad	4633922541587529728     # double 62
.LCPI11_87:
	.quad	4634063279075885056     # double 63
.LCPI11_88:
	.quad	4634204016564240384     # double 64
.LCPI11_89:
	.quad	4634344754052595712     # double 66
.LCPI11_90:
	.quad	4634415122796773376     # double 67
.LCPI11_91:
	.quad	4634485491540951040     # double 68
.LCPI11_92:
	.quad	4634626229029306368     # double 70
.LCPI11_93:
	.quad	4634696597773484032     # double 71
.LCPI11_94:
	.quad	4634766966517661696     # double 72
.LCPI11_95:
	.quad	4634837335261839360     # double 73
.LCPI11_96:
	.quad	4634907704006017024     # double 74
.LCPI11_97:
	.quad	4634978072750194688     # double 75
.LCPI11_98:
	.quad	4635048441494372352     # double 76
.LCPI11_99:
	.quad	4635118810238550016     # double 77
.LCPI11_100:
	.quad	4635189178982727680     # double 78
.LCPI11_101:
	.quad	4635259547726905344     # double 79
.LCPI11_102:
	.quad	4635329916471083008     # double 80
.LCPI11_103:
	.quad	4641170522237829120     # double 198
.LCPI11_104:
	.quad	4635470653959438336     # double 82
.LCPI11_105:
	.quad	4641909394051694592     # double 219
.LCPI11_106:
	.quad	4635541022703616000     # double 83
.LCPI11_107:
	.quad	4642472344005115904     # double 235
.LCPI11_108:
	.quad	4635611391447793664     # double 84
.LCPI11_109:
	.quad	4635752128936148992     # double 86
.LCPI11_110:
	.quad	4635822497680326656     # double 87
.LCPI11_111:
	.quad	4635892866424504320     # double 88
.LCPI11_112:
	.quad	4635963235168681984     # double 89
.LCPI11_113:
	.quad	4636033603912859648     # double 90
.LCPI11_114:
	.quad	4636103972657037312     # double 91
.LCPI11_115:
	.quad	4636174341401214976     # double 92
.LCPI11_116:
	.quad	4636244710145392640     # double 93
.LCPI11_117:
	.quad	4636315078889570304     # double 94
.LCPI11_118:
	.quad	4636385447633747968     # double 95
.LCPI11_119:
	.quad	4636455816377925632     # double 96
.LCPI11_120:
	.quad	4636596553866280960     # double 98
.LCPI11_121:
	.quad	4636666922610458624     # double 99
.LCPI11_122:
	.quad	4636737291354636288     # double 100
.LCPI11_123:
	.quad	4636807660098813952     # double 101
.LCPI11_124:
	.quad	4636878028842991616     # double 102
.LCPI11_125:
	.quad	4636948397587169280     # double 103
.LCPI11_126:
	.quad	4637018766331346944     # double 104
.LCPI11_127:
	.quad	4637089135075524608     # double 105
.LCPI11_128:
	.quad	4637159503819702272     # double 106
.LCPI11_129:
	.quad	4637229872563879936     # double 107
.LCPI11_130:
	.quad	4637300241308057600     # double 108
.LCPI11_131:
	.quad	4637370610052235264     # double 109
.LCPI11_132:
	.quad	4637440978796412928     # double 110
.LCPI11_133:
	.quad	4637511347540590592     # double 111
.LCPI11_134:
	.quad	4637581716284768256     # double 112
.LCPI11_135:
	.quad	4637722453773123584     # double 114
.LCPI11_136:
	.quad	4637792822517301248     # double 115
.LCPI11_137:
	.quad	4637863191261478912     # double 116
.LCPI11_138:
	.quad	4637933560005656576     # double 117
.LCPI11_139:
	.quad	4638003928749834240     # double 118
.LCPI11_140:
	.quad	4638074297494011904     # double 119
.LCPI11_141:
	.quad	4638144666238189568     # double 120
.LCPI11_142:
	.quad	4638215034982367232     # double 121
.LCPI11_143:
	.quad	4638285403726544896     # double 122
.LCPI11_144:
	.quad	4638355772470722560     # double 123
.LCPI11_145:
	.quad	4638426141214900224     # double 124
.LCPI11_146:
	.quad	4638566878703255552     # double 126
.LCPI11_147:
	.quad	4638637247447433216     # double 127
.LCPI11_148:
	.quad	4638707616191610880     # double 128
.LCPI11_149:
	.quad	4638742800563699712     # double 129
.LCPI11_150:
	.quad	4638813169307877376     # double 131
.LCPI11_151:
	.quad	4638848353679966208     # double 132
.LCPI11_152:
	.quad	4638883538052055040     # double 133
.LCPI11_153:
	.quad	4638918722424143872     # double 134
.LCPI11_154:
	.quad	4638953906796232704     # double 135
.LCPI11_155:
	.quad	4638989091168321536     # double 136
.LCPI11_156:
	.quad	4639024275540410368     # double 137
.LCPI11_157:
	.quad	4639059459912499200     # double 138
.LCPI11_158:
	.quad	4639094644284588032     # double 139
.LCPI11_159:
	.quad	4639129828656676864     # double 140
.LCPI11_160:
	.quad	4639165013028765696     # double 141
.LCPI11_161:
	.quad	4639200197400854528     # double 142
.LCPI11_162:
	.quad	4639235381772943360     # double 143
.LCPI11_163:
	.quad	4639270566145032192     # double 144
.LCPI11_164:
	.quad	4639305750517121024     # double 145
.LCPI11_165:
	.quad	4639376119261298688     # double 147
.LCPI11_166:
	.quad	4639411303633387520     # double 148
.LCPI11_167:
	.quad	4639446488005476352     # double 149
.LCPI11_168:
	.quad	4639481672377565184     # double 150
.LCPI11_169:
	.quad	4639516856749654016     # double 151
.LCPI11_170:
	.quad	4639552041121742848     # double 152
.LCPI11_171:
	.quad	4639587225493831680     # double 153
.LCPI11_172:
	.quad	4639622409865920512     # double 154
.LCPI11_173:
	.quad	4639657594238009344     # double 155
.LCPI11_174:
	.quad	4639692778610098176     # double 156
.LCPI11_175:
	.quad	4639727962982187008     # double 157
.LCPI11_176:
	.quad	4639798331726364672     # double 159
.LCPI11_177:
	.quad	4639833516098453504     # double 160
.LCPI11_178:
	.quad	4639868700470542336     # double 161
.LCPI11_179:
	.quad	4639939069214720000     # double 163
.LCPI11_180:
	.quad	4639974253586808832     # double 164
.LCPI11_181:
	.quad	4640009437958897664     # double 165
.LCPI11_182:
	.quad	4640044622330986496     # double 166
.LCPI11_183:
	.quad	4640079806703075328     # double 167
.LCPI11_184:
	.quad	4640114991075164160     # double 168
.LCPI11_185:
	.quad	4640150175447252992     # double 169
.LCPI11_186:
	.quad	4640220544191430656     # double 171
.LCPI11_187:
	.quad	4640255728563519488     # double 172
.LCPI11_188:
	.quad	4640290912935608320     # double 173
.LCPI11_189:
	.quad	4640326097307697152     # double 174
.LCPI11_190:
	.quad	4640361281679785984     # double 175
.LCPI11_191:
	.quad	4640396466051874816     # double 176
.LCPI11_192:
	.quad	4640431650423963648     # double 177
.LCPI11_193:
	.quad	4640466834796052480     # double 178
.LCPI11_194:
	.quad	4640502019168141312     # double 179
.LCPI11_195:
	.quad	4640537203540230144     # double 180
.LCPI11_196:
	.quad	4640572387912318976     # double 181
.LCPI11_197:
	.quad	4640642756656496640     # double 183
.LCPI11_198:
	.quad	4640677941028585472     # double 184
.LCPI11_199:
	.quad	4640713125400674304     # double 185
.LCPI11_200:
	.quad	4640748309772763136     # double 186
.LCPI11_201:
	.quad	4640783494144851968     # double 187
.LCPI11_202:
	.quad	4640818678516940800     # double 188
.LCPI11_203:
	.quad	4640853862889029632     # double 189
.LCPI11_204:
	.quad	4640924231633207296     # double 191
.LCPI11_205:
	.quad	4640959416005296128     # double 192
.LCPI11_206:
	.quad	4640994600377384960     # double 193
.LCPI11_207:
	.quad	4641029784749473792     # double 194
.LCPI11_208:
	.quad	4641064969121562624     # double 195
.LCPI11_209:
	.quad	4641100153493651456     # double 196
.LCPI11_210:
	.quad	4641135337865740288     # double 197
.LCPI11_211:
	.quad	4641240890982006784     # double 200
.LCPI11_212:
	.quad	4641276075354095616     # double 201
.LCPI11_213:
	.quad	4641346444098273280     # double 203
.LCPI11_214:
	.quad	4641381628470362112     # double 204
.LCPI11_215:
	.quad	4641416812842450944     # double 205
.LCPI11_216:
	.quad	4641451997214539776     # double 206
.LCPI11_217:
	.quad	4641487181586628608     # double 207
.LCPI11_218:
	.quad	4641522365958717440     # double 208
.LCPI11_219:
	.quad	4641557550330806272     # double 209
.LCPI11_220:
	.quad	4641592734702895104     # double 210
.LCPI11_221:
	.quad	4641627919074983936     # double 211
.LCPI11_222:
	.quad	4641663103447072768     # double 212
.LCPI11_223:
	.quad	4641698287819161600     # double 213
.LCPI11_224:
	.quad	4641733472191250432     # double 214
.LCPI11_225:
	.quad	4641768656563339264     # double 215
.LCPI11_226:
	.quad	4641803840935428096     # double 216
.LCPI11_227:
	.quad	4641839025307516928     # double 217
.LCPI11_228:
	.quad	4641874209679605760     # double 218
.LCPI11_229:
	.quad	4641944578423783424     # double 220
.LCPI11_230:
	.quad	4641979762795872256     # double 221
.LCPI11_231:
	.quad	4642014947167961088     # double 222
.LCPI11_232:
	.quad	4642085315912138752     # double 224
.LCPI11_233:
	.quad	4642120500284227584     # double 225
.LCPI11_234:
	.quad	4642155684656316416     # double 226
.LCPI11_235:
	.quad	4642226053400494080     # double 228
.LCPI11_236:
	.quad	4642261237772582912     # double 229
.LCPI11_237:
	.quad	4642296422144671744     # double 230
.LCPI11_238:
	.quad	4642331606516760576     # double 231
.LCPI11_239:
	.quad	4642366790888849408     # double 232
.LCPI11_240:
	.quad	4642401975260938240     # double 233
.LCPI11_241:
	.quad	4642437159633027072     # double 234
.LCPI11_242:
	.quad	4642507528377204736     # double 236
.LCPI11_243:
	.quad	4642542712749293568     # double 237
.LCPI11_244:
	.quad	4642577897121382400     # double 238
.LCPI11_245:
	.quad	4642613081493471232     # double 239
.LCPI11_246:
	.quad	4642648265865560064     # double 240
.LCPI11_247:
	.quad	4642683450237648896     # double 241
.LCPI11_248:
	.quad	4642718634609737728     # double 242
.LCPI11_249:
	.quad	4642753818981826560     # double 243
.LCPI11_250:
	.quad	4642789003353915392     # double 244
.LCPI11_251:
	.quad	4642824187726004224     # double 245
.LCPI11_252:
	.quad	4642859372098093056     # double 246
.LCPI11_253:
	.quad	4642894556470181888     # double 247
.LCPI11_254:
	.quad	4642929740842270720     # double 248
.LCPI11_255:
	.quad	4642964925214359552     # double 249
.LCPI11_256:
	.quad	4643000109586448384     # double 250
.LCPI11_257:
	.quad	4643035293958537216     # double 251
.LCPI11_258:
	.quad	4643070478330626048     # double 252
.LCPI11_259:
	.quad	4643105662702714880     # double 253
.LCPI11_260:
	.quad	4643140847074803712     # double 254
.LCPI11_261:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
.LCPI11_262:
	.quad	4676989312535887872     # double 49160
.LCPI11_263:
	.quad	4676989175096934400     # double 49159
.LCPI11_264:
	.quad	4676989037657980928     # double 49158
.LCPI11_265:
	.quad	4676988213024260096     # double 49152
.LCPI11_266:
	.quad	4676988350463213568     # double 49153
.LCPI11_267:
	.quad	4676988900219027456     # double 49157
.LCPI11_268:
	.quad	4676989449974841344     # double 49161
.LCPI11_269:
	.quad	4676989587413794816     # double 49162
.LCPI11_270:
	.quad	4676990412047515648     # double 49168
.LCPI11_271:
	.quad	4676991236681236480     # double 49174
.LCPI11_272:
	.quad	4676992061314957312     # double 49180
.LCPI11_273:
	.quad	4676992885948678144     # double 49186
.LCPI11_274:
	.quad	4676993710582398976     # double 49192
.LCPI11_275:
	.quad	4676994535216119808     # double 49198
.LCPI11_276:
	.quad	4676995359849840640     # double 49204
.LCPI11_277:
	.quad	4676996184483561472     # double 49210
.LCPI11_278:
	.quad	4676997009117282304     # double 49216
.LCPI11_279:
	.quad	4676997971189956608     # double 49223
.LCPI11_280:
	.quad	4676998520945770496     # double 49227
.LCPI11_281:
	.quad	4676999483018444800     # double 49234
.LCPI11_282:
	.quad	4677000307652165632     # double 49240
.LCPI11_283:
	.quad	4677001132285886464     # double 49246
.LCPI11_284:
	.quad	4677001956919607296     # double 49252
.LCPI11_285:
	.quad	4677002781553328128     # double 49258
.LCPI11_286:
	.quad	4677003606187048960     # double 49264
.LCPI11_287:
	.quad	4677004430820769792     # double 49270
.LCPI11_288:
	.quad	4677005255454490624     # double 49276
.LCPI11_289:
	.quad	4677006080088211456     # double 49282
.LCPI11_290:
	.quad	4677006904721932288     # double 49288
.LCPI11_291:
	.quad	4677007729355653120     # double 49294
.LCPI11_292:
	.quad	4677008553989373952     # double 49300
.LCPI11_293:
	.quad	4677009378623094784     # double 49306
.LCPI11_294:
	.quad	4677010203256815616     # double 49312
.LCPI11_295:
	.quad	4677010340695769088     # double 49313
.LCPI11_296:
	.quad	4677010478134722560     # double 49314
.LCPI11_299:
	.quad	4677010615573676032     # double 49315
.LCPI11_300:
	.quad	4677011577646350336     # double 49322
.LCPI11_301:
	.quad	4677011715085303808     # double 49323
.LCPI11_302:
	.quad	4677019823983558656     # double 49382
.LCPI11_303:
	.quad	4677020511178326016     # double 49387
.LCPI11_304:
	.quad	4677020648617279488     # double 49388
.LCPI11_305:
	.quad	4677020786056232960     # double 49389
.LCPI11_306:
	.quad	-4598175219545276416    # double -16
.LCPI11_307:
	.quad	-4593671619917905920    # double -32
.LCPI11_308:
	.quad	-4591419820104220672    # double -48
.LCPI11_309:
	.quad	-4589168020290535424    # double -64
.LCPI11_310:
	.quad	4677020923495186432     # double 49390
.LCPI11_311:
	.quad	4677021060934139904     # double 49391
.LCPI11_312:
	.quad	4677021198373093376     # double 49392
.LCPI11_313:
	.quad	4652218415073722368     # double 1024
.LCPI11_314:
	.quad	4677021335812046848     # double 49393
.LCPI11_315:
	.quad	4677021473251000320     # double 49394
.LCPI11_316:
	.quad	4677021610689953792     # double 49395
.LCPI11_317:
	.quad	4677021748128907264     # double 49396
.LCPI11_318:
	.quad	4677021885567860736     # double 49397
.LCPI11_319:
	.quad	4677022023006814208     # double 49398
.LCPI11_320:
	.quad	4677022160445767680     # double 49399
.LCPI11_321:
	.quad	4643967679818891264     # double 299
.LCPI11_322:
	.quad	4677022297884721152     # double 49400
.LCPI11_323:
	.quad	4677022435323674624     # double 49401
.LCPI11_324:
	.quad	4677022572762628096     # double 49402
.LCPI11_325:
	.quad	4677022710201581568     # double 49403
.LCPI11_326:
	.quad	4677022847640535040     # double 49404
.LCPI11_327:
	.quad	4677022985079488512     # double 49405
.LCPI11_328:
	.quad	4677023122518441984     # double 49406
.LCPI11_329:
	.quad	4677023259957395456     # double 49407
.LCPI11_330:
	.quad	4677023397396348928     # double 49408
.LCPI11_331:
	.quad	4677023534835302400     # double 49409
.LCPI11_332:
	.quad	4677023672274255872     # double 49410
.LCPI11_333:
	.quad	4677023809713209344     # double 49411
.LCPI11_334:
	.quad	4677023947152162816     # double 49412
.LCPI11_335:
	.quad	4677024084591116288     # double 49413
.LCPI11_337:
	.quad	4645568568748933120     # double 390
.LCPI11_338:
	.quad	4650265682422792192     # double 802
.LCPI11_343:
	.quad	4562254508917369340     # double 0.001
.LCPI11_344:
	.quad	4576918229304087675     # double 0.01
.LCPI11_345:
	.quad	4591870180066957722     # double 0.10000000000000001
.LCPI11_348:
	.quad	4677024222030069760     # double 49414
.LCPI11_349:
	.quad	4677024359469023232     # double 49415
.LCPI11_350:
	.quad	4677024496907976704     # double 49416
.LCPI11_351:
	.quad	4670232813583204352     # double 16384
.LCPI11_352:
	.quad	4674626462047797248     # double 32368
.LCPI11_353:
	.quad	4693876711626899456     # double 655360
.LCPI11_354:
	.quad	4694439652990386176     # double 720895
.LCPI11_355:
	.quad	4677024634346930176     # double 49417
.LCPI11_356:
	.quad	4677025596419604480     # double 49424
.LCPI11_357:
	.quad	4677026558492278784     # double 49431
.LCPI11_358:
	.quad	4677027520564953088     # double 49438
.LCPI11_359:
	.quad	4677028482637627392     # double 49445
.LCPI11_360:
	.quad	4677029444710301696     # double 49452
.LCPI11_361:
	.quad	4677030406782976000     # double 49459
.LCPI11_362:
	.quad	4677031781172510720     # double 49469
.LCPI11_363:
	.quad	4677033155562045440     # double 49479
.LCPI11_364:
	.quad	4677034529951580160     # double 49489
.LCPI11_365:
	.quad	4677035904341114880     # double 49499
.LCPI11_366:
	.quad	4677037278730649600     # double 49509
.LCPI11_367:
	.quad	4677038653120184320     # double 49519
.LCPI11_368:
	.quad	4677038790559137792     # double 49520
.LCPI11_369:
	.quad	4677038927998091264     # double 49521
.LCPI11_370:
	.quad	4677039065437044736     # double 49522
.LCPI11_371:
	.quad	4677039202875998208     # double 49523
.LCPI11_372:
	.quad	4677039340314951680     # double 49524
.LCPI11_373:
	.quad	4677039477753905152     # double 49525
.LCPI11_374:
	.quad	4677039615192858624     # double 49526
.LCPI11_375:
	.quad	4677039752631812096     # double 49527
.LCPI11_376:
	.quad	4677039890070765568     # double 49528
.LCPI11_377:
	.quad	4677040027509719040     # double 49529
.LCPI11_378:
	.quad	4677040164948672512     # double 49530
.LCPI11_379:
	.quad	4677040302387625984     # double 49531
.LCPI11_380:
	.quad	4677040439826579456     # double 49532
.LCPI11_381:
	.quad	4677040577265532928     # double 49533
.LCPI11_382:
	.quad	4677040714704486400     # double 49534
.LCPI11_383:
	.quad	4677040852143439872     # double 49535
.LCPI11_384:
	.quad	4677040989582393344     # double 49536
.LCPI11_385:
	.quad	4678415516556066816     # double 59537
.LCPI11_386:
	.quad	4678415653995020288     # double 59538
.LCPI11_387:
	.quad	4678415791433973760     # double 59539
.LCPI11_388:
	.quad	4678418677651996672     # double 59560
.LCPI11_389:
	.quad	4678418815090950144     # double 59561
.LCPI11_390:
	.quad	4678418952529903616     # double 59562
.LCPI11_391:
	.quad	4678419089968857088     # double 59563
.LCPI11_392:
	.quad	4678419227407810560     # double 59564
.LCPI11_393:
	.quad	4678419364846764032     # double 59565
.LCPI11_394:
	.quad	4678419502285717504     # double 59566
.LCPI11_395:
	.quad	4678419639724670976     # double 59567
.LCPI11_396:
	.quad	4678419777163624448     # double 59568
.LCPI11_397:
	.quad	4678419914602577920     # double 59569
.LCPI11_398:
	.quad	4678420052041531392     # double 59570
.LCPI11_399:
	.quad	4678420189480484864     # double 59571
.LCPI11_400:
	.quad	4678420326919438336     # double 59572
.LCPI11_401:
	.quad	4678420464358391808     # double 59573
.LCPI11_402:
	.quad	4678420601797345280     # double 59574
.LCPI11_403:
	.quad	4678420739236298752     # double 59575
.LCPI11_404:
	.quad	4678420876675252224     # double 59576
.LCPI11_405:
	.quad	4678421014114205696     # double 59577
.LCPI11_406:
	.quad	4678421151553159168     # double 59578
.LCPI11_407:
	.quad	4678421288992112640     # double 59579
.LCPI11_408:
	.quad	4678421426431066112     # double 59580
.LCPI11_409:
	.quad	4678421563870019584     # double 59581
.LCPI11_410:
	.quad	4678421701308973056     # double 59582
.LCPI11_411:
	.quad	4678421838747926528     # double 59583
.LCPI11_412:
	.quad	4678421976186880000     # double 59584
.LCPI11_413:
	.quad	4678422113625833472     # double 59585
.LCPI11_414:
	.quad	4678422251064786944     # double 59586
.LCPI11_415:
	.quad	4678422388503740416     # double 59587
.LCPI11_416:
	.quad	4678422525942693888     # double 59588
.LCPI11_417:
	.quad	4678422663381647360     # double 59589
.LCPI11_418:
	.quad	4678422800820600832     # double 59590
.LCPI11_419:
	.quad	4678422938259554304     # double 59591
.LCPI11_420:
	.quad	4678423075698507776     # double 59592
.LCPI11_421:
	.quad	4678423213137461248     # double 59593
.LCPI11_422:
	.quad	4678423350576414720     # double 59594
.LCPI11_423:
	.quad	4678423488015368192     # double 59595
.LCPI11_424:
	.quad	4678423625454321664     # double 59596
.LCPI11_425:
	.quad	4678423762893275136     # double 59597
.LCPI11_426:
	.quad	4678423900332228608     # double 59598
.LCPI11_427:
	.quad	4678424037771182080     # double 59599
.LCPI11_428:
	.quad	4678424175210135552     # double 59600
.LCPI11_429:
	.quad	4678424312649089024     # double 59601
.LCPI11_430:
	.quad	4678424450088042496     # double 59602
.LCPI11_431:
	.quad	4678424587526995968     # double 59603
.LCPI11_432:
	.quad	4678424724965949440     # double 59604
.LCPI11_433:
	.quad	4678424862404902912     # double 59605
.LCPI11_434:
	.quad	4678424999843856384     # double 59606
.LCPI11_435:
	.quad	4678425137282809856     # double 59607
.LCPI11_436:
	.quad	4678425274721763328     # double 59608
.LCPI11_437:
	.quad	-4616189618054758400    # double -1
.LCPI11_438:
	.quad	4678425412160716800     # double 59609
.LCPI11_439:
	.quad	4678425549599670272     # double 59610
.LCPI11_440:
	.quad	4678425687038623744     # double 59611
.LCPI11_441:
	.quad	4678425824477577216     # double 59612
.LCPI11_442:
	.quad	4678425961916530688     # double 59613
.LCPI11_443:
	.quad	4678426099355484160     # double 59614
.LCPI11_444:
	.quad	4678426236794437632     # double 59615
.LCPI11_445:
	.quad	4678426374233391104     # double 59616
.LCPI11_446:
	.quad	4678426511672344576     # double 59617
.LCPI11_447:
	.quad	4678426649111298048     # double 59618
.LCPI11_448:
	.quad	4678426786550251520     # double 59619
.LCPI11_449:
	.quad	4677052534454484992     # double 49620
.LCPI11_450:
	.quad	4677053771405066240     # double 49629
.LCPI11_451:
	.quad	4677029582149255168     # double 49453
.LCPI11_452:
	.quad	4677029719588208640     # double 49454
.LCPI11_453:
	.quad	4677029857027162112     # double 49455
.LCPI11_454:
	.quad	4677029994466115584     # double 49456
.LCPI11_455:
	.quad	4652209618980700160     # double 1023
.LCPI11_456:
	.quad	4627589354611539968     # double 24.5
.LCPI11_457:
	.quad	-4611686018427387904    # double -2
.LCPI11_458:
	.quad	4652249201399300096     # double 1031
.LCPI11_459:
	.quad	4652236007259766784     # double 1028
.LCPI11_460:
	.quad	4652240405306277888     # double 1029
.LCPI11_461:
	.quad	4652244803352788992     # double 1030
.LCPI11_462:
	.quad	4678114112931102720     # double 57344
.LCPI11_463:
	.quad	4679239875398991872     # double 65535
.LCPI11_464:
	.quad	4675862313117417472     # double 40960
.LCPI11_465:
	.quad	4676988075585306624     # double 49151
.LCPI11_466:
	.quad	4677015838253907968     # double 49353
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI11_297:
	.long	1127219200              # 0x43300000
	.long	1160773632              # 0x45300000
	.long	0                       # 0x0
	.long	0                       # 0x0
.LCPI11_298:
	.quad	4841369599423283200     # double 4503599627370496
	.quad	4985484787499139072     # double 1.9342813113834067E+25
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2
.LCPI11_336:
	.long	1086918620              # float 6.28318596
.LCPI11_339:
	.long	1065353216              # float 1
.LCPI11_340:
	.long	1106771968              # float 31
.LCPI11_341:
	.long	1103101952              # float 24
.LCPI11_342:
	.long	3212836864              # float -1
.LCPI11_346:
	.long	1156571136              # float 1919
.LCPI11_347:
	.long	1149689856              # float 1079
	.text
	.globl	_ZN8MEMORY_T6POKE64Edd
	.p2align	4, 0x90
	.type	_ZN8MEMORY_T6POKE64Edd,@function
_ZN8MEMORY_T6POKE64Edd:                 # @_ZN8MEMORY_T6POKE64Edd
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%rbx
	subq	$21432, %rsp            # imm = 0x53B8
	.cfi_offset %rbx, -24
	movq	%fs:40, %rax
	movq	%rax, -16(%rbp)
	movq	%rdi, -2216(%rbp)
	movsd	%xmm0, -2224(%rbp)
	movsd	%xmm1, -2232(%rbp)
# %bb.1:
	xorl	%eax, %eax
	movsd	.LCPI11_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movsd	-2232(%rbp), %xmm2      # xmm2 = mem[0],zero
	movq	-2216(%rbp), %rcx
	movsd	-2224(%rbp), %xmm3      # xmm3 = mem[0],zero
	movsd	%xmm0, -15784(%rbp)     # 8-byte Spill
	movaps	%xmm3, %xmm0
	movl	%eax, -15788(%rbp)      # 4-byte Spill
	movsd	%xmm1, -15800(%rbp)     # 8-byte Spill
	movsd	%xmm2, -15808(%rbp)     # 8-byte Spill
	movq	%rcx, -15816(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movq	-15816(%rbp), %rdx      # 8-byte Reload
	movsd	-15808(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	%xmm0, (%rdx,%rcx)
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movsd	-15800(%rbp), %xmm1     # 8-byte Reload
                                        # xmm1 = mem[0],zero
	ucomisd	%xmm1, %xmm0
	setae	%sil
	andb	$1, %sil
	movzbl	%sil, %eax
	movl	-15788(%rbp), %edi      # 4-byte Reload
	subl	%eax, %edi
	movslq	%edi, %rcx
	movsd	-15784(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	ucomisd	-2224(%rbp), %xmm0
	setae	%sil
	andb	$1, %sil
	movzbl	%sil, %eax
	movl	-15788(%rbp), %edi      # 4-byte Reload
	subl	%eax, %edi
	movslq	%edi, %r8
	andq	%r8, %rcx
	cmpq	$0, %rcx
	jne	.LBB11_3
# %bb.2:
	jmp	.LBB11_4
.LBB11_3:
	jmp	.LBB11_5
.LBB11_4:
	jmp	.LBB11_6
.LBB11_5:
	movsd	.LCPI11_2(%rip), %xmm0  # xmm0 = mem[0],zero
	addsd	-2224(%rbp), %xmm0
	movsd	%xmm0, -2224(%rbp)
	movsd	-2232(%rbp), %xmm0      # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	movsd	%xmm0, -15824(%rbp)     # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rax, -15832(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-15832(%rbp), %rcx      # 8-byte Reload
	movsd	-15824(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	%xmm0, 134741896(%rcx,%rax)
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	395608(%rax), %xmm0
	movsd	%xmm0, -2224(%rbp)
	movq	-2216(%rbp), %rax
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movq	%rax, -15840(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-15840(%rbp), %rcx      # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	movsd	%xmm0, -2232(%rbp)
.LBB11_6:
	movsd	.LCPI11_3(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_7
	jp	.LBB11_7
	jmp	.LBB11_8
.LBB11_7:
	jmp	.LBB11_9
.LBB11_8:
	jmp	.LBB11_10
.LBB11_9:
	jmp	.LBB11_11
.LBB11_10:
	jmp	.LBB11_11
.LBB11_11:
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movzwl	FCOLOR$(%rip), %eax
	movl	%eax, %ecx
	cvtsi2sd	%rcx, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB11_12
	jp	.LBB11_12
	jmp	.LBB11_13
.LBB11_12:
	jmp	.LBB11_14
.LBB11_13:
	jmp	.LBB11_15
.LBB11_14:
	jmp	.LBB11_1040
.LBB11_15:
	movsd	-2232(%rbp), %xmm0      # xmm0 = mem[0],zero
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB11_16
	jp	.LBB11_16
	jmp	.LBB11_17
.LBB11_16:
	jmp	.LBB11_18
.LBB11_17:
	jmp	.LBB11_784
.LBB11_18:
	movsd	.LCPI11_7(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_19
	jp	.LBB11_19
	jmp	.LBB11_20
.LBB11_19:
	jmp	.LBB11_21
.LBB11_20:
	jmp	.LBB11_785
.LBB11_21:
	movsd	.LCPI11_9(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_22
	jp	.LBB11_22
	jmp	.LBB11_23
.LBB11_22:
	jmp	.LBB11_24
.LBB11_23:
	jmp	.LBB11_786
.LBB11_24:
	movsd	.LCPI11_10(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_25
	jp	.LBB11_25
	jmp	.LBB11_26
.LBB11_25:
	jmp	.LBB11_27
.LBB11_26:
	jmp	.LBB11_787
.LBB11_27:
	movsd	.LCPI11_11(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_28
	jp	.LBB11_28
	jmp	.LBB11_29
.LBB11_28:
	jmp	.LBB11_30
.LBB11_29:
	jmp	.LBB11_788
.LBB11_30:
	movsd	.LCPI11_12(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_31
	jp	.LBB11_31
	jmp	.LBB11_32
.LBB11_31:
	jmp	.LBB11_33
.LBB11_32:
	jmp	.LBB11_789
.LBB11_33:
	movsd	.LCPI11_13(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_34
	jp	.LBB11_34
	jmp	.LBB11_35
.LBB11_34:
	jmp	.LBB11_36
.LBB11_35:
	jmp	.LBB11_790
.LBB11_36:
	movsd	.LCPI11_15(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_37
	jp	.LBB11_37
	jmp	.LBB11_38
.LBB11_37:
	jmp	.LBB11_39
.LBB11_38:
	jmp	.LBB11_791
.LBB11_39:
	movsd	.LCPI11_16(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_40
	jp	.LBB11_40
	jmp	.LBB11_41
.LBB11_40:
	jmp	.LBB11_42
.LBB11_41:
	jmp	.LBB11_792
.LBB11_42:
	movsd	.LCPI11_17(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_43
	jp	.LBB11_43
	jmp	.LBB11_44
.LBB11_43:
	jmp	.LBB11_45
.LBB11_44:
	jmp	.LBB11_793
.LBB11_45:
	movsd	.LCPI11_19(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_46
	jp	.LBB11_46
	jmp	.LBB11_47
.LBB11_46:
	jmp	.LBB11_48
.LBB11_47:
	jmp	.LBB11_794
.LBB11_48:
	movsd	.LCPI11_20(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_49
	jp	.LBB11_49
	jmp	.LBB11_50
.LBB11_49:
	jmp	.LBB11_51
.LBB11_50:
	jmp	.LBB11_795
.LBB11_51:
	movsd	.LCPI11_21(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_52
	jp	.LBB11_52
	jmp	.LBB11_53
.LBB11_52:
	jmp	.LBB11_54
.LBB11_53:
	jmp	.LBB11_796
.LBB11_54:
	movsd	.LCPI11_22(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_55
	jp	.LBB11_55
	jmp	.LBB11_56
.LBB11_55:
	jmp	.LBB11_57
.LBB11_56:
	jmp	.LBB11_797
.LBB11_57:
	movsd	.LCPI11_23(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_58
	jp	.LBB11_58
	jmp	.LBB11_59
.LBB11_58:
	jmp	.LBB11_60
.LBB11_59:
	jmp	.LBB11_798
.LBB11_60:
	movsd	.LCPI11_24(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_61
	jp	.LBB11_61
	jmp	.LBB11_62
.LBB11_61:
	jmp	.LBB11_63
.LBB11_62:
	jmp	.LBB11_799
.LBB11_63:
	movsd	.LCPI11_25(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_64
	jp	.LBB11_64
	jmp	.LBB11_65
.LBB11_64:
	jmp	.LBB11_66
.LBB11_65:
	jmp	.LBB11_800
.LBB11_66:
	movsd	.LCPI11_26(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_67
	jp	.LBB11_67
	jmp	.LBB11_68
.LBB11_67:
	jmp	.LBB11_69
.LBB11_68:
	jmp	.LBB11_801
.LBB11_69:
	movsd	.LCPI11_28(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_70
	jp	.LBB11_70
	jmp	.LBB11_71
.LBB11_70:
	jmp	.LBB11_72
.LBB11_71:
	jmp	.LBB11_802
.LBB11_72:
	movsd	.LCPI11_30(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_73
	jp	.LBB11_73
	jmp	.LBB11_74
.LBB11_73:
	jmp	.LBB11_75
.LBB11_74:
	jmp	.LBB11_803
.LBB11_75:
	movsd	.LCPI11_27(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_76
	jp	.LBB11_76
	jmp	.LBB11_77
.LBB11_76:
	jmp	.LBB11_78
.LBB11_77:
	jmp	.LBB11_804
.LBB11_78:
	movsd	.LCPI11_33(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_79
	jp	.LBB11_79
	jmp	.LBB11_80
.LBB11_79:
	jmp	.LBB11_81
.LBB11_80:
	jmp	.LBB11_805
.LBB11_81:
	movsd	.LCPI11_35(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_82
	jp	.LBB11_82
	jmp	.LBB11_83
.LBB11_82:
	jmp	.LBB11_84
.LBB11_83:
	jmp	.LBB11_806
.LBB11_84:
	movsd	.LCPI11_37(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_85
	jp	.LBB11_85
	jmp	.LBB11_86
.LBB11_85:
	jmp	.LBB11_87
.LBB11_86:
	jmp	.LBB11_807
.LBB11_87:
	movsd	.LCPI11_39(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_88
	jp	.LBB11_88
	jmp	.LBB11_89
.LBB11_88:
	jmp	.LBB11_90
.LBB11_89:
	jmp	.LBB11_808
.LBB11_90:
	movsd	.LCPI11_41(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_91
	jp	.LBB11_91
	jmp	.LBB11_92
.LBB11_91:
	jmp	.LBB11_93
.LBB11_92:
	jmp	.LBB11_809
.LBB11_93:
	movsd	.LCPI11_43(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_94
	jp	.LBB11_94
	jmp	.LBB11_95
.LBB11_94:
	jmp	.LBB11_96
.LBB11_95:
	jmp	.LBB11_810
.LBB11_96:
	movsd	.LCPI11_45(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_97
	jp	.LBB11_97
	jmp	.LBB11_98
.LBB11_97:
	jmp	.LBB11_99
.LBB11_98:
	jmp	.LBB11_811
.LBB11_99:
	movsd	.LCPI11_47(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_100
	jp	.LBB11_100
	jmp	.LBB11_101
.LBB11_100:
	jmp	.LBB11_102
.LBB11_101:
	jmp	.LBB11_812
.LBB11_102:
	movsd	.LCPI11_49(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_103
	jp	.LBB11_103
	jmp	.LBB11_104
.LBB11_103:
	jmp	.LBB11_105
.LBB11_104:
	jmp	.LBB11_813
.LBB11_105:
	movsd	.LCPI11_51(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_106
	jp	.LBB11_106
	jmp	.LBB11_107
.LBB11_106:
	jmp	.LBB11_108
.LBB11_107:
	jmp	.LBB11_814
.LBB11_108:
	movsd	.LCPI11_53(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_109
	jp	.LBB11_109
	jmp	.LBB11_110
.LBB11_109:
	jmp	.LBB11_111
.LBB11_110:
	jmp	.LBB11_815
.LBB11_111:
	movsd	.LCPI11_29(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_112
	jp	.LBB11_112
	jmp	.LBB11_113
.LBB11_112:
	jmp	.LBB11_114
.LBB11_113:
	jmp	.LBB11_816
.LBB11_114:
	movsd	.LCPI11_54(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_115
	jp	.LBB11_115
	jmp	.LBB11_116
.LBB11_115:
	jmp	.LBB11_117
.LBB11_116:
	jmp	.LBB11_817
.LBB11_117:
	movsd	.LCPI11_56(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_118
	jp	.LBB11_118
	jmp	.LBB11_119
.LBB11_118:
	jmp	.LBB11_120
.LBB11_119:
	jmp	.LBB11_818
.LBB11_120:
	movsd	.LCPI11_58(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_121
	jp	.LBB11_121
	jmp	.LBB11_122
.LBB11_121:
	jmp	.LBB11_123
.LBB11_122:
	jmp	.LBB11_819
.LBB11_123:
	movsd	.LCPI11_60(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_124
	jp	.LBB11_124
	jmp	.LBB11_125
.LBB11_124:
	jmp	.LBB11_126
.LBB11_125:
	jmp	.LBB11_820
.LBB11_126:
	movsd	.LCPI11_61(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_127
	jp	.LBB11_127
	jmp	.LBB11_128
.LBB11_127:
	jmp	.LBB11_129
.LBB11_128:
	jmp	.LBB11_821
.LBB11_129:
	movsd	.LCPI11_62(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_130
	jp	.LBB11_130
	jmp	.LBB11_131
.LBB11_130:
	jmp	.LBB11_132
.LBB11_131:
	jmp	.LBB11_822
.LBB11_132:
	movsd	.LCPI11_63(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_133
	jp	.LBB11_133
	jmp	.LBB11_134
.LBB11_133:
	jmp	.LBB11_135
.LBB11_134:
	jmp	.LBB11_823
.LBB11_135:
	movsd	.LCPI11_64(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_136
	jp	.LBB11_136
	jmp	.LBB11_137
.LBB11_136:
	jmp	.LBB11_138
.LBB11_137:
	jmp	.LBB11_824
.LBB11_138:
	movsd	.LCPI11_65(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_139
	jp	.LBB11_139
	jmp	.LBB11_140
.LBB11_139:
	jmp	.LBB11_141
.LBB11_140:
	jmp	.LBB11_825
.LBB11_141:
	movsd	.LCPI11_66(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_142
	jp	.LBB11_142
	jmp	.LBB11_143
.LBB11_142:
	jmp	.LBB11_144
.LBB11_143:
	jmp	.LBB11_826
.LBB11_144:
	movsd	.LCPI11_67(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_145
	jp	.LBB11_145
	jmp	.LBB11_146
.LBB11_145:
	jmp	.LBB11_147
.LBB11_146:
	jmp	.LBB11_827
.LBB11_147:
	movsd	.LCPI11_68(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_148
	jp	.LBB11_148
	jmp	.LBB11_149
.LBB11_148:
	jmp	.LBB11_150
.LBB11_149:
	jmp	.LBB11_828
.LBB11_150:
	movsd	.LCPI11_31(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_151
	jp	.LBB11_151
	jmp	.LBB11_152
.LBB11_151:
	jmp	.LBB11_153
.LBB11_152:
	jmp	.LBB11_829
.LBB11_153:
	movsd	.LCPI11_69(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_154
	jp	.LBB11_154
	jmp	.LBB11_155
.LBB11_154:
	jmp	.LBB11_156
.LBB11_155:
	jmp	.LBB11_830
.LBB11_156:
	movsd	.LCPI11_70(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_157
	jp	.LBB11_157
	jmp	.LBB11_158
.LBB11_157:
	jmp	.LBB11_159
.LBB11_158:
	jmp	.LBB11_831
.LBB11_159:
	movsd	.LCPI11_71(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_160
	jp	.LBB11_160
	jmp	.LBB11_161
.LBB11_160:
	jmp	.LBB11_162
.LBB11_161:
	jmp	.LBB11_832
.LBB11_162:
	movsd	.LCPI11_72(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_163
	jp	.LBB11_163
	jmp	.LBB11_164
.LBB11_163:
	jmp	.LBB11_165
.LBB11_164:
	jmp	.LBB11_833
.LBB11_165:
	movsd	.LCPI11_73(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_166
	jp	.LBB11_166
	jmp	.LBB11_167
.LBB11_166:
	jmp	.LBB11_168
.LBB11_167:
	jmp	.LBB11_834
.LBB11_168:
	movsd	.LCPI11_74(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_169
	jp	.LBB11_169
	jmp	.LBB11_170
.LBB11_169:
	jmp	.LBB11_171
.LBB11_170:
	jmp	.LBB11_835
.LBB11_171:
	movsd	.LCPI11_75(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_172
	jp	.LBB11_172
	jmp	.LBB11_173
.LBB11_172:
	jmp	.LBB11_174
.LBB11_173:
	jmp	.LBB11_836
.LBB11_174:
	movsd	.LCPI11_76(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_175
	jp	.LBB11_175
	jmp	.LBB11_176
.LBB11_175:
	jmp	.LBB11_177
.LBB11_176:
	jmp	.LBB11_837
.LBB11_177:
	movsd	.LCPI11_77(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_178
	jp	.LBB11_178
	jmp	.LBB11_179
.LBB11_178:
	jmp	.LBB11_180
.LBB11_179:
	jmp	.LBB11_838
.LBB11_180:
	movsd	.LCPI11_78(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_181
	jp	.LBB11_181
	jmp	.LBB11_182
.LBB11_181:
	jmp	.LBB11_183
.LBB11_182:
	jmp	.LBB11_839
.LBB11_183:
	movsd	.LCPI11_79(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_184
	jp	.LBB11_184
	jmp	.LBB11_185
.LBB11_184:
	jmp	.LBB11_186
.LBB11_185:
	jmp	.LBB11_840
.LBB11_186:
	movsd	.LCPI11_32(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_187
	jp	.LBB11_187
	jmp	.LBB11_188
.LBB11_187:
	jmp	.LBB11_189
.LBB11_188:
	jmp	.LBB11_841
.LBB11_189:
	movsd	.LCPI11_81(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_190
	jp	.LBB11_190
	jmp	.LBB11_191
.LBB11_190:
	jmp	.LBB11_192
.LBB11_191:
	jmp	.LBB11_842
.LBB11_192:
	movsd	.LCPI11_82(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_193
	jp	.LBB11_193
	jmp	.LBB11_194
.LBB11_193:
	jmp	.LBB11_195
.LBB11_194:
	jmp	.LBB11_843
.LBB11_195:
	movsd	.LCPI11_84(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_196
	jp	.LBB11_196
	jmp	.LBB11_197
.LBB11_196:
	jmp	.LBB11_198
.LBB11_197:
	jmp	.LBB11_844
.LBB11_198:
	movsd	.LCPI11_85(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_199
	jp	.LBB11_199
	jmp	.LBB11_200
.LBB11_199:
	jmp	.LBB11_201
.LBB11_200:
	jmp	.LBB11_845
.LBB11_201:
	movsd	.LCPI11_86(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_202
	jp	.LBB11_202
	jmp	.LBB11_203
.LBB11_202:
	jmp	.LBB11_204
.LBB11_203:
	jmp	.LBB11_846
.LBB11_204:
	movsd	.LCPI11_87(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_205
	jp	.LBB11_205
	jmp	.LBB11_206
.LBB11_205:
	jmp	.LBB11_207
.LBB11_206:
	jmp	.LBB11_847
.LBB11_207:
	movsd	.LCPI11_88(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_208
	jp	.LBB11_208
	jmp	.LBB11_209
.LBB11_208:
	jmp	.LBB11_210
.LBB11_209:
	jmp	.LBB11_848
.LBB11_210:
	movsd	.LCPI11_55(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_211
	jp	.LBB11_211
	jmp	.LBB11_212
.LBB11_211:
	jmp	.LBB11_213
.LBB11_212:
	jmp	.LBB11_849
.LBB11_213:
	movsd	.LCPI11_89(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_214
	jp	.LBB11_214
	jmp	.LBB11_215
.LBB11_214:
	jmp	.LBB11_216
.LBB11_215:
	jmp	.LBB11_850
.LBB11_216:
	movsd	.LCPI11_90(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_217
	jp	.LBB11_217
	jmp	.LBB11_218
.LBB11_217:
	jmp	.LBB11_219
.LBB11_218:
	jmp	.LBB11_851
.LBB11_219:
	movsd	.LCPI11_91(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_220
	jp	.LBB11_220
	jmp	.LBB11_221
.LBB11_220:
	jmp	.LBB11_222
.LBB11_221:
	jmp	.LBB11_852
.LBB11_222:
	movsd	.LCPI11_34(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_223
	jp	.LBB11_223
	jmp	.LBB11_224
.LBB11_223:
	jmp	.LBB11_225
.LBB11_224:
	jmp	.LBB11_853
.LBB11_225:
	movsd	.LCPI11_92(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_226
	jp	.LBB11_226
	jmp	.LBB11_227
.LBB11_226:
	jmp	.LBB11_228
.LBB11_227:
	jmp	.LBB11_854
.LBB11_228:
	movsd	.LCPI11_93(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_229
	jp	.LBB11_229
	jmp	.LBB11_230
.LBB11_229:
	jmp	.LBB11_231
.LBB11_230:
	jmp	.LBB11_855
.LBB11_231:
	movsd	.LCPI11_94(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_232
	jp	.LBB11_232
	jmp	.LBB11_233
.LBB11_232:
	jmp	.LBB11_234
.LBB11_233:
	jmp	.LBB11_856
.LBB11_234:
	movsd	.LCPI11_95(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_235
	jp	.LBB11_235
	jmp	.LBB11_236
.LBB11_235:
	jmp	.LBB11_237
.LBB11_236:
	jmp	.LBB11_857
.LBB11_237:
	movsd	.LCPI11_96(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_238
	jp	.LBB11_238
	jmp	.LBB11_239
.LBB11_238:
	jmp	.LBB11_240
.LBB11_239:
	jmp	.LBB11_858
.LBB11_240:
	movsd	.LCPI11_97(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_241
	jp	.LBB11_241
	jmp	.LBB11_242
.LBB11_241:
	jmp	.LBB11_243
.LBB11_242:
	jmp	.LBB11_859
.LBB11_243:
	movsd	.LCPI11_98(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_244
	jp	.LBB11_244
	jmp	.LBB11_245
.LBB11_244:
	jmp	.LBB11_246
.LBB11_245:
	jmp	.LBB11_860
.LBB11_246:
	movsd	.LCPI11_99(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_247
	jp	.LBB11_247
	jmp	.LBB11_248
.LBB11_247:
	jmp	.LBB11_249
.LBB11_248:
	jmp	.LBB11_861
.LBB11_249:
	movsd	.LCPI11_100(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_250
	jp	.LBB11_250
	jmp	.LBB11_251
.LBB11_250:
	jmp	.LBB11_252
.LBB11_251:
	jmp	.LBB11_862
.LBB11_252:
	movsd	.LCPI11_101(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_253
	jp	.LBB11_253
	jmp	.LBB11_254
.LBB11_253:
	jmp	.LBB11_255
.LBB11_254:
	jmp	.LBB11_863
.LBB11_255:
	movsd	.LCPI11_102(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_256
	jp	.LBB11_256
	jmp	.LBB11_257
.LBB11_256:
	jmp	.LBB11_258
.LBB11_257:
	jmp	.LBB11_864
.LBB11_258:
	movsd	.LCPI11_36(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_259
	jp	.LBB11_259
	jmp	.LBB11_260
.LBB11_259:
	jmp	.LBB11_261
.LBB11_260:
	jmp	.LBB11_865
.LBB11_261:
	movsd	.LCPI11_104(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_262
	jp	.LBB11_262
	jmp	.LBB11_263
.LBB11_262:
	jmp	.LBB11_264
.LBB11_263:
	jmp	.LBB11_866
.LBB11_264:
	movsd	.LCPI11_106(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_265
	jp	.LBB11_265
	jmp	.LBB11_266
.LBB11_265:
	jmp	.LBB11_267
.LBB11_266:
	jmp	.LBB11_867
.LBB11_267:
	movsd	.LCPI11_108(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_268
	jp	.LBB11_268
	jmp	.LBB11_269
.LBB11_268:
	jmp	.LBB11_270
.LBB11_269:
	jmp	.LBB11_868
.LBB11_270:
	movsd	.LCPI11_14(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_271
	jp	.LBB11_271
	jmp	.LBB11_272
.LBB11_271:
	jmp	.LBB11_273
.LBB11_272:
	jmp	.LBB11_869
.LBB11_273:
	movsd	.LCPI11_109(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_274
	jp	.LBB11_274
	jmp	.LBB11_275
.LBB11_274:
	jmp	.LBB11_276
.LBB11_275:
	jmp	.LBB11_870
.LBB11_276:
	movsd	.LCPI11_110(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_277
	jp	.LBB11_277
	jmp	.LBB11_278
.LBB11_277:
	jmp	.LBB11_279
.LBB11_278:
	jmp	.LBB11_871
.LBB11_279:
	movsd	.LCPI11_111(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_280
	jp	.LBB11_280
	jmp	.LBB11_281
.LBB11_280:
	jmp	.LBB11_282
.LBB11_281:
	jmp	.LBB11_872
.LBB11_282:
	movsd	.LCPI11_112(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_283
	jp	.LBB11_283
	jmp	.LBB11_284
.LBB11_283:
	jmp	.LBB11_285
.LBB11_284:
	jmp	.LBB11_873
.LBB11_285:
	movsd	.LCPI11_113(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_286
	jp	.LBB11_286
	jmp	.LBB11_287
.LBB11_286:
	jmp	.LBB11_288
.LBB11_287:
	jmp	.LBB11_874
.LBB11_288:
	movsd	.LCPI11_114(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_289
	jp	.LBB11_289
	jmp	.LBB11_290
.LBB11_289:
	jmp	.LBB11_291
.LBB11_290:
	jmp	.LBB11_875
.LBB11_291:
	movsd	.LCPI11_115(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_292
	jp	.LBB11_292
	jmp	.LBB11_293
.LBB11_292:
	jmp	.LBB11_294
.LBB11_293:
	jmp	.LBB11_876
.LBB11_294:
	movsd	.LCPI11_116(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_295
	jp	.LBB11_295
	jmp	.LBB11_296
.LBB11_295:
	jmp	.LBB11_297
.LBB11_296:
	jmp	.LBB11_877
.LBB11_297:
	movsd	.LCPI11_117(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_298
	jp	.LBB11_298
	jmp	.LBB11_299
.LBB11_298:
	jmp	.LBB11_300
.LBB11_299:
	jmp	.LBB11_878
.LBB11_300:
	movsd	.LCPI11_118(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_301
	jp	.LBB11_301
	jmp	.LBB11_302
.LBB11_301:
	jmp	.LBB11_303
.LBB11_302:
	jmp	.LBB11_879
.LBB11_303:
	movsd	.LCPI11_119(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_304
	jp	.LBB11_304
	jmp	.LBB11_305
.LBB11_304:
	jmp	.LBB11_306
.LBB11_305:
	jmp	.LBB11_880
.LBB11_306:
	movsd	.LCPI11_38(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_307
	jp	.LBB11_307
	jmp	.LBB11_308
.LBB11_307:
	jmp	.LBB11_309
.LBB11_308:
	jmp	.LBB11_881
.LBB11_309:
	movsd	.LCPI11_120(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_310
	jp	.LBB11_310
	jmp	.LBB11_311
.LBB11_310:
	jmp	.LBB11_312
.LBB11_311:
	jmp	.LBB11_882
.LBB11_312:
	movsd	.LCPI11_121(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_313
	jp	.LBB11_313
	jmp	.LBB11_314
.LBB11_313:
	jmp	.LBB11_315
.LBB11_314:
	jmp	.LBB11_883
.LBB11_315:
	movsd	.LCPI11_122(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_316
	jp	.LBB11_316
	jmp	.LBB11_317
.LBB11_316:
	jmp	.LBB11_318
.LBB11_317:
	jmp	.LBB11_884
.LBB11_318:
	movsd	.LCPI11_123(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_319
	jp	.LBB11_319
	jmp	.LBB11_320
.LBB11_319:
	jmp	.LBB11_321
.LBB11_320:
	jmp	.LBB11_885
.LBB11_321:
	movsd	.LCPI11_124(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_322
	jp	.LBB11_322
	jmp	.LBB11_323
.LBB11_322:
	jmp	.LBB11_324
.LBB11_323:
	jmp	.LBB11_886
.LBB11_324:
	movsd	.LCPI11_125(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_325
	jp	.LBB11_325
	jmp	.LBB11_326
.LBB11_325:
	jmp	.LBB11_327
.LBB11_326:
	jmp	.LBB11_887
.LBB11_327:
	movsd	.LCPI11_126(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_328
	jp	.LBB11_328
	jmp	.LBB11_329
.LBB11_328:
	jmp	.LBB11_330
.LBB11_329:
	jmp	.LBB11_888
.LBB11_330:
	movsd	.LCPI11_127(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_331
	jp	.LBB11_331
	jmp	.LBB11_332
.LBB11_331:
	jmp	.LBB11_333
.LBB11_332:
	jmp	.LBB11_889
.LBB11_333:
	movsd	.LCPI11_128(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_334
	jp	.LBB11_334
	jmp	.LBB11_335
.LBB11_334:
	jmp	.LBB11_336
.LBB11_335:
	jmp	.LBB11_890
.LBB11_336:
	movsd	.LCPI11_129(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_337
	jp	.LBB11_337
	jmp	.LBB11_338
.LBB11_337:
	jmp	.LBB11_339
.LBB11_338:
	jmp	.LBB11_891
.LBB11_339:
	movsd	.LCPI11_130(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_340
	jp	.LBB11_340
	jmp	.LBB11_341
.LBB11_340:
	jmp	.LBB11_342
.LBB11_341:
	jmp	.LBB11_892
.LBB11_342:
	movsd	.LCPI11_131(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_343
	jp	.LBB11_343
	jmp	.LBB11_344
.LBB11_343:
	jmp	.LBB11_345
.LBB11_344:
	jmp	.LBB11_893
.LBB11_345:
	movsd	.LCPI11_132(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_346
	jp	.LBB11_346
	jmp	.LBB11_347
.LBB11_346:
	jmp	.LBB11_348
.LBB11_347:
	jmp	.LBB11_894
.LBB11_348:
	movsd	.LCPI11_133(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_349
	jp	.LBB11_349
	jmp	.LBB11_350
.LBB11_349:
	jmp	.LBB11_351
.LBB11_350:
	jmp	.LBB11_895
.LBB11_351:
	movsd	.LCPI11_134(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_352
	jp	.LBB11_352
	jmp	.LBB11_353
.LBB11_352:
	jmp	.LBB11_354
.LBB11_353:
	jmp	.LBB11_896
.LBB11_354:
	movsd	.LCPI11_40(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_355
	jp	.LBB11_355
	jmp	.LBB11_356
.LBB11_355:
	jmp	.LBB11_357
.LBB11_356:
	jmp	.LBB11_897
.LBB11_357:
	movsd	.LCPI11_135(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_358
	jp	.LBB11_358
	jmp	.LBB11_359
.LBB11_358:
	jmp	.LBB11_360
.LBB11_359:
	jmp	.LBB11_898
.LBB11_360:
	movsd	.LCPI11_136(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_361
	jp	.LBB11_361
	jmp	.LBB11_362
.LBB11_361:
	jmp	.LBB11_363
.LBB11_362:
	jmp	.LBB11_899
.LBB11_363:
	movsd	.LCPI11_137(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_364
	jp	.LBB11_364
	jmp	.LBB11_365
.LBB11_364:
	jmp	.LBB11_366
.LBB11_365:
	jmp	.LBB11_900
.LBB11_366:
	movsd	.LCPI11_138(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_367
	jp	.LBB11_367
	jmp	.LBB11_368
.LBB11_367:
	jmp	.LBB11_369
.LBB11_368:
	jmp	.LBB11_901
.LBB11_369:
	movsd	.LCPI11_139(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_370
	jp	.LBB11_370
	jmp	.LBB11_371
.LBB11_370:
	jmp	.LBB11_372
.LBB11_371:
	jmp	.LBB11_902
.LBB11_372:
	movsd	.LCPI11_140(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_373
	jp	.LBB11_373
	jmp	.LBB11_374
.LBB11_373:
	jmp	.LBB11_375
.LBB11_374:
	jmp	.LBB11_903
.LBB11_375:
	movsd	.LCPI11_141(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_376
	jp	.LBB11_376
	jmp	.LBB11_377
.LBB11_376:
	jmp	.LBB11_378
.LBB11_377:
	jmp	.LBB11_904
.LBB11_378:
	movsd	.LCPI11_142(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_379
	jp	.LBB11_379
	jmp	.LBB11_380
.LBB11_379:
	jmp	.LBB11_381
.LBB11_380:
	jmp	.LBB11_905
.LBB11_381:
	movsd	.LCPI11_143(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_382
	jp	.LBB11_382
	jmp	.LBB11_383
.LBB11_382:
	jmp	.LBB11_384
.LBB11_383:
	jmp	.LBB11_906
.LBB11_384:
	movsd	.LCPI11_144(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_385
	jp	.LBB11_385
	jmp	.LBB11_386
.LBB11_385:
	jmp	.LBB11_387
.LBB11_386:
	jmp	.LBB11_907
.LBB11_387:
	movsd	.LCPI11_145(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_388
	jp	.LBB11_388
	jmp	.LBB11_389
.LBB11_388:
	jmp	.LBB11_390
.LBB11_389:
	jmp	.LBB11_908
.LBB11_390:
	movsd	.LCPI11_57(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_391
	jp	.LBB11_391
	jmp	.LBB11_392
.LBB11_391:
	jmp	.LBB11_393
.LBB11_392:
	jmp	.LBB11_909
.LBB11_393:
	movsd	.LCPI11_146(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_394
	jp	.LBB11_394
	jmp	.LBB11_395
.LBB11_394:
	jmp	.LBB11_396
.LBB11_395:
	jmp	.LBB11_910
.LBB11_396:
	movsd	.LCPI11_147(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_397
	jp	.LBB11_397
	jmp	.LBB11_398
.LBB11_397:
	jmp	.LBB11_399
.LBB11_398:
	jmp	.LBB11_911
.LBB11_399:
	movsd	.LCPI11_148(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_400
	jp	.LBB11_400
	jmp	.LBB11_401
.LBB11_400:
	jmp	.LBB11_402
.LBB11_401:
	jmp	.LBB11_912
.LBB11_402:
	movsd	.LCPI11_149(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_403
	jp	.LBB11_403
	jmp	.LBB11_404
.LBB11_403:
	jmp	.LBB11_405
.LBB11_404:
	jmp	.LBB11_913
.LBB11_405:
	movsd	.LCPI11_42(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_406
	jp	.LBB11_406
	jmp	.LBB11_407
.LBB11_406:
	jmp	.LBB11_408
.LBB11_407:
	jmp	.LBB11_914
.LBB11_408:
	movsd	.LCPI11_150(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_409
	jp	.LBB11_409
	jmp	.LBB11_410
.LBB11_409:
	jmp	.LBB11_411
.LBB11_410:
	jmp	.LBB11_915
.LBB11_411:
	movsd	.LCPI11_151(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_412
	jp	.LBB11_412
	jmp	.LBB11_413
.LBB11_412:
	jmp	.LBB11_414
.LBB11_413:
	jmp	.LBB11_916
.LBB11_414:
	movsd	.LCPI11_152(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_415
	jp	.LBB11_415
	jmp	.LBB11_416
.LBB11_415:
	jmp	.LBB11_417
.LBB11_416:
	jmp	.LBB11_917
.LBB11_417:
	movsd	.LCPI11_153(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_418
	jp	.LBB11_418
	jmp	.LBB11_419
.LBB11_418:
	jmp	.LBB11_420
.LBB11_419:
	jmp	.LBB11_918
.LBB11_420:
	movsd	.LCPI11_154(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_421
	jp	.LBB11_421
	jmp	.LBB11_422
.LBB11_421:
	jmp	.LBB11_423
.LBB11_422:
	jmp	.LBB11_919
.LBB11_423:
	movsd	.LCPI11_155(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_424
	jp	.LBB11_424
	jmp	.LBB11_425
.LBB11_424:
	jmp	.LBB11_426
.LBB11_425:
	jmp	.LBB11_920
.LBB11_426:
	movsd	.LCPI11_156(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_427
	jp	.LBB11_427
	jmp	.LBB11_428
.LBB11_427:
	jmp	.LBB11_429
.LBB11_428:
	jmp	.LBB11_921
.LBB11_429:
	movsd	.LCPI11_157(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_430
	jp	.LBB11_430
	jmp	.LBB11_431
.LBB11_430:
	jmp	.LBB11_432
.LBB11_431:
	jmp	.LBB11_922
.LBB11_432:
	movsd	.LCPI11_158(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_433
	jp	.LBB11_433
	jmp	.LBB11_434
.LBB11_433:
	jmp	.LBB11_435
.LBB11_434:
	jmp	.LBB11_923
.LBB11_435:
	movsd	.LCPI11_159(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_436
	jp	.LBB11_436
	jmp	.LBB11_437
.LBB11_436:
	jmp	.LBB11_438
.LBB11_437:
	jmp	.LBB11_924
.LBB11_438:
	movsd	.LCPI11_160(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_439
	jp	.LBB11_439
	jmp	.LBB11_440
.LBB11_439:
	jmp	.LBB11_441
.LBB11_440:
	jmp	.LBB11_925
.LBB11_441:
	movsd	.LCPI11_161(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_442
	jp	.LBB11_442
	jmp	.LBB11_443
.LBB11_442:
	jmp	.LBB11_444
.LBB11_443:
	jmp	.LBB11_926
.LBB11_444:
	movsd	.LCPI11_162(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_445
	jp	.LBB11_445
	jmp	.LBB11_446
.LBB11_445:
	jmp	.LBB11_447
.LBB11_446:
	jmp	.LBB11_927
.LBB11_447:
	movsd	.LCPI11_163(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_448
	jp	.LBB11_448
	jmp	.LBB11_449
.LBB11_448:
	jmp	.LBB11_450
.LBB11_449:
	jmp	.LBB11_928
.LBB11_450:
	movsd	.LCPI11_164(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_451
	jp	.LBB11_451
	jmp	.LBB11_452
.LBB11_451:
	jmp	.LBB11_453
.LBB11_452:
	jmp	.LBB11_929
.LBB11_453:
	movsd	.LCPI11_44(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_454
	jp	.LBB11_454
	jmp	.LBB11_455
.LBB11_454:
	jmp	.LBB11_456
.LBB11_455:
	jmp	.LBB11_930
.LBB11_456:
	movsd	.LCPI11_165(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_457
	jp	.LBB11_457
	jmp	.LBB11_458
.LBB11_457:
	jmp	.LBB11_459
.LBB11_458:
	jmp	.LBB11_931
.LBB11_459:
	movsd	.LCPI11_166(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_460
	jp	.LBB11_460
	jmp	.LBB11_461
.LBB11_460:
	jmp	.LBB11_462
.LBB11_461:
	jmp	.LBB11_932
.LBB11_462:
	movsd	.LCPI11_167(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_463
	jp	.LBB11_463
	jmp	.LBB11_464
.LBB11_463:
	jmp	.LBB11_465
.LBB11_464:
	jmp	.LBB11_933
.LBB11_465:
	movsd	.LCPI11_168(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_466
	jp	.LBB11_466
	jmp	.LBB11_467
.LBB11_466:
	jmp	.LBB11_468
.LBB11_467:
	jmp	.LBB11_934
.LBB11_468:
	movsd	.LCPI11_169(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_469
	jp	.LBB11_469
	jmp	.LBB11_470
.LBB11_469:
	jmp	.LBB11_471
.LBB11_470:
	jmp	.LBB11_935
.LBB11_471:
	movsd	.LCPI11_170(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_472
	jp	.LBB11_472
	jmp	.LBB11_473
.LBB11_472:
	jmp	.LBB11_474
.LBB11_473:
	jmp	.LBB11_936
.LBB11_474:
	movsd	.LCPI11_171(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_475
	jp	.LBB11_475
	jmp	.LBB11_476
.LBB11_475:
	jmp	.LBB11_477
.LBB11_476:
	jmp	.LBB11_937
.LBB11_477:
	movsd	.LCPI11_172(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_478
	jp	.LBB11_478
	jmp	.LBB11_479
.LBB11_478:
	jmp	.LBB11_480
.LBB11_479:
	jmp	.LBB11_938
.LBB11_480:
	movsd	.LCPI11_173(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_481
	jp	.LBB11_481
	jmp	.LBB11_482
.LBB11_481:
	jmp	.LBB11_483
.LBB11_482:
	jmp	.LBB11_939
.LBB11_483:
	movsd	.LCPI11_174(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_484
	jp	.LBB11_484
	jmp	.LBB11_485
.LBB11_484:
	jmp	.LBB11_486
.LBB11_485:
	jmp	.LBB11_940
.LBB11_486:
	movsd	.LCPI11_175(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_487
	jp	.LBB11_487
	jmp	.LBB11_488
.LBB11_487:
	jmp	.LBB11_489
.LBB11_488:
	jmp	.LBB11_941
.LBB11_489:
	movsd	.LCPI11_80(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_490
	jp	.LBB11_490
	jmp	.LBB11_491
.LBB11_490:
	jmp	.LBB11_492
.LBB11_491:
	jmp	.LBB11_942
.LBB11_492:
	movsd	.LCPI11_176(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_493
	jp	.LBB11_493
	jmp	.LBB11_494
.LBB11_493:
	jmp	.LBB11_495
.LBB11_494:
	jmp	.LBB11_943
.LBB11_495:
	movsd	.LCPI11_177(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_496
	jp	.LBB11_496
	jmp	.LBB11_497
.LBB11_496:
	jmp	.LBB11_498
.LBB11_497:
	jmp	.LBB11_944
.LBB11_498:
	movsd	.LCPI11_178(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_499
	jp	.LBB11_499
	jmp	.LBB11_500
.LBB11_499:
	jmp	.LBB11_501
.LBB11_500:
	jmp	.LBB11_945
.LBB11_501:
	movsd	.LCPI11_46(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_502
	jp	.LBB11_502
	jmp	.LBB11_503
.LBB11_502:
	jmp	.LBB11_504
.LBB11_503:
	jmp	.LBB11_946
.LBB11_504:
	movsd	.LCPI11_179(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_505
	jp	.LBB11_505
	jmp	.LBB11_506
.LBB11_505:
	jmp	.LBB11_507
.LBB11_506:
	jmp	.LBB11_947
.LBB11_507:
	movsd	.LCPI11_180(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_508
	jp	.LBB11_508
	jmp	.LBB11_509
.LBB11_508:
	jmp	.LBB11_510
.LBB11_509:
	jmp	.LBB11_948
.LBB11_510:
	movsd	.LCPI11_181(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_511
	jp	.LBB11_511
	jmp	.LBB11_512
.LBB11_511:
	jmp	.LBB11_513
.LBB11_512:
	jmp	.LBB11_949
.LBB11_513:
	movsd	.LCPI11_182(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_514
	jp	.LBB11_514
	jmp	.LBB11_515
.LBB11_514:
	jmp	.LBB11_516
.LBB11_515:
	jmp	.LBB11_950
.LBB11_516:
	movsd	.LCPI11_183(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_517
	jp	.LBB11_517
	jmp	.LBB11_518
.LBB11_517:
	jmp	.LBB11_519
.LBB11_518:
	jmp	.LBB11_951
.LBB11_519:
	movsd	.LCPI11_184(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_520
	jp	.LBB11_520
	jmp	.LBB11_521
.LBB11_520:
	jmp	.LBB11_522
.LBB11_521:
	jmp	.LBB11_952
.LBB11_522:
	movsd	.LCPI11_185(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_523
	jp	.LBB11_523
	jmp	.LBB11_524
.LBB11_523:
	jmp	.LBB11_525
.LBB11_524:
	jmp	.LBB11_953
.LBB11_525:
	movsd	.LCPI11_8(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_526
	jp	.LBB11_526
	jmp	.LBB11_527
.LBB11_526:
	jmp	.LBB11_528
.LBB11_527:
	jmp	.LBB11_954
.LBB11_528:
	movsd	.LCPI11_186(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_529
	jp	.LBB11_529
	jmp	.LBB11_530
.LBB11_529:
	jmp	.LBB11_531
.LBB11_530:
	jmp	.LBB11_955
.LBB11_531:
	movsd	.LCPI11_187(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_532
	jp	.LBB11_532
	jmp	.LBB11_533
.LBB11_532:
	jmp	.LBB11_534
.LBB11_533:
	jmp	.LBB11_956
.LBB11_534:
	movsd	.LCPI11_188(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_535
	jp	.LBB11_535
	jmp	.LBB11_536
.LBB11_535:
	jmp	.LBB11_537
.LBB11_536:
	jmp	.LBB11_957
.LBB11_537:
	movsd	.LCPI11_189(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_538
	jp	.LBB11_538
	jmp	.LBB11_539
.LBB11_538:
	jmp	.LBB11_540
.LBB11_539:
	jmp	.LBB11_958
.LBB11_540:
	movsd	.LCPI11_190(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_541
	jp	.LBB11_541
	jmp	.LBB11_542
.LBB11_541:
	jmp	.LBB11_543
.LBB11_542:
	jmp	.LBB11_959
.LBB11_543:
	movsd	.LCPI11_191(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_544
	jp	.LBB11_544
	jmp	.LBB11_545
.LBB11_544:
	jmp	.LBB11_546
.LBB11_545:
	jmp	.LBB11_960
.LBB11_546:
	movsd	.LCPI11_192(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_547
	jp	.LBB11_547
	jmp	.LBB11_548
.LBB11_547:
	jmp	.LBB11_549
.LBB11_548:
	jmp	.LBB11_961
.LBB11_549:
	movsd	.LCPI11_193(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_550
	jp	.LBB11_550
	jmp	.LBB11_551
.LBB11_550:
	jmp	.LBB11_552
.LBB11_551:
	jmp	.LBB11_962
.LBB11_552:
	movsd	.LCPI11_194(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_553
	jp	.LBB11_553
	jmp	.LBB11_554
.LBB11_553:
	jmp	.LBB11_555
.LBB11_554:
	jmp	.LBB11_963
.LBB11_555:
	movsd	.LCPI11_195(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_556
	jp	.LBB11_556
	jmp	.LBB11_557
.LBB11_556:
	jmp	.LBB11_558
.LBB11_557:
	jmp	.LBB11_964
.LBB11_558:
	movsd	.LCPI11_196(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_559
	jp	.LBB11_559
	jmp	.LBB11_560
.LBB11_559:
	jmp	.LBB11_561
.LBB11_560:
	jmp	.LBB11_965
.LBB11_561:
	movsd	.LCPI11_48(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_562
	jp	.LBB11_562
	jmp	.LBB11_563
.LBB11_562:
	jmp	.LBB11_564
.LBB11_563:
	jmp	.LBB11_966
.LBB11_564:
	movsd	.LCPI11_197(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_565
	jp	.LBB11_565
	jmp	.LBB11_566
.LBB11_565:
	jmp	.LBB11_567
.LBB11_566:
	jmp	.LBB11_967
.LBB11_567:
	movsd	.LCPI11_198(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_568
	jp	.LBB11_568
	jmp	.LBB11_569
.LBB11_568:
	jmp	.LBB11_570
.LBB11_569:
	jmp	.LBB11_968
.LBB11_570:
	movsd	.LCPI11_199(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_571
	jp	.LBB11_571
	jmp	.LBB11_572
.LBB11_571:
	jmp	.LBB11_573
.LBB11_572:
	jmp	.LBB11_969
.LBB11_573:
	movsd	.LCPI11_200(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_574
	jp	.LBB11_574
	jmp	.LBB11_575
.LBB11_574:
	jmp	.LBB11_576
.LBB11_575:
	jmp	.LBB11_970
.LBB11_576:
	movsd	.LCPI11_201(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_577
	jp	.LBB11_577
	jmp	.LBB11_578
.LBB11_577:
	jmp	.LBB11_579
.LBB11_578:
	jmp	.LBB11_971
.LBB11_579:
	movsd	.LCPI11_202(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_580
	jp	.LBB11_580
	jmp	.LBB11_581
.LBB11_580:
	jmp	.LBB11_582
.LBB11_581:
	jmp	.LBB11_972
.LBB11_582:
	movsd	.LCPI11_203(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_583
	jp	.LBB11_583
	jmp	.LBB11_584
.LBB11_583:
	jmp	.LBB11_585
.LBB11_584:
	jmp	.LBB11_973
.LBB11_585:
	movsd	.LCPI11_59(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_586
	jp	.LBB11_586
	jmp	.LBB11_587
.LBB11_586:
	jmp	.LBB11_588
.LBB11_587:
	jmp	.LBB11_974
.LBB11_588:
	movsd	.LCPI11_204(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_589
	jp	.LBB11_589
	jmp	.LBB11_590
.LBB11_589:
	jmp	.LBB11_591
.LBB11_590:
	jmp	.LBB11_975
.LBB11_591:
	movsd	.LCPI11_205(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_592
	jp	.LBB11_592
	jmp	.LBB11_593
.LBB11_592:
	jmp	.LBB11_594
.LBB11_593:
	jmp	.LBB11_976
.LBB11_594:
	movsd	.LCPI11_206(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_595
	jp	.LBB11_595
	jmp	.LBB11_596
.LBB11_595:
	jmp	.LBB11_597
.LBB11_596:
	jmp	.LBB11_977
.LBB11_597:
	movsd	.LCPI11_207(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_598
	jp	.LBB11_598
	jmp	.LBB11_599
.LBB11_598:
	jmp	.LBB11_600
.LBB11_599:
	jmp	.LBB11_978
.LBB11_600:
	movsd	.LCPI11_208(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_601
	jp	.LBB11_601
	jmp	.LBB11_602
.LBB11_601:
	jmp	.LBB11_603
.LBB11_602:
	jmp	.LBB11_979
.LBB11_603:
	movsd	.LCPI11_209(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_604
	jp	.LBB11_604
	jmp	.LBB11_605
.LBB11_604:
	jmp	.LBB11_606
.LBB11_605:
	jmp	.LBB11_980
.LBB11_606:
	movsd	.LCPI11_210(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_607
	jp	.LBB11_607
	jmp	.LBB11_608
.LBB11_607:
	jmp	.LBB11_609
.LBB11_608:
	jmp	.LBB11_981
.LBB11_609:
	movsd	.LCPI11_103(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_610
	jp	.LBB11_610
	jmp	.LBB11_611
.LBB11_610:
	jmp	.LBB11_612
.LBB11_611:
	jmp	.LBB11_982
.LBB11_612:
	movsd	.LCPI11_3(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_613
	jp	.LBB11_613
	jmp	.LBB11_614
.LBB11_613:
	jmp	.LBB11_615
.LBB11_614:
	jmp	.LBB11_983
.LBB11_615:
	movsd	.LCPI11_211(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_616
	jp	.LBB11_616
	jmp	.LBB11_617
.LBB11_616:
	jmp	.LBB11_618
.LBB11_617:
	jmp	.LBB11_984
.LBB11_618:
	movsd	.LCPI11_212(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_619
	jp	.LBB11_619
	jmp	.LBB11_620
.LBB11_619:
	jmp	.LBB11_621
.LBB11_620:
	jmp	.LBB11_985
.LBB11_621:
	movsd	.LCPI11_50(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_622
	jp	.LBB11_622
	jmp	.LBB11_623
.LBB11_622:
	jmp	.LBB11_624
.LBB11_623:
	jmp	.LBB11_986
.LBB11_624:
	movsd	.LCPI11_213(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_625
	jp	.LBB11_625
	jmp	.LBB11_626
.LBB11_625:
	jmp	.LBB11_627
.LBB11_626:
	jmp	.LBB11_987
.LBB11_627:
	movsd	.LCPI11_214(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_628
	jp	.LBB11_628
	jmp	.LBB11_629
.LBB11_628:
	jmp	.LBB11_630
.LBB11_629:
	jmp	.LBB11_988
.LBB11_630:
	movsd	.LCPI11_215(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_631
	jp	.LBB11_631
	jmp	.LBB11_632
.LBB11_631:
	jmp	.LBB11_633
.LBB11_632:
	jmp	.LBB11_989
.LBB11_633:
	movsd	.LCPI11_216(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_634
	jp	.LBB11_634
	jmp	.LBB11_635
.LBB11_634:
	jmp	.LBB11_636
.LBB11_635:
	jmp	.LBB11_990
.LBB11_636:
	movsd	.LCPI11_217(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_637
	jp	.LBB11_637
	jmp	.LBB11_638
.LBB11_637:
	jmp	.LBB11_639
.LBB11_638:
	jmp	.LBB11_991
.LBB11_639:
	movsd	.LCPI11_218(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_640
	jp	.LBB11_640
	jmp	.LBB11_641
.LBB11_640:
	jmp	.LBB11_642
.LBB11_641:
	jmp	.LBB11_992
.LBB11_642:
	movsd	.LCPI11_219(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_643
	jp	.LBB11_643
	jmp	.LBB11_644
.LBB11_643:
	jmp	.LBB11_645
.LBB11_644:
	jmp	.LBB11_993
.LBB11_645:
	movsd	.LCPI11_220(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_646
	jp	.LBB11_646
	jmp	.LBB11_647
.LBB11_646:
	jmp	.LBB11_648
.LBB11_647:
	jmp	.LBB11_994
.LBB11_648:
	movsd	.LCPI11_221(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_649
	jp	.LBB11_649
	jmp	.LBB11_650
.LBB11_649:
	jmp	.LBB11_651
.LBB11_650:
	jmp	.LBB11_995
.LBB11_651:
	movsd	.LCPI11_222(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_652
	jp	.LBB11_652
	jmp	.LBB11_653
.LBB11_652:
	jmp	.LBB11_654
.LBB11_653:
	jmp	.LBB11_996
.LBB11_654:
	movsd	.LCPI11_223(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_655
	jp	.LBB11_655
	jmp	.LBB11_656
.LBB11_655:
	jmp	.LBB11_657
.LBB11_656:
	jmp	.LBB11_997
.LBB11_657:
	movsd	.LCPI11_224(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_658
	jp	.LBB11_658
	jmp	.LBB11_659
.LBB11_658:
	jmp	.LBB11_660
.LBB11_659:
	jmp	.LBB11_998
.LBB11_660:
	movsd	.LCPI11_225(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_661
	jp	.LBB11_661
	jmp	.LBB11_662
.LBB11_661:
	jmp	.LBB11_663
.LBB11_662:
	jmp	.LBB11_999
.LBB11_663:
	movsd	.LCPI11_226(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_664
	jp	.LBB11_664
	jmp	.LBB11_665
.LBB11_664:
	jmp	.LBB11_666
.LBB11_665:
	jmp	.LBB11_1000
.LBB11_666:
	movsd	.LCPI11_227(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_667
	jp	.LBB11_667
	jmp	.LBB11_668
.LBB11_667:
	jmp	.LBB11_669
.LBB11_668:
	jmp	.LBB11_1001
.LBB11_669:
	movsd	.LCPI11_228(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_670
	jp	.LBB11_670
	jmp	.LBB11_671
.LBB11_670:
	jmp	.LBB11_672
.LBB11_671:
	jmp	.LBB11_1002
.LBB11_672:
	movsd	.LCPI11_105(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_673
	jp	.LBB11_673
	jmp	.LBB11_674
.LBB11_673:
	jmp	.LBB11_675
.LBB11_674:
	jmp	.LBB11_1003
.LBB11_675:
	movsd	.LCPI11_229(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_676
	jp	.LBB11_676
	jmp	.LBB11_677
.LBB11_676:
	jmp	.LBB11_678
.LBB11_677:
	jmp	.LBB11_1004
.LBB11_678:
	movsd	.LCPI11_230(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_679
	jp	.LBB11_679
	jmp	.LBB11_680
.LBB11_679:
	jmp	.LBB11_681
.LBB11_680:
	jmp	.LBB11_1005
.LBB11_681:
	movsd	.LCPI11_231(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_682
	jp	.LBB11_682
	jmp	.LBB11_683
.LBB11_682:
	jmp	.LBB11_684
.LBB11_683:
	jmp	.LBB11_1006
.LBB11_684:
	movsd	.LCPI11_83(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_685
	jp	.LBB11_685
	jmp	.LBB11_686
.LBB11_685:
	jmp	.LBB11_687
.LBB11_686:
	jmp	.LBB11_1007
.LBB11_687:
	movsd	.LCPI11_232(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_688
	jp	.LBB11_688
	jmp	.LBB11_689
.LBB11_688:
	jmp	.LBB11_690
.LBB11_689:
	jmp	.LBB11_1008
.LBB11_690:
	movsd	.LCPI11_233(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_691
	jp	.LBB11_691
	jmp	.LBB11_692
.LBB11_691:
	jmp	.LBB11_693
.LBB11_692:
	jmp	.LBB11_1009
.LBB11_693:
	movsd	.LCPI11_234(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_694
	jp	.LBB11_694
	jmp	.LBB11_695
.LBB11_694:
	jmp	.LBB11_696
.LBB11_695:
	jmp	.LBB11_1010
.LBB11_696:
	movsd	.LCPI11_52(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_697
	jp	.LBB11_697
	jmp	.LBB11_698
.LBB11_697:
	jmp	.LBB11_699
.LBB11_698:
	jmp	.LBB11_1011
.LBB11_699:
	movsd	.LCPI11_235(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_700
	jp	.LBB11_700
	jmp	.LBB11_701
.LBB11_700:
	jmp	.LBB11_702
.LBB11_701:
	jmp	.LBB11_1012
.LBB11_702:
	movsd	.LCPI11_236(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_703
	jp	.LBB11_703
	jmp	.LBB11_704
.LBB11_703:
	jmp	.LBB11_705
.LBB11_704:
	jmp	.LBB11_1013
.LBB11_705:
	movsd	.LCPI11_237(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_706
	jp	.LBB11_706
	jmp	.LBB11_707
.LBB11_706:
	jmp	.LBB11_708
.LBB11_707:
	jmp	.LBB11_1014
.LBB11_708:
	movsd	.LCPI11_238(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_709
	jp	.LBB11_709
	jmp	.LBB11_710
.LBB11_709:
	jmp	.LBB11_711
.LBB11_710:
	jmp	.LBB11_1015
.LBB11_711:
	movsd	.LCPI11_239(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_712
	jp	.LBB11_712
	jmp	.LBB11_713
.LBB11_712:
	jmp	.LBB11_714
.LBB11_713:
	jmp	.LBB11_1016
.LBB11_714:
	movsd	.LCPI11_240(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_715
	jp	.LBB11_715
	jmp	.LBB11_716
.LBB11_715:
	jmp	.LBB11_717
.LBB11_716:
	jmp	.LBB11_1017
.LBB11_717:
	movsd	.LCPI11_241(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_718
	jp	.LBB11_718
	jmp	.LBB11_719
.LBB11_718:
	jmp	.LBB11_720
.LBB11_719:
	jmp	.LBB11_1018
.LBB11_720:
	movsd	.LCPI11_107(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_721
	jp	.LBB11_721
	jmp	.LBB11_722
.LBB11_721:
	jmp	.LBB11_723
.LBB11_722:
	jmp	.LBB11_1019
.LBB11_723:
	movsd	.LCPI11_242(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_724
	jp	.LBB11_724
	jmp	.LBB11_725
.LBB11_724:
	jmp	.LBB11_726
.LBB11_725:
	jmp	.LBB11_1020
.LBB11_726:
	movsd	.LCPI11_243(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_727
	jp	.LBB11_727
	jmp	.LBB11_728
.LBB11_727:
	jmp	.LBB11_729
.LBB11_728:
	jmp	.LBB11_1021
.LBB11_729:
	movsd	.LCPI11_244(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_730
	jp	.LBB11_730
	jmp	.LBB11_731
.LBB11_730:
	jmp	.LBB11_732
.LBB11_731:
	jmp	.LBB11_1022
.LBB11_732:
	movsd	.LCPI11_245(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_733
	jp	.LBB11_733
	jmp	.LBB11_734
.LBB11_733:
	jmp	.LBB11_735
.LBB11_734:
	jmp	.LBB11_1023
.LBB11_735:
	movsd	.LCPI11_246(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_736
	jp	.LBB11_736
	jmp	.LBB11_737
.LBB11_736:
	jmp	.LBB11_738
.LBB11_737:
	jmp	.LBB11_1024
.LBB11_738:
	movsd	.LCPI11_247(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_739
	jp	.LBB11_739
	jmp	.LBB11_740
.LBB11_739:
	jmp	.LBB11_741
.LBB11_740:
	jmp	.LBB11_1025
.LBB11_741:
	movsd	.LCPI11_248(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_742
	jp	.LBB11_742
	jmp	.LBB11_743
.LBB11_742:
	jmp	.LBB11_744
.LBB11_743:
	jmp	.LBB11_1026
.LBB11_744:
	movsd	.LCPI11_249(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_745
	jp	.LBB11_745
	jmp	.LBB11_746
.LBB11_745:
	jmp	.LBB11_747
.LBB11_746:
	jmp	.LBB11_1027
.LBB11_747:
	movsd	.LCPI11_250(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_748
	jp	.LBB11_748
	jmp	.LBB11_749
.LBB11_748:
	jmp	.LBB11_750
.LBB11_749:
	jmp	.LBB11_1028
.LBB11_750:
	movsd	.LCPI11_251(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_751
	jp	.LBB11_751
	jmp	.LBB11_752
.LBB11_751:
	jmp	.LBB11_753
.LBB11_752:
	jmp	.LBB11_1029
.LBB11_753:
	movsd	.LCPI11_252(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_754
	jp	.LBB11_754
	jmp	.LBB11_755
.LBB11_754:
	jmp	.LBB11_756
.LBB11_755:
	jmp	.LBB11_1030
.LBB11_756:
	movsd	.LCPI11_253(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_757
	jp	.LBB11_757
	jmp	.LBB11_758
.LBB11_757:
	jmp	.LBB11_759
.LBB11_758:
	jmp	.LBB11_1031
.LBB11_759:
	movsd	.LCPI11_254(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_760
	jp	.LBB11_760
	jmp	.LBB11_761
.LBB11_760:
	jmp	.LBB11_762
.LBB11_761:
	jmp	.LBB11_1032
.LBB11_762:
	movsd	.LCPI11_255(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_763
	jp	.LBB11_763
	jmp	.LBB11_764
.LBB11_763:
	jmp	.LBB11_765
.LBB11_764:
	jmp	.LBB11_1033
.LBB11_765:
	movsd	.LCPI11_256(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_766
	jp	.LBB11_766
	jmp	.LBB11_767
.LBB11_766:
	jmp	.LBB11_768
.LBB11_767:
	jmp	.LBB11_1034
.LBB11_768:
	movsd	.LCPI11_257(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_769
	jp	.LBB11_769
	jmp	.LBB11_770
.LBB11_769:
	jmp	.LBB11_771
.LBB11_770:
	jmp	.LBB11_1035
.LBB11_771:
	movsd	.LCPI11_258(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_772
	jp	.LBB11_772
	jmp	.LBB11_773
.LBB11_772:
	jmp	.LBB11_774
.LBB11_773:
	jmp	.LBB11_1036
.LBB11_774:
	movsd	.LCPI11_259(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_775
	jp	.LBB11_775
	jmp	.LBB11_776
.LBB11_775:
	jmp	.LBB11_777
.LBB11_776:
	jmp	.LBB11_1037
.LBB11_777:
	movsd	.LCPI11_260(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_778
	jp	.LBB11_778
	jmp	.LBB11_779
.LBB11_778:
	jmp	.LBB11_780
.LBB11_779:
	jmp	.LBB11_1038
.LBB11_780:
	movsd	.LCPI11_18(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_781
	jp	.LBB11_781
	jmp	.LBB11_782
.LBB11_781:
	jmp	.LBB11_783
.LBB11_782:
	jmp	.LBB11_1039
.LBB11_783:
	jmp	.LBB11_1040
.LBB11_784:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_785:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_8(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_786:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_8(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_787:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_8(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_8(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_788:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_8(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_789:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_8(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_8(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_790:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_8(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_791:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_8(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_8(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_8(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_792:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_793:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_794:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_795:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_796:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_797:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_798:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_799:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_800:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_801:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_27(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_27(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_27(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_802:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_803:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_804:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_805:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_34(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_34(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_34(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_806:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_807:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_38(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_38(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_38(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_808:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_809:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_42(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_42(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_42(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_810:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_44(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_44(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_44(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_811:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_46(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_46(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_46(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_812:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_813:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_50(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_50(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_50(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_814:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_52(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_52(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_52(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_815:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_816:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_817:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_818:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_819:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_59(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_820:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_821:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_59(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_822:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_823:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_824:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_825:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_826:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_827:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_59(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_828:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_829:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_59(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_830:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_831:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_832:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_833:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_834:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_835:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_59(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_836:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_837:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_59(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_838:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_839:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_840:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_841:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_80(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_842:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_59(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_843:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_83(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_844:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_845:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_83(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_846:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_59(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_847:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_80(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_848:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_849:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_80(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_850:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_59(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_851:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_83(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_852:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_853:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_83(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_854:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_59(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_855:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_80(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_856:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_857:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_80(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_858:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_59(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_859:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_83(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_860:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_861:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_83(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_862:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_59(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_863:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_80(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_864:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_865:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_103(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_866:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_105(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_867:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_107(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_868:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_869:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_107(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_870:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_105(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_871:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_103(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_872:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_873:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_103(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_874:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_105(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_875:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_107(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_876:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_877:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_107(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_878:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_105(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_879:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_103(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_880:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_881:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_103(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_882:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_105(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_883:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_107(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_884:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_885:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_107(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_886:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_105(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_887:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_103(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_888:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_889:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_47(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_890:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_891:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_892:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_893:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_894:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_895:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_47(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_896:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_897:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_47(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_898:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_899:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_900:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_901:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_902:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_903:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_47(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_904:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_905:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_47(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_906:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_907:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_908:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_909:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_910:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_911:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_47(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_912:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_913:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_34(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_914:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_915:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_38(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_916:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_917:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_38(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_918:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_919:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_34(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_920:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_921:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_34(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_922:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_923:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_38(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_924:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_925:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_38(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_926:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_927:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_34(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_928:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_929:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_34(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_930:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_931:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_38(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_932:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_933:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_38(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_934:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_935:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_34(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_936:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_937:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_112(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_938:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_38(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_939:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_127(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_940:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_941:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_127(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_942:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_38(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_943:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_112(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_944:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_945:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_112(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_946:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_38(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_947:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_127(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_948:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_949:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_127(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_950:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_38(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_951:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_112(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_952:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_953:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_112(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_954:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_38(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_955:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_127(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_956:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_957:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_127(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_958:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_38(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_959:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_112(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_960:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_961:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_25(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_962:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_963:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_964:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_965:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_966:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_967:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_25(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_968:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_969:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_25(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_970:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_971:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_972:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_973:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_974:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_975:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_25(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_976:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_977:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_25(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_978:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_979:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_980:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_981:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_982:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_983:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_25(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_984:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_985:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_64(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_986:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_987:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_988:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_989:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_990:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_991:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_64(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_992:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_993:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_64(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_994:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_995:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_996:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_997:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_998:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_999:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_64(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1000:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1001:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_64(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1002:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1003:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1004:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1005:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1006:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1007:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_64(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1008:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1009:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1010:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_76(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1011:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_85(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1012:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1013:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_85(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1014:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_76(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1015:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1016:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1017:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1018:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_76(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1019:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_85(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1020:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1021:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_85(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1022:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_76(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1023:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1024:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1025:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1026:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_76(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1027:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_85(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1028:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1029:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_85(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1030:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_76(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1031:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1032:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_191(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1033:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_205(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1034:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_74(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1035:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_74(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_74(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1036:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_74(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1037:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_124(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_124(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1038:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_124(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_1040
.LBB11_1039:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_64(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_64(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_64(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
.LBB11_1040:
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movzwl	VMCSB$(%rip), %eax
	movl	%eax, %ecx
	cvtsi2sd	%rcx, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB11_1041
	jp	.LBB11_1041
	jmp	.LBB11_1042
.LBB11_1041:
	jmp	.LBB11_1063
.LBB11_1042:
	movsd	-2232(%rbp), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
	movq	%rax, -2240(%rbp)
	jmp	.LBB11_1059
.Ltmp0:                                 # Block address taken
.LBB11_1043:
	movq	-2216(%rbp), %rax
	movq	$0, 395608(%rax)
	movq	-2216(%rbp), %rax
	movsd	395608(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
                                        # kill: def $ax killed $ax killed $rax
	movzwl	%ax, %edx
	movl	%edx, %ecx
	shrq	$8, %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	cvtsi2sd	%ecx, %xmm0
	movq	-2216(%rbp), %rsi
	movzwl	HIBASE$(%rip), %ecx
	movl	%ecx, %edi
	shlq	$3, %rdi
	movsd	%xmm0, (%rsi,%rdi)
	jmp	.LBB11_1062
.Ltmp1:                                 # Block address taken
.LBB11_1044:
	movq	-2216(%rbp), %rax
	movabsq	$4652218415073722368, %rcx # imm = 0x4090000000000000
	movq	%rcx, 395608(%rax)
	movq	-2216(%rbp), %rax
	movsd	395608(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
                                        # kill: def $ax killed $ax killed $rax
	movzwl	%ax, %edx
	movl	%edx, %ecx
	shrq	$8, %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	cvtsi2sd	%ecx, %xmm0
	movq	-2216(%rbp), %rsi
	movzwl	HIBASE$(%rip), %ecx
	movl	%ecx, %edi
	shlq	$3, %rdi
	movsd	%xmm0, (%rsi,%rdi)
	jmp	.LBB11_1062
.Ltmp2:                                 # Block address taken
.LBB11_1045:
	movq	-2216(%rbp), %rax
	movabsq	$4656722014701092864, %rcx # imm = 0x40A0000000000000
	movq	%rcx, 395608(%rax)
	movq	-2216(%rbp), %rax
	movsd	395608(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
                                        # kill: def $ax killed $ax killed $rax
	movzwl	%ax, %edx
	movl	%edx, %ecx
	shrq	$8, %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	cvtsi2sd	%ecx, %xmm0
	movq	-2216(%rbp), %rsi
	movzwl	HIBASE$(%rip), %ecx
	movl	%ecx, %edi
	shlq	$3, %rdi
	movsd	%xmm0, (%rsi,%rdi)
	jmp	.LBB11_1062
.Ltmp3:                                 # Block address taken
.LBB11_1046:
	movq	-2216(%rbp), %rax
	movabsq	$4658973814514778112, %rcx # imm = 0x40A8000000000000
	movq	%rcx, 395608(%rax)
	movq	-2216(%rbp), %rax
	movsd	395608(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
                                        # kill: def $ax killed $ax killed $rax
	movzwl	%ax, %edx
	movl	%edx, %ecx
	shrq	$8, %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	cvtsi2sd	%ecx, %xmm0
	movq	-2216(%rbp), %rsi
	movzwl	HIBASE$(%rip), %ecx
	movl	%ecx, %edi
	shlq	$3, %rdi
	movsd	%xmm0, (%rsi,%rdi)
	jmp	.LBB11_1062
.Ltmp4:                                 # Block address taken
.LBB11_1047:
	movq	-2216(%rbp), %rax
	movabsq	$4661225614328463360, %rcx # imm = 0x40B0000000000000
	movq	%rcx, 395608(%rax)
	movq	-2216(%rbp), %rax
	movsd	395608(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
                                        # kill: def $ax killed $ax killed $rax
	movzwl	%ax, %edx
	movl	%edx, %ecx
	shrq	$8, %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	cvtsi2sd	%ecx, %xmm0
	movq	-2216(%rbp), %rsi
	movzwl	HIBASE$(%rip), %ecx
	movl	%ecx, %edi
	shlq	$3, %rdi
	movsd	%xmm0, (%rsi,%rdi)
	jmp	.LBB11_1062
.Ltmp5:                                 # Block address taken
.LBB11_1048:
	movq	-2216(%rbp), %rax
	movabsq	$4662351514235305984, %rcx # imm = 0x40B4000000000000
	movq	%rcx, 395608(%rax)
	movq	-2216(%rbp), %rax
	movsd	395608(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
                                        # kill: def $ax killed $ax killed $rax
	movzwl	%ax, %edx
	movl	%edx, %ecx
	shrq	$8, %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	cvtsi2sd	%ecx, %xmm0
	movq	-2216(%rbp), %rsi
	movzwl	HIBASE$(%rip), %ecx
	movl	%ecx, %edi
	shlq	$3, %rdi
	movsd	%xmm0, (%rsi,%rdi)
	jmp	.LBB11_1062
.Ltmp6:                                 # Block address taken
.LBB11_1049:
	movq	-2216(%rbp), %rax
	movabsq	$4663477414142148608, %rcx # imm = 0x40B8000000000000
	movq	%rcx, 395608(%rax)
	movq	-2216(%rbp), %rax
	movsd	395608(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
                                        # kill: def $ax killed $ax killed $rax
	movzwl	%ax, %edx
	movl	%edx, %ecx
	shrq	$8, %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	cvtsi2sd	%ecx, %xmm0
	movq	-2216(%rbp), %rsi
	movzwl	HIBASE$(%rip), %ecx
	movl	%ecx, %edi
	shlq	$3, %rdi
	movsd	%xmm0, (%rsi,%rdi)
	jmp	.LBB11_1062
.Ltmp7:                                 # Block address taken
.LBB11_1050:
	movq	-2216(%rbp), %rax
	movabsq	$4664603314048991232, %rcx # imm = 0x40BC000000000000
	movq	%rcx, 395608(%rax)
	movq	-2216(%rbp), %rax
	movsd	395608(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
                                        # kill: def $ax killed $ax killed $rax
	movzwl	%ax, %edx
	movl	%edx, %ecx
	shrq	$8, %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	cvtsi2sd	%ecx, %xmm0
	movq	-2216(%rbp), %rsi
	movzwl	HIBASE$(%rip), %ecx
	movl	%ecx, %edi
	shlq	$3, %rdi
	movsd	%xmm0, (%rsi,%rdi)
	jmp	.LBB11_1062
.Ltmp8:                                 # Block address taken
.LBB11_1051:
	movq	-2216(%rbp), %rax
	movabsq	$4665729213955833856, %rcx # imm = 0x40C0000000000000
	movq	%rcx, 395608(%rax)
	movq	-2216(%rbp), %rax
	movsd	395608(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
                                        # kill: def $ax killed $ax killed $rax
	movzwl	%ax, %edx
	movl	%edx, %ecx
	shrq	$8, %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	cvtsi2sd	%ecx, %xmm0
	movq	-2216(%rbp), %rsi
	movzwl	HIBASE$(%rip), %ecx
	movl	%ecx, %edi
	shlq	$3, %rdi
	movsd	%xmm0, (%rsi,%rdi)
	jmp	.LBB11_1062
.Ltmp9:                                 # Block address taken
.LBB11_1052:
	movq	-2216(%rbp), %rax
	movabsq	$4666292163909255168, %rcx # imm = 0x40C2000000000000
	movq	%rcx, 395608(%rax)
	movq	-2216(%rbp), %rax
	movsd	395608(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
                                        # kill: def $ax killed $ax killed $rax
	movzwl	%ax, %edx
	movl	%edx, %ecx
	shrq	$8, %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	cvtsi2sd	%ecx, %xmm0
	movq	-2216(%rbp), %rsi
	movzwl	HIBASE$(%rip), %ecx
	movl	%ecx, %edi
	shlq	$3, %rdi
	movsd	%xmm0, (%rsi,%rdi)
	jmp	.LBB11_1062
.Ltmp10:                                # Block address taken
.LBB11_1053:
	movq	-2216(%rbp), %rax
	movabsq	$4666855113862676480, %rcx # imm = 0x40C4000000000000
	movq	%rcx, 395608(%rax)
	movq	-2216(%rbp), %rax
	movsd	395608(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
                                        # kill: def $ax killed $ax killed $rax
	movzwl	%ax, %edx
	movl	%edx, %ecx
	shrq	$8, %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	cvtsi2sd	%ecx, %xmm0
	movq	-2216(%rbp), %rsi
	movzwl	HIBASE$(%rip), %ecx
	movl	%ecx, %edi
	shlq	$3, %rdi
	movsd	%xmm0, (%rsi,%rdi)
	jmp	.LBB11_1062
.Ltmp11:                                # Block address taken
.LBB11_1054:
	movq	-2216(%rbp), %rax
	movabsq	$4667418063816097792, %rcx # imm = 0x40C6000000000000
	movq	%rcx, 395608(%rax)
	movq	-2216(%rbp), %rax
	movsd	395608(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
                                        # kill: def $ax killed $ax killed $rax
	movzwl	%ax, %edx
	movl	%edx, %ecx
	shrq	$8, %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	cvtsi2sd	%ecx, %xmm0
	movq	-2216(%rbp), %rsi
	movzwl	HIBASE$(%rip), %ecx
	movl	%ecx, %edi
	shlq	$3, %rdi
	movsd	%xmm0, (%rsi,%rdi)
	jmp	.LBB11_1062
.Ltmp12:                                # Block address taken
.LBB11_1055:
	movq	-2216(%rbp), %rax
	movabsq	$4667981013769519104, %rcx # imm = 0x40C8000000000000
	movq	%rcx, 395608(%rax)
	movq	-2216(%rbp), %rax
	movsd	395608(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
                                        # kill: def $ax killed $ax killed $rax
	movzwl	%ax, %edx
	movl	%edx, %ecx
	shrq	$8, %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	cvtsi2sd	%ecx, %xmm0
	movq	-2216(%rbp), %rsi
	movzwl	HIBASE$(%rip), %ecx
	movl	%ecx, %edi
	shlq	$3, %rdi
	movsd	%xmm0, (%rsi,%rdi)
	jmp	.LBB11_1062
.Ltmp13:                                # Block address taken
.LBB11_1056:
	movq	-2216(%rbp), %rax
	movabsq	$4668543963722940416, %rcx # imm = 0x40CA000000000000
	movq	%rcx, 395608(%rax)
	movq	-2216(%rbp), %rax
	movsd	395608(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
                                        # kill: def $ax killed $ax killed $rax
	movzwl	%ax, %edx
	movl	%edx, %ecx
	shrq	$8, %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	cvtsi2sd	%ecx, %xmm0
	movq	-2216(%rbp), %rsi
	movzwl	HIBASE$(%rip), %ecx
	movl	%ecx, %edi
	shlq	$3, %rdi
	movsd	%xmm0, (%rsi,%rdi)
	jmp	.LBB11_1062
.Ltmp14:                                # Block address taken
.LBB11_1057:
	movq	-2216(%rbp), %rax
	movabsq	$4669106913676361728, %rcx # imm = 0x40CC000000000000
	movq	%rcx, 395608(%rax)
	movq	-2216(%rbp), %rax
	movsd	395608(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
                                        # kill: def $ax killed $ax killed $rax
	movzwl	%ax, %edx
	movl	%edx, %ecx
	shrq	$8, %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	cvtsi2sd	%ecx, %xmm0
	movq	-2216(%rbp), %rsi
	movsd	%xmm0, 5184(%rsi)
	jmp	.LBB11_1062
.Ltmp15:                                # Block address taken
.LBB11_1058:
	movq	-2216(%rbp), %rax
	movabsq	$4669669863629783040, %rcx # imm = 0x40CE000000000000
	movq	%rcx, 395608(%rax)
	movq	-2216(%rbp), %rax
	movsd	395608(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
                                        # kill: def $ax killed $ax killed $rax
	movzwl	%ax, %edx
	movl	%edx, %ecx
	shrq	$8, %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	cvtsi2sd	%ecx, %xmm0
	movq	-2216(%rbp), %rsi
	movzwl	HIBASE$(%rip), %ecx
	movl	%ecx, %edi
	shlq	$3, %rdi
	movsd	%xmm0, (%rsi,%rdi)
	jmp	.LBB11_1062
.LBB11_1059:
	movq	-2240(%rbp), %rax
	subq	$15, %rax
	cmpq	$240, %rax
	jbe	.LBB11_1061
# %bb.1060:
	jmp	.LBB11_1062
.LBB11_1061:
	movq	-2240(%rbp), %rax
	subq	$15, %rax
	leaq	_ZN8MEMORY_T6POKE64Edd.tmp$2479(%rip), %rcx
	movq	(%rcx,%rax,8), %rax
	movq	%rax, -15848(%rbp)      # 8-byte Spill
	jmp	.LBB11_6020
.Ltmp16:                                # Block address taken
.LBB11_1062:
	jmp	.LBB11_2370
.LBB11_1063:
	xorl	%eax, %eax
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movzwl	SP0X$(%rip), %ecx
	movl	%ecx, %edx
	cvtsi2sd	%rdx, %xmm1
	ucomisd	%xmm1, %xmm0
	sete	%sil
	setnp	%dil
	andb	%dil, %sil
	andb	$1, %sil
	movzbl	%sil, %ecx
	movl	%eax, %r8d
	subl	%ecx, %r8d
	movslq	%r8d, %rdx
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movzwl	SP1X$(%rip), %ecx
	movl	%ecx, %r9d
	cvtsi2sd	%r9, %xmm1
	ucomisd	%xmm1, %xmm0
	sete	%sil
	setnp	%dil
	andb	%dil, %sil
	andb	$1, %sil
	movzbl	%sil, %ecx
	movl	%eax, %r8d
	subl	%ecx, %r8d
	movslq	%r8d, %r9
	orq	%r9, %rdx
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movzwl	SP2X$(%rip), %ecx
	movl	%ecx, %r9d
	cvtsi2sd	%r9, %xmm1
	ucomisd	%xmm1, %xmm0
	sete	%sil
	setnp	%dil
	andb	%dil, %sil
	andb	$1, %sil
	movzbl	%sil, %ecx
	movl	%eax, %r8d
	subl	%ecx, %r8d
	movslq	%r8d, %r9
	orq	%r9, %rdx
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movzwl	SP3X$(%rip), %ecx
	movl	%ecx, %r9d
	cvtsi2sd	%r9, %xmm1
	ucomisd	%xmm1, %xmm0
	sete	%sil
	setnp	%dil
	andb	%dil, %sil
	andb	$1, %sil
	movzbl	%sil, %ecx
	movl	%eax, %r8d
	subl	%ecx, %r8d
	movslq	%r8d, %r9
	orq	%r9, %rdx
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movzwl	SP4X$(%rip), %ecx
	movl	%ecx, %r9d
	cvtsi2sd	%r9, %xmm1
	ucomisd	%xmm1, %xmm0
	sete	%sil
	setnp	%dil
	andb	%dil, %sil
	andb	$1, %sil
	movzbl	%sil, %ecx
	movl	%eax, %r8d
	subl	%ecx, %r8d
	movslq	%r8d, %r9
	orq	%r9, %rdx
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movzwl	SP5X$(%rip), %ecx
	movl	%ecx, %r9d
	cvtsi2sd	%r9, %xmm1
	ucomisd	%xmm1, %xmm0
	sete	%sil
	setnp	%dil
	andb	%dil, %sil
	andb	$1, %sil
	movzbl	%sil, %ecx
	movl	%eax, %r8d
	subl	%ecx, %r8d
	movslq	%r8d, %r9
	orq	%r9, %rdx
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movzwl	SP6X$(%rip), %ecx
	movl	%ecx, %r9d
	cvtsi2sd	%r9, %xmm1
	ucomisd	%xmm1, %xmm0
	sete	%sil
	setnp	%dil
	andb	%dil, %sil
	andb	$1, %sil
	movzbl	%sil, %ecx
	movl	%eax, %r8d
	subl	%ecx, %r8d
	movslq	%r8d, %r9
	orq	%r9, %rdx
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movzwl	SP7X$(%rip), %ecx
	movl	%ecx, %r9d
	cvtsi2sd	%r9, %xmm1
	ucomisd	%xmm1, %xmm0
	sete	%sil
	setnp	%dil
	andb	%dil, %sil
	andb	$1, %sil
	movzbl	%sil, %ecx
	subl	%ecx, %eax
	movslq	%eax, %r9
	orq	%r9, %rdx
	cmpq	$0, %rdx
	jne	.LBB11_1065
# %bb.1064:
	jmp	.LBB11_1066
.LBB11_1065:
	movsd	-2232(%rbp), %xmm0      # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	movsd	%xmm0, -15856(%rbp)     # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rax, -15864(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-15864(%rbp), %rcx      # 8-byte Reload
	movsd	-15856(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	%xmm0, (%rcx,%rax)
	jmp	.LBB11_2370
.LBB11_1066:
	xorl	%eax, %eax
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movzwl	SP0Y$(%rip), %ecx
	movl	%ecx, %edx
	cvtsi2sd	%rdx, %xmm1
	ucomisd	%xmm1, %xmm0
	sete	%sil
	setnp	%dil
	andb	%dil, %sil
	andb	$1, %sil
	movzbl	%sil, %ecx
	movl	%eax, %r8d
	subl	%ecx, %r8d
	movslq	%r8d, %rdx
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movzwl	SP1Y$(%rip), %ecx
	movl	%ecx, %r9d
	cvtsi2sd	%r9, %xmm1
	ucomisd	%xmm1, %xmm0
	sete	%sil
	setnp	%dil
	andb	%dil, %sil
	andb	$1, %sil
	movzbl	%sil, %ecx
	movl	%eax, %r8d
	subl	%ecx, %r8d
	movslq	%r8d, %r9
	orq	%r9, %rdx
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movzwl	SP2Y$(%rip), %ecx
	movl	%ecx, %r9d
	cvtsi2sd	%r9, %xmm1
	ucomisd	%xmm1, %xmm0
	sete	%sil
	setnp	%dil
	andb	%dil, %sil
	andb	$1, %sil
	movzbl	%sil, %ecx
	movl	%eax, %r8d
	subl	%ecx, %r8d
	movslq	%r8d, %r9
	orq	%r9, %rdx
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movzwl	SP3Y$(%rip), %ecx
	movl	%ecx, %r9d
	cvtsi2sd	%r9, %xmm1
	ucomisd	%xmm1, %xmm0
	sete	%sil
	setnp	%dil
	andb	%dil, %sil
	andb	$1, %sil
	movzbl	%sil, %ecx
	movl	%eax, %r8d
	subl	%ecx, %r8d
	movslq	%r8d, %r9
	orq	%r9, %rdx
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movzwl	SP4Y$(%rip), %ecx
	movl	%ecx, %r9d
	cvtsi2sd	%r9, %xmm1
	ucomisd	%xmm1, %xmm0
	sete	%sil
	setnp	%dil
	andb	%dil, %sil
	andb	$1, %sil
	movzbl	%sil, %ecx
	movl	%eax, %r8d
	subl	%ecx, %r8d
	movslq	%r8d, %r9
	orq	%r9, %rdx
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movzwl	SP5Y$(%rip), %ecx
	movl	%ecx, %r9d
	cvtsi2sd	%r9, %xmm1
	ucomisd	%xmm1, %xmm0
	sete	%sil
	setnp	%dil
	andb	%dil, %sil
	andb	$1, %sil
	movzbl	%sil, %ecx
	movl	%eax, %r8d
	subl	%ecx, %r8d
	movslq	%r8d, %r9
	orq	%r9, %rdx
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movzwl	SP6Y$(%rip), %ecx
	movl	%ecx, %r9d
	cvtsi2sd	%r9, %xmm1
	ucomisd	%xmm1, %xmm0
	sete	%sil
	setnp	%dil
	andb	%dil, %sil
	andb	$1, %sil
	movzbl	%sil, %ecx
	movl	%eax, %r8d
	subl	%ecx, %r8d
	movslq	%r8d, %r9
	orq	%r9, %rdx
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movzwl	SP7Y$(%rip), %ecx
	movl	%ecx, %r9d
	cvtsi2sd	%r9, %xmm1
	ucomisd	%xmm1, %xmm0
	sete	%sil
	setnp	%dil
	andb	%dil, %sil
	andb	$1, %sil
	movzbl	%sil, %ecx
	subl	%ecx, %eax
	movslq	%eax, %r9
	orq	%r9, %rdx
	cmpq	$0, %rdx
	jne	.LBB11_1068
# %bb.1067:
	jmp	.LBB11_1069
.LBB11_1068:
	movsd	-2232(%rbp), %xmm0      # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	movsd	%xmm0, -15872(%rbp)     # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rax, -15880(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-15880(%rbp), %rcx      # 8-byte Reload
	movsd	-15872(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	%xmm0, (%rcx,%rax)
	jmp	.LBB11_2370
.LBB11_1069:
	xorl	%eax, %eax
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movzwl	SP0COL$(%rip), %ecx
	movl	%ecx, %edx
	cvtsi2sd	%rdx, %xmm1
	ucomisd	%xmm1, %xmm0
	sete	%sil
	setnp	%dil
	andb	%dil, %sil
	andb	$1, %sil
	movzbl	%sil, %ecx
	movl	%eax, %r8d
	subl	%ecx, %r8d
	movslq	%r8d, %rdx
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movzwl	SP1COL$(%rip), %ecx
	movl	%ecx, %r9d
	cvtsi2sd	%r9, %xmm1
	ucomisd	%xmm1, %xmm0
	sete	%sil
	setnp	%dil
	andb	%dil, %sil
	andb	$1, %sil
	movzbl	%sil, %ecx
	movl	%eax, %r8d
	subl	%ecx, %r8d
	movslq	%r8d, %r9
	orq	%r9, %rdx
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movzwl	SP2COL$(%rip), %ecx
	movl	%ecx, %r9d
	cvtsi2sd	%r9, %xmm1
	ucomisd	%xmm1, %xmm0
	sete	%sil
	setnp	%dil
	andb	%dil, %sil
	andb	$1, %sil
	movzbl	%sil, %ecx
	movl	%eax, %r8d
	subl	%ecx, %r8d
	movslq	%r8d, %r9
	orq	%r9, %rdx
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movzwl	SP3COL$(%rip), %ecx
	movl	%ecx, %r9d
	cvtsi2sd	%r9, %xmm1
	ucomisd	%xmm1, %xmm0
	sete	%sil
	setnp	%dil
	andb	%dil, %sil
	andb	$1, %sil
	movzbl	%sil, %ecx
	movl	%eax, %r8d
	subl	%ecx, %r8d
	movslq	%r8d, %r9
	orq	%r9, %rdx
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movzwl	SP4COL$(%rip), %ecx
	movl	%ecx, %r9d
	cvtsi2sd	%r9, %xmm1
	ucomisd	%xmm1, %xmm0
	sete	%sil
	setnp	%dil
	andb	%dil, %sil
	andb	$1, %sil
	movzbl	%sil, %ecx
	movl	%eax, %r8d
	subl	%ecx, %r8d
	movslq	%r8d, %r9
	orq	%r9, %rdx
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movzwl	SP5COL$(%rip), %ecx
	movl	%ecx, %r9d
	cvtsi2sd	%r9, %xmm1
	ucomisd	%xmm1, %xmm0
	sete	%sil
	setnp	%dil
	andb	%dil, %sil
	andb	$1, %sil
	movzbl	%sil, %ecx
	movl	%eax, %r8d
	subl	%ecx, %r8d
	movslq	%r8d, %r9
	orq	%r9, %rdx
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movzwl	SP6COL$(%rip), %ecx
	movl	%ecx, %r9d
	cvtsi2sd	%r9, %xmm1
	ucomisd	%xmm1, %xmm0
	sete	%sil
	setnp	%dil
	andb	%dil, %sil
	andb	$1, %sil
	movzbl	%sil, %ecx
	movl	%eax, %r8d
	subl	%ecx, %r8d
	movslq	%r8d, %r9
	orq	%r9, %rdx
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movzwl	SP7COL$(%rip), %ecx
	movl	%ecx, %r9d
	cvtsi2sd	%r9, %xmm1
	ucomisd	%xmm1, %xmm0
	sete	%sil
	setnp	%dil
	andb	%dil, %sil
	andb	$1, %sil
	movzbl	%sil, %ecx
	subl	%ecx, %eax
	movslq	%eax, %r9
	orq	%r9, %rdx
	cmpq	$0, %rdx
	jne	.LBB11_1071
# %bb.1070:
	jmp	.LBB11_1072
.LBB11_1071:
	movq	-2216(%rbp), %rdi
	movzwl	FCOLOR$(%rip), %eax
	cvtsi2sd	%eax, %xmm0
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2370
.LBB11_1072:
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movzwl	SPENA$(%rip), %eax
	movl	%eax, %ecx
	cvtsi2sd	%rcx, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB11_1073
	jp	.LBB11_1073
	jmp	.LBB11_1074
.LBB11_1073:
	jmp	.LBB11_1075
.LBB11_1074:
	jmp	.LBB11_2370
.LBB11_1075:
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movzwl	RASTR$(%rip), %eax
	movl	%eax, %ecx
	cvtsi2sd	%rcx, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB11_1076
	jp	.LBB11_1076
	jmp	.LBB11_1077
.LBB11_1076:
	jmp	.LBB11_1078
.LBB11_1077:
	xorl	%eax, %eax
	movl	%eax, %edi
	xorl	%eax, %eax
	movq	fb_hPutAlpha@GOTPCREL(%rip), %rcx
	movsd	-2232(%rbp), %xmm0      # xmm0 = mem[0],zero
	cvtsd2ss	%xmm0, %xmm1
	movq	RASTER$(%rip), %rsi
	xorps	%xmm0, %xmm0
	movl	$4294901760, %edx       # imm = 0xFFFF0000
	movl	%edx, -15884(%rbp)      # 4-byte Spill
	movl	-15884(%rbp), %r8d      # 4-byte Reload
	movq	%rcx, -15896(%rbp)      # 8-byte Spill
	movl	%r8d, %ecx
	movl	-15884(%rbp), %r9d      # 4-byte Reload
	movl	$0, (%rsp)
	movl	$6, 8(%rsp)
	movq	-15896(%rbp), %r10      # 8-byte Reload
	movq	%r10, 16(%rsp)
	movl	$-1, 24(%rsp)
	movq	$0, 32(%rsp)
	movq	$0, 40(%rsp)
	movl	%eax, -15900(%rbp)      # 4-byte Spill
	callq	fb_GfxPut@PLT
	jmp	.LBB11_2370
.LBB11_1078:
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movzwl	EXTCOL$(%rip), %eax
	movl	%eax, %ecx
	cvtsi2sd	%rcx, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB11_1079
	jp	.LBB11_1079
	jmp	.LBB11_1080
.LBB11_1079:
	jmp	.LBB11_1341
.LBB11_1080:
	movsd	-2232(%rbp), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
	movq	%rax, -2248(%rbp)
	jmp	.LBB11_1337
.Ltmp17:                                # Block address taken
.LBB11_1081:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp18:                                # Block address taken
.LBB11_1082:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$170, %rax
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp19:                                # Block address taken
.LBB11_1083:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$43520, %rax            # imm = 0xAA00
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp20:                                # Block address taken
.LBB11_1084:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$43690, %rax            # imm = 0xAAAA
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp21:                                # Block address taken
.LBB11_1085:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$11141120, %rax         # imm = 0xAA0000
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp22:                                # Block address taken
.LBB11_1086:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$11141290, %rax         # imm = 0xAA00AA
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp23:                                # Block address taken
.LBB11_1087:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$11162880, %rax         # imm = 0xAA5500
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp24:                                # Block address taken
.LBB11_1088:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$11184810, %rax         # imm = 0xAAAAAA
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp25:                                # Block address taken
.LBB11_1089:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$5592405, %rax          # imm = 0x555555
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp26:                                # Block address taken
.LBB11_1090:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$5592575, %rax          # imm = 0x5555FF
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp27:                                # Block address taken
.LBB11_1091:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$5635925, %rax          # imm = 0x55FF55
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp28:                                # Block address taken
.LBB11_1092:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$5636095, %rax          # imm = 0x55FFFF
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp29:                                # Block address taken
.LBB11_1093:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16733525, %rax         # imm = 0xFF5555
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp30:                                # Block address taken
.LBB11_1094:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16733695, %rax         # imm = 0xFF55FF
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp31:                                # Block address taken
.LBB11_1095:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16777045, %rax         # imm = 0xFFFF55
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp32:                                # Block address taken
.LBB11_1096:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16777215, %rax         # imm = 0xFFFFFF
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp33:                                # Block address taken
.LBB11_1097:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp34:                                # Block address taken
.LBB11_1098:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$1315860, %rax          # imm = 0x141414
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp35:                                # Block address taken
.LBB11_1099:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$2105376, %rax          # imm = 0x202020
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp36:                                # Block address taken
.LBB11_1100:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$2960685, %rax          # imm = 0x2D2D2D
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp37:                                # Block address taken
.LBB11_1101:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$3750201, %rax          # imm = 0x393939
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp38:                                # Block address taken
.LBB11_1102:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4539717, %rax          # imm = 0x454545
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp39:                                # Block address taken
.LBB11_1103:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$5329233, %rax          # imm = 0x515151
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp40:                                # Block address taken
.LBB11_1104:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$6381921, %rax          # imm = 0x616161
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp41:                                # Block address taken
.LBB11_1105:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$7434609, %rax          # imm = 0x717171
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp42:                                # Block address taken
.LBB11_1106:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$8553090, %rax          # imm = 0x828282
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp43:                                # Block address taken
.LBB11_1107:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$9605778, %rax          # imm = 0x929292
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp44:                                # Block address taken
.LBB11_1108:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$10658466, %rax         # imm = 0xA2A2A2
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp45:                                # Block address taken
.LBB11_1109:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$11974326, %rax         # imm = 0xB6B6B6
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp46:                                # Block address taken
.LBB11_1110:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$13290186, %rax         # imm = 0xCACACA
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp47:                                # Block address taken
.LBB11_1111:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$14935011, %rax         # imm = 0xE3E3E3
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp48:                                # Block address taken
.LBB11_1112:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16777215, %rax         # imm = 0xFFFFFF
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp49:                                # Block address taken
.LBB11_1113:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$255, %rax
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp50:                                # Block address taken
.LBB11_1114:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4260095, %rax          # imm = 0x4100FF
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp51:                                # Block address taken
.LBB11_1115:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$8192255, %rax          # imm = 0x7D00FF
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp52:                                # Block address taken
.LBB11_1116:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$12452095, %rax         # imm = 0xBE00FF
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp53:                                # Block address taken
.LBB11_1117:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16711935, %rax         # imm = 0xFF00FF
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp54:                                # Block address taken
.LBB11_1118:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16711870, %rax         # imm = 0xFF00BE
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp55:                                # Block address taken
.LBB11_1119:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16711805, %rax         # imm = 0xFF007D
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp56:                                # Block address taken
.LBB11_1120:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16711745, %rax         # imm = 0xFF0041
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp57:                                # Block address taken
.LBB11_1121:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16711680, %rax         # imm = 0xFF0000
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp58:                                # Block address taken
.LBB11_1122:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16728320, %rax         # imm = 0xFF4100
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp59:                                # Block address taken
.LBB11_1123:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16743680, %rax         # imm = 0xFF7D00
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp60:                                # Block address taken
.LBB11_1124:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16760320, %rax         # imm = 0xFFBE00
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp61:                                # Block address taken
.LBB11_1125:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16776960, %rax         # imm = 0xFFFF00
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp62:                                # Block address taken
.LBB11_1126:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$12517120, %rax         # imm = 0xBEFF00
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp63:                                # Block address taken
.LBB11_1127:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$8257280, %rax          # imm = 0x7DFF00
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp64:                                # Block address taken
.LBB11_1128:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4325120, %rax          # imm = 0x41FF00
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp65:                                # Block address taken
.LBB11_1129:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$65280, %rax            # imm = 0xFF00
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp66:                                # Block address taken
.LBB11_1130:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$65345, %rax            # imm = 0xFF41
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp67:                                # Block address taken
.LBB11_1131:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$65405, %rax            # imm = 0xFF7D
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp68:                                # Block address taken
.LBB11_1132:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$65470, %rax            # imm = 0xFFBE
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp69:                                # Block address taken
.LBB11_1133:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$65535, %rax            # imm = 0xFFFF
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp70:                                # Block address taken
.LBB11_1134:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$48895, %rax            # imm = 0xBEFF
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp71:                                # Block address taken
.LBB11_1135:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$32255, %rax            # imm = 0x7DFF
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp72:                                # Block address taken
.LBB11_1136:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16895, %rax            # imm = 0x41FF
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp73:                                # Block address taken
.LBB11_1137:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$8224255, %rax          # imm = 0x7D7DFF
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp74:                                # Block address taken
.LBB11_1138:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$10386943, %rax         # imm = 0x9E7DFF
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp75:                                # Block address taken
.LBB11_1139:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$12484095, %rax         # imm = 0xBE7DFF
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp76:                                # Block address taken
.LBB11_1140:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$14646783, %rax         # imm = 0xDF7DFF
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp77:                                # Block address taken
.LBB11_1141:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16743935, %rax         # imm = 0xFF7DFF
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp78:                                # Block address taken
.LBB11_1142:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16743903, %rax         # imm = 0xFF7DDF
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp79:                                # Block address taken
.LBB11_1143:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16743870, %rax         # imm = 0xFF7DBE
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp80:                                # Block address taken
.LBB11_1144:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16743838, %rax         # imm = 0xFF7D9E
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp81:                                # Block address taken
.LBB11_1145:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16743805, %rax         # imm = 0xFF7D7D
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp82:                                # Block address taken
.LBB11_1146:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16752253, %rax         # imm = 0xFF9E7D
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp83:                                # Block address taken
.LBB11_1147:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16760445, %rax         # imm = 0xFFBE7D
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp84:                                # Block address taken
.LBB11_1148:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16768893, %rax         # imm = 0xFFDF7D
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp85:                                # Block address taken
.LBB11_1149:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16777085, %rax         # imm = 0xFFFF7D
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp86:                                # Block address taken
.LBB11_1150:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$14679933, %rax         # imm = 0xDFFF7D
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp87:                                # Block address taken
.LBB11_1151:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$12517245, %rax         # imm = 0xBEFF7D
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp88:                                # Block address taken
.LBB11_1152:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$10420093, %rax         # imm = 0x9EFF7D
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp89:                                # Block address taken
.LBB11_1153:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$8257405, %rax          # imm = 0x7DFF7D
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp90:                                # Block address taken
.LBB11_1154:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$8257438, %rax          # imm = 0x7DFF9E
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp91:                                # Block address taken
.LBB11_1155:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$8257470, %rax          # imm = 0x7DFFBE
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp92:                                # Block address taken
.LBB11_1156:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$8257503, %rax          # imm = 0x7DFFDF
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp93:                                # Block address taken
.LBB11_1157:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$8257535, %rax          # imm = 0x7DFFFF
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp94:                                # Block address taken
.LBB11_1158:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$8249343, %rax          # imm = 0x7DDFFF
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp95:                                # Block address taken
.LBB11_1159:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$8240895, %rax          # imm = 0x7DBEFF
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp96:                                # Block address taken
.LBB11_1160:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$8232703, %rax          # imm = 0x7D9EFF
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp97:                                # Block address taken
.LBB11_1161:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$11974399, %rax         # imm = 0xB6B6FF
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp98:                                # Block address taken
.LBB11_1162:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$13022975, %rax         # imm = 0xC6B6FF
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp99:                                # Block address taken
.LBB11_1163:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$14399231, %rax         # imm = 0xDBB6FF
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp100:                               # Block address taken
.LBB11_1164:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$15447807, %rax         # imm = 0xEBB6FF
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp101:                               # Block address taken
.LBB11_1165:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16758527, %rax         # imm = 0xFFB6FF
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp102:                               # Block address taken
.LBB11_1166:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16758507, %rax         # imm = 0xFFB6EB
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp103:                               # Block address taken
.LBB11_1167:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16758491, %rax         # imm = 0xFFB6DB
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp104:                               # Block address taken
.LBB11_1168:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16758470, %rax         # imm = 0xFFB6C6
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp105:                               # Block address taken
.LBB11_1169:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16758454, %rax         # imm = 0xFFB6B6
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp106:                               # Block address taken
.LBB11_1170:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16762550, %rax         # imm = 0xFFC6B6
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp107:                               # Block address taken
.LBB11_1171:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16767926, %rax         # imm = 0xFFDBB6
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp108:                               # Block address taken
.LBB11_1172:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16772022, %rax         # imm = 0xFFEBB6
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp109:                               # Block address taken
.LBB11_1173:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16777142, %rax         # imm = 0xFFFFB6
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp110:                               # Block address taken
.LBB11_1174:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$15466422, %rax         # imm = 0xEBFFB6
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp111:                               # Block address taken
.LBB11_1175:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$14417846, %rax         # imm = 0xDBFFB6
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp112:                               # Block address taken
.LBB11_1176:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$13041590, %rax         # imm = 0xC6FFB6
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp113:                               # Block address taken
.LBB11_1177:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$11993014, %rax         # imm = 0xB6FFB6
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp114:                               # Block address taken
.LBB11_1178:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$11993030, %rax         # imm = 0xB6FFC6
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp115:                               # Block address taken
.LBB11_1179:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$11993051, %rax         # imm = 0xB6FFDB
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp116:                               # Block address taken
.LBB11_1180:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$11993067, %rax         # imm = 0xB6FFEB
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp117:                               # Block address taken
.LBB11_1181:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$11993087, %rax         # imm = 0xB6FFFF
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp118:                               # Block address taken
.LBB11_1182:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$11987967, %rax         # imm = 0xB6EBFF
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp119:                               # Block address taken
.LBB11_1183:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$11983871, %rax         # imm = 0xB6DBFF
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp120:                               # Block address taken
.LBB11_1184:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$11978495, %rax         # imm = 0xB6C6FF
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp121:                               # Block address taken
.LBB11_1185:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$113, %rax
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp122:                               # Block address taken
.LBB11_1186:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$1835121, %rax          # imm = 0x1C0071
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp123:                               # Block address taken
.LBB11_1187:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$3735665, %rax          # imm = 0x390071
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp124:                               # Block address taken
.LBB11_1188:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$5570673, %rax          # imm = 0x550071
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp125:                               # Block address taken
.LBB11_1189:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$7405681, %rax          # imm = 0x710071
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp126:                               # Block address taken
.LBB11_1190:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$7405653, %rax          # imm = 0x710055
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp127:                               # Block address taken
.LBB11_1191:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$7405625, %rax          # imm = 0x710039
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp128:                               # Block address taken
.LBB11_1192:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$7405596, %rax          # imm = 0x71001C
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp129:                               # Block address taken
.LBB11_1193:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$7405568, %rax          # imm = 0x710000
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp130:                               # Block address taken
.LBB11_1194:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$7412736, %rax          # imm = 0x711C00
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp131:                               # Block address taken
.LBB11_1195:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$7420160, %rax          # imm = 0x713900
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp132:                               # Block address taken
.LBB11_1196:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$7427328, %rax          # imm = 0x715500
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp133:                               # Block address taken
.LBB11_1197:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$7434496, %rax          # imm = 0x717100
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp134:                               # Block address taken
.LBB11_1198:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$5599488, %rax          # imm = 0x557100
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp135:                               # Block address taken
.LBB11_1199:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$3764480, %rax          # imm = 0x397100
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp136:                               # Block address taken
.LBB11_1200:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$1863936, %rax          # imm = 0x1C7100
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp137:                               # Block address taken
.LBB11_1201:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$28928, %rax            # imm = 0x7100
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp138:                               # Block address taken
.LBB11_1202:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$28956, %rax            # imm = 0x711C
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp139:                               # Block address taken
.LBB11_1203:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$28985, %rax            # imm = 0x7139
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp140:                               # Block address taken
.LBB11_1204:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$29013, %rax            # imm = 0x7155
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp141:                               # Block address taken
.LBB11_1205:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$29041, %rax            # imm = 0x7171
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp142:                               # Block address taken
.LBB11_1206:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$21873, %rax            # imm = 0x5571
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp143:                               # Block address taken
.LBB11_1207:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$14705, %rax            # imm = 0x3971
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp144:                               # Block address taken
.LBB11_1208:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$7281, %rax             # imm = 0x1C71
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp145:                               # Block address taken
.LBB11_1209:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$3750257, %rax          # imm = 0x393971
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp146:                               # Block address taken
.LBB11_1210:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4536689, %rax          # imm = 0x453971
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp147:                               # Block address taken
.LBB11_1211:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$5585265, %rax          # imm = 0x553971
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp148:                               # Block address taken
.LBB11_1212:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$6371697, %rax          # imm = 0x613971
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp149:                               # Block address taken
.LBB11_1213:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$7420273, %rax          # imm = 0x713971
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp150:                               # Block address taken
.LBB11_1214:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$7420257, %rax          # imm = 0x713961
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp151:                               # Block address taken
.LBB11_1215:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$7420245, %rax          # imm = 0x713955
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp152:                               # Block address taken
.LBB11_1216:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$7420229, %rax          # imm = 0x713945
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp153:                               # Block address taken
.LBB11_1217:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$7420217, %rax          # imm = 0x713939
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp154:                               # Block address taken
.LBB11_1218:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$7423289, %rax          # imm = 0x714539
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp155:                               # Block address taken
.LBB11_1219:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$7427385, %rax          # imm = 0x715539
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp156:                               # Block address taken
.LBB11_1220:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$7430457, %rax          # imm = 0x716139
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp157:                               # Block address taken
.LBB11_1221:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$7434553, %rax          # imm = 0x717139
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp158:                               # Block address taken
.LBB11_1222:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$6385977, %rax          # imm = 0x617139
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp159:                               # Block address taken
.LBB11_1223:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$5599545, %rax          # imm = 0x557139
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp160:                               # Block address taken
.LBB11_1224:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4550969, %rax          # imm = 0x457139
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp161:                               # Block address taken
.LBB11_1225:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$3764537, %rax          # imm = 0x397139
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp162:                               # Block address taken
.LBB11_1226:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$3764549, %rax          # imm = 0x397145
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp163:                               # Block address taken
.LBB11_1227:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$3764565, %rax          # imm = 0x397155
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp164:                               # Block address taken
.LBB11_1228:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$3764577, %rax          # imm = 0x397161
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp165:                               # Block address taken
.LBB11_1229:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$3764593, %rax          # imm = 0x397171
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp166:                               # Block address taken
.LBB11_1230:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$3760497, %rax          # imm = 0x396171
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp167:                               # Block address taken
.LBB11_1231:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$3757425, %rax          # imm = 0x395571
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp168:                               # Block address taken
.LBB11_1232:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$3753329, %rax          # imm = 0x394571
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp169:                               # Block address taken
.LBB11_1233:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$5329265, %rax          # imm = 0x515171
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp170:                               # Block address taken
.LBB11_1234:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$5853553, %rax          # imm = 0x595171
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp171:                               # Block address taken
.LBB11_1235:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$6377841, %rax          # imm = 0x615171
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp172:                               # Block address taken
.LBB11_1236:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$6902129, %rax          # imm = 0x695171
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp173:                               # Block address taken
.LBB11_1237:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$7426417, %rax          # imm = 0x715171
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp174:                               # Block address taken
.LBB11_1238:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$7426409, %rax          # imm = 0x715169
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp175:                               # Block address taken
.LBB11_1239:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$7426401, %rax          # imm = 0x715161
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp176:                               # Block address taken
.LBB11_1240:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$7426393, %rax          # imm = 0x715159
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp177:                               # Block address taken
.LBB11_1241:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$7426385, %rax          # imm = 0x715151
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp178:                               # Block address taken
.LBB11_1242:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$7428433, %rax          # imm = 0x715951
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp179:                               # Block address taken
.LBB11_1243:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$7430481, %rax          # imm = 0x716151
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp180:                               # Block address taken
.LBB11_1244:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$7432529, %rax          # imm = 0x716951
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp181:                               # Block address taken
.LBB11_1245:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$7434577, %rax          # imm = 0x717151
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp182:                               # Block address taken
.LBB11_1246:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$6910289, %rax          # imm = 0x697151
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp183:                               # Block address taken
.LBB11_1247:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$6386001, %rax          # imm = 0x617151
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp184:                               # Block address taken
.LBB11_1248:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$5861713, %rax          # imm = 0x597151
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp185:                               # Block address taken
.LBB11_1249:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$5337425, %rax          # imm = 0x517151
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp186:                               # Block address taken
.LBB11_1250:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$5337433, %rax          # imm = 0x517159
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp187:                               # Block address taken
.LBB11_1251:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$5337441, %rax          # imm = 0x517161
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp188:                               # Block address taken
.LBB11_1252:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$5337449, %rax          # imm = 0x517169
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp189:                               # Block address taken
.LBB11_1253:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$5337457, %rax          # imm = 0x517171
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp190:                               # Block address taken
.LBB11_1254:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$5335409, %rax          # imm = 0x516971
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp191:                               # Block address taken
.LBB11_1255:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$5333361, %rax          # imm = 0x516171
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp192:                               # Block address taken
.LBB11_1256:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$5331313, %rax          # imm = 0x515971
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp193:                               # Block address taken
.LBB11_1257:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$65, %rax
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp194:                               # Block address taken
.LBB11_1258:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$1048641, %rax          # imm = 0x100041
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp195:                               # Block address taken
.LBB11_1259:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$2097217, %rax          # imm = 0x200041
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp196:                               # Block address taken
.LBB11_1260:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$3211329, %rax          # imm = 0x310041
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp197:                               # Block address taken
.LBB11_1261:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4259905, %rax          # imm = 0x410041
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp198:                               # Block address taken
.LBB11_1262:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4259889, %rax          # imm = 0x410031
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp199:                               # Block address taken
.LBB11_1263:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4259872, %rax          # imm = 0x410020
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp200:                               # Block address taken
.LBB11_1264:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4259856, %rax          # imm = 0x410010
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp201:                               # Block address taken
.LBB11_1265:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4259840, %rax          # imm = 0x410000
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp202:                               # Block address taken
.LBB11_1266:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4263936, %rax          # imm = 0x411000
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp203:                               # Block address taken
.LBB11_1267:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4268032, %rax          # imm = 0x412000
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp204:                               # Block address taken
.LBB11_1268:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4272384, %rax          # imm = 0x413100
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp205:                               # Block address taken
.LBB11_1269:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4276480, %rax          # imm = 0x414100
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp206:                               # Block address taken
.LBB11_1270:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$3227904, %rax          # imm = 0x314100
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp207:                               # Block address taken
.LBB11_1271:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$2113792, %rax          # imm = 0x204100
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp208:                               # Block address taken
.LBB11_1272:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$1065216, %rax          # imm = 0x104100
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp209:                               # Block address taken
.LBB11_1273:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16640, %rax            # imm = 0x4100
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp210:                               # Block address taken
.LBB11_1274:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16656, %rax            # imm = 0x4110
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp211:                               # Block address taken
.LBB11_1275:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16672, %rax            # imm = 0x4120
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp212:                               # Block address taken
.LBB11_1276:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16689, %rax            # imm = 0x4131
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp213:                               # Block address taken
.LBB11_1277:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16705, %rax            # imm = 0x4141
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp214:                               # Block address taken
.LBB11_1278:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$12609, %rax            # imm = 0x3141
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp215:                               # Block address taken
.LBB11_1279:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$8257, %rax             # imm = 0x2041
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp216:                               # Block address taken
.LBB11_1280:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4161, %rax             # imm = 0x1041
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp217:                               # Block address taken
.LBB11_1281:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$2105409, %rax          # imm = 0x202041
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp218:                               # Block address taken
.LBB11_1282:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$2629697, %rax          # imm = 0x282041
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp219:                               # Block address taken
.LBB11_1283:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$3219521, %rax          # imm = 0x312041
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp220:                               # Block address taken
.LBB11_1284:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$3743809, %rax          # imm = 0x392041
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp221:                               # Block address taken
.LBB11_1285:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4268097, %rax          # imm = 0x412041
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp222:                               # Block address taken
.LBB11_1286:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4268089, %rax          # imm = 0x412039
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp223:                               # Block address taken
.LBB11_1287:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4268081, %rax          # imm = 0x412031
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp224:                               # Block address taken
.LBB11_1288:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4268072, %rax          # imm = 0x412028
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp225:                               # Block address taken
.LBB11_1289:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4268064, %rax          # imm = 0x412020
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp226:                               # Block address taken
.LBB11_1290:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4270112, %rax          # imm = 0x412820
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp227:                               # Block address taken
.LBB11_1291:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4272416, %rax          # imm = 0x413120
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp228:                               # Block address taken
.LBB11_1292:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4274464, %rax          # imm = 0x413920
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp229:                               # Block address taken
.LBB11_1293:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4276512, %rax          # imm = 0x414120
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp230:                               # Block address taken
.LBB11_1294:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$3752224, %rax          # imm = 0x394120
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp231:                               # Block address taken
.LBB11_1295:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$3227936, %rax          # imm = 0x314120
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp232:                               # Block address taken
.LBB11_1296:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$2638112, %rax          # imm = 0x284120
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp233:                               # Block address taken
.LBB11_1297:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$2113824, %rax          # imm = 0x204120
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp234:                               # Block address taken
.LBB11_1298:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$2113832, %rax          # imm = 0x204128
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp235:                               # Block address taken
.LBB11_1299:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$2113841, %rax          # imm = 0x204131
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp236:                               # Block address taken
.LBB11_1300:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$2113849, %rax          # imm = 0x204139
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp237:                               # Block address taken
.LBB11_1301:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$2113857, %rax          # imm = 0x204141
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp238:                               # Block address taken
.LBB11_1302:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$2111809, %rax          # imm = 0x203941
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp239:                               # Block address taken
.LBB11_1303:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$2109761, %rax          # imm = 0x203141
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp240:                               # Block address taken
.LBB11_1304:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$2107457, %rax          # imm = 0x202841
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp241:                               # Block address taken
.LBB11_1305:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$2960705, %rax          # imm = 0x2D2D41
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp242:                               # Block address taken
.LBB11_1306:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$3222849, %rax          # imm = 0x312D41
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp243:                               # Block address taken
.LBB11_1307:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$3484993, %rax          # imm = 0x352D41
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp244:                               # Block address taken
.LBB11_1308:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4009281, %rax          # imm = 0x3D2D41
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp245:                               # Block address taken
.LBB11_1309:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4271425, %rax          # imm = 0x412D41
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp246:                               # Block address taken
.LBB11_1310:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4271421, %rax          # imm = 0x412D3D
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp247:                               # Block address taken
.LBB11_1311:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4271413, %rax          # imm = 0x412D35
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp248:                               # Block address taken
.LBB11_1312:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4271409, %rax          # imm = 0x412D31
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp249:                               # Block address taken
.LBB11_1313:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4271405, %rax          # imm = 0x412D2D
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp250:                               # Block address taken
.LBB11_1314:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4272429, %rax          # imm = 0x41312D
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp251:                               # Block address taken
.LBB11_1315:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4273453, %rax          # imm = 0x41352D
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp252:                               # Block address taken
.LBB11_1316:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4275501, %rax          # imm = 0x413D2D
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp253:                               # Block address taken
.LBB11_1317:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4276525, %rax          # imm = 0x41412D
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp254:                               # Block address taken
.LBB11_1318:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$4014381, %rax          # imm = 0x3D412D
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp255:                               # Block address taken
.LBB11_1319:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$3490093, %rax          # imm = 0x35412D
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp256:                               # Block address taken
.LBB11_1320:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$3227949, %rax          # imm = 0x31412D
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp257:                               # Block address taken
.LBB11_1321:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$2965805, %rax          # imm = 0x2D412D
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp258:                               # Block address taken
.LBB11_1322:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$2965809, %rax          # imm = 0x2D4131
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp259:                               # Block address taken
.LBB11_1323:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$2965813, %rax          # imm = 0x2D4135
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp260:                               # Block address taken
.LBB11_1324:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$2965821, %rax          # imm = 0x2D413D
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp261:                               # Block address taken
.LBB11_1325:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$2965825, %rax          # imm = 0x2D4141
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp262:                               # Block address taken
.LBB11_1326:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$2964801, %rax          # imm = 0x2D3D41
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp263:                               # Block address taken
.LBB11_1327:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$2962753, %rax          # imm = 0x2D3541
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp264:                               # Block address taken
.LBB11_1328:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$2961729, %rax          # imm = 0x2D3141
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp265:                               # Block address taken
.LBB11_1329:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16756736, %rax         # imm = 0xFFB000
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp266:                               # Block address taken
.LBB11_1330:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$16760832, %rax         # imm = 0xFFC000
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp267:                               # Block address taken
.LBB11_1331:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$3407616, %rax          # imm = 0x33FF00
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp268:                               # Block address taken
.LBB11_1332:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$3407667, %rax          # imm = 0x33FF33
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp269:                               # Block address taken
.LBB11_1333:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$65331, %rax            # imm = 0xFF33
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp270:                               # Block address taken
.LBB11_1334:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$6750054, %rax          # imm = 0x66FF66
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp271:                               # Block address taken
.LBB11_1335:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$65382, %rax            # imm = 0xFF66
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.Ltmp272:                               # Block address taken
.LBB11_1336:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	addq	$2631720, %rax          # imm = 0x282828
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_1340
.LBB11_1337:
	cmpq	$255, -2248(%rbp)
	jbe	.LBB11_1339
# %bb.1338:
	jmp	.LBB11_1340
.LBB11_1339:
	movq	-2248(%rbp), %rax
	subq	$0, %rax
	leaq	_ZN8MEMORY_T6POKE64Edd.tmp$2480(%rip), %rcx
	movq	(%rcx,%rax,8), %rax
	movq	%rax, -15848(%rbp)      # 8-byte Spill
	jmp	.LBB11_6020
.LBB11_1340:
	movss	.LCPI11_346(%rip), %xmm2 # xmm2 = mem[0],zero,zero,zero
	movss	.LCPI11_347(%rip), %xmm3 # xmm3 = mem[0],zero,zero,zero
	xorl	%r8d, %r8d
	movq	BGIMAGE$(%rip), %rdi
	movq	-2216(%rbp), %rax
	movsd	395656(%rax), %xmm0     # xmm0 = mem[0],zero
	movss	%xmm2, -15904(%rbp)     # 4-byte Spill
	movss	%xmm3, -15908(%rbp)     # 4-byte Spill
	movl	%r8d, -15912(%rbp)      # 4-byte Spill
	movq	%rdi, -15920(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
                                        # kill: def $eax killed $eax killed $rax
	movq	-15920(%rbp), %rdi      # 8-byte Reload
	xorps	%xmm0, %xmm0
	movss	%xmm0, -15924(%rbp)     # 4-byte Spill
	movss	-15924(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movss	-15904(%rbp), %xmm2     # 4-byte Reload
                                        # xmm2 = mem[0],zero,zero,zero
	movss	-15908(%rbp), %xmm3     # 4-byte Reload
                                        # xmm3 = mem[0],zero,zero,zero
	movl	%eax, %esi
	movl	$2, %edx
	movl	$65535, %ecx            # imm = 0xFFFF
	movl	-15912(%rbp), %r8d      # 4-byte Reload
	callq	fb_GfxLine@PLT
	jmp	.LBB11_2370
.LBB11_1341:
	xorl	%eax, %eax
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movzwl	BGCOL0$(%rip), %ecx
	movl	%ecx, %edx
	cvtsi2sd	%rdx, %xmm1
	ucomisd	%xmm1, %xmm0
	sete	%sil
	setnp	%dil
	andb	%dil, %sil
	andb	$1, %sil
	movzbl	%sil, %ecx
	movl	%eax, %r8d
	subl	%ecx, %r8d
	movslq	%r8d, %rdx
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movzwl	BGCOL1$(%rip), %ecx
	movl	%ecx, %r9d
	cvtsi2sd	%r9, %xmm1
	ucomisd	%xmm1, %xmm0
	sete	%sil
	setnp	%dil
	andb	%dil, %sil
	andb	$1, %sil
	movzbl	%sil, %ecx
	movl	%eax, %r8d
	subl	%ecx, %r8d
	movslq	%r8d, %r9
	orq	%r9, %rdx
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movzwl	BGCOL2$(%rip), %ecx
	movl	%ecx, %r9d
	cvtsi2sd	%r9, %xmm1
	ucomisd	%xmm1, %xmm0
	sete	%sil
	setnp	%dil
	andb	%dil, %sil
	andb	$1, %sil
	movzbl	%sil, %ecx
	movl	%eax, %r8d
	subl	%ecx, %r8d
	movslq	%r8d, %r9
	orq	%r9, %rdx
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movzwl	BGCOL3$(%rip), %ecx
	movl	%ecx, %r9d
	cvtsi2sd	%r9, %xmm1
	ucomisd	%xmm1, %xmm0
	sete	%sil
	setnp	%dil
	andb	%dil, %sil
	andb	$1, %sil
	movzbl	%sil, %ecx
	subl	%ecx, %eax
	movslq	%eax, %r9
	orq	%r9, %rdx
	cmpq	$0, %rdx
	jne	.LBB11_1343
# %bb.1342:
	jmp	.LBB11_2369
.LBB11_1343:
	movsd	-2232(%rbp), %xmm0      # xmm0 = mem[0],zero
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB11_1344
	jp	.LBB11_1344
	jmp	.LBB11_1345
.LBB11_1344:
	jmp	.LBB11_1346
.LBB11_1345:
	jmp	.LBB11_2112
.LBB11_1346:
	movsd	.LCPI11_7(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1347
	jp	.LBB11_1347
	jmp	.LBB11_1348
.LBB11_1347:
	jmp	.LBB11_1349
.LBB11_1348:
	jmp	.LBB11_2113
.LBB11_1349:
	movsd	.LCPI11_9(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1350
	jp	.LBB11_1350
	jmp	.LBB11_1351
.LBB11_1350:
	jmp	.LBB11_1352
.LBB11_1351:
	jmp	.LBB11_2114
.LBB11_1352:
	movsd	.LCPI11_10(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1353
	jp	.LBB11_1353
	jmp	.LBB11_1354
.LBB11_1353:
	jmp	.LBB11_1355
.LBB11_1354:
	jmp	.LBB11_2115
.LBB11_1355:
	movsd	.LCPI11_11(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1356
	jp	.LBB11_1356
	jmp	.LBB11_1357
.LBB11_1356:
	jmp	.LBB11_1358
.LBB11_1357:
	jmp	.LBB11_2116
.LBB11_1358:
	movsd	.LCPI11_12(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1359
	jp	.LBB11_1359
	jmp	.LBB11_1360
.LBB11_1359:
	jmp	.LBB11_1361
.LBB11_1360:
	jmp	.LBB11_2117
.LBB11_1361:
	movsd	.LCPI11_13(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1362
	jp	.LBB11_1362
	jmp	.LBB11_1363
.LBB11_1362:
	jmp	.LBB11_1364
.LBB11_1363:
	jmp	.LBB11_2118
.LBB11_1364:
	movsd	.LCPI11_15(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1365
	jp	.LBB11_1365
	jmp	.LBB11_1366
.LBB11_1365:
	jmp	.LBB11_1367
.LBB11_1366:
	jmp	.LBB11_2119
.LBB11_1367:
	movsd	.LCPI11_16(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1368
	jp	.LBB11_1368
	jmp	.LBB11_1369
.LBB11_1368:
	jmp	.LBB11_1370
.LBB11_1369:
	jmp	.LBB11_2120
.LBB11_1370:
	movsd	.LCPI11_17(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1371
	jp	.LBB11_1371
	jmp	.LBB11_1372
.LBB11_1371:
	jmp	.LBB11_1373
.LBB11_1372:
	jmp	.LBB11_2121
.LBB11_1373:
	movsd	.LCPI11_19(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1374
	jp	.LBB11_1374
	jmp	.LBB11_1375
.LBB11_1374:
	jmp	.LBB11_1376
.LBB11_1375:
	jmp	.LBB11_2122
.LBB11_1376:
	movsd	.LCPI11_20(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1377
	jp	.LBB11_1377
	jmp	.LBB11_1378
.LBB11_1377:
	jmp	.LBB11_1379
.LBB11_1378:
	jmp	.LBB11_2123
.LBB11_1379:
	movsd	.LCPI11_21(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1380
	jp	.LBB11_1380
	jmp	.LBB11_1381
.LBB11_1380:
	jmp	.LBB11_1382
.LBB11_1381:
	jmp	.LBB11_2124
.LBB11_1382:
	movsd	.LCPI11_22(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1383
	jp	.LBB11_1383
	jmp	.LBB11_1384
.LBB11_1383:
	jmp	.LBB11_1385
.LBB11_1384:
	jmp	.LBB11_2125
.LBB11_1385:
	movsd	.LCPI11_23(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1386
	jp	.LBB11_1386
	jmp	.LBB11_1387
.LBB11_1386:
	jmp	.LBB11_1388
.LBB11_1387:
	jmp	.LBB11_2126
.LBB11_1388:
	movsd	.LCPI11_24(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1389
	jp	.LBB11_1389
	jmp	.LBB11_1390
.LBB11_1389:
	jmp	.LBB11_1391
.LBB11_1390:
	jmp	.LBB11_2127
.LBB11_1391:
	movsd	.LCPI11_25(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1392
	jp	.LBB11_1392
	jmp	.LBB11_1393
.LBB11_1392:
	jmp	.LBB11_1394
.LBB11_1393:
	jmp	.LBB11_2128
.LBB11_1394:
	movsd	.LCPI11_26(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1395
	jp	.LBB11_1395
	jmp	.LBB11_1396
.LBB11_1395:
	jmp	.LBB11_1397
.LBB11_1396:
	jmp	.LBB11_2129
.LBB11_1397:
	movsd	.LCPI11_28(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1398
	jp	.LBB11_1398
	jmp	.LBB11_1399
.LBB11_1398:
	jmp	.LBB11_1400
.LBB11_1399:
	jmp	.LBB11_2130
.LBB11_1400:
	movsd	.LCPI11_30(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1401
	jp	.LBB11_1401
	jmp	.LBB11_1402
.LBB11_1401:
	jmp	.LBB11_1403
.LBB11_1402:
	jmp	.LBB11_2131
.LBB11_1403:
	movsd	.LCPI11_27(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1404
	jp	.LBB11_1404
	jmp	.LBB11_1405
.LBB11_1404:
	jmp	.LBB11_1406
.LBB11_1405:
	jmp	.LBB11_2132
.LBB11_1406:
	movsd	.LCPI11_33(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1407
	jp	.LBB11_1407
	jmp	.LBB11_1408
.LBB11_1407:
	jmp	.LBB11_1409
.LBB11_1408:
	jmp	.LBB11_2133
.LBB11_1409:
	movsd	.LCPI11_35(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1410
	jp	.LBB11_1410
	jmp	.LBB11_1411
.LBB11_1410:
	jmp	.LBB11_1412
.LBB11_1411:
	jmp	.LBB11_2134
.LBB11_1412:
	movsd	.LCPI11_37(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1413
	jp	.LBB11_1413
	jmp	.LBB11_1414
.LBB11_1413:
	jmp	.LBB11_1415
.LBB11_1414:
	jmp	.LBB11_2135
.LBB11_1415:
	movsd	.LCPI11_39(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1416
	jp	.LBB11_1416
	jmp	.LBB11_1417
.LBB11_1416:
	jmp	.LBB11_1418
.LBB11_1417:
	jmp	.LBB11_2136
.LBB11_1418:
	movsd	.LCPI11_41(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1419
	jp	.LBB11_1419
	jmp	.LBB11_1420
.LBB11_1419:
	jmp	.LBB11_1421
.LBB11_1420:
	jmp	.LBB11_2137
.LBB11_1421:
	movsd	.LCPI11_43(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1422
	jp	.LBB11_1422
	jmp	.LBB11_1423
.LBB11_1422:
	jmp	.LBB11_1424
.LBB11_1423:
	jmp	.LBB11_2138
.LBB11_1424:
	movsd	.LCPI11_45(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1425
	jp	.LBB11_1425
	jmp	.LBB11_1426
.LBB11_1425:
	jmp	.LBB11_1427
.LBB11_1426:
	jmp	.LBB11_2139
.LBB11_1427:
	movsd	.LCPI11_47(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1428
	jp	.LBB11_1428
	jmp	.LBB11_1429
.LBB11_1428:
	jmp	.LBB11_1430
.LBB11_1429:
	jmp	.LBB11_2140
.LBB11_1430:
	movsd	.LCPI11_49(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1431
	jp	.LBB11_1431
	jmp	.LBB11_1432
.LBB11_1431:
	jmp	.LBB11_1433
.LBB11_1432:
	jmp	.LBB11_2141
.LBB11_1433:
	movsd	.LCPI11_51(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1434
	jp	.LBB11_1434
	jmp	.LBB11_1435
.LBB11_1434:
	jmp	.LBB11_1436
.LBB11_1435:
	jmp	.LBB11_2142
.LBB11_1436:
	movsd	.LCPI11_53(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1437
	jp	.LBB11_1437
	jmp	.LBB11_1438
.LBB11_1437:
	jmp	.LBB11_1439
.LBB11_1438:
	jmp	.LBB11_2143
.LBB11_1439:
	movsd	.LCPI11_29(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1440
	jp	.LBB11_1440
	jmp	.LBB11_1441
.LBB11_1440:
	jmp	.LBB11_1442
.LBB11_1441:
	jmp	.LBB11_2144
.LBB11_1442:
	movsd	.LCPI11_54(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1443
	jp	.LBB11_1443
	jmp	.LBB11_1444
.LBB11_1443:
	jmp	.LBB11_1445
.LBB11_1444:
	jmp	.LBB11_2145
.LBB11_1445:
	movsd	.LCPI11_56(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1446
	jp	.LBB11_1446
	jmp	.LBB11_1447
.LBB11_1446:
	jmp	.LBB11_1448
.LBB11_1447:
	jmp	.LBB11_2146
.LBB11_1448:
	movsd	.LCPI11_58(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1449
	jp	.LBB11_1449
	jmp	.LBB11_1450
.LBB11_1449:
	jmp	.LBB11_1451
.LBB11_1450:
	jmp	.LBB11_2147
.LBB11_1451:
	movsd	.LCPI11_60(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1452
	jp	.LBB11_1452
	jmp	.LBB11_1453
.LBB11_1452:
	jmp	.LBB11_1454
.LBB11_1453:
	jmp	.LBB11_2148
.LBB11_1454:
	movsd	.LCPI11_61(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1455
	jp	.LBB11_1455
	jmp	.LBB11_1456
.LBB11_1455:
	jmp	.LBB11_1457
.LBB11_1456:
	jmp	.LBB11_2149
.LBB11_1457:
	movsd	.LCPI11_62(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1458
	jp	.LBB11_1458
	jmp	.LBB11_1459
.LBB11_1458:
	jmp	.LBB11_1460
.LBB11_1459:
	jmp	.LBB11_2150
.LBB11_1460:
	movsd	.LCPI11_63(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1461
	jp	.LBB11_1461
	jmp	.LBB11_1462
.LBB11_1461:
	jmp	.LBB11_1463
.LBB11_1462:
	jmp	.LBB11_2151
.LBB11_1463:
	movsd	.LCPI11_64(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1464
	jp	.LBB11_1464
	jmp	.LBB11_1465
.LBB11_1464:
	jmp	.LBB11_1466
.LBB11_1465:
	jmp	.LBB11_2152
.LBB11_1466:
	movsd	.LCPI11_65(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1467
	jp	.LBB11_1467
	jmp	.LBB11_1468
.LBB11_1467:
	jmp	.LBB11_1469
.LBB11_1468:
	jmp	.LBB11_2153
.LBB11_1469:
	movsd	.LCPI11_66(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1470
	jp	.LBB11_1470
	jmp	.LBB11_1471
.LBB11_1470:
	jmp	.LBB11_1472
.LBB11_1471:
	jmp	.LBB11_2154
.LBB11_1472:
	movsd	.LCPI11_67(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1473
	jp	.LBB11_1473
	jmp	.LBB11_1474
.LBB11_1473:
	jmp	.LBB11_1475
.LBB11_1474:
	jmp	.LBB11_2155
.LBB11_1475:
	movsd	.LCPI11_68(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1476
	jp	.LBB11_1476
	jmp	.LBB11_1477
.LBB11_1476:
	jmp	.LBB11_1478
.LBB11_1477:
	jmp	.LBB11_2156
.LBB11_1478:
	movsd	.LCPI11_31(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1479
	jp	.LBB11_1479
	jmp	.LBB11_1480
.LBB11_1479:
	jmp	.LBB11_1481
.LBB11_1480:
	jmp	.LBB11_2157
.LBB11_1481:
	movsd	.LCPI11_69(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1482
	jp	.LBB11_1482
	jmp	.LBB11_1483
.LBB11_1482:
	jmp	.LBB11_1484
.LBB11_1483:
	jmp	.LBB11_2158
.LBB11_1484:
	movsd	.LCPI11_70(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1485
	jp	.LBB11_1485
	jmp	.LBB11_1486
.LBB11_1485:
	jmp	.LBB11_1487
.LBB11_1486:
	jmp	.LBB11_2159
.LBB11_1487:
	movsd	.LCPI11_71(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1488
	jp	.LBB11_1488
	jmp	.LBB11_1489
.LBB11_1488:
	jmp	.LBB11_1490
.LBB11_1489:
	jmp	.LBB11_2160
.LBB11_1490:
	movsd	.LCPI11_72(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1491
	jp	.LBB11_1491
	jmp	.LBB11_1492
.LBB11_1491:
	jmp	.LBB11_1493
.LBB11_1492:
	jmp	.LBB11_2161
.LBB11_1493:
	movsd	.LCPI11_73(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1494
	jp	.LBB11_1494
	jmp	.LBB11_1495
.LBB11_1494:
	jmp	.LBB11_1496
.LBB11_1495:
	jmp	.LBB11_2162
.LBB11_1496:
	movsd	.LCPI11_74(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1497
	jp	.LBB11_1497
	jmp	.LBB11_1498
.LBB11_1497:
	jmp	.LBB11_1499
.LBB11_1498:
	jmp	.LBB11_2163
.LBB11_1499:
	movsd	.LCPI11_75(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1500
	jp	.LBB11_1500
	jmp	.LBB11_1501
.LBB11_1500:
	jmp	.LBB11_1502
.LBB11_1501:
	jmp	.LBB11_2164
.LBB11_1502:
	movsd	.LCPI11_76(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1503
	jp	.LBB11_1503
	jmp	.LBB11_1504
.LBB11_1503:
	jmp	.LBB11_1505
.LBB11_1504:
	jmp	.LBB11_2165
.LBB11_1505:
	movsd	.LCPI11_77(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1506
	jp	.LBB11_1506
	jmp	.LBB11_1507
.LBB11_1506:
	jmp	.LBB11_1508
.LBB11_1507:
	jmp	.LBB11_2166
.LBB11_1508:
	movsd	.LCPI11_78(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1509
	jp	.LBB11_1509
	jmp	.LBB11_1510
.LBB11_1509:
	jmp	.LBB11_1511
.LBB11_1510:
	jmp	.LBB11_2167
.LBB11_1511:
	movsd	.LCPI11_79(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1512
	jp	.LBB11_1512
	jmp	.LBB11_1513
.LBB11_1512:
	jmp	.LBB11_1514
.LBB11_1513:
	jmp	.LBB11_2168
.LBB11_1514:
	movsd	.LCPI11_32(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1515
	jp	.LBB11_1515
	jmp	.LBB11_1516
.LBB11_1515:
	jmp	.LBB11_1517
.LBB11_1516:
	jmp	.LBB11_2169
.LBB11_1517:
	movsd	.LCPI11_81(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1518
	jp	.LBB11_1518
	jmp	.LBB11_1519
.LBB11_1518:
	jmp	.LBB11_1520
.LBB11_1519:
	jmp	.LBB11_2170
.LBB11_1520:
	movsd	.LCPI11_82(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1521
	jp	.LBB11_1521
	jmp	.LBB11_1522
.LBB11_1521:
	jmp	.LBB11_1523
.LBB11_1522:
	jmp	.LBB11_2171
.LBB11_1523:
	movsd	.LCPI11_84(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1524
	jp	.LBB11_1524
	jmp	.LBB11_1525
.LBB11_1524:
	jmp	.LBB11_1526
.LBB11_1525:
	jmp	.LBB11_2172
.LBB11_1526:
	movsd	.LCPI11_85(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1527
	jp	.LBB11_1527
	jmp	.LBB11_1528
.LBB11_1527:
	jmp	.LBB11_1529
.LBB11_1528:
	jmp	.LBB11_2173
.LBB11_1529:
	movsd	.LCPI11_86(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1530
	jp	.LBB11_1530
	jmp	.LBB11_1531
.LBB11_1530:
	jmp	.LBB11_1532
.LBB11_1531:
	jmp	.LBB11_2174
.LBB11_1532:
	movsd	.LCPI11_87(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1533
	jp	.LBB11_1533
	jmp	.LBB11_1534
.LBB11_1533:
	jmp	.LBB11_1535
.LBB11_1534:
	jmp	.LBB11_2175
.LBB11_1535:
	movsd	.LCPI11_88(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1536
	jp	.LBB11_1536
	jmp	.LBB11_1537
.LBB11_1536:
	jmp	.LBB11_1538
.LBB11_1537:
	jmp	.LBB11_2176
.LBB11_1538:
	movsd	.LCPI11_55(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1539
	jp	.LBB11_1539
	jmp	.LBB11_1540
.LBB11_1539:
	jmp	.LBB11_1541
.LBB11_1540:
	jmp	.LBB11_2177
.LBB11_1541:
	movsd	.LCPI11_89(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1542
	jp	.LBB11_1542
	jmp	.LBB11_1543
.LBB11_1542:
	jmp	.LBB11_1544
.LBB11_1543:
	jmp	.LBB11_2178
.LBB11_1544:
	movsd	.LCPI11_90(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1545
	jp	.LBB11_1545
	jmp	.LBB11_1546
.LBB11_1545:
	jmp	.LBB11_1547
.LBB11_1546:
	jmp	.LBB11_2179
.LBB11_1547:
	movsd	.LCPI11_91(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1548
	jp	.LBB11_1548
	jmp	.LBB11_1549
.LBB11_1548:
	jmp	.LBB11_1550
.LBB11_1549:
	jmp	.LBB11_2180
.LBB11_1550:
	movsd	.LCPI11_34(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1551
	jp	.LBB11_1551
	jmp	.LBB11_1552
.LBB11_1551:
	jmp	.LBB11_1553
.LBB11_1552:
	jmp	.LBB11_2181
.LBB11_1553:
	movsd	.LCPI11_92(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1554
	jp	.LBB11_1554
	jmp	.LBB11_1555
.LBB11_1554:
	jmp	.LBB11_1556
.LBB11_1555:
	jmp	.LBB11_2182
.LBB11_1556:
	movsd	.LCPI11_93(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1557
	jp	.LBB11_1557
	jmp	.LBB11_1558
.LBB11_1557:
	jmp	.LBB11_1559
.LBB11_1558:
	jmp	.LBB11_2183
.LBB11_1559:
	movsd	.LCPI11_94(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1560
	jp	.LBB11_1560
	jmp	.LBB11_1561
.LBB11_1560:
	jmp	.LBB11_1562
.LBB11_1561:
	jmp	.LBB11_2184
.LBB11_1562:
	movsd	.LCPI11_95(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1563
	jp	.LBB11_1563
	jmp	.LBB11_1564
.LBB11_1563:
	jmp	.LBB11_1565
.LBB11_1564:
	jmp	.LBB11_2185
.LBB11_1565:
	movsd	.LCPI11_96(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1566
	jp	.LBB11_1566
	jmp	.LBB11_1567
.LBB11_1566:
	jmp	.LBB11_1568
.LBB11_1567:
	jmp	.LBB11_2186
.LBB11_1568:
	movsd	.LCPI11_97(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1569
	jp	.LBB11_1569
	jmp	.LBB11_1570
.LBB11_1569:
	jmp	.LBB11_1571
.LBB11_1570:
	jmp	.LBB11_2187
.LBB11_1571:
	movsd	.LCPI11_98(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1572
	jp	.LBB11_1572
	jmp	.LBB11_1573
.LBB11_1572:
	jmp	.LBB11_1574
.LBB11_1573:
	jmp	.LBB11_2188
.LBB11_1574:
	movsd	.LCPI11_99(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1575
	jp	.LBB11_1575
	jmp	.LBB11_1576
.LBB11_1575:
	jmp	.LBB11_1577
.LBB11_1576:
	jmp	.LBB11_2189
.LBB11_1577:
	movsd	.LCPI11_100(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1578
	jp	.LBB11_1578
	jmp	.LBB11_1579
.LBB11_1578:
	jmp	.LBB11_1580
.LBB11_1579:
	jmp	.LBB11_2190
.LBB11_1580:
	movsd	.LCPI11_101(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1581
	jp	.LBB11_1581
	jmp	.LBB11_1582
.LBB11_1581:
	jmp	.LBB11_1583
.LBB11_1582:
	jmp	.LBB11_2191
.LBB11_1583:
	movsd	.LCPI11_102(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1584
	jp	.LBB11_1584
	jmp	.LBB11_1585
.LBB11_1584:
	jmp	.LBB11_1586
.LBB11_1585:
	jmp	.LBB11_2192
.LBB11_1586:
	movsd	.LCPI11_36(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1587
	jp	.LBB11_1587
	jmp	.LBB11_1588
.LBB11_1587:
	jmp	.LBB11_1589
.LBB11_1588:
	jmp	.LBB11_2193
.LBB11_1589:
	movsd	.LCPI11_104(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1590
	jp	.LBB11_1590
	jmp	.LBB11_1591
.LBB11_1590:
	jmp	.LBB11_1592
.LBB11_1591:
	jmp	.LBB11_2194
.LBB11_1592:
	movsd	.LCPI11_106(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1593
	jp	.LBB11_1593
	jmp	.LBB11_1594
.LBB11_1593:
	jmp	.LBB11_1595
.LBB11_1594:
	jmp	.LBB11_2195
.LBB11_1595:
	movsd	.LCPI11_108(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1596
	jp	.LBB11_1596
	jmp	.LBB11_1597
.LBB11_1596:
	jmp	.LBB11_1598
.LBB11_1597:
	jmp	.LBB11_2196
.LBB11_1598:
	movsd	.LCPI11_14(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1599
	jp	.LBB11_1599
	jmp	.LBB11_1600
.LBB11_1599:
	jmp	.LBB11_1601
.LBB11_1600:
	jmp	.LBB11_2197
.LBB11_1601:
	movsd	.LCPI11_109(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1602
	jp	.LBB11_1602
	jmp	.LBB11_1603
.LBB11_1602:
	jmp	.LBB11_1604
.LBB11_1603:
	jmp	.LBB11_2198
.LBB11_1604:
	movsd	.LCPI11_110(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1605
	jp	.LBB11_1605
	jmp	.LBB11_1606
.LBB11_1605:
	jmp	.LBB11_1607
.LBB11_1606:
	jmp	.LBB11_2199
.LBB11_1607:
	movsd	.LCPI11_111(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1608
	jp	.LBB11_1608
	jmp	.LBB11_1609
.LBB11_1608:
	jmp	.LBB11_1610
.LBB11_1609:
	jmp	.LBB11_2200
.LBB11_1610:
	movsd	.LCPI11_112(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1611
	jp	.LBB11_1611
	jmp	.LBB11_1612
.LBB11_1611:
	jmp	.LBB11_1613
.LBB11_1612:
	jmp	.LBB11_2201
.LBB11_1613:
	movsd	.LCPI11_113(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1614
	jp	.LBB11_1614
	jmp	.LBB11_1615
.LBB11_1614:
	jmp	.LBB11_1616
.LBB11_1615:
	jmp	.LBB11_2202
.LBB11_1616:
	movsd	.LCPI11_114(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1617
	jp	.LBB11_1617
	jmp	.LBB11_1618
.LBB11_1617:
	jmp	.LBB11_1619
.LBB11_1618:
	jmp	.LBB11_2203
.LBB11_1619:
	movsd	.LCPI11_115(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1620
	jp	.LBB11_1620
	jmp	.LBB11_1621
.LBB11_1620:
	jmp	.LBB11_1622
.LBB11_1621:
	jmp	.LBB11_2204
.LBB11_1622:
	movsd	.LCPI11_116(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1623
	jp	.LBB11_1623
	jmp	.LBB11_1624
.LBB11_1623:
	jmp	.LBB11_1625
.LBB11_1624:
	jmp	.LBB11_2205
.LBB11_1625:
	movsd	.LCPI11_117(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1626
	jp	.LBB11_1626
	jmp	.LBB11_1627
.LBB11_1626:
	jmp	.LBB11_1628
.LBB11_1627:
	jmp	.LBB11_2206
.LBB11_1628:
	movsd	.LCPI11_118(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1629
	jp	.LBB11_1629
	jmp	.LBB11_1630
.LBB11_1629:
	jmp	.LBB11_1631
.LBB11_1630:
	jmp	.LBB11_2207
.LBB11_1631:
	movsd	.LCPI11_119(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1632
	jp	.LBB11_1632
	jmp	.LBB11_1633
.LBB11_1632:
	jmp	.LBB11_1634
.LBB11_1633:
	jmp	.LBB11_2208
.LBB11_1634:
	movsd	.LCPI11_38(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1635
	jp	.LBB11_1635
	jmp	.LBB11_1636
.LBB11_1635:
	jmp	.LBB11_1637
.LBB11_1636:
	jmp	.LBB11_2209
.LBB11_1637:
	movsd	.LCPI11_120(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1638
	jp	.LBB11_1638
	jmp	.LBB11_1639
.LBB11_1638:
	jmp	.LBB11_1640
.LBB11_1639:
	jmp	.LBB11_2210
.LBB11_1640:
	movsd	.LCPI11_121(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1641
	jp	.LBB11_1641
	jmp	.LBB11_1642
.LBB11_1641:
	jmp	.LBB11_1643
.LBB11_1642:
	jmp	.LBB11_2211
.LBB11_1643:
	movsd	.LCPI11_122(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1644
	jp	.LBB11_1644
	jmp	.LBB11_1645
.LBB11_1644:
	jmp	.LBB11_1646
.LBB11_1645:
	jmp	.LBB11_2212
.LBB11_1646:
	movsd	.LCPI11_123(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1647
	jp	.LBB11_1647
	jmp	.LBB11_1648
.LBB11_1647:
	jmp	.LBB11_1649
.LBB11_1648:
	jmp	.LBB11_2213
.LBB11_1649:
	movsd	.LCPI11_124(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1650
	jp	.LBB11_1650
	jmp	.LBB11_1651
.LBB11_1650:
	jmp	.LBB11_1652
.LBB11_1651:
	jmp	.LBB11_2214
.LBB11_1652:
	movsd	.LCPI11_125(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1653
	jp	.LBB11_1653
	jmp	.LBB11_1654
.LBB11_1653:
	jmp	.LBB11_1655
.LBB11_1654:
	jmp	.LBB11_2215
.LBB11_1655:
	movsd	.LCPI11_126(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1656
	jp	.LBB11_1656
	jmp	.LBB11_1657
.LBB11_1656:
	jmp	.LBB11_1658
.LBB11_1657:
	jmp	.LBB11_2216
.LBB11_1658:
	movsd	.LCPI11_127(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1659
	jp	.LBB11_1659
	jmp	.LBB11_1660
.LBB11_1659:
	jmp	.LBB11_1661
.LBB11_1660:
	jmp	.LBB11_2217
.LBB11_1661:
	movsd	.LCPI11_128(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1662
	jp	.LBB11_1662
	jmp	.LBB11_1663
.LBB11_1662:
	jmp	.LBB11_1664
.LBB11_1663:
	jmp	.LBB11_2218
.LBB11_1664:
	movsd	.LCPI11_129(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1665
	jp	.LBB11_1665
	jmp	.LBB11_1666
.LBB11_1665:
	jmp	.LBB11_1667
.LBB11_1666:
	jmp	.LBB11_2219
.LBB11_1667:
	movsd	.LCPI11_130(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1668
	jp	.LBB11_1668
	jmp	.LBB11_1669
.LBB11_1668:
	jmp	.LBB11_1670
.LBB11_1669:
	jmp	.LBB11_2220
.LBB11_1670:
	movsd	.LCPI11_131(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1671
	jp	.LBB11_1671
	jmp	.LBB11_1672
.LBB11_1671:
	jmp	.LBB11_1673
.LBB11_1672:
	jmp	.LBB11_2221
.LBB11_1673:
	movsd	.LCPI11_132(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1674
	jp	.LBB11_1674
	jmp	.LBB11_1675
.LBB11_1674:
	jmp	.LBB11_1676
.LBB11_1675:
	jmp	.LBB11_2222
.LBB11_1676:
	movsd	.LCPI11_133(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1677
	jp	.LBB11_1677
	jmp	.LBB11_1678
.LBB11_1677:
	jmp	.LBB11_1679
.LBB11_1678:
	jmp	.LBB11_2223
.LBB11_1679:
	movsd	.LCPI11_134(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1680
	jp	.LBB11_1680
	jmp	.LBB11_1681
.LBB11_1680:
	jmp	.LBB11_1682
.LBB11_1681:
	jmp	.LBB11_2224
.LBB11_1682:
	movsd	.LCPI11_40(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1683
	jp	.LBB11_1683
	jmp	.LBB11_1684
.LBB11_1683:
	jmp	.LBB11_1685
.LBB11_1684:
	jmp	.LBB11_2225
.LBB11_1685:
	movsd	.LCPI11_135(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1686
	jp	.LBB11_1686
	jmp	.LBB11_1687
.LBB11_1686:
	jmp	.LBB11_1688
.LBB11_1687:
	jmp	.LBB11_2226
.LBB11_1688:
	movsd	.LCPI11_136(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1689
	jp	.LBB11_1689
	jmp	.LBB11_1690
.LBB11_1689:
	jmp	.LBB11_1691
.LBB11_1690:
	jmp	.LBB11_2227
.LBB11_1691:
	movsd	.LCPI11_137(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1692
	jp	.LBB11_1692
	jmp	.LBB11_1693
.LBB11_1692:
	jmp	.LBB11_1694
.LBB11_1693:
	jmp	.LBB11_2228
.LBB11_1694:
	movsd	.LCPI11_138(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1695
	jp	.LBB11_1695
	jmp	.LBB11_1696
.LBB11_1695:
	jmp	.LBB11_1697
.LBB11_1696:
	jmp	.LBB11_2229
.LBB11_1697:
	movsd	.LCPI11_139(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1698
	jp	.LBB11_1698
	jmp	.LBB11_1699
.LBB11_1698:
	jmp	.LBB11_1700
.LBB11_1699:
	jmp	.LBB11_2230
.LBB11_1700:
	movsd	.LCPI11_140(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1701
	jp	.LBB11_1701
	jmp	.LBB11_1702
.LBB11_1701:
	jmp	.LBB11_1703
.LBB11_1702:
	jmp	.LBB11_2231
.LBB11_1703:
	movsd	.LCPI11_141(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1704
	jp	.LBB11_1704
	jmp	.LBB11_1705
.LBB11_1704:
	jmp	.LBB11_1706
.LBB11_1705:
	jmp	.LBB11_2232
.LBB11_1706:
	movsd	.LCPI11_142(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1707
	jp	.LBB11_1707
	jmp	.LBB11_1708
.LBB11_1707:
	jmp	.LBB11_1709
.LBB11_1708:
	jmp	.LBB11_2233
.LBB11_1709:
	movsd	.LCPI11_143(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1710
	jp	.LBB11_1710
	jmp	.LBB11_1711
.LBB11_1710:
	jmp	.LBB11_1712
.LBB11_1711:
	jmp	.LBB11_2234
.LBB11_1712:
	movsd	.LCPI11_144(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1713
	jp	.LBB11_1713
	jmp	.LBB11_1714
.LBB11_1713:
	jmp	.LBB11_1715
.LBB11_1714:
	jmp	.LBB11_2235
.LBB11_1715:
	movsd	.LCPI11_145(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1716
	jp	.LBB11_1716
	jmp	.LBB11_1717
.LBB11_1716:
	jmp	.LBB11_1718
.LBB11_1717:
	jmp	.LBB11_2236
.LBB11_1718:
	movsd	.LCPI11_57(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1719
	jp	.LBB11_1719
	jmp	.LBB11_1720
.LBB11_1719:
	jmp	.LBB11_1721
.LBB11_1720:
	jmp	.LBB11_2237
.LBB11_1721:
	movsd	.LCPI11_146(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1722
	jp	.LBB11_1722
	jmp	.LBB11_1723
.LBB11_1722:
	jmp	.LBB11_1724
.LBB11_1723:
	jmp	.LBB11_2238
.LBB11_1724:
	movsd	.LCPI11_147(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1725
	jp	.LBB11_1725
	jmp	.LBB11_1726
.LBB11_1725:
	jmp	.LBB11_1727
.LBB11_1726:
	jmp	.LBB11_2239
.LBB11_1727:
	movsd	.LCPI11_148(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1728
	jp	.LBB11_1728
	jmp	.LBB11_1729
.LBB11_1728:
	jmp	.LBB11_1730
.LBB11_1729:
	jmp	.LBB11_2240
.LBB11_1730:
	movsd	.LCPI11_149(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1731
	jp	.LBB11_1731
	jmp	.LBB11_1732
.LBB11_1731:
	jmp	.LBB11_1733
.LBB11_1732:
	jmp	.LBB11_2241
.LBB11_1733:
	movsd	.LCPI11_42(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1734
	jp	.LBB11_1734
	jmp	.LBB11_1735
.LBB11_1734:
	jmp	.LBB11_1736
.LBB11_1735:
	jmp	.LBB11_2242
.LBB11_1736:
	movsd	.LCPI11_150(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1737
	jp	.LBB11_1737
	jmp	.LBB11_1738
.LBB11_1737:
	jmp	.LBB11_1739
.LBB11_1738:
	jmp	.LBB11_2243
.LBB11_1739:
	movsd	.LCPI11_151(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1740
	jp	.LBB11_1740
	jmp	.LBB11_1741
.LBB11_1740:
	jmp	.LBB11_1742
.LBB11_1741:
	jmp	.LBB11_2244
.LBB11_1742:
	movsd	.LCPI11_152(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1743
	jp	.LBB11_1743
	jmp	.LBB11_1744
.LBB11_1743:
	jmp	.LBB11_1745
.LBB11_1744:
	jmp	.LBB11_2245
.LBB11_1745:
	movsd	.LCPI11_153(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1746
	jp	.LBB11_1746
	jmp	.LBB11_1747
.LBB11_1746:
	jmp	.LBB11_1748
.LBB11_1747:
	jmp	.LBB11_2246
.LBB11_1748:
	movsd	.LCPI11_154(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1749
	jp	.LBB11_1749
	jmp	.LBB11_1750
.LBB11_1749:
	jmp	.LBB11_1751
.LBB11_1750:
	jmp	.LBB11_2247
.LBB11_1751:
	movsd	.LCPI11_155(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1752
	jp	.LBB11_1752
	jmp	.LBB11_1753
.LBB11_1752:
	jmp	.LBB11_1754
.LBB11_1753:
	jmp	.LBB11_2248
.LBB11_1754:
	movsd	.LCPI11_156(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1755
	jp	.LBB11_1755
	jmp	.LBB11_1756
.LBB11_1755:
	jmp	.LBB11_1757
.LBB11_1756:
	jmp	.LBB11_2249
.LBB11_1757:
	movsd	.LCPI11_157(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1758
	jp	.LBB11_1758
	jmp	.LBB11_1759
.LBB11_1758:
	jmp	.LBB11_1760
.LBB11_1759:
	jmp	.LBB11_2250
.LBB11_1760:
	movsd	.LCPI11_158(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1761
	jp	.LBB11_1761
	jmp	.LBB11_1762
.LBB11_1761:
	jmp	.LBB11_1763
.LBB11_1762:
	jmp	.LBB11_2251
.LBB11_1763:
	movsd	.LCPI11_159(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1764
	jp	.LBB11_1764
	jmp	.LBB11_1765
.LBB11_1764:
	jmp	.LBB11_1766
.LBB11_1765:
	jmp	.LBB11_2252
.LBB11_1766:
	movsd	.LCPI11_160(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1767
	jp	.LBB11_1767
	jmp	.LBB11_1768
.LBB11_1767:
	jmp	.LBB11_1769
.LBB11_1768:
	jmp	.LBB11_2253
.LBB11_1769:
	movsd	.LCPI11_161(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1770
	jp	.LBB11_1770
	jmp	.LBB11_1771
.LBB11_1770:
	jmp	.LBB11_1772
.LBB11_1771:
	jmp	.LBB11_2254
.LBB11_1772:
	movsd	.LCPI11_162(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1773
	jp	.LBB11_1773
	jmp	.LBB11_1774
.LBB11_1773:
	jmp	.LBB11_1775
.LBB11_1774:
	jmp	.LBB11_2255
.LBB11_1775:
	movsd	.LCPI11_163(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1776
	jp	.LBB11_1776
	jmp	.LBB11_1777
.LBB11_1776:
	jmp	.LBB11_1778
.LBB11_1777:
	jmp	.LBB11_2256
.LBB11_1778:
	movsd	.LCPI11_164(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1779
	jp	.LBB11_1779
	jmp	.LBB11_1780
.LBB11_1779:
	jmp	.LBB11_1781
.LBB11_1780:
	jmp	.LBB11_2257
.LBB11_1781:
	movsd	.LCPI11_44(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1782
	jp	.LBB11_1782
	jmp	.LBB11_1783
.LBB11_1782:
	jmp	.LBB11_1784
.LBB11_1783:
	jmp	.LBB11_2258
.LBB11_1784:
	movsd	.LCPI11_165(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1785
	jp	.LBB11_1785
	jmp	.LBB11_1786
.LBB11_1785:
	jmp	.LBB11_1787
.LBB11_1786:
	jmp	.LBB11_2259
.LBB11_1787:
	movsd	.LCPI11_166(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1788
	jp	.LBB11_1788
	jmp	.LBB11_1789
.LBB11_1788:
	jmp	.LBB11_1790
.LBB11_1789:
	jmp	.LBB11_2260
.LBB11_1790:
	movsd	.LCPI11_167(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1791
	jp	.LBB11_1791
	jmp	.LBB11_1792
.LBB11_1791:
	jmp	.LBB11_1793
.LBB11_1792:
	jmp	.LBB11_2261
.LBB11_1793:
	movsd	.LCPI11_168(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1794
	jp	.LBB11_1794
	jmp	.LBB11_1795
.LBB11_1794:
	jmp	.LBB11_1796
.LBB11_1795:
	jmp	.LBB11_2262
.LBB11_1796:
	movsd	.LCPI11_169(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1797
	jp	.LBB11_1797
	jmp	.LBB11_1798
.LBB11_1797:
	jmp	.LBB11_1799
.LBB11_1798:
	jmp	.LBB11_2263
.LBB11_1799:
	movsd	.LCPI11_170(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1800
	jp	.LBB11_1800
	jmp	.LBB11_1801
.LBB11_1800:
	jmp	.LBB11_1802
.LBB11_1801:
	jmp	.LBB11_2264
.LBB11_1802:
	movsd	.LCPI11_171(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1803
	jp	.LBB11_1803
	jmp	.LBB11_1804
.LBB11_1803:
	jmp	.LBB11_1805
.LBB11_1804:
	jmp	.LBB11_2265
.LBB11_1805:
	movsd	.LCPI11_172(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1806
	jp	.LBB11_1806
	jmp	.LBB11_1807
.LBB11_1806:
	jmp	.LBB11_1808
.LBB11_1807:
	jmp	.LBB11_2266
.LBB11_1808:
	movsd	.LCPI11_173(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1809
	jp	.LBB11_1809
	jmp	.LBB11_1810
.LBB11_1809:
	jmp	.LBB11_1811
.LBB11_1810:
	jmp	.LBB11_2267
.LBB11_1811:
	movsd	.LCPI11_174(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1812
	jp	.LBB11_1812
	jmp	.LBB11_1813
.LBB11_1812:
	jmp	.LBB11_1814
.LBB11_1813:
	jmp	.LBB11_2268
.LBB11_1814:
	movsd	.LCPI11_175(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1815
	jp	.LBB11_1815
	jmp	.LBB11_1816
.LBB11_1815:
	jmp	.LBB11_1817
.LBB11_1816:
	jmp	.LBB11_2269
.LBB11_1817:
	movsd	.LCPI11_80(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1818
	jp	.LBB11_1818
	jmp	.LBB11_1819
.LBB11_1818:
	jmp	.LBB11_1820
.LBB11_1819:
	jmp	.LBB11_2270
.LBB11_1820:
	movsd	.LCPI11_176(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1821
	jp	.LBB11_1821
	jmp	.LBB11_1822
.LBB11_1821:
	jmp	.LBB11_1823
.LBB11_1822:
	jmp	.LBB11_2271
.LBB11_1823:
	movsd	.LCPI11_177(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1824
	jp	.LBB11_1824
	jmp	.LBB11_1825
.LBB11_1824:
	jmp	.LBB11_1826
.LBB11_1825:
	jmp	.LBB11_2272
.LBB11_1826:
	movsd	.LCPI11_178(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1827
	jp	.LBB11_1827
	jmp	.LBB11_1828
.LBB11_1827:
	jmp	.LBB11_1829
.LBB11_1828:
	jmp	.LBB11_2273
.LBB11_1829:
	movsd	.LCPI11_46(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1830
	jp	.LBB11_1830
	jmp	.LBB11_1831
.LBB11_1830:
	jmp	.LBB11_1832
.LBB11_1831:
	jmp	.LBB11_2274
.LBB11_1832:
	movsd	.LCPI11_179(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1833
	jp	.LBB11_1833
	jmp	.LBB11_1834
.LBB11_1833:
	jmp	.LBB11_1835
.LBB11_1834:
	jmp	.LBB11_2275
.LBB11_1835:
	movsd	.LCPI11_180(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1836
	jp	.LBB11_1836
	jmp	.LBB11_1837
.LBB11_1836:
	jmp	.LBB11_1838
.LBB11_1837:
	jmp	.LBB11_2276
.LBB11_1838:
	movsd	.LCPI11_181(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1839
	jp	.LBB11_1839
	jmp	.LBB11_1840
.LBB11_1839:
	jmp	.LBB11_1841
.LBB11_1840:
	jmp	.LBB11_2277
.LBB11_1841:
	movsd	.LCPI11_182(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1842
	jp	.LBB11_1842
	jmp	.LBB11_1843
.LBB11_1842:
	jmp	.LBB11_1844
.LBB11_1843:
	jmp	.LBB11_2278
.LBB11_1844:
	movsd	.LCPI11_183(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1845
	jp	.LBB11_1845
	jmp	.LBB11_1846
.LBB11_1845:
	jmp	.LBB11_1847
.LBB11_1846:
	jmp	.LBB11_2279
.LBB11_1847:
	movsd	.LCPI11_184(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1848
	jp	.LBB11_1848
	jmp	.LBB11_1849
.LBB11_1848:
	jmp	.LBB11_1850
.LBB11_1849:
	jmp	.LBB11_2280
.LBB11_1850:
	movsd	.LCPI11_185(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1851
	jp	.LBB11_1851
	jmp	.LBB11_1852
.LBB11_1851:
	jmp	.LBB11_1853
.LBB11_1852:
	jmp	.LBB11_2281
.LBB11_1853:
	movsd	.LCPI11_8(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1854
	jp	.LBB11_1854
	jmp	.LBB11_1855
.LBB11_1854:
	jmp	.LBB11_1856
.LBB11_1855:
	jmp	.LBB11_2282
.LBB11_1856:
	movsd	.LCPI11_186(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1857
	jp	.LBB11_1857
	jmp	.LBB11_1858
.LBB11_1857:
	jmp	.LBB11_1859
.LBB11_1858:
	jmp	.LBB11_2283
.LBB11_1859:
	movsd	.LCPI11_187(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1860
	jp	.LBB11_1860
	jmp	.LBB11_1861
.LBB11_1860:
	jmp	.LBB11_1862
.LBB11_1861:
	jmp	.LBB11_2284
.LBB11_1862:
	movsd	.LCPI11_188(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1863
	jp	.LBB11_1863
	jmp	.LBB11_1864
.LBB11_1863:
	jmp	.LBB11_1865
.LBB11_1864:
	jmp	.LBB11_2285
.LBB11_1865:
	movsd	.LCPI11_189(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1866
	jp	.LBB11_1866
	jmp	.LBB11_1867
.LBB11_1866:
	jmp	.LBB11_1868
.LBB11_1867:
	jmp	.LBB11_2286
.LBB11_1868:
	movsd	.LCPI11_190(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1869
	jp	.LBB11_1869
	jmp	.LBB11_1870
.LBB11_1869:
	jmp	.LBB11_1871
.LBB11_1870:
	jmp	.LBB11_2287
.LBB11_1871:
	movsd	.LCPI11_191(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1872
	jp	.LBB11_1872
	jmp	.LBB11_1873
.LBB11_1872:
	jmp	.LBB11_1874
.LBB11_1873:
	jmp	.LBB11_2288
.LBB11_1874:
	movsd	.LCPI11_192(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1875
	jp	.LBB11_1875
	jmp	.LBB11_1876
.LBB11_1875:
	jmp	.LBB11_1877
.LBB11_1876:
	jmp	.LBB11_2289
.LBB11_1877:
	movsd	.LCPI11_193(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1878
	jp	.LBB11_1878
	jmp	.LBB11_1879
.LBB11_1878:
	jmp	.LBB11_1880
.LBB11_1879:
	jmp	.LBB11_2290
.LBB11_1880:
	movsd	.LCPI11_194(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1881
	jp	.LBB11_1881
	jmp	.LBB11_1882
.LBB11_1881:
	jmp	.LBB11_1883
.LBB11_1882:
	jmp	.LBB11_2291
.LBB11_1883:
	movsd	.LCPI11_195(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1884
	jp	.LBB11_1884
	jmp	.LBB11_1885
.LBB11_1884:
	jmp	.LBB11_1886
.LBB11_1885:
	jmp	.LBB11_2292
.LBB11_1886:
	movsd	.LCPI11_196(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1887
	jp	.LBB11_1887
	jmp	.LBB11_1888
.LBB11_1887:
	jmp	.LBB11_1889
.LBB11_1888:
	jmp	.LBB11_2293
.LBB11_1889:
	movsd	.LCPI11_48(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1890
	jp	.LBB11_1890
	jmp	.LBB11_1891
.LBB11_1890:
	jmp	.LBB11_1892
.LBB11_1891:
	jmp	.LBB11_2294
.LBB11_1892:
	movsd	.LCPI11_197(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1893
	jp	.LBB11_1893
	jmp	.LBB11_1894
.LBB11_1893:
	jmp	.LBB11_1895
.LBB11_1894:
	jmp	.LBB11_2295
.LBB11_1895:
	movsd	.LCPI11_198(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1896
	jp	.LBB11_1896
	jmp	.LBB11_1897
.LBB11_1896:
	jmp	.LBB11_1898
.LBB11_1897:
	jmp	.LBB11_2296
.LBB11_1898:
	movsd	.LCPI11_199(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1899
	jp	.LBB11_1899
	jmp	.LBB11_1900
.LBB11_1899:
	jmp	.LBB11_1901
.LBB11_1900:
	jmp	.LBB11_2297
.LBB11_1901:
	movsd	.LCPI11_200(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1902
	jp	.LBB11_1902
	jmp	.LBB11_1903
.LBB11_1902:
	jmp	.LBB11_1904
.LBB11_1903:
	jmp	.LBB11_2298
.LBB11_1904:
	movsd	.LCPI11_201(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1905
	jp	.LBB11_1905
	jmp	.LBB11_1906
.LBB11_1905:
	jmp	.LBB11_1907
.LBB11_1906:
	jmp	.LBB11_2299
.LBB11_1907:
	movsd	.LCPI11_202(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1908
	jp	.LBB11_1908
	jmp	.LBB11_1909
.LBB11_1908:
	jmp	.LBB11_1910
.LBB11_1909:
	jmp	.LBB11_2300
.LBB11_1910:
	movsd	.LCPI11_203(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1911
	jp	.LBB11_1911
	jmp	.LBB11_1912
.LBB11_1911:
	jmp	.LBB11_1913
.LBB11_1912:
	jmp	.LBB11_2301
.LBB11_1913:
	movsd	.LCPI11_59(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1914
	jp	.LBB11_1914
	jmp	.LBB11_1915
.LBB11_1914:
	jmp	.LBB11_1916
.LBB11_1915:
	jmp	.LBB11_2302
.LBB11_1916:
	movsd	.LCPI11_204(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1917
	jp	.LBB11_1917
	jmp	.LBB11_1918
.LBB11_1917:
	jmp	.LBB11_1919
.LBB11_1918:
	jmp	.LBB11_2303
.LBB11_1919:
	movsd	.LCPI11_205(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1920
	jp	.LBB11_1920
	jmp	.LBB11_1921
.LBB11_1920:
	jmp	.LBB11_1922
.LBB11_1921:
	jmp	.LBB11_2304
.LBB11_1922:
	movsd	.LCPI11_206(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1923
	jp	.LBB11_1923
	jmp	.LBB11_1924
.LBB11_1923:
	jmp	.LBB11_1925
.LBB11_1924:
	jmp	.LBB11_2305
.LBB11_1925:
	movsd	.LCPI11_207(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1926
	jp	.LBB11_1926
	jmp	.LBB11_1927
.LBB11_1926:
	jmp	.LBB11_1928
.LBB11_1927:
	jmp	.LBB11_2306
.LBB11_1928:
	movsd	.LCPI11_208(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1929
	jp	.LBB11_1929
	jmp	.LBB11_1930
.LBB11_1929:
	jmp	.LBB11_1931
.LBB11_1930:
	jmp	.LBB11_2307
.LBB11_1931:
	movsd	.LCPI11_209(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1932
	jp	.LBB11_1932
	jmp	.LBB11_1933
.LBB11_1932:
	jmp	.LBB11_1934
.LBB11_1933:
	jmp	.LBB11_2308
.LBB11_1934:
	movsd	.LCPI11_210(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1935
	jp	.LBB11_1935
	jmp	.LBB11_1936
.LBB11_1935:
	jmp	.LBB11_1937
.LBB11_1936:
	jmp	.LBB11_2309
.LBB11_1937:
	movsd	.LCPI11_103(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1938
	jp	.LBB11_1938
	jmp	.LBB11_1939
.LBB11_1938:
	jmp	.LBB11_1940
.LBB11_1939:
	jmp	.LBB11_2310
.LBB11_1940:
	movsd	.LCPI11_3(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1941
	jp	.LBB11_1941
	jmp	.LBB11_1942
.LBB11_1941:
	jmp	.LBB11_1943
.LBB11_1942:
	jmp	.LBB11_2311
.LBB11_1943:
	movsd	.LCPI11_211(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1944
	jp	.LBB11_1944
	jmp	.LBB11_1945
.LBB11_1944:
	jmp	.LBB11_1946
.LBB11_1945:
	jmp	.LBB11_2312
.LBB11_1946:
	movsd	.LCPI11_212(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1947
	jp	.LBB11_1947
	jmp	.LBB11_1948
.LBB11_1947:
	jmp	.LBB11_1949
.LBB11_1948:
	jmp	.LBB11_2313
.LBB11_1949:
	movsd	.LCPI11_50(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1950
	jp	.LBB11_1950
	jmp	.LBB11_1951
.LBB11_1950:
	jmp	.LBB11_1952
.LBB11_1951:
	jmp	.LBB11_2314
.LBB11_1952:
	movsd	.LCPI11_213(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1953
	jp	.LBB11_1953
	jmp	.LBB11_1954
.LBB11_1953:
	jmp	.LBB11_1955
.LBB11_1954:
	jmp	.LBB11_2315
.LBB11_1955:
	movsd	.LCPI11_214(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1956
	jp	.LBB11_1956
	jmp	.LBB11_1957
.LBB11_1956:
	jmp	.LBB11_1958
.LBB11_1957:
	jmp	.LBB11_2316
.LBB11_1958:
	movsd	.LCPI11_215(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1959
	jp	.LBB11_1959
	jmp	.LBB11_1960
.LBB11_1959:
	jmp	.LBB11_1961
.LBB11_1960:
	jmp	.LBB11_2317
.LBB11_1961:
	movsd	.LCPI11_216(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1962
	jp	.LBB11_1962
	jmp	.LBB11_1963
.LBB11_1962:
	jmp	.LBB11_1964
.LBB11_1963:
	jmp	.LBB11_2318
.LBB11_1964:
	movsd	.LCPI11_217(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1965
	jp	.LBB11_1965
	jmp	.LBB11_1966
.LBB11_1965:
	jmp	.LBB11_1967
.LBB11_1966:
	jmp	.LBB11_2319
.LBB11_1967:
	movsd	.LCPI11_218(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1968
	jp	.LBB11_1968
	jmp	.LBB11_1969
.LBB11_1968:
	jmp	.LBB11_1970
.LBB11_1969:
	jmp	.LBB11_2320
.LBB11_1970:
	movsd	.LCPI11_219(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1971
	jp	.LBB11_1971
	jmp	.LBB11_1972
.LBB11_1971:
	jmp	.LBB11_1973
.LBB11_1972:
	jmp	.LBB11_2321
.LBB11_1973:
	movsd	.LCPI11_220(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1974
	jp	.LBB11_1974
	jmp	.LBB11_1975
.LBB11_1974:
	jmp	.LBB11_1976
.LBB11_1975:
	jmp	.LBB11_2322
.LBB11_1976:
	movsd	.LCPI11_221(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1977
	jp	.LBB11_1977
	jmp	.LBB11_1978
.LBB11_1977:
	jmp	.LBB11_1979
.LBB11_1978:
	jmp	.LBB11_2323
.LBB11_1979:
	movsd	.LCPI11_222(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1980
	jp	.LBB11_1980
	jmp	.LBB11_1981
.LBB11_1980:
	jmp	.LBB11_1982
.LBB11_1981:
	jmp	.LBB11_2324
.LBB11_1982:
	movsd	.LCPI11_223(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1983
	jp	.LBB11_1983
	jmp	.LBB11_1984
.LBB11_1983:
	jmp	.LBB11_1985
.LBB11_1984:
	jmp	.LBB11_2325
.LBB11_1985:
	movsd	.LCPI11_224(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1986
	jp	.LBB11_1986
	jmp	.LBB11_1987
.LBB11_1986:
	jmp	.LBB11_1988
.LBB11_1987:
	jmp	.LBB11_2326
.LBB11_1988:
	movsd	.LCPI11_225(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1989
	jp	.LBB11_1989
	jmp	.LBB11_1990
.LBB11_1989:
	jmp	.LBB11_1991
.LBB11_1990:
	jmp	.LBB11_2327
.LBB11_1991:
	movsd	.LCPI11_226(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1992
	jp	.LBB11_1992
	jmp	.LBB11_1993
.LBB11_1992:
	jmp	.LBB11_1994
.LBB11_1993:
	jmp	.LBB11_2328
.LBB11_1994:
	movsd	.LCPI11_227(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1995
	jp	.LBB11_1995
	jmp	.LBB11_1996
.LBB11_1995:
	jmp	.LBB11_1997
.LBB11_1996:
	jmp	.LBB11_2329
.LBB11_1997:
	movsd	.LCPI11_228(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_1998
	jp	.LBB11_1998
	jmp	.LBB11_1999
.LBB11_1998:
	jmp	.LBB11_2000
.LBB11_1999:
	jmp	.LBB11_2330
.LBB11_2000:
	movsd	.LCPI11_105(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2001
	jp	.LBB11_2001
	jmp	.LBB11_2002
.LBB11_2001:
	jmp	.LBB11_2003
.LBB11_2002:
	jmp	.LBB11_2331
.LBB11_2003:
	movsd	.LCPI11_229(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2004
	jp	.LBB11_2004
	jmp	.LBB11_2005
.LBB11_2004:
	jmp	.LBB11_2006
.LBB11_2005:
	jmp	.LBB11_2332
.LBB11_2006:
	movsd	.LCPI11_230(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2007
	jp	.LBB11_2007
	jmp	.LBB11_2008
.LBB11_2007:
	jmp	.LBB11_2009
.LBB11_2008:
	jmp	.LBB11_2333
.LBB11_2009:
	movsd	.LCPI11_231(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2010
	jp	.LBB11_2010
	jmp	.LBB11_2011
.LBB11_2010:
	jmp	.LBB11_2012
.LBB11_2011:
	jmp	.LBB11_2334
.LBB11_2012:
	movsd	.LCPI11_83(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2013
	jp	.LBB11_2013
	jmp	.LBB11_2014
.LBB11_2013:
	jmp	.LBB11_2015
.LBB11_2014:
	jmp	.LBB11_2335
.LBB11_2015:
	movsd	.LCPI11_232(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2016
	jp	.LBB11_2016
	jmp	.LBB11_2017
.LBB11_2016:
	jmp	.LBB11_2018
.LBB11_2017:
	jmp	.LBB11_2336
.LBB11_2018:
	movsd	.LCPI11_233(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2019
	jp	.LBB11_2019
	jmp	.LBB11_2020
.LBB11_2019:
	jmp	.LBB11_2021
.LBB11_2020:
	jmp	.LBB11_2337
.LBB11_2021:
	movsd	.LCPI11_234(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2022
	jp	.LBB11_2022
	jmp	.LBB11_2023
.LBB11_2022:
	jmp	.LBB11_2024
.LBB11_2023:
	jmp	.LBB11_2338
.LBB11_2024:
	movsd	.LCPI11_52(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2025
	jp	.LBB11_2025
	jmp	.LBB11_2026
.LBB11_2025:
	jmp	.LBB11_2027
.LBB11_2026:
	jmp	.LBB11_2339
.LBB11_2027:
	movsd	.LCPI11_235(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2028
	jp	.LBB11_2028
	jmp	.LBB11_2029
.LBB11_2028:
	jmp	.LBB11_2030
.LBB11_2029:
	jmp	.LBB11_2340
.LBB11_2030:
	movsd	.LCPI11_236(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2031
	jp	.LBB11_2031
	jmp	.LBB11_2032
.LBB11_2031:
	jmp	.LBB11_2033
.LBB11_2032:
	jmp	.LBB11_2341
.LBB11_2033:
	movsd	.LCPI11_237(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2034
	jp	.LBB11_2034
	jmp	.LBB11_2035
.LBB11_2034:
	jmp	.LBB11_2036
.LBB11_2035:
	jmp	.LBB11_2342
.LBB11_2036:
	movsd	.LCPI11_238(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2037
	jp	.LBB11_2037
	jmp	.LBB11_2038
.LBB11_2037:
	jmp	.LBB11_2039
.LBB11_2038:
	jmp	.LBB11_2343
.LBB11_2039:
	movsd	.LCPI11_239(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2040
	jp	.LBB11_2040
	jmp	.LBB11_2041
.LBB11_2040:
	jmp	.LBB11_2042
.LBB11_2041:
	jmp	.LBB11_2344
.LBB11_2042:
	movsd	.LCPI11_240(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2043
	jp	.LBB11_2043
	jmp	.LBB11_2044
.LBB11_2043:
	jmp	.LBB11_2045
.LBB11_2044:
	jmp	.LBB11_2345
.LBB11_2045:
	movsd	.LCPI11_241(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2046
	jp	.LBB11_2046
	jmp	.LBB11_2047
.LBB11_2046:
	jmp	.LBB11_2048
.LBB11_2047:
	jmp	.LBB11_2346
.LBB11_2048:
	movsd	.LCPI11_107(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2049
	jp	.LBB11_2049
	jmp	.LBB11_2050
.LBB11_2049:
	jmp	.LBB11_2051
.LBB11_2050:
	jmp	.LBB11_2347
.LBB11_2051:
	movsd	.LCPI11_242(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2052
	jp	.LBB11_2052
	jmp	.LBB11_2053
.LBB11_2052:
	jmp	.LBB11_2054
.LBB11_2053:
	jmp	.LBB11_2348
.LBB11_2054:
	movsd	.LCPI11_243(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2055
	jp	.LBB11_2055
	jmp	.LBB11_2056
.LBB11_2055:
	jmp	.LBB11_2057
.LBB11_2056:
	jmp	.LBB11_2349
.LBB11_2057:
	movsd	.LCPI11_244(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2058
	jp	.LBB11_2058
	jmp	.LBB11_2059
.LBB11_2058:
	jmp	.LBB11_2060
.LBB11_2059:
	jmp	.LBB11_2350
.LBB11_2060:
	movsd	.LCPI11_245(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2061
	jp	.LBB11_2061
	jmp	.LBB11_2062
.LBB11_2061:
	jmp	.LBB11_2063
.LBB11_2062:
	jmp	.LBB11_2351
.LBB11_2063:
	movsd	.LCPI11_246(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2064
	jp	.LBB11_2064
	jmp	.LBB11_2065
.LBB11_2064:
	jmp	.LBB11_2066
.LBB11_2065:
	jmp	.LBB11_2352
.LBB11_2066:
	movsd	.LCPI11_247(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2067
	jp	.LBB11_2067
	jmp	.LBB11_2068
.LBB11_2067:
	jmp	.LBB11_2069
.LBB11_2068:
	jmp	.LBB11_2353
.LBB11_2069:
	movsd	.LCPI11_248(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2070
	jp	.LBB11_2070
	jmp	.LBB11_2071
.LBB11_2070:
	jmp	.LBB11_2072
.LBB11_2071:
	jmp	.LBB11_2354
.LBB11_2072:
	movsd	.LCPI11_249(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2073
	jp	.LBB11_2073
	jmp	.LBB11_2074
.LBB11_2073:
	jmp	.LBB11_2075
.LBB11_2074:
	jmp	.LBB11_2355
.LBB11_2075:
	movsd	.LCPI11_250(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2076
	jp	.LBB11_2076
	jmp	.LBB11_2077
.LBB11_2076:
	jmp	.LBB11_2078
.LBB11_2077:
	jmp	.LBB11_2356
.LBB11_2078:
	movsd	.LCPI11_251(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2079
	jp	.LBB11_2079
	jmp	.LBB11_2080
.LBB11_2079:
	jmp	.LBB11_2081
.LBB11_2080:
	jmp	.LBB11_2357
.LBB11_2081:
	movsd	.LCPI11_252(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2082
	jp	.LBB11_2082
	jmp	.LBB11_2083
.LBB11_2082:
	jmp	.LBB11_2084
.LBB11_2083:
	jmp	.LBB11_2358
.LBB11_2084:
	movsd	.LCPI11_253(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2085
	jp	.LBB11_2085
	jmp	.LBB11_2086
.LBB11_2085:
	jmp	.LBB11_2087
.LBB11_2086:
	jmp	.LBB11_2359
.LBB11_2087:
	movsd	.LCPI11_254(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2088
	jp	.LBB11_2088
	jmp	.LBB11_2089
.LBB11_2088:
	jmp	.LBB11_2090
.LBB11_2089:
	jmp	.LBB11_2360
.LBB11_2090:
	movsd	.LCPI11_255(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2091
	jp	.LBB11_2091
	jmp	.LBB11_2092
.LBB11_2091:
	jmp	.LBB11_2093
.LBB11_2092:
	jmp	.LBB11_2361
.LBB11_2093:
	movsd	.LCPI11_256(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2094
	jp	.LBB11_2094
	jmp	.LBB11_2095
.LBB11_2094:
	jmp	.LBB11_2096
.LBB11_2095:
	jmp	.LBB11_2362
.LBB11_2096:
	movsd	.LCPI11_257(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2097
	jp	.LBB11_2097
	jmp	.LBB11_2098
.LBB11_2097:
	jmp	.LBB11_2099
.LBB11_2098:
	jmp	.LBB11_2363
.LBB11_2099:
	movsd	.LCPI11_258(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2100
	jp	.LBB11_2100
	jmp	.LBB11_2101
.LBB11_2100:
	jmp	.LBB11_2102
.LBB11_2101:
	jmp	.LBB11_2364
.LBB11_2102:
	movsd	.LCPI11_259(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2103
	jp	.LBB11_2103
	jmp	.LBB11_2104
.LBB11_2103:
	jmp	.LBB11_2105
.LBB11_2104:
	jmp	.LBB11_2365
.LBB11_2105:
	movsd	.LCPI11_260(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2106
	jp	.LBB11_2106
	jmp	.LBB11_2107
.LBB11_2106:
	jmp	.LBB11_2108
.LBB11_2107:
	jmp	.LBB11_2366
.LBB11_2108:
	movsd	.LCPI11_18(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2109
	jp	.LBB11_2109
	jmp	.LBB11_2110
.LBB11_2109:
	jmp	.LBB11_2111
.LBB11_2110:
	jmp	.LBB11_2367
.LBB11_2111:
	jmp	.LBB11_2368
.LBB11_2112:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2113:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_8(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2114:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_8(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2115:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_8(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_8(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2116:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_8(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2117:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_8(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_8(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2118:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_8(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2119:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_8(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_8(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_8(%rip), %xmm1  # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2120:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2121:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2122:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2123:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2124:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2125:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2126:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2127:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2128:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2129:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_27(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_27(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_27(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2130:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2131:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2132:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2133:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_34(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_34(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_34(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2134:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2135:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_38(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_38(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_38(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2136:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2137:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_42(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_42(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_42(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2138:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_44(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_44(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_44(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2139:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_46(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_46(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_46(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2140:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2141:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_50(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_50(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_50(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2142:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_52(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_52(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_52(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2143:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2144:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2145:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2146:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2147:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_59(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2148:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2149:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_59(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2150:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2151:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2152:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2153:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2154:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2155:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_59(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2156:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2157:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_59(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2158:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2159:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2160:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2161:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2162:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2163:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_59(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2164:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2165:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_59(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2166:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2167:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2168:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2169:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_80(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2170:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_59(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2171:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_83(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2172:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2173:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_83(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2174:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_59(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2175:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_80(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2176:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2177:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_80(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2178:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_59(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2179:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_83(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2180:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2181:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_83(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2182:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_59(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2183:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_80(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2184:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2185:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_80(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2186:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_59(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2187:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_83(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2188:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2189:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_83(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2190:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_59(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2191:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_57(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_80(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2192:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2193:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_103(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2194:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_105(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2195:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_107(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2196:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2197:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_107(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2198:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_105(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2199:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_103(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2200:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2201:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_103(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2202:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_105(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2203:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_107(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2204:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2205:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_107(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2206:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_105(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2207:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_103(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2208:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2209:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_103(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2210:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_105(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2211:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_107(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2212:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2213:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_107(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2214:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_105(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2215:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_103(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2216:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2217:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_47(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2218:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2219:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2220:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2221:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2222:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2223:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_47(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2224:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2225:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_47(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2226:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2227:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2228:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2229:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2230:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2231:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_47(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2232:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2233:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_47(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2234:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2235:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2236:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2237:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2238:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2239:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_47(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2240:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2241:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_34(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2242:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2243:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_38(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2244:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2245:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_38(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2246:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2247:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_34(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2248:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2249:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_34(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2250:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2251:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_38(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2252:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2253:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_38(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2254:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2255:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_34(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2256:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2257:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_34(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2258:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2259:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_38(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2260:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2261:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_38(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2262:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2263:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_34(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2264:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2265:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_112(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2266:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_38(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2267:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_127(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2268:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2269:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_127(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2270:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_38(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2271:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_112(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2272:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2273:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_112(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2274:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_38(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2275:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_127(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2276:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2277:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_127(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2278:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_38(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2279:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_112(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2280:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2281:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_112(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2282:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_38(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2283:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_127(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2284:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2285:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_127(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2286:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_38(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2287:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_36(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_112(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_40(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2288:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2289:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_25(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2290:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2291:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2292:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2293:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2294:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2295:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_25(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2296:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2297:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_25(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2298:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2299:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2300:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2301:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2302:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2303:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_25(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2304:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2305:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_25(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2306:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2307:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2308:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2309:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2310:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2311:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_25(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2312:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2313:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_64(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2314:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2315:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2316:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2317:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2318:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2319:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_64(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2320:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2321:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_64(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2322:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2323:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2324:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2325:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2326:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2327:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_64(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2328:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2329:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_64(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2330:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2331:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2332:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2333:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_32(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2334:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2335:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_64(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2336:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2337:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2338:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_76(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2339:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_85(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2340:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2341:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_85(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2342:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_76(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2343:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2344:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2345:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2346:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_76(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2347:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_85(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2348:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2349:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_85(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2350:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_76(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2351:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2352:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2353:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2354:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_76(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2355:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_85(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2356:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2357:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_85(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2358:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_76(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2359:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_31(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_72(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_55(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2360:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2361:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2362:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2363:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2364:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2365:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2366:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_2368
.LBB11_2367:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
.LBB11_2368:
	jmp	.LBB11_2369
.LBB11_2369:
	jmp	.LBB11_2370
.LBB11_2370:
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB11_2371
	jp	.LBB11_2371
	jmp	.LBB11_2372
.LBB11_2371:
	jmp	.LBB11_2374
.LBB11_2372:
	jmp	.LBB11_2373
.LBB11_2373:
	jmp	.LBB11_6016
.LBB11_2374:
	movsd	.LCPI11_265(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2375
	jp	.LBB11_2375
	jmp	.LBB11_2376
.LBB11_2375:
	jmp	.LBB11_2378
.LBB11_2376:
	jmp	.LBB11_2377
.LBB11_2377:
	xorl	%eax, %eax
	movl	%eax, %edi
	movl	$8, %esi
	movl	%eax, %edx
	movl	%eax, %ecx
	movl	%eax, %r8d
	callq	fb_GfxScreen@PLT
	movsd	-2232(%rbp), %xmm0      # xmm0 = mem[0],zero
	movl	%eax, -15928(%rbp)      # 4-byte Spill
	callq	fb_DoubleToStr@PLT
	xorl	%esi, %esi
	movq	%rax, -2256(%rbp)
	leaq	-128(%rbp), %rax
	movq	%rax, %r9
	movq	%r9, %rdi
	movl	$24, %edx
	movq	%rax, -15936(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-2256(%rbp), %rax
	movq	-15936(%rbp), %rdi      # 8-byte Reload
	leaq	.L.str.170(%rip), %rsi
	movl	$36, %edx
	movq	%rax, %rcx
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -2264(%rbp)
	leaq	-152(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -15944(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-2264(%rbp), %rax
	movq	-15944(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.171(%rip), %rcx
	movl	$22, %r8d
	callq	fb_StrConcat@PLT
	movq	%rax, -2272(%rbp)
	movq	-2272(%rbp), %rdi
	callq	fb_Shell@PLT
	xorl	%r9d, %r9d
	movl	$1920, %edi             # imm = 0x780
	movl	$1080, %esi             # imm = 0x438
	movl	$32, %edx
	movl	$7, %ecx
	movl	$65, %r8d
	movl	%eax, -15948(%rbp)      # 4-byte Spill
	callq	fb_GfxScreenRes@PLT
	movl	$4294901760, %edi       # imm = 0xFFFF0000
	movl	%eax, -15952(%rbp)      # 4-byte Spill
	callq	fb_Cls@PLT
	xorl	%eax, %eax
	movl	%eax, %esi
	leaq	.L.str.1(%rip), %rdi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%ecx, %ecx
	movl	%ecx, %edi
	xorl	%ecx, %ecx
	movq	%rax, -2280(%rbp)
	movq	-2280(%rbp), %rax
	xorps	%xmm0, %xmm0
	movss	%xmm0, -15956(%rbp)     # 4-byte Spill
	movss	-15956(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movl	$4278190080, %esi       # imm = 0xFF000000
	movl	%ecx, %edx
	movl	%ecx, -15960(%rbp)      # 4-byte Spill
	movq	%rax, %rcx
	movl	-15960(%rbp), %r8d      # 4-byte Reload
	movl	$1073741828, %r9d       # imm = 0x40000004
	callq	fb_GfxPaint@PLT
	jmp	.LBB11_6016
.LBB11_2378:
	movsd	.LCPI11_266(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2379
	jp	.LBB11_2379
	jmp	.LBB11_2380
.LBB11_2379:
	jmp	.LBB11_2382
.LBB11_2380:
	jmp	.LBB11_2381
.LBB11_2381:
	xorl	%eax, %eax
	movl	%eax, %edi
	movl	$8, %esi
	movl	%eax, %edx
	movl	%eax, %ecx
	movl	%eax, %r8d
	callq	fb_GfxScreen@PLT
	leaq	.L.str.172(%rip), %rdi
	movl	$66, %esi
	movl	%eax, -15964(%rbp)      # 4-byte Spill
	callq	fb_StrAllocTempDescZEx@PLT
	movq	%rax, -2288(%rbp)
	movq	-2288(%rbp), %rdi
	callq	fb_Shell@PLT
	xorl	%r9d, %r9d
	movl	$1920, %edi             # imm = 0x780
	movl	$1080, %esi             # imm = 0x438
	movl	$32, %edx
	movl	$7, %ecx
	movl	$65, %r8d
	movl	%eax, -15968(%rbp)      # 4-byte Spill
	callq	fb_GfxScreenRes@PLT
	movl	$4294901760, %edi       # imm = 0xFFFF0000
	movl	%eax, -15972(%rbp)      # 4-byte Spill
	callq	fb_Cls@PLT
	xorl	%eax, %eax
	movl	%eax, %esi
	leaq	.L.str.1(%rip), %rdi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%ecx, %ecx
	movl	%ecx, %edi
	xorl	%ecx, %ecx
	movq	%rax, -2296(%rbp)
	movq	-2296(%rbp), %rax
	xorps	%xmm0, %xmm0
	movss	%xmm0, -15976(%rbp)     # 4-byte Spill
	movss	-15976(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movl	$4278190080, %esi       # imm = 0xFF000000
	movl	%ecx, %edx
	movl	%ecx, -15980(%rbp)      # 4-byte Spill
	movq	%rax, %rcx
	movl	-15980(%rbp), %r8d      # 4-byte Reload
	movl	$1073741828, %r9d       # imm = 0x40000004
	callq	fb_GfxPaint@PLT
	jmp	.LBB11_6016
.LBB11_2382:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2383
	jp	.LBB11_2383
	jmp	.LBB11_2384
.LBB11_2383:
	jmp	.LBB11_2386
.LBB11_2384:
	jmp	.LBB11_2385
.LBB11_2385:
	movq	-2216(%rbp), %rax
	movsd	393256(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-2216(%rbp), %rcx
	movsd	393232(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -15992(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-15992(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393240(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16000(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-16000(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	393248(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394824(%rax)
	jmp	.LBB11_6016
.LBB11_2386:
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2387
	jp	.LBB11_2387
	jmp	.LBB11_2388
.LBB11_2387:
	jmp	.LBB11_2390
.LBB11_2388:
	jmp	.LBB11_2389
.LBB11_2389:
	movq	-2216(%rbp), %rax
	movsd	393256(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-2216(%rbp), %rcx
	movsd	393232(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -16008(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-16008(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393240(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16016(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-16016(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	393248(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394824(%rax)
	jmp	.LBB11_6016
.LBB11_2390:
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2391
	jp	.LBB11_2391
	jmp	.LBB11_2392
.LBB11_2391:
	jmp	.LBB11_2394
.LBB11_2392:
	jmp	.LBB11_2393
.LBB11_2393:
	movq	-2216(%rbp), %rax
	movsd	393256(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-2216(%rbp), %rcx
	movsd	393232(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -16024(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-16024(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393240(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16032(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-16032(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	393248(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394824(%rax)
	jmp	.LBB11_6016
.LBB11_2394:
	movsd	.LCPI11_267(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2395
	jp	.LBB11_2395
	jmp	.LBB11_2396
.LBB11_2395:
	jmp	.LBB11_2398
.LBB11_2396:
	jmp	.LBB11_2397
.LBB11_2397:
	movq	-2216(%rbp), %rax
	movsd	393256(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-2216(%rbp), %rcx
	movsd	393232(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -16040(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-16040(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393240(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16048(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-16048(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	393248(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394824(%rax)
	jmp	.LBB11_6016
.LBB11_2398:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2399
	jp	.LBB11_2399
	jmp	.LBB11_2400
.LBB11_2399:
	jmp	.LBB11_2402
.LBB11_2400:
	jmp	.LBB11_2401
.LBB11_2401:
	movq	-2216(%rbp), %rax
	movsd	393288(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-2216(%rbp), %rcx
	movsd	393264(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -16056(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-16056(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393272(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16064(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-16064(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	393280(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394832(%rax)
	jmp	.LBB11_6016
.LBB11_2402:
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2403
	jp	.LBB11_2403
	jmp	.LBB11_2404
.LBB11_2403:
	jmp	.LBB11_2406
.LBB11_2404:
	jmp	.LBB11_2405
.LBB11_2405:
	movq	-2216(%rbp), %rax
	movsd	393288(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-2216(%rbp), %rcx
	movsd	393264(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -16072(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-16072(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393272(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16080(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-16080(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	393280(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394832(%rax)
	jmp	.LBB11_6016
.LBB11_2406:
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2407
	jp	.LBB11_2407
	jmp	.LBB11_2408
.LBB11_2407:
	jmp	.LBB11_2410
.LBB11_2408:
	jmp	.LBB11_2409
.LBB11_2409:
	movq	-2216(%rbp), %rax
	movsd	393288(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-2216(%rbp), %rcx
	movsd	393264(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -16088(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-16088(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393272(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16096(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-16096(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	393280(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394832(%rax)
	jmp	.LBB11_6016
.LBB11_2410:
	movsd	.LCPI11_268(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2411
	jp	.LBB11_2411
	jmp	.LBB11_2412
.LBB11_2411:
	jmp	.LBB11_2414
.LBB11_2412:
	jmp	.LBB11_2413
.LBB11_2413:
	movq	-2216(%rbp), %rax
	movsd	393288(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-2216(%rbp), %rcx
	movsd	393264(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -16104(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-16104(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393272(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16112(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-16112(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	393280(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394832(%rax)
	jmp	.LBB11_6016
.LBB11_2414:
	movsd	.LCPI11_269(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2415
	jp	.LBB11_2415
	jmp	.LBB11_2416
.LBB11_2415:
	jmp	.LBB11_2418
.LBB11_2416:
	jmp	.LBB11_2417
.LBB11_2417:
	movq	-2216(%rbp), %rax
	movsd	393304(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-2216(%rbp), %rcx
	movsd	393312(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -16120(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-16120(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393320(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16128(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-16128(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393328(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16136(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-16136(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	393336(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394840(%rax)
	jmp	.LBB11_6016
.LBB11_2418:
	movsd	.LCPI11_270(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2419
	jp	.LBB11_2419
	jmp	.LBB11_2420
.LBB11_2419:
	jmp	.LBB11_2422
.LBB11_2420:
	jmp	.LBB11_2421
.LBB11_2421:
	movq	-2216(%rbp), %rax
	movsd	393352(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-2216(%rbp), %rcx
	movsd	393360(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -16144(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-16144(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393368(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16152(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-16152(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393376(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16160(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-16160(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	393384(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394848(%rax)
	jmp	.LBB11_6016
.LBB11_2422:
	movsd	.LCPI11_271(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2423
	jp	.LBB11_2423
	jmp	.LBB11_2424
.LBB11_2423:
	jmp	.LBB11_2426
.LBB11_2424:
	jmp	.LBB11_2425
.LBB11_2425:
	movq	-2216(%rbp), %rax
	movsd	393400(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-2216(%rbp), %rcx
	movsd	393408(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -16168(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-16168(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393416(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16176(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-16176(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393424(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16184(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-16184(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	393432(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394856(%rax)
	jmp	.LBB11_6016
.LBB11_2426:
	movsd	.LCPI11_272(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2427
	jp	.LBB11_2427
	jmp	.LBB11_2428
.LBB11_2427:
	jmp	.LBB11_2430
.LBB11_2428:
	jmp	.LBB11_2429
.LBB11_2429:
	movq	-2216(%rbp), %rax
	movsd	393448(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-2216(%rbp), %rcx
	movsd	393456(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -16192(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-16192(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393464(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16200(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-16200(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393472(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16208(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-16208(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	393480(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394864(%rax)
	jmp	.LBB11_6016
.LBB11_2430:
	movsd	.LCPI11_273(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2431
	jp	.LBB11_2431
	jmp	.LBB11_2432
.LBB11_2431:
	jmp	.LBB11_2434
.LBB11_2432:
	jmp	.LBB11_2433
.LBB11_2433:
	movq	-2216(%rbp), %rax
	movsd	393496(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-2216(%rbp), %rcx
	movsd	393504(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -16216(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-16216(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393512(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16224(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-16224(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393520(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16232(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-16232(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	393528(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394872(%rax)
	jmp	.LBB11_6016
.LBB11_2434:
	movsd	.LCPI11_274(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2435
	jp	.LBB11_2435
	jmp	.LBB11_2436
.LBB11_2435:
	jmp	.LBB11_2438
.LBB11_2436:
	jmp	.LBB11_2437
.LBB11_2437:
	movq	-2216(%rbp), %rax
	movsd	393544(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-2216(%rbp), %rcx
	movsd	393552(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -16240(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-16240(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393560(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16248(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-16248(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393568(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16256(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-16256(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	393576(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394880(%rax)
	jmp	.LBB11_6016
.LBB11_2438:
	movsd	.LCPI11_275(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2439
	jp	.LBB11_2439
	jmp	.LBB11_2440
.LBB11_2439:
	jmp	.LBB11_2442
.LBB11_2440:
	jmp	.LBB11_2441
.LBB11_2441:
	movq	-2216(%rbp), %rax
	movsd	393592(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-2216(%rbp), %rcx
	movsd	393600(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -16264(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-16264(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393608(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16272(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-16272(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393616(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16280(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-16280(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	393624(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB11_6016
.LBB11_2442:
	movsd	.LCPI11_276(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2443
	jp	.LBB11_2443
	jmp	.LBB11_2444
.LBB11_2443:
	jmp	.LBB11_2446
.LBB11_2444:
	jmp	.LBB11_2445
.LBB11_2445:
	movq	-2216(%rbp), %rax
	movsd	393640(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-2216(%rbp), %rcx
	movsd	393648(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -16288(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-16288(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393656(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16296(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-16296(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393664(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16304(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-16304(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	393672(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394896(%rax)
	jmp	.LBB11_6016
.LBB11_2446:
	movsd	.LCPI11_277(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2447
	jp	.LBB11_2447
	jmp	.LBB11_2448
.LBB11_2447:
	jmp	.LBB11_2450
.LBB11_2448:
	jmp	.LBB11_2449
.LBB11_2449:
	movq	-2216(%rbp), %rax
	movsd	393688(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-2216(%rbp), %rcx
	movsd	393696(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -16312(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-16312(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393704(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16320(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-16320(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393712(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16328(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-16328(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	393720(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394904(%rax)
	jmp	.LBB11_6016
.LBB11_2450:
	movsd	.LCPI11_278(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2451
	jp	.LBB11_2451
	jmp	.LBB11_2452
.LBB11_2451:
	jmp	.LBB11_2454
.LBB11_2452:
	jmp	.LBB11_2453
.LBB11_2453:
	movq	-2216(%rbp), %rax
	movsd	393736(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-2216(%rbp), %rcx
	movsd	393744(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -16336(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-16336(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393752(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16344(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-16344(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393768(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16352(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-16352(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	393776(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394912(%rax)
	jmp	.LBB11_6016
.LBB11_2454:
	movsd	.LCPI11_279(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2455
	jp	.LBB11_2455
	jmp	.LBB11_2456
.LBB11_2455:
	jmp	.LBB11_2458
.LBB11_2456:
	jmp	.LBB11_2457
.LBB11_2457:
	movq	-2216(%rbp), %rax
	movsd	393792(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-2216(%rbp), %rcx
	movsd	393800(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -16360(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-16360(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393808(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16368(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-16368(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393816(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16376(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-16376(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	393824(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394920(%rax)
	jmp	.LBB11_6016
.LBB11_2458:
	movsd	.LCPI11_280(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2459
	jp	.LBB11_2459
	jmp	.LBB11_2460
.LBB11_2459:
	jmp	.LBB11_2462
.LBB11_2460:
	jmp	.LBB11_2461
.LBB11_2461:
	movq	-2216(%rbp), %rax
	movsd	393832(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-2216(%rbp), %rcx
	movsd	393840(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -16384(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-16384(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393848(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16392(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-16392(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393856(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16400(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-16400(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	393864(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394928(%rax)
	jmp	.LBB11_6016
.LBB11_2462:
	movsd	.LCPI11_281(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2463
	jp	.LBB11_2463
	jmp	.LBB11_2464
.LBB11_2463:
	jmp	.LBB11_2466
.LBB11_2464:
	jmp	.LBB11_2465
.LBB11_2465:
	movq	-2216(%rbp), %rax
	movsd	393880(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-2216(%rbp), %rcx
	movsd	393888(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -16408(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-16408(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393896(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16416(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-16416(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393904(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16424(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-16424(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	393912(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394936(%rax)
	jmp	.LBB11_6016
.LBB11_2466:
	movsd	.LCPI11_282(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2467
	jp	.LBB11_2467
	jmp	.LBB11_2468
.LBB11_2467:
	jmp	.LBB11_2470
.LBB11_2468:
	jmp	.LBB11_2469
.LBB11_2469:
	movq	-2216(%rbp), %rax
	movsd	393928(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-2216(%rbp), %rcx
	movsd	393936(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -16432(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-16432(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393944(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16440(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-16440(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393952(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16448(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-16448(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	393960(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394944(%rax)
	jmp	.LBB11_6016
.LBB11_2470:
	movsd	.LCPI11_283(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2471
	jp	.LBB11_2471
	jmp	.LBB11_2472
.LBB11_2471:
	jmp	.LBB11_2474
.LBB11_2472:
	jmp	.LBB11_2473
.LBB11_2473:
	movq	-2216(%rbp), %rax
	movsd	393976(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-2216(%rbp), %rcx
	movsd	393984(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -16456(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-16456(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	393992(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16464(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-16464(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	394000(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16472(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-16472(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	394008(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394952(%rax)
	jmp	.LBB11_6016
.LBB11_2474:
	movsd	.LCPI11_284(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2475
	jp	.LBB11_2475
	jmp	.LBB11_2476
.LBB11_2475:
	jmp	.LBB11_2478
.LBB11_2476:
	jmp	.LBB11_2477
.LBB11_2477:
	movq	-2216(%rbp), %rax
	movsd	394024(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-2216(%rbp), %rcx
	movsd	394032(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -16480(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-16480(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	386040(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16488(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-16488(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	394048(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16496(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-16496(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	394056(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394960(%rax)
	jmp	.LBB11_6016
.LBB11_2478:
	movsd	.LCPI11_285(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2479
	jp	.LBB11_2479
	jmp	.LBB11_2480
.LBB11_2479:
	jmp	.LBB11_2482
.LBB11_2480:
	jmp	.LBB11_2481
.LBB11_2481:
	movq	-2216(%rbp), %rax
	movsd	394072(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-2216(%rbp), %rcx
	movsd	394080(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -16504(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-16504(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	394088(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16512(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-16512(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	394096(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16520(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-16520(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	394104(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394968(%rax)
	jmp	.LBB11_6016
.LBB11_2482:
	movsd	.LCPI11_286(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2483
	jp	.LBB11_2483
	jmp	.LBB11_2484
.LBB11_2483:
	jmp	.LBB11_2486
.LBB11_2484:
	jmp	.LBB11_2485
.LBB11_2485:
	movq	-2216(%rbp), %rax
	movsd	394120(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-2216(%rbp), %rcx
	movsd	394128(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -16528(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-16528(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	394136(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16536(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-16536(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	394144(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16544(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-16544(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	394152(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394976(%rax)
	jmp	.LBB11_6016
.LBB11_2486:
	movsd	.LCPI11_287(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2487
	jp	.LBB11_2487
	jmp	.LBB11_2488
.LBB11_2487:
	jmp	.LBB11_2490
.LBB11_2488:
	jmp	.LBB11_2489
.LBB11_2489:
	movq	-2216(%rbp), %rax
	movsd	394168(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-2216(%rbp), %rcx
	movsd	394176(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -16552(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-16552(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	394184(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16560(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-16560(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	394192(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16568(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-16568(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	394200(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394984(%rax)
	jmp	.LBB11_6016
.LBB11_2490:
	movsd	.LCPI11_288(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2491
	jp	.LBB11_2491
	jmp	.LBB11_2492
.LBB11_2491:
	jmp	.LBB11_2494
.LBB11_2492:
	jmp	.LBB11_2493
.LBB11_2493:
	movq	-2216(%rbp), %rax
	movsd	394216(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-2216(%rbp), %rcx
	movsd	394224(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -16576(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-16576(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	394232(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16584(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-16584(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	394240(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16592(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-16592(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	394248(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394992(%rax)
	jmp	.LBB11_6016
.LBB11_2494:
	movsd	.LCPI11_289(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2495
	jp	.LBB11_2495
	jmp	.LBB11_2496
.LBB11_2495:
	jmp	.LBB11_2498
.LBB11_2496:
	jmp	.LBB11_2497
.LBB11_2497:
	movq	-2216(%rbp), %rax
	movsd	394264(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-2216(%rbp), %rcx
	movsd	394272(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -16600(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-16600(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	394280(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16608(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-16608(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	394288(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16616(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-16616(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	394296(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395000(%rax)
	jmp	.LBB11_6016
.LBB11_2498:
	movsd	.LCPI11_290(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2499
	jp	.LBB11_2499
	jmp	.LBB11_2500
.LBB11_2499:
	jmp	.LBB11_2502
.LBB11_2500:
	jmp	.LBB11_2501
.LBB11_2501:
	movq	-2216(%rbp), %rax
	movsd	394312(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-2216(%rbp), %rcx
	movsd	394320(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -16624(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-16624(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	394328(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16632(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-16632(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	394336(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16640(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-16640(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	394344(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395008(%rax)
	jmp	.LBB11_6016
.LBB11_2502:
	movsd	.LCPI11_291(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2503
	jp	.LBB11_2503
	jmp	.LBB11_2504
.LBB11_2503:
	jmp	.LBB11_2506
.LBB11_2504:
	jmp	.LBB11_2505
.LBB11_2505:
	movq	-2216(%rbp), %rax
	movsd	394360(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-2216(%rbp), %rcx
	movsd	394368(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -16648(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-16648(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	394376(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16656(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-16656(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	394384(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16664(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-16664(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	394392(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395016(%rax)
	jmp	.LBB11_6016
.LBB11_2506:
	movsd	.LCPI11_292(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2507
	jp	.LBB11_2507
	jmp	.LBB11_2508
.LBB11_2507:
	jmp	.LBB11_2510
.LBB11_2508:
	jmp	.LBB11_2509
.LBB11_2509:
	movq	-2216(%rbp), %rax
	movsd	394408(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-2216(%rbp), %rcx
	movsd	394416(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -16672(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-16672(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	394424(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16680(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-16680(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	394432(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16688(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-16688(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	394440(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395024(%rax)
	jmp	.LBB11_6016
.LBB11_2510:
	movsd	.LCPI11_293(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2511
	jp	.LBB11_2511
	jmp	.LBB11_2512
.LBB11_2511:
	jmp	.LBB11_2514
.LBB11_2512:
	jmp	.LBB11_2513
.LBB11_2513:
	movq	-2216(%rbp), %rax
	movsd	394456(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-2216(%rbp), %rcx
	movsd	394464(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -16696(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-16696(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	394472(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16704(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-16704(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	394480(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -16712(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-16712(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	394488(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395032(%rax)
	jmp	.LBB11_6016
.LBB11_2514:
	movsd	.LCPI11_294(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2515
	jp	.LBB11_2515
	jmp	.LBB11_2516
.LBB11_2515:
	jmp	.LBB11_2518
.LBB11_2516:
	jmp	.LBB11_2517
.LBB11_2517:
	movq	-2216(%rbp), %rax
	movsd	394840(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rdi
	movq	-2216(%rbp), %rax
	movsd	394848(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rdi, -16720(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rsi
	movq	-16720(%rbp), %rdi      # 8-byte Reload
	movq	$-1, %rax
	movq	%rax, %rdx
	movq	%rax, %rcx
	movl	$1, %r8d
	callq	GLSCREEN
	jmp	.LBB11_6016
.LBB11_2518:
	movsd	.LCPI11_295(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_2519
	jp	.LBB11_2519
	jmp	.LBB11_2520
.LBB11_2519:
	jmp	.LBB11_4945
.LBB11_2520:
	jmp	.LBB11_2521
.LBB11_2521:
	movsd	-2232(%rbp), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
	movq	%rax, -2304(%rbp)
	jmp	.LBB11_4941
.Ltmp273:                               # Block address taken
.LBB11_2522:
	movb	$0, -177(%rbp)
	movb	$0, -178(%rbp)
	movb	$0, -179(%rbp)
	movb	$0, -180(%rbp)
	movb	$0, -181(%rbp)
	movb	$0, -182(%rbp)
	movb	$0, -183(%rbp)
	movb	$0, -184(%rbp)
	movb	$0, -185(%rbp)
	movq	-2216(%rbp), %rax
	movabsq	$4656159064747671552, %rcx # imm = 0x409E000000000000
	movq	%rcx, 394840(%rax)
	movq	-2216(%rbp), %rax
	movabsq	$4652464705678344192, %rcx # imm = 0x4090E00000000000
	movq	%rcx, 394848(%rax)
	movq	-2216(%rbp), %rdi
	movsd	.LCPI11_294(%rip), %xmm0 # xmm0 = mem[0],zero
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movl	$0, -192(%rbp)
	movq	$0, -200(%rbp)
	movq	SCR_W$(%rip), %rax
	movq	%rax, %rcx
	shrq	%rcx
	movl	%eax, %edx
	andl	$1, %edx
	movl	%edx, %esi
	orq	%rcx, %rsi
	cvtsi2ss	%rsi, %xmm0
	addss	%xmm0, %xmm0
	cvtsi2ss	%rax, %xmm1
	testq	%rax, %rax
	movss	%xmm1, -16724(%rbp)     # 4-byte Spill
	movss	%xmm0, -16728(%rbp)     # 4-byte Spill
	js	.LBB11_6023
# %bb.6022:
	movss	-16724(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movss	%xmm0, -16728(%rbp)     # 4-byte Spill
.LBB11_6023:
	movss	-16728(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movss	%xmm0, -200(%rbp)
	movq	SCR_H$(%rip), %rax
	movq	%rax, %rcx
	shrq	%rcx
	movl	%eax, %edx
	andl	$1, %edx
	movl	%edx, %esi
	orq	%rcx, %rsi
	cvtsi2ss	%rsi, %xmm0
	addss	%xmm0, %xmm0
	cvtsi2ss	%rax, %xmm1
	testq	%rax, %rax
	movss	%xmm1, -16732(%rbp)     # 4-byte Spill
	movss	%xmm0, -16736(%rbp)     # 4-byte Spill
	js	.LBB11_6025
# %bb.6024:
	movss	-16732(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movss	%xmm0, -16736(%rbp)     # 4-byte Spill
.LBB11_6025:
	movss	-16736(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movss	%xmm0, -196(%rbp)
	movss	-200(%rbp), %xmm0       # xmm0 = mem[0],zero,zero,zero
	cvtss2sd	%xmm0, %xmm0
	movss	-196(%rbp), %xmm1       # xmm1 = mem[0],zero,zero,zero
	cvtss2sd	%xmm1, %xmm1
	divsd	%xmm1, %xmm0
	cvtsd2ss	%xmm0, %xmm0
	movss	%xmm0, -192(%rbp)
	leaq	-232(%rbp), %rdi
	callq	_ZN9SHADERTOYC1Ev
	leaq	FILENAME$(%rip), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	callq	fb_StrLen@PLT
	movq	%rax, -2312(%rbp)
	cmpq	$0, -2312(%rbp)
	je	.LBB11_2524
# %bb.2523:
	jmp	.LBB11_2525
.LBB11_2524:
	leaq	FILENAME$(%rip), %rax
	xorl	%r8d, %r8d
	movb	$1, -178(%rbp)
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.173(%rip), %rdx
	movl	$23, %ecx
	callq	fb_StrAssign@PLT
.LBB11_2525:
	jmp	.LBB11_2526
.LBB11_2526:
	leaq	-232(%rbp), %rdi
	leaq	FILENAME$(%rip), %rsi
	callq	_ZN9SHADERTOY11COMPILEFILEER8FBSTRING
	movb	%al, -2313(%rbp)
	movsbl	-2313(%rbp), %ecx
	cmpl	$0, %ecx
	je	.LBB11_2528
# %bb.2527:
	jmp	.LBB11_2529
.LBB11_2528:
	leaq	FILENAME$(%rip), %rax
	xorl	%ecx, %ecx
	leaq	-328(%rbp), %rdx
	movq	%rdx, %rdi
	movl	%ecx, %esi
	movl	$24, %edx
	movq	%rdx, -16744(%rbp)      # 8-byte Spill
	movq	%rax, -16752(%rbp)      # 8-byte Spill
	movl	%ecx, -16756(%rbp)      # 4-byte Spill
	callq	memset@PLT
	leaq	-256(%rbp), %rax
	movq	%rax, %rdx
	movq	%rdx, %rdi
	movl	-16756(%rbp), %esi      # 4-byte Reload
	movq	-16744(%rbp), %rdx      # 8-byte Reload
	movq	%rax, -16768(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-16768(%rbp), %rdi      # 8-byte Reload
	leaq	.L.str.174(%rip), %rsi
	movl	$7, %edx
	movq	-16752(%rbp), %rcx      # 8-byte Reload
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -2328(%rbp)
	leaq	-280(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -16776(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-2328(%rbp), %rax
	movq	-16776(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.175(%rip), %rcx
	movl	$3, %r8d
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -2336(%rbp)
	leaq	-304(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -16784(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-2336(%rbp), %rax
	leaq	-232(%rbp), %rcx
	addq	$8, %rcx
	movq	-16784(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rax
	movq	%rax, %rdx
	movq	%rax, %r8
	callq	fb_StrConcat@PLT
	xorl	%r8d, %r8d
	movq	%rax, -2344(%rbp)
	leaq	-328(%rbp), %rax
	movq	-2344(%rbp), %rcx
	movq	%rax, %rdi
	movq	$-1, %rax
	movq	%rax, %rsi
	movq	%rcx, %rdx
	movq	%rax, %rcx
	callq	fb_StrAssign@PLT
	movq	%rax, -2352(%rbp)
	leaq	-328(%rbp), %rdi
	callq	ERROREXIT
	leaq	-328(%rbp), %rdi
	callq	fb_StrDelete@PLT
.LBB11_2529:
	jmp	.LBB11_2530
.LBB11_2530:
	leaq	FILENAME$(%rip), %rax
	xorl	%esi, %esi
	leaq	-176(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	$24, %edx
	movq	%rax, -16792(%rbp)      # 8-byte Spill
	movq	%rcx, -16800(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-16800(%rbp), %rdi      # 8-byte Reload
	movq	-16792(%rbp), %rsi      # 8-byte Reload
	movq	$-1, %rdx
	leaq	.L.str.176(%rip), %rcx
	movl	$8, %r8d
	callq	fb_StrConcat@PLT
	movq	%rax, -2360(%rbp)
	movq	-2360(%rbp), %rdi
	callq	fb_GfxSetWindowTitle@PLT
	movq	GLUSEPROGRAM$(%rip), %rax
	movl	-228(%rbp), %edi
	callq	*%rax
	leaq	-32(%rbp), %rax
	xorl	%esi, %esi
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$16, %edx
	movq	%rax, -16808(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-16808(%rbp), %rax      # 8-byte Reload
	movq	%rax, -104(%rbp)
	movq	%rax, -96(%rbp)
	movq	$16, -88(%rbp)
	movq	$4, -80(%rbp)
	movq	$1, -72(%rbp)
	movq	$49, -64(%rbp)
	movq	$4, -56(%rbp)
	movq	$0, -48(%rbp)
	movq	$3, -40(%rbp)
	movl	$4, %edi
	movq	%rax, %rsi
	callq	glGenTextures@PLT
	movsbl	-178(%rbp), %edi
	cmpl	$0, %edi
	jne	.LBB11_2532
# %bb.2531:
	jmp	.LBB11_2590
.LBB11_2532:
	cmpq	$0, FGIMAGE$(%rip)
	je	.LBB11_2534
# %bb.2533:
	jmp	.LBB11_2567
.LBB11_2534:
	xorl	%r8d, %r8d
	movl	$512, %eax              # imm = 0x200
	movl	%eax, %edi
	movl	%eax, %esi
	movl	$4278190080, %edx       # imm = 0xFF000000
	movl	$32, %ecx
	callq	fb_GfxImageCreate@PLT
	movq	%rax, -2368(%rbp)
	movq	-2368(%rbp), %rax
	movq	%rax, FGIMAGE$(%rip)
	movsbl	-179(%rbp), %ecx
	cmpl	$1, %ecx
	je	.LBB11_2536
# %bb.2535:
	jmp	.LBB11_2549
.LBB11_2536:
	movq	$0, -2376(%rbp)
.LBB11_2537:                            # =>This Loop Header: Depth=1
                                        #     Child Loop BB11_2538 Depth 2
	movq	$0, -2384(%rbp)
.LBB11_2538:                            #   Parent Loop BB11_2537 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	xorl	%ecx, %ecx
	movss	.LCPI11_339(%rip), %xmm0 # xmm0 = mem[0],zero,zero,zero
	movss	%xmm0, -16812(%rbp)     # 4-byte Spill
	movl	%ecx, -16816(%rbp)      # 4-byte Spill
	callq	fb_Rnd@PLT
	movsd	%xmm0, -2392(%rbp)
	movss	-16812(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	callq	fb_Rnd@PLT
	movsd	%xmm0, -2400(%rbp)
	movss	-16812(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	callq	fb_Rnd@PLT
	movsd	%xmm0, -2408(%rbp)
	movq	FGIMAGE$(%rip), %rdi
	cvtsi2ssq	-2384(%rbp), %xmm0
	cvtsi2ssq	-2376(%rbp), %xmm1
	movsd	-2392(%rbp), %xmm2      # xmm2 = mem[0],zero
	movsd	.LCPI11_18(%rip), %xmm3 # xmm3 = mem[0],zero
	mulsd	%xmm3, %xmm2
	movss	%xmm0, -16820(%rbp)     # 4-byte Spill
	movaps	%xmm2, %xmm0
	movq	%rdi, -16832(%rbp)      # 8-byte Spill
	movss	%xmm1, -16836(%rbp)     # 4-byte Spill
	movsd	%xmm3, -16848(%rbp)     # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rdx # imm = 0x8000000000000000
	xorq	%rdx, %rax
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rax
	shlq	$16, %rax
	movsd	-2400(%rbp), %xmm0      # xmm0 = mem[0],zero
	movsd	-16848(%rbp), %xmm2     # 8-byte Reload
                                        # xmm2 = mem[0],zero
	mulsd	%xmm2, %xmm0
	movsd	%xmm1, -16856(%rbp)     # 8-byte Spill
	movq	%rdx, -16864(%rbp)      # 8-byte Spill
	movq	%rax, -16872(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	movaps	%xmm0, %xmm1
	movsd	-16856(%rbp), %xmm2     # 8-byte Reload
                                        # xmm2 = mem[0],zero
	subsd	%xmm2, %xmm1
	cvttsd2si	%xmm1, %rax
	movq	-16864(%rbp), %rdx      # 8-byte Reload
	xorq	%rdx, %rax
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm2, %xmm0
	cmovbq	%rsi, %rax
	shlq	$8, %rax
	movq	-16872(%rbp), %rsi      # 8-byte Reload
	orq	%rax, %rsi
	movsd	-2408(%rbp), %xmm0      # xmm0 = mem[0],zero
	movsd	-16848(%rbp), %xmm1     # 8-byte Reload
                                        # xmm1 = mem[0],zero
	mulsd	%xmm1, %xmm0
	movq	%rsi, -16880(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	movaps	%xmm0, %xmm1
	movsd	-16856(%rbp), %xmm2     # 8-byte Reload
                                        # xmm2 = mem[0],zero
	subsd	%xmm2, %xmm1
	cvttsd2si	%xmm1, %rax
	movq	-16864(%rbp), %rdx      # 8-byte Reload
	xorq	%rdx, %rax
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm2, %xmm0
	cmovbq	%rsi, %rax
	movq	-16880(%rbp), %rsi      # 8-byte Reload
	orq	%rax, %rsi
	movl	$4278190080, %eax       # imm = 0xFF000000
	orq	%rax, %rsi
                                        # kill: def $esi killed $esi killed $rsi
	movq	-16832(%rbp), %rdi      # 8-byte Reload
	movss	-16820(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movss	-16836(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movl	$4, %ecx
	movl	%ecx, %edx
	movl	-16816(%rbp), %ecx      # 4-byte Reload
	callq	fb_GfxPset@PLT
# %bb.2539:                             #   in Loop: Header=BB11_2538 Depth=2
	movq	-2384(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -2384(%rbp)
# %bb.2540:                             #   in Loop: Header=BB11_2538 Depth=2
	cmpq	$512, -2384(%rbp)       # imm = 0x200
	jg	.LBB11_2542
# %bb.2541:                             #   in Loop: Header=BB11_2538 Depth=2
	jmp	.LBB11_2538
.LBB11_2542:                            #   in Loop: Header=BB11_2537 Depth=1
	jmp	.LBB11_2543
.LBB11_2543:                            #   in Loop: Header=BB11_2537 Depth=1
	jmp	.LBB11_2544
.LBB11_2544:                            #   in Loop: Header=BB11_2537 Depth=1
	movq	-2376(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -2376(%rbp)
# %bb.2545:                             #   in Loop: Header=BB11_2537 Depth=1
	cmpq	$512, -2376(%rbp)       # imm = 0x200
	jg	.LBB11_2547
# %bb.2546:                             #   in Loop: Header=BB11_2537 Depth=1
	jmp	.LBB11_2537
.LBB11_2547:
	jmp	.LBB11_2548
.LBB11_2548:
	jmp	.LBB11_2566
.LBB11_2549:
	movq	$0, -2416(%rbp)
.LBB11_2550:                            # =>This Loop Header: Depth=1
                                        #     Child Loop BB11_2551 Depth 2
	movq	$0, -2424(%rbp)
.LBB11_2551:                            #   Parent Loop BB11_2550 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	-2424(%rbp), %rax
	addq	-2416(%rbp), %rax
	cqto
	movl	$2, %ecx
	idivq	%rcx
	cmpq	$0, %rdx
	je	.LBB11_2553
# %bb.2552:                             #   in Loop: Header=BB11_2551 Depth=2
	jmp	.LBB11_2554
.LBB11_2553:                            #   in Loop: Header=BB11_2551 Depth=2
	movl	$4294967295, %eax       # imm = 0xFFFFFFFF
	movq	%rax, -2432(%rbp)
	jmp	.LBB11_2555
.LBB11_2554:                            #   in Loop: Header=BB11_2551 Depth=2
	movl	$4278190080, %eax       # imm = 0xFF000000
	movq	%rax, -2432(%rbp)
.LBB11_2555:                            #   in Loop: Header=BB11_2551 Depth=2
	movss	.LCPI11_340(%rip), %xmm0 # xmm0 = mem[0],zero,zero,zero
	movsd	.LCPI11_25(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	FGIMAGE$(%rip), %rdi
	movq	-2424(%rbp), %rax
	shlq	$9, %rax
	cvtsi2sd	%rax, %xmm2
	divsd	%xmm1, %xmm2
	cvtsd2ss	%xmm2, %xmm2
	movq	-2416(%rbp), %rax
	shlq	$9, %rax
	cvtsi2sd	%rax, %xmm3
	divsd	%xmm1, %xmm3
	cvtsd2ss	%xmm3, %xmm1
	movq	-2432(%rbp), %rax
                                        # kill: def $eax killed $eax killed $rax
	movss	%xmm0, -16884(%rbp)     # 4-byte Spill
	movaps	%xmm2, %xmm0
	movss	-16884(%rbp), %xmm2     # 4-byte Reload
                                        # xmm2 = mem[0],zero,zero,zero
	movss	-16884(%rbp), %xmm3     # 4-byte Reload
                                        # xmm3 = mem[0],zero,zero,zero
	movl	%eax, %esi
	movl	$2, %edx
	movl	$65535, %ecx            # imm = 0xFFFF
	movl	$1, %r8d
	callq	fb_GfxLine@PLT
# %bb.2556:                             #   in Loop: Header=BB11_2551 Depth=2
	movq	-2424(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -2424(%rbp)
# %bb.2557:                             #   in Loop: Header=BB11_2551 Depth=2
	cmpq	$32, -2424(%rbp)
	jg	.LBB11_2559
# %bb.2558:                             #   in Loop: Header=BB11_2551 Depth=2
	jmp	.LBB11_2551
.LBB11_2559:                            #   in Loop: Header=BB11_2550 Depth=1
	jmp	.LBB11_2560
.LBB11_2560:                            #   in Loop: Header=BB11_2550 Depth=1
	jmp	.LBB11_2561
.LBB11_2561:                            #   in Loop: Header=BB11_2550 Depth=1
	movq	-2416(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -2416(%rbp)
# %bb.2562:                             #   in Loop: Header=BB11_2550 Depth=1
	cmpq	$32, -2416(%rbp)
	jg	.LBB11_2564
# %bb.2563:                             #   in Loop: Header=BB11_2550 Depth=1
	jmp	.LBB11_2550
.LBB11_2564:
	jmp	.LBB11_2565
.LBB11_2565:
	leaq	.L.str.177(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%ecx, %ecx
	movl	%ecx, %r8d
	xorl	%r9d, %r9d
	movq	%rax, -2440(%rbp)
	movq	FGIMAGE$(%rip), %rdi
	movq	-2440(%rbp), %rdx
	xorps	%xmm0, %xmm0
	movss	%xmm0, -16888(%rbp)     # 4-byte Spill
	movss	-16888(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movl	$4, %esi
	movl	$4294901760, %ecx       # imm = 0xFFFF0000
	movq	$0, (%rsp)
	movq	$0, 8(%rsp)
	movq	$0, 16(%rsp)
	callq	fb_GfxDrawString@PLT
	leaq	.L.str.178(%rip), %rdi
	movl	$13, %esi
	movq	%rax, -16896(%rbp)      # 8-byte Spill
	callq	fb_StrAllocTempDescZEx@PLT
	movss	.LCPI11_341(%rip), %xmm0 # xmm0 = mem[0],zero,zero,zero
	xorl	%ecx, %ecx
	movl	%ecx, %r8d
	xorl	%r9d, %r9d
	movq	%rax, -2448(%rbp)
	movq	FGIMAGE$(%rip), %rdi
	movq	-2448(%rbp), %rdx
	movss	%xmm0, -16900(%rbp)     # 4-byte Spill
	movss	-16900(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movl	$4, %esi
	movl	$4278255360, %ecx       # imm = 0xFF00FF00
	movq	$0, (%rsp)
	movq	$0, 8(%rsp)
	movq	$0, 16(%rsp)
	callq	fb_GfxDrawString@PLT
.LBB11_2566:
	jmp	.LBB11_2567
.LBB11_2567:
	jmp	.LBB11_2568
.LBB11_2568:
	xorl	%eax, %eax
	leaq	-344(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	%eax, %esi
	movl	$8, %edx
	movq	%rdx, -16912(%rbp)      # 8-byte Spill
	movl	%eax, -16916(%rbp)      # 4-byte Spill
	movq	%rcx, -16928(%rbp)      # 8-byte Spill
	callq	memset@PLT
	leaq	-352(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	-16916(%rbp), %esi      # 4-byte Reload
	movq	-16912(%rbp), %rdx      # 8-byte Reload
	movq	%rcx, -16936(%rbp)      # 8-byte Spill
	callq	memset@PLT
	leaq	-360(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	-16916(%rbp), %esi      # 4-byte Reload
	movq	-16912(%rbp), %rdx      # 8-byte Reload
	movq	%rcx, -16944(%rbp)      # 8-byte Spill
	callq	memset@PLT
	leaq	-368(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	-16916(%rbp), %esi      # 4-byte Reload
	movq	-16912(%rbp), %rdx      # 8-byte Reload
	movq	%rcx, -16952(%rbp)      # 8-byte Spill
	callq	memset@PLT
	leaq	-376(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	-16916(%rbp), %esi      # 4-byte Reload
	movq	-16912(%rbp), %rdx      # 8-byte Reload
	movq	%rcx, -16960(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	$0, -336(%rbp)
	movq	FGIMAGE$(%rip), %rdi
	movq	-16928(%rbp), %rsi      # 8-byte Reload
	movq	-16936(%rbp), %rdx      # 8-byte Reload
	movq	-16944(%rbp), %rcx      # 8-byte Reload
	movq	-16952(%rbp), %r8       # 8-byte Reload
	movq	-16960(%rbp), %r9       # 8-byte Reload
	leaq	-336(%rbp), %r10
	movq	%r10, (%rsp)
	callq	fb_GfxImageInfo@PLT
	movl	-32(%rbp), %esi
	movl	$3553, %edi             # imm = 0xDE1
	movl	%eax, -16964(%rbp)      # 4-byte Spill
	callq	glBindTexture@PLT
	movsbl	-184(%rbp), %eax
	cmpl	$0, %eax
	jne	.LBB11_2570
# %bb.2569:
	jmp	.LBB11_2571
.LBB11_2570:
	movl	$3553, %edi             # imm = 0xDE1
	movl	$33169, %esi            # imm = 0x8191
	movl	$1, %edx
	callq	glTexParameteri@PLT
	movl	$3553, %edi             # imm = 0xDE1
	movl	$10240, %esi            # imm = 0x2800
	movl	$9728, %edx             # imm = 0x2600
	callq	glTexParameteri@PLT
	movl	$3553, %edi             # imm = 0xDE1
	movl	$10241, %esi            # imm = 0x2801
	movl	$9987, %edx             # imm = 0x2703
	callq	glTexParameteri@PLT
.LBB11_2571:
	jmp	.LBB11_2572
.LBB11_2572:
	movsbl	-185(%rbp), %eax
	cmpl	$0, %eax
	jne	.LBB11_2574
# %bb.2573:
	jmp	.LBB11_2575
.LBB11_2574:
	movl	$3553, %edi             # imm = 0xDE1
	movl	$10242, %esi            # imm = 0x2802
	movl	$10497, %edx            # imm = 0x2901
	callq	glTexParameteri@PLT
	movl	$3553, %edi             # imm = 0xDE1
	movl	$10243, %esi            # imm = 0x2803
	movl	$10497, %edx            # imm = 0x2901
	callq	glTexParameteri@PLT
.LBB11_2575:
	jmp	.LBB11_2576
.LBB11_2576:
	movsbl	-180(%rbp), %eax
	cmpl	$0, %eax
	jne	.LBB11_2578
# %bb.2577:
	jmp	.LBB11_2579
.LBB11_2578:
	movl	$3553, %edi             # imm = 0xDE1
	movl	$10241, %esi            # imm = 0x2801
	movl	$9729, %edx             # imm = 0x2601
	callq	glTexParameteri@PLT
	movl	$3553, %edi             # imm = 0xDE1
	movl	$10240, %esi            # imm = 0x2800
	movl	$9729, %edx             # imm = 0x2601
	callq	glTexParameteri@PLT
	jmp	.LBB11_2589
.LBB11_2579:
	movsbl	-181(%rbp), %eax
	cmpl	$0, %eax
	jne	.LBB11_2581
# %bb.2580:
	jmp	.LBB11_2582
.LBB11_2581:
	movl	$3553, %edi             # imm = 0xDE1
	movl	$10241, %esi            # imm = 0x2801
	movl	$9728, %edx             # imm = 0x2600
	callq	glTexParameteri@PLT
	movl	$3553, %edi             # imm = 0xDE1
	movl	$10240, %esi            # imm = 0x2800
	movl	$9728, %edx             # imm = 0x2600
	callq	glTexParameteri@PLT
	jmp	.LBB11_2589
.LBB11_2582:
	movsbl	-182(%rbp), %eax
	cmpl	$0, %eax
	jne	.LBB11_2584
# %bb.2583:
	jmp	.LBB11_2585
.LBB11_2584:
	movl	$3553, %edi             # imm = 0xDE1
	movl	$10241, %esi            # imm = 0x2801
	movl	$9728, %edx             # imm = 0x2600
	callq	glTexParameteri@PLT
	movl	$3553, %edi             # imm = 0xDE1
	movl	$10240, %esi            # imm = 0x2800
	movl	$9729, %edx             # imm = 0x2601
	callq	glTexParameteri@PLT
	jmp	.LBB11_2589
.LBB11_2585:
	movsbl	-183(%rbp), %eax
	cmpl	$0, %eax
	jne	.LBB11_2587
# %bb.2586:
	jmp	.LBB11_2588
.LBB11_2587:
	movl	$3553, %edi             # imm = 0xDE1
	movl	$10241, %esi            # imm = 0x2801
	movl	$9729, %edx             # imm = 0x2601
	callq	glTexParameteri@PLT
	movl	$3553, %edi             # imm = 0xDE1
	movl	$10240, %esi            # imm = 0x2800
	movl	$9728, %edx             # imm = 0x2600
	callq	glTexParameteri@PLT
.LBB11_2588:
	jmp	.LBB11_2589
.LBB11_2589:
	xorl	%eax, %eax
	movq	-344(%rbp), %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	movq	-352(%rbp), %rdx
                                        # kill: def $edx killed $edx killed $rdx
	movq	-376(%rbp), %rsi
	movl	$3553, %edi             # imm = 0xDE1
	movq	%rsi, -16976(%rbp)      # 8-byte Spill
	movl	%eax, %esi
	movl	$6408, %r8d             # imm = 0x1908
	movl	%edx, -16980(%rbp)      # 4-byte Spill
	movl	%r8d, %edx
	movl	-16980(%rbp), %r8d      # 4-byte Reload
	movl	%eax, %r9d
	movl	$32993, (%rsp)          # imm = 0x80E1
	movl	$5121, 8(%rsp)          # imm = 0x1401
	movq	-16976(%rbp), %r10      # 8-byte Reload
	movq	%r10, 16(%rsp)
	callq	glTexImage2D@PLT
	xorl	%esi, %esi
	movl	$3553, %edi             # imm = 0xDE1
	callq	glBindTexture@PLT
.LBB11_2590:
	jmp	.LBB11_2591
.LBB11_2591:
	movq	GLGETUNIFORMLOCATION$(%rip), %rax
	movl	-228(%rbp), %edi
	leaq	.L.str.179(%rip), %rsi
	callq	*%rax
	movl	%eax, -2456(%rbp)
	movl	-2456(%rbp), %eax
	movl	%eax, -2452(%rbp)
	movslq	-2452(%rbp), %rcx
	cmpq	$-1, %rcx
	jg	.LBB11_2593
# %bb.2592:
	jmp	.LBB11_2594
.LBB11_2593:
	xorl	%esi, %esi
	movq	GLUNIFORM1I$(%rip), %rax
	movl	-2452(%rbp), %edi
	callq	*%rax
	movl	$33984, %edi            # imm = 0x84C0
	callq	glActiveTexture@PLT
	movl	-32(%rbp), %esi
	movl	$3553, %edi             # imm = 0xDE1
	callq	glBindTexture@PLT
.LBB11_2594:
	jmp	.LBB11_2595
.LBB11_2595:
	movq	GLGETUNIFORMLOCATION$(%rip), %rax
	movl	-228(%rbp), %edi
	leaq	.L.str.180(%rip), %rsi
	callq	*%rax
	movl	%eax, -2464(%rbp)
	movl	-2464(%rbp), %eax
	movl	%eax, -2460(%rbp)
	movq	GLGETUNIFORMLOCATION$(%rip), %rcx
	movl	-228(%rbp), %edi
	leaq	.L.str.181(%rip), %rsi
	callq	*%rcx
	movl	%eax, -2472(%rbp)
	movl	-2472(%rbp), %eax
	movl	%eax, -2468(%rbp)
	movq	GLGETUNIFORMLOCATION$(%rip), %rcx
	movl	-228(%rbp), %edi
	leaq	.L.str.182(%rip), %rsi
	callq	*%rcx
	movl	%eax, -2480(%rbp)
	movl	-2480(%rbp), %eax
	movl	%eax, -2476(%rbp)
	movq	GLGETUNIFORMLOCATION$(%rip), %rcx
	movl	-228(%rbp), %edi
	leaq	.L.str.183(%rip), %rsi
	callq	*%rcx
	movl	%eax, -2488(%rbp)
	movl	-2488(%rbp), %eax
	movl	%eax, -2484(%rbp)
	movq	GLGETUNIFORMLOCATION$(%rip), %rcx
	movl	-228(%rbp), %edi
	leaq	.L.str.184(%rip), %rsi
	callq	*%rcx
	movl	%eax, -2496(%rbp)
	movl	-2496(%rbp), %eax
	movl	%eax, -2492(%rbp)
	movslq	-2476(%rbp), %rcx
	cmpq	$-1, %rcx
	jg	.LBB11_2597
# %bb.2596:
	jmp	.LBB11_2598
.LBB11_2597:
	movq	GLUNIFORM3F$(%rip), %rax
	movl	-2476(%rbp), %edi
	movss	-200(%rbp), %xmm0       # xmm0 = mem[0],zero,zero,zero
	movss	-196(%rbp), %xmm1       # xmm1 = mem[0],zero,zero,zero
	movss	-192(%rbp), %xmm2       # xmm2 = mem[0],zero,zero,zero
	callq	*%rax
.LBB11_2598:
	xorl	%eax, %eax
	movq	$-1, -2504(%rbp)
	movq	$-1, -2512(%rbp)
	movq	$-1, -2520(%rbp)
	leaq	-384(%rbp), %rcx
	movq	%rcx, %rdi
	movl	%eax, %esi
	movl	$8, %ecx
	movq	%rcx, %rdx
	movl	%eax, -16984(%rbp)      # 4-byte Spill
	movq	%rcx, -16992(%rbp)      # 8-byte Spill
	callq	memset@PLT
	leaq	-392(%rbp), %rcx
	movq	%rcx, %rdi
	movl	-16984(%rbp), %esi      # 4-byte Reload
	movq	-16992(%rbp), %rdx      # 8-byte Reload
	callq	memset@PLT
	leaq	-400(%rbp), %rcx
	movq	%rcx, %rdi
	movl	-16984(%rbp), %esi      # 4-byte Reload
	movq	-16992(%rbp), %rdx      # 8-byte Reload
	callq	memset@PLT
	leaq	-408(%rbp), %rcx
	movq	%rcx, %rdi
	movl	-16984(%rbp), %esi      # 4-byte Reload
	movq	-16992(%rbp), %rdx      # 8-byte Reload
	callq	memset@PLT
	leaq	-416(%rbp), %rcx
	movq	%rcx, %rdi
	movl	-16984(%rbp), %esi      # 4-byte Reload
	movq	-16992(%rbp), %rdx      # 8-byte Reload
	callq	memset@PLT
	leaq	-424(%rbp), %rcx
	movq	%rcx, %rdi
	movl	-16984(%rbp), %esi      # 4-byte Reload
	movq	-16992(%rbp), %rdx      # 8-byte Reload
	callq	memset@PLT
	callq	fb_Timer@PLT
	xorl	%esi, %esi
	movsd	%xmm0, -2536(%rbp)
	movsd	-2536(%rbp), %xmm0      # xmm0 = mem[0],zero
	movsd	%xmm0, -2528(%rbp)
	leaq	-432(%rbp), %rcx
	movq	%rcx, %rdi
	movl	$8, %edx
	callq	memset@PLT
	movsd	-2528(%rbp), %xmm0      # xmm0 = mem[0],zero
	movsd	%xmm0, -2544(%rbp)
.LBB11_2599:                            # =>This Inner Loop Header: Depth=1
	callq	fb_Inkey@PLT
	movq	%rax, -2552(%rbp)
	movq	-2552(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1(%rip), %rdx
	movl	$1, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -2556(%rbp)
	movslq	-2556(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB11_2601
# %bb.2600:
	jmp	.LBB11_2636
.LBB11_2601:                            #   in Loop: Header=BB11_2599 Depth=1
	callq	fb_Timer@PLT
	movsd	%xmm0, -2568(%rbp)
	movsd	-2568(%rbp), %xmm0      # xmm0 = mem[0],zero
	movsd	%xmm0, -432(%rbp)
	movsd	-432(%rbp), %xmm0       # xmm0 = mem[0],zero
	subsd	-2528(%rbp), %xmm0
	movsd	%xmm0, -424(%rbp)
	movslq	-2468(%rbp), %rax
	cmpq	$-1, %rax
	jg	.LBB11_2603
# %bb.2602:                             #   in Loop: Header=BB11_2599 Depth=1
	jmp	.LBB11_2604
.LBB11_2603:                            #   in Loop: Header=BB11_2599 Depth=1
	movq	GLUNIFORM1F$(%rip), %rax
	movl	-2468(%rbp), %edi
	movsd	-424(%rbp), %xmm0       # xmm0 = mem[0],zero
	cvtsd2ss	%xmm0, %xmm0
	callq	*%rax
	jmp	.LBB11_2608
.LBB11_2604:                            #   in Loop: Header=BB11_2599 Depth=1
	movslq	-2460(%rbp), %rax
	cmpq	$-1, %rax
	jg	.LBB11_2606
# %bb.2605:                             #   in Loop: Header=BB11_2599 Depth=1
	jmp	.LBB11_2607
.LBB11_2606:                            #   in Loop: Header=BB11_2599 Depth=1
	movq	GLUNIFORM1F$(%rip), %rax
	movl	-2460(%rbp), %edi
	movsd	-424(%rbp), %xmm0       # xmm0 = mem[0],zero
	cvtsd2ss	%xmm0, %xmm0
	callq	*%rax
.LBB11_2607:                            #   in Loop: Header=BB11_2599 Depth=1
	jmp	.LBB11_2608
.LBB11_2608:                            #   in Loop: Header=BB11_2599 Depth=1
	movslq	-2492(%rbp), %rax
	cmpq	$-1, %rax
	jg	.LBB11_2610
# %bb.2609:                             #   in Loop: Header=BB11_2599 Depth=1
	jmp	.LBB11_2611
.LBB11_2610:                            #   in Loop: Header=BB11_2599 Depth=1
	movq	GLUNIFORM1F$(%rip), %rax
	movl	-2492(%rbp), %edi
	cvtsi2ssq	-408(%rbp), %xmm0
	callq	*%rax
.LBB11_2611:                            #   in Loop: Header=BB11_2599 Depth=1
	movslq	-2484(%rbp), %rax
	cmpq	$-1, %rax
	jg	.LBB11_2613
# %bb.2612:                             #   in Loop: Header=BB11_2599 Depth=1
	jmp	.LBB11_2630
.LBB11_2613:                            #   in Loop: Header=BB11_2599 Depth=1
	movq	$0, -448(%rbp)
	movq	$0, -440(%rbp)
	leaq	-384(%rbp), %rdi
	leaq	-392(%rbp), %rsi
	leaq	-440(%rbp), %rdx
	leaq	-400(%rbp), %rcx
	leaq	-448(%rbp), %r8
	callq	fb_GetMouse64@PLT
	movl	%eax, -2572(%rbp)
	movslq	-2572(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB11_2615
# %bb.2614:                             #   in Loop: Header=BB11_2599 Depth=1
	jmp	.LBB11_2628
.LBB11_2615:                            #   in Loop: Header=BB11_2599 Depth=1
	movq	-2504(%rbp), %rax
	cmpq	-384(%rbp), %rax
	je	.LBB11_2617
# %bb.2616:                             #   in Loop: Header=BB11_2599 Depth=1
	jmp	.LBB11_2618
.LBB11_2617:                            #   in Loop: Header=BB11_2599 Depth=1
	xorl	%eax, %eax
	movq	-2512(%rbp), %rcx
	cmpq	-392(%rbp), %rcx
	setne	%dl
	andb	$1, %dl
	movzbl	%dl, %esi
	subl	%esi, %eax
	movslq	%eax, %rcx
	movq	%rcx, -2584(%rbp)
	jmp	.LBB11_2619
.LBB11_2618:                            #   in Loop: Header=BB11_2599 Depth=1
	movq	$-1, -2584(%rbp)
.LBB11_2619:                            #   in Loop: Header=BB11_2599 Depth=1
	cmpq	$0, -2584(%rbp)
	je	.LBB11_2621
# %bb.2620:                             #   in Loop: Header=BB11_2599 Depth=1
	jmp	.LBB11_2622
.LBB11_2621:                            #   in Loop: Header=BB11_2599 Depth=1
	xorl	%eax, %eax
	movq	-2520(%rbp), %rcx
	cmpq	-400(%rbp), %rcx
	setne	%dl
	andb	$1, %dl
	movzbl	%dl, %esi
	subl	%esi, %eax
	movslq	%eax, %rcx
	movq	%rcx, -2592(%rbp)
	jmp	.LBB11_2623
.LBB11_2622:                            #   in Loop: Header=BB11_2599 Depth=1
	movq	$-1, -2592(%rbp)
.LBB11_2623:                            #   in Loop: Header=BB11_2599 Depth=1
	cmpq	$0, -2592(%rbp)
	jne	.LBB11_2625
# %bb.2624:                             #   in Loop: Header=BB11_2599 Depth=1
	jmp	.LBB11_2626
.LBB11_2625:                            #   in Loop: Header=BB11_2599 Depth=1
	movss	.LCPI11_339(%rip), %xmm3 # xmm3 = mem[0],zero,zero,zero
	movq	GLUNIFORM4F$(%rip), %rax
	movl	-2484(%rbp), %edi
	cvtsi2ssq	-384(%rbp), %xmm0
	movq	SCR_H$(%rip), %rcx
	movq	-392(%rbp), %rdx
	subq	%rdx, %rcx
	movq	%rcx, %rdx
	shrq	%rdx
	movl	%ecx, %esi
	andl	$1, %esi
	movl	%esi, %r8d
	orq	%rdx, %r8
	cvtsi2ss	%r8, %xmm1
	addss	%xmm1, %xmm1
	cvtsi2ss	%rcx, %xmm2
	testq	%rcx, %rcx
	movss	%xmm3, -16996(%rbp)     # 4-byte Spill
	movq	%rax, -17008(%rbp)      # 8-byte Spill
	movl	%edi, -17012(%rbp)      # 4-byte Spill
	movss	%xmm0, -17016(%rbp)     # 4-byte Spill
	movss	%xmm2, -17020(%rbp)     # 4-byte Spill
	movss	%xmm1, -17024(%rbp)     # 4-byte Spill
	js	.LBB11_6027
# %bb.6026:                             #   in Loop: Header=BB11_2599 Depth=1
	movss	-17020(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movss	%xmm0, -17024(%rbp)     # 4-byte Spill
.LBB11_6027:                            #   in Loop: Header=BB11_2599 Depth=1
	movss	-17024(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	cvtsi2ssq	-400(%rbp), %xmm2
	movl	-17012(%rbp), %edi      # 4-byte Reload
	movss	-17016(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movss	%xmm0, -17028(%rbp)     # 4-byte Spill
	movaps	%xmm1, %xmm0
	movss	-17028(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movss	-16996(%rbp), %xmm3     # 4-byte Reload
                                        # xmm3 = mem[0],zero,zero,zero
	movq	-17008(%rbp), %rax      # 8-byte Reload
	callq	*%rax
	movq	-384(%rbp), %rax
	movq	%rax, -2504(%rbp)
	movq	-392(%rbp), %rax
	movq	%rax, -2512(%rbp)
	movq	-400(%rbp), %rax
	movq	%rax, -2520(%rbp)
.LBB11_2626:                            #   in Loop: Header=BB11_2599 Depth=1
	jmp	.LBB11_2627
.LBB11_2627:                            #   in Loop: Header=BB11_2599 Depth=1
	jmp	.LBB11_2628
.LBB11_2628:                            #   in Loop: Header=BB11_2599 Depth=1
	jmp	.LBB11_2629
.LBB11_2629:                            #   in Loop: Header=BB11_2599 Depth=1
	jmp	.LBB11_2630
.LBB11_2630:                            #   in Loop: Header=BB11_2599 Depth=1
	jmp	.LBB11_2631
.LBB11_2631:                            #   in Loop: Header=BB11_2599 Depth=1
	movss	.LCPI11_342(%rip), %xmm0 # xmm0 = mem[0],zero,zero,zero
	movss	.LCPI11_339(%rip), %xmm1 # xmm1 = mem[0],zero,zero,zero
	movss	%xmm0, -17032(%rbp)     # 4-byte Spill
	movss	-17032(%rbp), %xmm2     # 4-byte Reload
                                        # xmm2 = mem[0],zero,zero,zero
	movss	%xmm1, -17036(%rbp)     # 4-byte Spill
	movaps	%xmm2, %xmm1
	movss	-17036(%rbp), %xmm2     # 4-byte Reload
                                        # xmm2 = mem[0],zero,zero,zero
	movss	-17036(%rbp), %xmm3     # 4-byte Reload
                                        # xmm3 = mem[0],zero,zero,zero
	callq	glRectf@PLT
	movl	$4294967295, %eax       # imm = 0xFFFFFFFF
	movl	%eax, %edi
	movl	%eax, %esi
	callq	fb_GfxFlip@PLT
	movq	-408(%rbp), %rcx
	addq	$1, %rcx
	movq	%rcx, -408(%rbp)
	movq	-408(%rbp), %rcx
	movl	%eax, -17040(%rbp)      # 4-byte Spill
	movq	%rcx, %rax
	cqto
	movl	$60, %ecx
	idivq	%rcx
	cmpq	$0, %rdx
	je	.LBB11_2633
# %bb.2632:                             #   in Loop: Header=BB11_2599 Depth=1
	jmp	.LBB11_2634
.LBB11_2633:                            #   in Loop: Header=BB11_2599 Depth=1
	callq	fb_Timer@PLT
	movsd	.LCPI11_84(%rip), %xmm1 # xmm1 = mem[0],zero
	movsd	%xmm0, -2600(%rbp)
	movsd	-2600(%rbp), %xmm0      # xmm0 = mem[0],zero
	movsd	%xmm0, -432(%rbp)
	movsd	-432(%rbp), %xmm0       # xmm0 = mem[0],zero
	subsd	-2544(%rbp), %xmm0
	divsd	%xmm0, %xmm1
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	%rax, -416(%rbp)
	movsd	-432(%rbp), %xmm0       # xmm0 = mem[0],zero
	movsd	%xmm0, -2544(%rbp)
	movq	-416(%rbp), %rdi
	callq	fb_LongintToStr@PLT
	leaq	FILENAME$(%rip), %rcx
	xorl	%esi, %esi
	movq	%rax, -2608(%rbp)
	leaq	-472(%rbp), %rax
	movq	%rax, %rdx
	movq	%rdx, %rdi
	movl	$24, %edx
	movq	%rcx, -17048(%rbp)      # 8-byte Spill
	movq	%rax, -17056(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-17056(%rbp), %rdi      # 8-byte Reload
	movq	-17048(%rbp), %rsi      # 8-byte Reload
	movq	$-1, %rdx
	leaq	.L.str.185(%rip), %rcx
	movl	$7, %r8d
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -2616(%rbp)
	leaq	-496(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17064(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-2616(%rbp), %rax
	movq	-2608(%rbp), %rcx
	movq	-17064(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rax
	movq	%rax, %rdx
	movq	%rax, %r8
	callq	fb_StrConcat@PLT
	xorl	%r9d, %r9d
	movl	%r9d, %ecx
	xorl	%r9d, %r9d
	movq	%rax, -2624(%rbp)
	movq	-2624(%rbp), %rdx
	movq	%rcx, %rdi
	xorps	%xmm0, %xmm0
	movss	%xmm0, -17068(%rbp)     # 4-byte Spill
	movss	-17068(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movl	$2147483652, %esi       # imm = 0x80000004
	movq	%rcx, -17080(%rbp)      # 8-byte Spill
	movl	%r9d, %ecx
	movq	-17080(%rbp), %r8       # 8-byte Reload
	movq	$0, (%rsp)
	movq	$0, 8(%rsp)
	movq	$0, 16(%rsp)
	callq	fb_GfxDrawString@PLT
.LBB11_2634:                            #   in Loop: Header=BB11_2599 Depth=1
	jmp	.LBB11_2635
.LBB11_2635:                            #   in Loop: Header=BB11_2599 Depth=1
	jmp	.LBB11_2599
.LBB11_2636:
	leaq	STRCODE$(%rip), %rax
	xorl	%r8d, %r8d
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1(%rip), %rdx
	movl	$1, %ecx
	callq	fb_StrAssign@PLT
	xorl	%r9d, %r9d
	movl	$1920, %edi             # imm = 0x780
	movl	$1080, %esi             # imm = 0x438
	movl	$32, %edx
	movl	$7, %ecx
	movl	$65, %r8d
	movq	%rax, -17088(%rbp)      # 8-byte Spill
	callq	fb_GfxScreenRes@PLT
	movl	$4294901760, %edi       # imm = 0xFFFF0000
	movl	%eax, -17092(%rbp)      # 4-byte Spill
	callq	fb_Cls@PLT
	xorps	%xmm0, %xmm0
	movsd	%xmm0, OFFSET$(%rip)
.LBB11_2637:                            # =>This Inner Loop Header: Depth=1
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movsd	.LCPI11_321(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	movq	-2216(%rbp), %rax
	addsd	SYS_OFFSET$(%rip), %xmm0
	movsd	%xmm1, -17104(%rbp)     # 8-byte Spill
	movq	%rdi, -17112(%rbp)      # 8-byte Spill
	movq	%rax, -17120(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-17120(%rbp), %rcx      # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	addsd	OFFSET$(%rip), %xmm0
	movq	-17112(%rbp), %rdi      # 8-byte Reload
	movsd	-17104(%rbp), %xmm1     # 8-byte Reload
                                        # xmm1 = mem[0],zero
	callq	_ZN8MEMORY_T6POKE64Edd
# %bb.2638:                             #   in Loop: Header=BB11_2637 Depth=1
	movsd	.LCPI11_7(%rip), %xmm0  # xmm0 = mem[0],zero
	addsd	OFFSET$(%rip), %xmm0
	movsd	%xmm0, OFFSET$(%rip)
# %bb.2639:                             #   in Loop: Header=BB11_2637 Depth=1
	movsd	.LCPI11_313(%rip), %xmm0 # xmm0 = mem[0],zero
	ucomisd	OFFSET$(%rip), %xmm0
	jb	.LBB11_2641
# %bb.2640:                             #   in Loop: Header=BB11_2637 Depth=1
	jmp	.LBB11_2637
.LBB11_2641:
	jmp	.LBB11_2642
.LBB11_2642:
	leaq	-232(%rbp), %rdi
	callq	_ZN9SHADERTOYD1Ev
	jmp	.LBB11_4944
.Ltmp274:                               # Block address taken
.LBB11_2643:
	leaq	.L.str.186(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%ecx, %ecx
	movq	%rax, -2632(%rbp)
	movq	-2632(%rbp), %rdi
	movl	$3, %esi
	movl	%ecx, %edx
	movl	%ecx, -17124(%rbp)      # 4-byte Spill
	movl	$1, %r8d
	movl	-17124(%rbp), %r9d      # 4-byte Reload
	callq	fb_FileOpen@PLT
	leaq	.L.str.187(%rip), %rdi
	movl	$16, %esi
	movl	%eax, -17128(%rbp)      # 4-byte Spill
	callq	fb_StrAllocTempDescZEx@PLT
	movq	%rax, -2640(%rbp)
	movq	-2640(%rbp), %rsi
	movl	$1, %ecx
	movl	%ecx, %edi
	movl	%ecx, %edx
	callq	fb_PrintString@PLT
	jmp	.LBB11_4944
.Ltmp275:                               # Block address taken
.LBB11_2644:
	leaq	.L.str.188(%rip), %rdi
	movl	$14, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	movq	%rax, -2648(%rbp)
	movq	-2648(%rbp), %rsi
	movl	$1, %ecx
	movl	%ecx, %edi
	movl	%ecx, %edx
	callq	fb_PrintString@PLT
	movl	$1, %edi
	callq	fb_FileClose@PLT
	jmp	.LBB11_4944
.Ltmp276:                               # Block address taken
.LBB11_2645:
	leaq	.L.str.189(%rip), %rdi
	movl	$29, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	movq	%rax, -2656(%rbp)
	movq	-2656(%rbp), %rdi
	callq	fb_Shell@PLT
	leaq	.L.str.190(%rip), %rdi
	movl	$30, %esi
	movl	%eax, -17132(%rbp)      # 4-byte Spill
	callq	fb_StrAllocTempDescZEx@PLT
	movq	%rax, -2664(%rbp)
	movq	-2664(%rbp), %rdi
	callq	fb_Shell@PLT
	movq	-2216(%rbp), %rcx
	movsd	394888(%rcx), %xmm0     # xmm0 = mem[0],zero
	movl	%eax, -17136(%rbp)      # 4-byte Spill
	callq	fb_DoubleToStr@PLT
	xorl	%esi, %esi
	movq	%rax, -2672(%rbp)
	leaq	-520(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17144(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-2672(%rbp), %rax
	movq	-17144(%rbp), %rdi      # 8-byte Reload
	leaq	.L.str.191(%rip), %rsi
	movl	$19, %edx
	movq	%rax, %rcx
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -2680(%rbp)
	leaq	-544(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17152(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-2680(%rbp), %rax
	movq	-17152(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.192(%rip), %rcx
	movl	$5, %r8d
	callq	fb_StrConcat@PLT
	movq	%rax, -2688(%rbp)
	movq	-2688(%rbp), %rdi
	callq	fb_Shell@PLT
	leaq	.L.str.193(%rip), %rdi
	movl	$18, %esi
	movl	%eax, -17156(%rbp)      # 4-byte Spill
	callq	fb_StrAllocTempDescZEx@PLT
	movq	%rax, -2696(%rbp)
	movq	-2696(%rbp), %rdi
	callq	fb_Shell@PLT
	movl	$4294901760, %edi       # imm = 0xFFFF0000
	movl	%eax, -17160(%rbp)      # 4-byte Spill
	callq	fb_Cls@PLT
	movq	-2216(%rbp), %rcx
	movsd	394888(%rcx), %xmm0     # xmm0 = mem[0],zero
	callq	fb_DoubleToStr@PLT
	xorl	%esi, %esi
	movq	%rax, -2704(%rbp)
	leaq	-568(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17168(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-2704(%rbp), %rax
	movq	-17168(%rbp), %rdi      # 8-byte Reload
	leaq	.L.str.194(%rip), %rsi
	movl	$8, %edx
	movq	%rax, %rcx
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -2712(%rbp)
	leaq	-592(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17176(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-2712(%rbp), %rax
	movq	-17176(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.192(%rip), %rcx
	movl	$5, %r8d
	callq	fb_StrConcat@PLT
	xorl	%r9d, %r9d
	movl	%r9d, %edx
	movq	%rax, -2720(%rbp)
	movq	-2720(%rbp), %rdi
	movq	FGIMAGE$(%rip), %rsi
	callq	fb_GfxBload@PLT
	xorl	%r9d, %r9d
	movq	fb_hPutPSet@GOTPCREL(%rip), %rcx
	xorl	%r10d, %r10d
	movl	%r10d, %edx
	movq	FGIMAGE$(%rip), %rdi
	movq	RENDER$(%rip), %rsi
	xorps	%xmm0, %xmm0
	movss	%xmm0, -17180(%rbp)     # 4-byte Spill
	movss	-17180(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movl	$4294901760, %r10d      # imm = 0xFFFF0000
	movq	%rdx, -17192(%rbp)      # 8-byte Spill
	movl	%r10d, %edx
	movq	%rcx, -17200(%rbp)      # 8-byte Spill
	movl	%r10d, %ecx
	movl	%r10d, %r8d
	movl	%r9d, -17204(%rbp)      # 4-byte Spill
	movl	%r10d, %r9d
	movl	$0, (%rsp)
	movl	$1, 8(%rsp)
	movq	-17200(%rbp), %r11      # 8-byte Reload
	movq	%r11, 16(%rsp)
	movl	$-1, 24(%rsp)
	movq	$0, 32(%rsp)
	movq	$0, 40(%rsp)
	movl	%eax, -17208(%rbp)      # 4-byte Spill
	callq	fb_GfxPut@PLT
	jmp	.LBB11_4944
.Ltmp277:                               # Block address taken
.LBB11_2646:
	movsd	.LCPI11_219(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	SYS_OFFSET$(%rip), %xmm0
	movsd	%xmm1, -17216(%rbp)     # 8-byte Spill
	movq	%rax, -17224(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-17224(%rbp), %rcx      # 8-byte Reload
	movsd	-17216(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	%xmm0, (%rcx,%rax)
	jmp	.LBB11_4944
.Ltmp278:                               # Block address taken
.LBB11_2647:
	movq	-2216(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	movb	%cl, -2721(%rbp)
	movq	-2216(%rbp), %rax
	movsd	394904(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %edx
                                        # kill: def $dl killed $dl killed $edx
	movb	%dl, -2722(%rbp)
	jmp	.LBB11_2650
.LBB11_2648:                            #   in Loop: Header=BB11_2650 Depth=1
	movzbl	-2721(%rbp), %edi
	callq	fb_UIntToStr@PLT
	xorl	%esi, %esi
	movq	%rax, -2736(%rbp)
	leaq	-616(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17232(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-2736(%rbp), %rax
	movq	-17232(%rbp), %rdi      # 8-byte Reload
	leaq	.L.str.195(%rip), %rsi
	movl	$8, %edx
	movq	%rax, %rcx
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -2744(%rbp)
	leaq	-640(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17240(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-2744(%rbp), %rax
	movq	-17240(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.192(%rip), %rcx
	movl	$5, %r8d
	callq	fb_StrConcat@PLT
	xorl	%r9d, %r9d
	movl	%r9d, %edx
	movq	%rax, -2752(%rbp)
	movq	-2752(%rbp), %rdi
	movq	RENDER$(%rip), %rsi
	callq	fb_GfxBload@PLT
	movl	$10, %edi
	movl	$1, %esi
	movl	%eax, -17244(%rbp)      # 4-byte Spill
	callq	fb_SleepEx@PLT
	xorl	%esi, %esi
	movq	fb_hPutPSet@GOTPCREL(%rip), %rcx
	xorl	%edi, %edi
	movl	%edi, %edx
	movq	FGIMAGE$(%rip), %rdi
	movq	RENDER$(%rip), %r8
	xorps	%xmm0, %xmm0
	movss	%xmm0, -17248(%rbp)     # 4-byte Spill
	movss	-17248(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movl	%esi, -17252(%rbp)      # 4-byte Spill
	movq	%r8, %rsi
	movl	$4294901760, %r9d       # imm = 0xFFFF0000
	movq	%rdx, -17264(%rbp)      # 8-byte Spill
	movl	%r9d, %edx
	movq	%rcx, -17272(%rbp)      # 8-byte Spill
	movl	%r9d, %ecx
	movl	%r9d, %r8d
	movl	$0, (%rsp)
	movl	$1, 8(%rsp)
	movq	-17272(%rbp), %r10      # 8-byte Reload
	movq	%r10, 16(%rsp)
	movl	$-1, 24(%rsp)
	movq	$0, 32(%rsp)
	movq	$0, 40(%rsp)
	movl	%eax, -17276(%rbp)      # 4-byte Spill
	callq	fb_GfxPut@PLT
# %bb.2649:                             #   in Loop: Header=BB11_2650 Depth=1
	movzbl	-2721(%rbp), %eax
	movl	%eax, %ecx
	addq	$1, %rcx
                                        # kill: def $cl killed $cl killed $rcx
	movb	%cl, -2721(%rbp)
.LBB11_2650:                            # =>This Inner Loop Header: Depth=1
	movzbl	-2721(%rbp), %eax
	movl	%eax, %ecx
	movzbl	-2722(%rbp), %eax
	movl	%eax, %edx
	cmpq	%rdx, %rcx
	jg	.LBB11_2652
# %bb.2651:                             #   in Loop: Header=BB11_2650 Depth=1
	jmp	.LBB11_2648
.LBB11_2652:
	jmp	.LBB11_2653
.LBB11_2653:
	jmp	.LBB11_4944
.Ltmp279:                               # Block address taken
.LBB11_2654:                            #   in Loop: Header=BB11_6020 Depth=1
	movq	-2216(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
	movq	%rax, -2760(%rbp)
	jmp	.LBB11_2911
.Ltmp280:                               # Block address taken
.LBB11_2655:
	leaq	.L.str.136(%rip), %rdi
	movl	$1, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -2768(%rbp)
	movq	-2768(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp281:                               # Block address taken
.LBB11_2656:
	leaq	.L.str.196(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -2776(%rbp)
	movq	-2776(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp282:                               # Block address taken
.LBB11_2657:
	leaq	.L.str.197(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -2784(%rbp)
	movq	-2784(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp283:                               # Block address taken
.LBB11_2658:
	leaq	.L.str.198(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -2792(%rbp)
	movq	-2792(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp284:                               # Block address taken
.LBB11_2659:
	leaq	.L.str.199(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -2800(%rbp)
	movq	-2800(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp285:                               # Block address taken
.LBB11_2660:
	leaq	.L.str.200(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -2808(%rbp)
	movq	-2808(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp286:                               # Block address taken
.LBB11_2661:
	leaq	.L.str.201(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -2816(%rbp)
	movq	-2816(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp287:                               # Block address taken
.LBB11_2662:
	leaq	.L.str.202(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -2824(%rbp)
	movq	-2824(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp288:                               # Block address taken
.LBB11_2663:
	leaq	.L.str.203(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -2832(%rbp)
	movq	-2832(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp289:                               # Block address taken
.LBB11_2664:
	leaq	.L.str.204(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -2840(%rbp)
	movq	-2840(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp290:                               # Block address taken
.LBB11_2665:
	leaq	.L.str.205(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -2848(%rbp)
	movq	-2848(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp291:                               # Block address taken
.LBB11_2666:
	leaq	.L.str.206(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -2856(%rbp)
	movq	-2856(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp292:                               # Block address taken
.LBB11_2667:
	leaq	.L.str.207(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -2864(%rbp)
	movq	-2864(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp293:                               # Block address taken
.LBB11_2668:
	leaq	.L.str.208(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -2872(%rbp)
	movq	-2872(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp294:                               # Block address taken
.LBB11_2669:
	leaq	.L.str.209(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -2880(%rbp)
	movq	-2880(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp295:                               # Block address taken
.LBB11_2670:
	leaq	.L.str.210(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -2888(%rbp)
	movq	-2888(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp296:                               # Block address taken
.LBB11_2671:
	leaq	.L.str.211(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -2896(%rbp)
	movq	-2896(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp297:                               # Block address taken
.LBB11_2672:
	leaq	.L.str.212(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -2904(%rbp)
	movq	-2904(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp298:                               # Block address taken
.LBB11_2673:
	leaq	.L.str.213(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -2912(%rbp)
	movq	-2912(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp299:                               # Block address taken
.LBB11_2674:
	leaq	.L.str.214(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -2920(%rbp)
	movq	-2920(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp300:                               # Block address taken
.LBB11_2675:
	leaq	.L.str.215(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -2928(%rbp)
	movq	-2928(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp301:                               # Block address taken
.LBB11_2676:
	leaq	.L.str.216(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -2936(%rbp)
	movq	-2936(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp302:                               # Block address taken
.LBB11_2677:
	leaq	.L.str.217(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -2944(%rbp)
	movq	-2944(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp303:                               # Block address taken
.LBB11_2678:
	leaq	.L.str.218(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -2952(%rbp)
	movq	-2952(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp304:                               # Block address taken
.LBB11_2679:
	leaq	.L.str.219(%rip), %rdi
	movl	$17, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -2960(%rbp)
	movq	-2960(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp305:                               # Block address taken
.LBB11_2680:
	leaq	.L.str.220(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -2968(%rbp)
	movq	-2968(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp306:                               # Block address taken
.LBB11_2681:
	leaq	.L.str.221(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -2976(%rbp)
	movq	-2976(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp307:                               # Block address taken
.LBB11_2682:
	leaq	.L.str.222(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -2984(%rbp)
	movq	-2984(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp308:                               # Block address taken
.LBB11_2683:
	leaq	.L.str.223(%rip), %rdi
	movl	$16, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -2992(%rbp)
	movq	-2992(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp309:                               # Block address taken
.LBB11_2684:
	leaq	.L.str.224(%rip), %rdi
	movl	$16, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3000(%rbp)
	movq	-3000(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp310:                               # Block address taken
.LBB11_2685:
	leaq	.L.str.225(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3008(%rbp)
	movq	-3008(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp311:                               # Block address taken
.LBB11_2686:
	leaq	.L.str.226(%rip), %rdi
	movl	$19, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3016(%rbp)
	movq	-3016(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp312:                               # Block address taken
.LBB11_2687:
	leaq	.L.str.227(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3024(%rbp)
	movq	-3024(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp313:                               # Block address taken
.LBB11_2688:
	leaq	.L.str.228(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3032(%rbp)
	movq	-3032(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp314:                               # Block address taken
.LBB11_2689:
	leaq	.L.str.229(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3040(%rbp)
	movq	-3040(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp315:                               # Block address taken
.LBB11_2690:
	leaq	.L.str.230(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3048(%rbp)
	movq	-3048(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp316:                               # Block address taken
.LBB11_2691:
	leaq	.L.str.231(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3056(%rbp)
	movq	-3056(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp317:                               # Block address taken
.LBB11_2692:
	leaq	.L.str.232(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3064(%rbp)
	movq	-3064(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp318:                               # Block address taken
.LBB11_2693:
	leaq	.L.str.233(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3072(%rbp)
	movq	-3072(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp319:                               # Block address taken
.LBB11_2694:
	leaq	.L.str.234(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3080(%rbp)
	movq	-3080(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp320:                               # Block address taken
.LBB11_2695:
	leaq	.L.str.235(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3088(%rbp)
	movq	-3088(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp321:                               # Block address taken
.LBB11_2696:
	leaq	.L.str.236(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3096(%rbp)
	movq	-3096(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp322:                               # Block address taken
.LBB11_2697:
	leaq	.L.str.237(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3104(%rbp)
	movq	-3104(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp323:                               # Block address taken
.LBB11_2698:
	leaq	.L.str.238(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3112(%rbp)
	movq	-3112(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp324:                               # Block address taken
.LBB11_2699:
	leaq	.L.str.239(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3120(%rbp)
	movq	-3120(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp325:                               # Block address taken
.LBB11_2700:
	leaq	.L.str.240(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3128(%rbp)
	movq	-3128(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp326:                               # Block address taken
.LBB11_2701:
	leaq	.L.str.241(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3136(%rbp)
	movq	-3136(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp327:                               # Block address taken
.LBB11_2702:
	leaq	.L.str.242(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3144(%rbp)
	movq	-3144(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp328:                               # Block address taken
.LBB11_2703:
	leaq	.L.str.243(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3152(%rbp)
	movq	-3152(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp329:                               # Block address taken
.LBB11_2704:
	leaq	.L.str.244(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3160(%rbp)
	movq	-3160(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp330:                               # Block address taken
.LBB11_2705:
	leaq	.L.str.245(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3168(%rbp)
	movq	-3168(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp331:                               # Block address taken
.LBB11_2706:
	leaq	.L.str.246(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3176(%rbp)
	movq	-3176(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp332:                               # Block address taken
.LBB11_2707:
	leaq	.L.str.247(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3184(%rbp)
	movq	-3184(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp333:                               # Block address taken
.LBB11_2708:
	leaq	.L.str.248(%rip), %rdi
	movl	$2, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3192(%rbp)
	movq	-3192(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp334:                               # Block address taken
.LBB11_2709:
	leaq	.L.str.249(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3200(%rbp)
	movq	-3200(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp335:                               # Block address taken
.LBB11_2710:
	leaq	.L.str.250(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3208(%rbp)
	movq	-3208(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp336:                               # Block address taken
.LBB11_2711:
	leaq	.L.str.251(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3216(%rbp)
	movq	-3216(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp337:                               # Block address taken
.LBB11_2712:
	leaq	.L.str.252(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3224(%rbp)
	movq	-3224(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp338:                               # Block address taken
.LBB11_2713:
	leaq	.L.str.253(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3232(%rbp)
	movq	-3232(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp339:                               # Block address taken
.LBB11_2714:
	leaq	.L.str.254(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3240(%rbp)
	movq	-3240(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp340:                               # Block address taken
.LBB11_2715:
	leaq	.L.str.255(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3248(%rbp)
	movq	-3248(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp341:                               # Block address taken
.LBB11_2716:
	leaq	.L.str.256(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3256(%rbp)
	movq	-3256(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp342:                               # Block address taken
.LBB11_2717:
	leaq	.L.str.257(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3264(%rbp)
	movq	-3264(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp343:                               # Block address taken
.LBB11_2718:
	leaq	.L.str.258(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3272(%rbp)
	movq	-3272(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp344:                               # Block address taken
.LBB11_2719:
	leaq	.L.str.259(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3280(%rbp)
	movq	-3280(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp345:                               # Block address taken
.LBB11_2720:
	leaq	.L.str.260(%rip), %rdi
	movl	$2, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3288(%rbp)
	movq	-3288(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp346:                               # Block address taken
.LBB11_2721:
	leaq	.L.str.261(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3296(%rbp)
	movq	-3296(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp347:                               # Block address taken
.LBB11_2722:
	leaq	.L.str.262(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3304(%rbp)
	movq	-3304(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp348:                               # Block address taken
.LBB11_2723:
	leaq	.L.str.263(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3312(%rbp)
	movq	-3312(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp349:                               # Block address taken
.LBB11_2724:
	leaq	.L.str.264(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3320(%rbp)
	movq	-3320(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp350:                               # Block address taken
.LBB11_2725:
	leaq	.L.str.265(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3328(%rbp)
	movq	-3328(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp351:                               # Block address taken
.LBB11_2726:
	leaq	.L.str.266(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3336(%rbp)
	movq	-3336(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp352:                               # Block address taken
.LBB11_2727:
	leaq	.L.str.267(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3344(%rbp)
	movq	-3344(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp353:                               # Block address taken
.LBB11_2728:
	leaq	.L.str.268(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3352(%rbp)
	movq	-3352(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp354:                               # Block address taken
.LBB11_2729:
	leaq	.L.str.269(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3360(%rbp)
	movq	-3360(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp355:                               # Block address taken
.LBB11_2730:
	leaq	.L.str.270(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3368(%rbp)
	movq	-3368(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp356:                               # Block address taken
.LBB11_2731:
	leaq	.L.str.271(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3376(%rbp)
	movq	-3376(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp357:                               # Block address taken
.LBB11_2732:
	leaq	.L.str.272(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3384(%rbp)
	movq	-3384(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp358:                               # Block address taken
.LBB11_2733:
	leaq	.L.str.137(%rip), %rdi
	movl	$1, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3392(%rbp)
	movq	-3392(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp359:                               # Block address taken
.LBB11_2734:
	leaq	.L.str.273(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3400(%rbp)
	movq	-3400(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp360:                               # Block address taken
.LBB11_2735:
	leaq	.L.str.274(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3408(%rbp)
	movq	-3408(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp361:                               # Block address taken
.LBB11_2736:
	leaq	.L.str.275(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3416(%rbp)
	movq	-3416(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp362:                               # Block address taken
.LBB11_2737:
	leaq	.L.str.276(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3424(%rbp)
	movq	-3424(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp363:                               # Block address taken
.LBB11_2738:
	leaq	.L.str.277(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3432(%rbp)
	movq	-3432(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp364:                               # Block address taken
.LBB11_2739:
	leaq	.L.str.278(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3440(%rbp)
	movq	-3440(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp365:                               # Block address taken
.LBB11_2740:
	leaq	.L.str.279(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3448(%rbp)
	movq	-3448(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp366:                               # Block address taken
.LBB11_2741:
	leaq	.L.str.280(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3456(%rbp)
	movq	-3456(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp367:                               # Block address taken
.LBB11_2742:
	leaq	.L.str.281(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3464(%rbp)
	movq	-3464(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp368:                               # Block address taken
.LBB11_2743:
	leaq	.L.str.282(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3472(%rbp)
	movq	-3472(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp369:                               # Block address taken
.LBB11_2744:
	leaq	.L.str.283(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3480(%rbp)
	movq	-3480(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp370:                               # Block address taken
.LBB11_2745:
	leaq	.L.str.284(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3488(%rbp)
	movq	-3488(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp371:                               # Block address taken
.LBB11_2746:
	leaq	.L.str.285(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3496(%rbp)
	movq	-3496(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp372:                               # Block address taken
.LBB11_2747:
	leaq	.L.str.286(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3504(%rbp)
	movq	-3504(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp373:                               # Block address taken
.LBB11_2748:
	leaq	.L.str.287(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3512(%rbp)
	movq	-3512(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp374:                               # Block address taken
.LBB11_2749:
	leaq	.L.str.288(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3520(%rbp)
	movq	-3520(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp375:                               # Block address taken
.LBB11_2750:
	leaq	.L.str.289(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3528(%rbp)
	movq	-3528(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp376:                               # Block address taken
.LBB11_2751:
	leaq	.L.str.290(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3536(%rbp)
	movq	-3536(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp377:                               # Block address taken
.LBB11_2752:
	leaq	.L.str.291(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3544(%rbp)
	movq	-3544(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp378:                               # Block address taken
.LBB11_2753:
	leaq	.L.str.292(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3552(%rbp)
	movq	-3552(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp379:                               # Block address taken
.LBB11_2754:
	leaq	.L.str.293(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3560(%rbp)
	movq	-3560(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp380:                               # Block address taken
.LBB11_2755:
	leaq	.L.str.294(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3568(%rbp)
	movq	-3568(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp381:                               # Block address taken
.LBB11_2756:
	leaq	.L.str.295(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3576(%rbp)
	movq	-3576(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp382:                               # Block address taken
.LBB11_2757:
	leaq	.L.str.296(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3584(%rbp)
	movq	-3584(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp383:                               # Block address taken
.LBB11_2758:
	leaq	.L.str.297(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3592(%rbp)
	movq	-3592(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp384:                               # Block address taken
.LBB11_2759:
	leaq	.L.str.298(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3600(%rbp)
	movq	-3600(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp385:                               # Block address taken
.LBB11_2760:
	leaq	.L.str.299(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3608(%rbp)
	movq	-3608(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp386:                               # Block address taken
.LBB11_2761:
	leaq	.L.str.300(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3616(%rbp)
	movq	-3616(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp387:                               # Block address taken
.LBB11_2762:
	leaq	.L.str.301(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3624(%rbp)
	movq	-3624(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp388:                               # Block address taken
.LBB11_2763:
	leaq	.L.str.302(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3632(%rbp)
	movq	-3632(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp389:                               # Block address taken
.LBB11_2764:
	leaq	.L.str.303(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3640(%rbp)
	movq	-3640(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp390:                               # Block address taken
.LBB11_2765:
	leaq	.L.str.304(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3648(%rbp)
	movq	-3648(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp391:                               # Block address taken
.LBB11_2766:
	leaq	.L.str.305(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3656(%rbp)
	movq	-3656(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp392:                               # Block address taken
.LBB11_2767:
	leaq	.L.str.306(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3664(%rbp)
	movq	-3664(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp393:                               # Block address taken
.LBB11_2768:
	leaq	.L.str.307(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3672(%rbp)
	movq	-3672(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp394:                               # Block address taken
.LBB11_2769:
	leaq	.L.str.308(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3680(%rbp)
	movq	-3680(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp395:                               # Block address taken
.LBB11_2770:
	leaq	.L.str.309(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3688(%rbp)
	movq	-3688(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp396:                               # Block address taken
.LBB11_2771:
	leaq	.L.str.310(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3696(%rbp)
	movq	-3696(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp397:                               # Block address taken
.LBB11_2772:
	leaq	.L.str.311(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3704(%rbp)
	movq	-3704(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp398:                               # Block address taken
.LBB11_2773:
	leaq	.L.str.312(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3712(%rbp)
	movq	-3712(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp399:                               # Block address taken
.LBB11_2774:
	leaq	.L.str.313(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3720(%rbp)
	movq	-3720(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp400:                               # Block address taken
.LBB11_2775:
	leaq	.L.str.314(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3728(%rbp)
	movq	-3728(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp401:                               # Block address taken
.LBB11_2776:
	leaq	.L.str.315(%rip), %rdi
	movl	$2, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3736(%rbp)
	movq	-3736(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp402:                               # Block address taken
.LBB11_2777:
	leaq	.L.str.316(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3744(%rbp)
	movq	-3744(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp403:                               # Block address taken
.LBB11_2778:
	leaq	.L.str.138(%rip), %rdi
	movl	$1, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3752(%rbp)
	movq	-3752(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp404:                               # Block address taken
.LBB11_2779:
	leaq	.L.str.317(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3760(%rbp)
	movq	-3760(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp405:                               # Block address taken
.LBB11_2780:
	leaq	.L.str.318(%rip), %rdi
	movl	$15, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3768(%rbp)
	movq	-3768(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp406:                               # Block address taken
.LBB11_2781:
	leaq	.L.str.319(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3776(%rbp)
	movq	-3776(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp407:                               # Block address taken
.LBB11_2782:
	leaq	.L.str.320(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3784(%rbp)
	movq	-3784(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp408:                               # Block address taken
.LBB11_2783:
	leaq	.L.str.321(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3792(%rbp)
	movq	-3792(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp409:                               # Block address taken
.LBB11_2784:
	leaq	.L.str.322(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3800(%rbp)
	movq	-3800(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp410:                               # Block address taken
.LBB11_2785:
	leaq	.L.str.323(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3808(%rbp)
	movq	-3808(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp411:                               # Block address taken
.LBB11_2786:
	leaq	.L.str.324(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3816(%rbp)
	movq	-3816(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp412:                               # Block address taken
.LBB11_2787:
	leaq	.L.str.325(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3824(%rbp)
	movq	-3824(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp413:                               # Block address taken
.LBB11_2788:
	leaq	.L.str.326(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3832(%rbp)
	movq	-3832(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp414:                               # Block address taken
.LBB11_2789:
	leaq	.L.str.327(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3840(%rbp)
	movq	-3840(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp415:                               # Block address taken
.LBB11_2790:
	leaq	.L.str.328(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3848(%rbp)
	movq	-3848(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp416:                               # Block address taken
.LBB11_2791:
	leaq	.L.str.329(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3856(%rbp)
	movq	-3856(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp417:                               # Block address taken
.LBB11_2792:
	leaq	.L.str.330(%rip), %rdi
	movl	$2, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3864(%rbp)
	movq	-3864(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp418:                               # Block address taken
.LBB11_2793:
	leaq	.L.str.331(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3872(%rbp)
	movq	-3872(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp419:                               # Block address taken
.LBB11_2794:
	leaq	.L.str.332(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3880(%rbp)
	movq	-3880(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp420:                               # Block address taken
.LBB11_2795:
	leaq	.L.str.333(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3888(%rbp)
	movq	-3888(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp421:                               # Block address taken
.LBB11_2796:
	leaq	.L.str.334(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3896(%rbp)
	movq	-3896(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp422:                               # Block address taken
.LBB11_2797:
	leaq	.L.str.335(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3904(%rbp)
	movq	-3904(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp423:                               # Block address taken
.LBB11_2798:
	leaq	.L.str.336(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3912(%rbp)
	movq	-3912(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp424:                               # Block address taken
.LBB11_2799:
	leaq	.L.str.337(%rip), %rdi
	movl	$2, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3920(%rbp)
	movq	-3920(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp425:                               # Block address taken
.LBB11_2800:
	leaq	.L.str.338(%rip), %rdi
	movl	$2, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3928(%rbp)
	movq	-3928(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp426:                               # Block address taken
.LBB11_2801:
	leaq	.L.str.339(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3936(%rbp)
	movq	-3936(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp427:                               # Block address taken
.LBB11_2802:
	leaq	.L.str.340(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3944(%rbp)
	movq	-3944(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp428:                               # Block address taken
.LBB11_2803:
	leaq	.L.str.341(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3952(%rbp)
	movq	-3952(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp429:                               # Block address taken
.LBB11_2804:
	leaq	.L.str.342(%rip), %rdi
	movl	$16, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3960(%rbp)
	movq	-3960(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp430:                               # Block address taken
.LBB11_2805:
	leaq	.L.str.343(%rip), %rdi
	movl	$18, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3968(%rbp)
	movq	-3968(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp431:                               # Block address taken
.LBB11_2806:
	leaq	.L.str.344(%rip), %rdi
	movl	$19, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3976(%rbp)
	movq	-3976(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp432:                               # Block address taken
.LBB11_2807:
	leaq	.L.str.345(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3984(%rbp)
	movq	-3984(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp433:                               # Block address taken
.LBB11_2808:
	leaq	.L.str.346(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -3992(%rbp)
	movq	-3992(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp434:                               # Block address taken
.LBB11_2809:
	leaq	.L.str.347(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4000(%rbp)
	movq	-4000(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp435:                               # Block address taken
.LBB11_2810:
	leaq	.L.str.348(%rip), %rdi
	movl	$14, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4008(%rbp)
	movq	-4008(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp436:                               # Block address taken
.LBB11_2811:
	leaq	.L.str.349(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4016(%rbp)
	movq	-4016(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp437:                               # Block address taken
.LBB11_2812:
	leaq	.L.str.350(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4024(%rbp)
	movq	-4024(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp438:                               # Block address taken
.LBB11_2813:
	leaq	.L.str.351(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4032(%rbp)
	movq	-4032(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp439:                               # Block address taken
.LBB11_2814:
	leaq	.L.str.352(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4040(%rbp)
	movq	-4040(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp440:                               # Block address taken
.LBB11_2815:
	leaq	.L.str.353(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4048(%rbp)
	movq	-4048(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp441:                               # Block address taken
.LBB11_2816:
	leaq	.L.str.354(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4056(%rbp)
	movq	-4056(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp442:                               # Block address taken
.LBB11_2817:
	leaq	.L.str.355(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4064(%rbp)
	movq	-4064(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp443:                               # Block address taken
.LBB11_2818:
	leaq	.L.str.356(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4072(%rbp)
	movq	-4072(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp444:                               # Block address taken
.LBB11_2819:
	leaq	.L.str.357(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4080(%rbp)
	movq	-4080(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp445:                               # Block address taken
.LBB11_2820:
	leaq	.L.str.358(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4088(%rbp)
	movq	-4088(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp446:                               # Block address taken
.LBB11_2821:
	leaq	.L.str.359(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4096(%rbp)
	movq	-4096(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp447:                               # Block address taken
.LBB11_2822:
	leaq	.L.str.360(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4104(%rbp)
	movq	-4104(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp448:                               # Block address taken
.LBB11_2823:
	leaq	.L.str.361(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4112(%rbp)
	movq	-4112(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp449:                               # Block address taken
.LBB11_2824:
	leaq	.L.str.362(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4120(%rbp)
	movq	-4120(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp450:                               # Block address taken
.LBB11_2825:
	leaq	.L.str.363(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4128(%rbp)
	movq	-4128(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp451:                               # Block address taken
.LBB11_2826:
	leaq	.L.str.364(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4136(%rbp)
	movq	-4136(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp452:                               # Block address taken
.LBB11_2827:
	leaq	.L.str.365(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4144(%rbp)
	movq	-4144(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp453:                               # Block address taken
.LBB11_2828:
	leaq	.L.str.366(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4152(%rbp)
	movq	-4152(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp454:                               # Block address taken
.LBB11_2829:
	leaq	.L.str.367(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4160(%rbp)
	movq	-4160(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp455:                               # Block address taken
.LBB11_2830:
	leaq	.L.str.368(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4168(%rbp)
	movq	-4168(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp456:                               # Block address taken
.LBB11_2831:
	leaq	.L.str.369(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4176(%rbp)
	movq	-4176(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp457:                               # Block address taken
.LBB11_2832:
	leaq	.L.str.370(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4184(%rbp)
	movq	-4184(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp458:                               # Block address taken
.LBB11_2833:
	leaq	.L.str.371(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4192(%rbp)
	movq	-4192(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp459:                               # Block address taken
.LBB11_2834:
	leaq	.L.str.372(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4200(%rbp)
	movq	-4200(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp460:                               # Block address taken
.LBB11_2835:
	leaq	.L.str.373(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4208(%rbp)
	movq	-4208(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp461:                               # Block address taken
.LBB11_2836:
	leaq	.L.str.374(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4216(%rbp)
	movq	-4216(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp462:                               # Block address taken
.LBB11_2837:
	leaq	.L.str.375(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4224(%rbp)
	movq	-4224(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp463:                               # Block address taken
.LBB11_2838:
	leaq	.L.str.376(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4232(%rbp)
	movq	-4232(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp464:                               # Block address taken
.LBB11_2839:
	leaq	.L.str.377(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4240(%rbp)
	movq	-4240(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp465:                               # Block address taken
.LBB11_2840:
	leaq	.L.str.378(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4248(%rbp)
	movq	-4248(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp466:                               # Block address taken
.LBB11_2841:
	leaq	.L.str.379(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4256(%rbp)
	movq	-4256(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp467:                               # Block address taken
.LBB11_2842:
	leaq	.L.str.380(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4264(%rbp)
	movq	-4264(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp468:                               # Block address taken
.LBB11_2843:
	leaq	.L.str.381(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4272(%rbp)
	movq	-4272(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp469:                               # Block address taken
.LBB11_2844:
	leaq	.L.str.382(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4280(%rbp)
	movq	-4280(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp470:                               # Block address taken
.LBB11_2845:
	leaq	.L.str.383(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4288(%rbp)
	movq	-4288(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp471:                               # Block address taken
.LBB11_2846:
	leaq	.L.str.384(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4296(%rbp)
	movq	-4296(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp472:                               # Block address taken
.LBB11_2847:
	leaq	.L.str.385(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4304(%rbp)
	movq	-4304(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp473:                               # Block address taken
.LBB11_2848:
	leaq	.L.str.386(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4312(%rbp)
	movq	-4312(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp474:                               # Block address taken
.LBB11_2849:
	leaq	.L.str.387(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4320(%rbp)
	movq	-4320(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp475:                               # Block address taken
.LBB11_2850:
	leaq	.L.str.388(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4328(%rbp)
	movq	-4328(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp476:                               # Block address taken
.LBB11_2851:
	leaq	.L.str.389(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4336(%rbp)
	movq	-4336(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp477:                               # Block address taken
.LBB11_2852:
	leaq	.L.str.390(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4344(%rbp)
	movq	-4344(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp478:                               # Block address taken
.LBB11_2853:
	leaq	.L.str.391(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4352(%rbp)
	movq	-4352(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp479:                               # Block address taken
.LBB11_2854:
	leaq	.L.str.392(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4360(%rbp)
	movq	-4360(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp480:                               # Block address taken
.LBB11_2855:
	leaq	.L.str.393(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4368(%rbp)
	movq	-4368(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp481:                               # Block address taken
.LBB11_2856:
	leaq	.L.str.394(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4376(%rbp)
	movq	-4376(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp482:                               # Block address taken
.LBB11_2857:
	leaq	.L.str.395(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4384(%rbp)
	movq	-4384(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp483:                               # Block address taken
.LBB11_2858:
	leaq	.L.str.396(%rip), %rdi
	movl	$15, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4392(%rbp)
	movq	-4392(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp484:                               # Block address taken
.LBB11_2859:
	leaq	.L.str.397(%rip), %rdi
	movl	$15, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4400(%rbp)
	movq	-4400(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp485:                               # Block address taken
.LBB11_2860:
	leaq	.L.str.398(%rip), %rdi
	movl	$15, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4408(%rbp)
	movq	-4408(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp486:                               # Block address taken
.LBB11_2861:
	leaq	.L.str.399(%rip), %rdi
	movl	$15, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4416(%rbp)
	movq	-4416(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp487:                               # Block address taken
.LBB11_2862:
	leaq	.L.str.400(%rip), %rdi
	movl	$15, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4424(%rbp)
	movq	-4424(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp488:                               # Block address taken
.LBB11_2863:
	leaq	.L.str.401(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4432(%rbp)
	movq	-4432(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp489:                               # Block address taken
.LBB11_2864:
	leaq	.L.str.402(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4440(%rbp)
	movq	-4440(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp490:                               # Block address taken
.LBB11_2865:
	leaq	.L.str.403(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4448(%rbp)
	movq	-4448(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp491:                               # Block address taken
.LBB11_2866:
	leaq	.L.str.404(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4456(%rbp)
	movq	-4456(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp492:                               # Block address taken
.LBB11_2867:
	leaq	.L.str.405(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4464(%rbp)
	movq	-4464(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp493:                               # Block address taken
.LBB11_2868:
	leaq	.L.str.406(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4472(%rbp)
	movq	-4472(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp494:                               # Block address taken
.LBB11_2869:
	leaq	.L.str.407(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4480(%rbp)
	movq	-4480(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp495:                               # Block address taken
.LBB11_2870:
	leaq	.L.str.408(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4488(%rbp)
	movq	-4488(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp496:                               # Block address taken
.LBB11_2871:
	leaq	.L.str.409(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4496(%rbp)
	movq	-4496(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp497:                               # Block address taken
.LBB11_2872:
	leaq	.L.str.410(%rip), %rdi
	movl	$15, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4504(%rbp)
	movq	-4504(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp498:                               # Block address taken
.LBB11_2873:
	leaq	.L.str.411(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4512(%rbp)
	movq	-4512(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp499:                               # Block address taken
.LBB11_2874:
	leaq	.L.str.412(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4520(%rbp)
	movq	-4520(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp500:                               # Block address taken
.LBB11_2875:
	leaq	.L.str.413(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4528(%rbp)
	movq	-4528(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp501:                               # Block address taken
.LBB11_2876:
	leaq	.L.str.414(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4536(%rbp)
	movq	-4536(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp502:                               # Block address taken
.LBB11_2877:
	leaq	.L.str.415(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4544(%rbp)
	movq	-4544(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp503:                               # Block address taken
.LBB11_2878:
	leaq	.L.str.416(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4552(%rbp)
	movq	-4552(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp504:                               # Block address taken
.LBB11_2879:
	leaq	.L.str.417(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4560(%rbp)
	movq	-4560(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp505:                               # Block address taken
.LBB11_2880:
	leaq	.L.str.418(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4568(%rbp)
	movq	-4568(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp506:                               # Block address taken
.LBB11_2881:
	leaq	.L.str.419(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4576(%rbp)
	movq	-4576(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp507:                               # Block address taken
.LBB11_2882:
	leaq	.L.str.420(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4584(%rbp)
	movq	-4584(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp508:                               # Block address taken
.LBB11_2883:
	leaq	.L.str.421(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4592(%rbp)
	movq	-4592(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp509:                               # Block address taken
.LBB11_2884:
	leaq	.L.str.422(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4600(%rbp)
	movq	-4600(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp510:                               # Block address taken
.LBB11_2885:
	leaq	.L.str.423(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4608(%rbp)
	movq	-4608(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp511:                               # Block address taken
.LBB11_2886:
	leaq	.L.str.424(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4616(%rbp)
	movq	-4616(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp512:                               # Block address taken
.LBB11_2887:
	leaq	.L.str.425(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4624(%rbp)
	movq	-4624(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp513:                               # Block address taken
.LBB11_2888:
	leaq	.L.str.426(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4632(%rbp)
	movq	-4632(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp514:                               # Block address taken
.LBB11_2889:
	leaq	.L.str.427(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4640(%rbp)
	movq	-4640(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp515:                               # Block address taken
.LBB11_2890:
	leaq	.L.str.428(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4648(%rbp)
	movq	-4648(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp516:                               # Block address taken
.LBB11_2891:
	leaq	.L.str.429(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4656(%rbp)
	movq	-4656(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp517:                               # Block address taken
.LBB11_2892:
	leaq	.L.str.430(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4664(%rbp)
	movq	-4664(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp518:                               # Block address taken
.LBB11_2893:
	leaq	.L.str.431(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4672(%rbp)
	movq	-4672(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp519:                               # Block address taken
.LBB11_2894:
	leaq	.L.str.432(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4680(%rbp)
	movq	-4680(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp520:                               # Block address taken
.LBB11_2895:
	leaq	.L.str.433(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4688(%rbp)
	movq	-4688(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp521:                               # Block address taken
.LBB11_2896:
	leaq	.L.str.434(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4696(%rbp)
	movq	-4696(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp522:                               # Block address taken
.LBB11_2897:
	leaq	.L.str.435(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4704(%rbp)
	movq	-4704(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp523:                               # Block address taken
.LBB11_2898:
	leaq	.L.str.436(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4712(%rbp)
	movq	-4712(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp524:                               # Block address taken
.LBB11_2899:
	leaq	.L.str.437(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4720(%rbp)
	movq	-4720(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp525:                               # Block address taken
.LBB11_2900:
	leaq	.L.str.438(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4728(%rbp)
	movq	-4728(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp526:                               # Block address taken
.LBB11_2901:
	leaq	.L.str.439(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4736(%rbp)
	movq	-4736(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp527:                               # Block address taken
.LBB11_2902:
	leaq	.L.str.440(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4744(%rbp)
	movq	-4744(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp528:                               # Block address taken
.LBB11_2903:
	leaq	.L.str.441(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4752(%rbp)
	movq	-4752(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp529:                               # Block address taken
.LBB11_2904:
	leaq	.L.str.442(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4760(%rbp)
	movq	-4760(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp530:                               # Block address taken
.LBB11_2905:
	leaq	.L.str.443(%rip), %rdi
	movl	$17, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4768(%rbp)
	movq	-4768(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp531:                               # Block address taken
.LBB11_2906:
	leaq	.L.str.444(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4776(%rbp)
	movq	-4776(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp532:                               # Block address taken
.LBB11_2907:
	leaq	.L.str.445(%rip), %rdi
	movl	$16, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4784(%rbp)
	movq	-4784(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp533:                               # Block address taken
.LBB11_2908:
	leaq	.L.str.446(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4792(%rbp)
	movq	-4792(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp534:                               # Block address taken
.LBB11_2909:
	leaq	.L.str.447(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4800(%rbp)
	movq	-4800(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.Ltmp535:                               # Block address taken
.LBB11_2910:
	leaq	.L.str.448(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4808(%rbp)
	movq	-4808(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_2914
.LBB11_2911:                            #   in Loop: Header=BB11_6020 Depth=1
	cmpq	$255, -2760(%rbp)
	jbe	.LBB11_2913
# %bb.2912:
	jmp	.LBB11_2914
.LBB11_2913:                            #   in Loop: Header=BB11_6020 Depth=1
	movq	-2760(%rbp), %rax
	subq	$0, %rax
	leaq	_ZN8MEMORY_T6POKE64Edd.tmp$2481(%rip), %rcx
	movq	(%rcx,%rax,8), %rax
	movq	%rax, -15848(%rbp)      # 8-byte Spill
	jmp	.LBB11_6020
.LBB11_2914:
	jmp	.LBB11_4944
.Ltmp536:                               # Block address taken
.LBB11_2915:                            #   in Loop: Header=BB11_6020 Depth=1
	movq	-2216(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
	movq	%rax, -4816(%rbp)
	jmp	.LBB11_3172
.Ltmp537:                               # Block address taken
.LBB11_2916:
	leaq	.L.str.449(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4824(%rbp)
	movq	-4824(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp538:                               # Block address taken
.LBB11_2917:
	leaq	.L.str.450(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4832(%rbp)
	movq	-4832(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp539:                               # Block address taken
.LBB11_2918:
	leaq	.L.str.139(%rip), %rdi
	movl	$1, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4840(%rbp)
	movq	-4840(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp540:                               # Block address taken
.LBB11_2919:
	leaq	.L.str.451(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4848(%rbp)
	movq	-4848(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp541:                               # Block address taken
.LBB11_2920:
	leaq	.L.str.452(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4856(%rbp)
	movq	-4856(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp542:                               # Block address taken
.LBB11_2921:
	leaq	.L.str.453(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4864(%rbp)
	movq	-4864(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp543:                               # Block address taken
.LBB11_2922:
	leaq	.L.str.454(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4872(%rbp)
	movq	-4872(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp544:                               # Block address taken
.LBB11_2923:
	leaq	.L.str.455(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4880(%rbp)
	movq	-4880(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp545:                               # Block address taken
.LBB11_2924:
	leaq	.L.str.456(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4888(%rbp)
	movq	-4888(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp546:                               # Block address taken
.LBB11_2925:
	leaq	.L.str.457(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4896(%rbp)
	movq	-4896(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp547:                               # Block address taken
.LBB11_2926:
	leaq	.L.str.458(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4904(%rbp)
	movq	-4904(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp548:                               # Block address taken
.LBB11_2927:
	leaq	.L.str.459(%rip), %rdi
	movl	$14, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4912(%rbp)
	movq	-4912(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp549:                               # Block address taken
.LBB11_2928:
	leaq	.L.str.460(%rip), %rdi
	movl	$2, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4920(%rbp)
	movq	-4920(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp550:                               # Block address taken
.LBB11_2929:
	leaq	.L.str.461(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4928(%rbp)
	movq	-4928(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp551:                               # Block address taken
.LBB11_2930:
	leaq	.L.str.462(%rip), %rdi
	movl	$14, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4936(%rbp)
	movq	-4936(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp552:                               # Block address taken
.LBB11_2931:
	leaq	.L.str.463(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4944(%rbp)
	movq	-4944(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp553:                               # Block address taken
.LBB11_2932:
	leaq	.L.str.464(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4952(%rbp)
	movq	-4952(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp554:                               # Block address taken
.LBB11_2933:
	leaq	.L.str.465(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4960(%rbp)
	movq	-4960(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp555:                               # Block address taken
.LBB11_2934:
	leaq	.L.str.466(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4968(%rbp)
	movq	-4968(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp556:                               # Block address taken
.LBB11_2935:
	leaq	.L.str.467(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4976(%rbp)
	movq	-4976(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp557:                               # Block address taken
.LBB11_2936:
	leaq	.L.str.468(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4984(%rbp)
	movq	-4984(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp558:                               # Block address taken
.LBB11_2937:
	leaq	.L.str.469(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -4992(%rbp)
	movq	-4992(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp559:                               # Block address taken
.LBB11_2938:
	leaq	.L.str.470(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5000(%rbp)
	movq	-5000(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp560:                               # Block address taken
.LBB11_2939:
	leaq	.L.str.471(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5008(%rbp)
	movq	-5008(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp561:                               # Block address taken
.LBB11_2940:
	leaq	.L.str.472(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5016(%rbp)
	movq	-5016(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp562:                               # Block address taken
.LBB11_2941:
	leaq	.L.str.473(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5024(%rbp)
	movq	-5024(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp563:                               # Block address taken
.LBB11_2942:
	leaq	.L.str.474(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5032(%rbp)
	movq	-5032(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp564:                               # Block address taken
.LBB11_2943:
	leaq	.L.str.475(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5040(%rbp)
	movq	-5040(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp565:                               # Block address taken
.LBB11_2944:
	leaq	.L.str.476(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5048(%rbp)
	movq	-5048(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp566:                               # Block address taken
.LBB11_2945:
	leaq	.L.str.477(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5056(%rbp)
	movq	-5056(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp567:                               # Block address taken
.LBB11_2946:
	leaq	.L.str.478(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5064(%rbp)
	movq	-5064(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp568:                               # Block address taken
.LBB11_2947:
	leaq	.L.str.479(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5072(%rbp)
	movq	-5072(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp569:                               # Block address taken
.LBB11_2948:
	leaq	.L.str.480(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5080(%rbp)
	movq	-5080(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp570:                               # Block address taken
.LBB11_2949:
	leaq	.L.str.481(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5088(%rbp)
	movq	-5088(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp571:                               # Block address taken
.LBB11_2950:
	leaq	.L.str.482(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5096(%rbp)
	movq	-5096(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp572:                               # Block address taken
.LBB11_2951:
	leaq	.L.str.483(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5104(%rbp)
	movq	-5104(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp573:                               # Block address taken
.LBB11_2952:
	leaq	.L.str.484(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5112(%rbp)
	movq	-5112(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp574:                               # Block address taken
.LBB11_2953:
	leaq	.L.str.485(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5120(%rbp)
	movq	-5120(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp575:                               # Block address taken
.LBB11_2954:
	leaq	.L.str.486(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5128(%rbp)
	movq	-5128(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp576:                               # Block address taken
.LBB11_2955:
	leaq	.L.str.487(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5136(%rbp)
	movq	-5136(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp577:                               # Block address taken
.LBB11_2956:
	leaq	.L.str.488(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5144(%rbp)
	movq	-5144(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp578:                               # Block address taken
.LBB11_2957:
	leaq	.L.str.489(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5152(%rbp)
	movq	-5152(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp579:                               # Block address taken
.LBB11_2958:
	leaq	.L.str.490(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5160(%rbp)
	movq	-5160(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp580:                               # Block address taken
.LBB11_2959:
	leaq	.L.str.491(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5168(%rbp)
	movq	-5168(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp581:                               # Block address taken
.LBB11_2960:
	leaq	.L.str.492(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5176(%rbp)
	movq	-5176(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp582:                               # Block address taken
.LBB11_2961:
	leaq	.L.str.493(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5184(%rbp)
	movq	-5184(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp583:                               # Block address taken
.LBB11_2962:
	leaq	.L.str.494(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5192(%rbp)
	movq	-5192(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp584:                               # Block address taken
.LBB11_2963:
	leaq	.L.str.495(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5200(%rbp)
	movq	-5200(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp585:                               # Block address taken
.LBB11_2964:
	leaq	.L.str.496(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5208(%rbp)
	movq	-5208(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp586:                               # Block address taken
.LBB11_2965:
	leaq	.L.str.497(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5216(%rbp)
	movq	-5216(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp587:                               # Block address taken
.LBB11_2966:
	leaq	.L.str.498(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5224(%rbp)
	movq	-5224(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp588:                               # Block address taken
.LBB11_2967:
	leaq	.L.str.499(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5232(%rbp)
	movq	-5232(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp589:                               # Block address taken
.LBB11_2968:
	leaq	.L.str.500(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5240(%rbp)
	movq	-5240(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp590:                               # Block address taken
.LBB11_2969:
	leaq	.L.str.501(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5248(%rbp)
	movq	-5248(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp591:                               # Block address taken
.LBB11_2970:
	leaq	.L.str.502(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5256(%rbp)
	movq	-5256(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp592:                               # Block address taken
.LBB11_2971:
	leaq	.L.str.503(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5264(%rbp)
	movq	-5264(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp593:                               # Block address taken
.LBB11_2972:
	leaq	.L.str.504(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5272(%rbp)
	movq	-5272(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp594:                               # Block address taken
.LBB11_2973:
	leaq	.L.str.505(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5280(%rbp)
	movq	-5280(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp595:                               # Block address taken
.LBB11_2974:
	leaq	.L.str.506(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5288(%rbp)
	movq	-5288(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp596:                               # Block address taken
.LBB11_2975:
	leaq	.L.str.507(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5296(%rbp)
	movq	-5296(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp597:                               # Block address taken
.LBB11_2976:
	leaq	.L.str.508(%rip), %rdi
	movl	$14, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5304(%rbp)
	movq	-5304(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp598:                               # Block address taken
.LBB11_2977:
	leaq	.L.str.509(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5312(%rbp)
	movq	-5312(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp599:                               # Block address taken
.LBB11_2978:
	leaq	.L.str.510(%rip), %rdi
	movl	$15, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5320(%rbp)
	movq	-5320(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp600:                               # Block address taken
.LBB11_2979:
	leaq	.L.str.511(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5328(%rbp)
	movq	-5328(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp601:                               # Block address taken
.LBB11_2980:
	leaq	.L.str.512(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5336(%rbp)
	movq	-5336(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp602:                               # Block address taken
.LBB11_2981:
	leaq	.L.str.513(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5344(%rbp)
	movq	-5344(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp603:                               # Block address taken
.LBB11_2982:
	leaq	.L.str.514(%rip), %rdi
	movl	$18, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5352(%rbp)
	movq	-5352(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp604:                               # Block address taken
.LBB11_2983:
	leaq	.L.str.515(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5360(%rbp)
	movq	-5360(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp605:                               # Block address taken
.LBB11_2984:
	leaq	.L.str.516(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5368(%rbp)
	movq	-5368(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp606:                               # Block address taken
.LBB11_2985:
	leaq	.L.str.517(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5376(%rbp)
	movq	-5376(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp607:                               # Block address taken
.LBB11_2986:
	leaq	.L.str.518(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5384(%rbp)
	movq	-5384(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp608:                               # Block address taken
.LBB11_2987:
	leaq	.L.str.519(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5392(%rbp)
	movq	-5392(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp609:                               # Block address taken
.LBB11_2988:
	leaq	.L.str.520(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5400(%rbp)
	movq	-5400(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp610:                               # Block address taken
.LBB11_2989:
	leaq	.L.str.521(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5408(%rbp)
	movq	-5408(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp611:                               # Block address taken
.LBB11_2990:
	leaq	.L.str.522(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5416(%rbp)
	movq	-5416(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp612:                               # Block address taken
.LBB11_2991:
	leaq	.L.str.523(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5424(%rbp)
	movq	-5424(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp613:                               # Block address taken
.LBB11_2992:
	leaq	.L.str.524(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5432(%rbp)
	movq	-5432(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp614:                               # Block address taken
.LBB11_2993:
	leaq	.L.str.525(%rip), %rdi
	movl	$2, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5440(%rbp)
	movq	-5440(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp615:                               # Block address taken
.LBB11_2994:
	leaq	.L.str.526(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5448(%rbp)
	movq	-5448(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp616:                               # Block address taken
.LBB11_2995:
	leaq	.L.str.527(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5456(%rbp)
	movq	-5456(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp617:                               # Block address taken
.LBB11_2996:
	leaq	.L.str.528(%rip), %rdi
	movl	$16, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5464(%rbp)
	movq	-5464(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp618:                               # Block address taken
.LBB11_2997:
	leaq	.L.str.529(%rip), %rdi
	movl	$17, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5472(%rbp)
	movq	-5472(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp619:                               # Block address taken
.LBB11_2998:
	leaq	.L.str.530(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5480(%rbp)
	movq	-5480(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp620:                               # Block address taken
.LBB11_2999:
	leaq	.L.str.531(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5488(%rbp)
	movq	-5488(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp621:                               # Block address taken
.LBB11_3000:
	leaq	.L.str.532(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5496(%rbp)
	movq	-5496(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp622:                               # Block address taken
.LBB11_3001:
	leaq	.L.str.533(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5504(%rbp)
	movq	-5504(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp623:                               # Block address taken
.LBB11_3002:
	leaq	.L.str.534(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5512(%rbp)
	movq	-5512(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp624:                               # Block address taken
.LBB11_3003:
	leaq	.L.str.535(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5520(%rbp)
	movq	-5520(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp625:                               # Block address taken
.LBB11_3004:
	leaq	.L.str.536(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5528(%rbp)
	movq	-5528(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp626:                               # Block address taken
.LBB11_3005:
	leaq	.L.str.537(%rip), %rdi
	movl	$2, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5536(%rbp)
	movq	-5536(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp627:                               # Block address taken
.LBB11_3006:
	leaq	.L.str.538(%rip), %rdi
	movl	$2, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5544(%rbp)
	movq	-5544(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp628:                               # Block address taken
.LBB11_3007:
	leaq	.L.str.539(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5552(%rbp)
	movq	-5552(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp629:                               # Block address taken
.LBB11_3008:
	leaq	.L.str.540(%rip), %rdi
	movl	$2, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5560(%rbp)
	movq	-5560(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp630:                               # Block address taken
.LBB11_3009:
	leaq	.L.str.140(%rip), %rdi
	movl	$1, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5568(%rbp)
	movq	-5568(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp631:                               # Block address taken
.LBB11_3010:
	leaq	.L.str.541(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5576(%rbp)
	movq	-5576(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp632:                               # Block address taken
.LBB11_3011:
	leaq	.L.str.542(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5584(%rbp)
	movq	-5584(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp633:                               # Block address taken
.LBB11_3012:
	leaq	.L.str.543(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5592(%rbp)
	movq	-5592(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp634:                               # Block address taken
.LBB11_3013:
	leaq	.L.str.544(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5600(%rbp)
	movq	-5600(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp635:                               # Block address taken
.LBB11_3014:
	leaq	.L.str.545(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5608(%rbp)
	movq	-5608(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp636:                               # Block address taken
.LBB11_3015:
	leaq	.L.str.546(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5616(%rbp)
	movq	-5616(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp637:                               # Block address taken
.LBB11_3016:
	leaq	.L.str.547(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5624(%rbp)
	movq	-5624(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp638:                               # Block address taken
.LBB11_3017:
	leaq	.L.str.548(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5632(%rbp)
	movq	-5632(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp639:                               # Block address taken
.LBB11_3018:
	leaq	.L.str.549(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5640(%rbp)
	movq	-5640(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp640:                               # Block address taken
.LBB11_3019:
	leaq	.L.str.550(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5648(%rbp)
	movq	-5648(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp641:                               # Block address taken
.LBB11_3020:
	leaq	.L.str.551(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5656(%rbp)
	movq	-5656(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp642:                               # Block address taken
.LBB11_3021:
	leaq	.L.str.552(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5664(%rbp)
	movq	-5664(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp643:                               # Block address taken
.LBB11_3022:
	leaq	.L.str.553(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5672(%rbp)
	movq	-5672(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp644:                               # Block address taken
.LBB11_3023:
	leaq	.L.str.554(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5680(%rbp)
	movq	-5680(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp645:                               # Block address taken
.LBB11_3024:
	leaq	.L.str.555(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5688(%rbp)
	movq	-5688(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp646:                               # Block address taken
.LBB11_3025:
	leaq	.L.str.556(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5696(%rbp)
	movq	-5696(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp647:                               # Block address taken
.LBB11_3026:
	leaq	.L.str.557(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5704(%rbp)
	movq	-5704(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp648:                               # Block address taken
.LBB11_3027:
	leaq	.L.str.558(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5712(%rbp)
	movq	-5712(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp649:                               # Block address taken
.LBB11_3028:
	leaq	.L.str.559(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5720(%rbp)
	movq	-5720(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp650:                               # Block address taken
.LBB11_3029:
	leaq	.L.str.560(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5728(%rbp)
	movq	-5728(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp651:                               # Block address taken
.LBB11_3030:
	leaq	.L.str.561(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5736(%rbp)
	movq	-5736(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp652:                               # Block address taken
.LBB11_3031:
	leaq	.L.str.562(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5744(%rbp)
	movq	-5744(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp653:                               # Block address taken
.LBB11_3032:
	leaq	.L.str.563(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5752(%rbp)
	movq	-5752(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp654:                               # Block address taken
.LBB11_3033:
	leaq	.L.str.564(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5760(%rbp)
	movq	-5760(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp655:                               # Block address taken
.LBB11_3034:
	leaq	.L.str.565(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5768(%rbp)
	movq	-5768(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp656:                               # Block address taken
.LBB11_3035:
	leaq	.L.str.566(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5776(%rbp)
	movq	-5776(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp657:                               # Block address taken
.LBB11_3036:
	leaq	.L.str.567(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5784(%rbp)
	movq	-5784(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp658:                               # Block address taken
.LBB11_3037:
	leaq	.L.str.568(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5792(%rbp)
	movq	-5792(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp659:                               # Block address taken
.LBB11_3038:
	leaq	.L.str.569(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5800(%rbp)
	movq	-5800(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp660:                               # Block address taken
.LBB11_3039:
	leaq	.L.str.570(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5808(%rbp)
	movq	-5808(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp661:                               # Block address taken
.LBB11_3040:
	leaq	.L.str.571(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5816(%rbp)
	movq	-5816(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp662:                               # Block address taken
.LBB11_3041:
	leaq	.L.str.572(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5824(%rbp)
	movq	-5824(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp663:                               # Block address taken
.LBB11_3042:
	leaq	.L.str.573(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5832(%rbp)
	movq	-5832(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp664:                               # Block address taken
.LBB11_3043:
	leaq	.L.str.574(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5840(%rbp)
	movq	-5840(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp665:                               # Block address taken
.LBB11_3044:
	leaq	.L.str.575(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5848(%rbp)
	movq	-5848(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp666:                               # Block address taken
.LBB11_3045:
	leaq	.L.str.576(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5856(%rbp)
	movq	-5856(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp667:                               # Block address taken
.LBB11_3046:
	leaq	.L.str.577(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5864(%rbp)
	movq	-5864(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp668:                               # Block address taken
.LBB11_3047:
	leaq	.L.str.578(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5872(%rbp)
	movq	-5872(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp669:                               # Block address taken
.LBB11_3048:
	leaq	.L.str.579(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5880(%rbp)
	movq	-5880(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp670:                               # Block address taken
.LBB11_3049:
	leaq	.L.str.580(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5888(%rbp)
	movq	-5888(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp671:                               # Block address taken
.LBB11_3050:
	leaq	.L.str.581(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5896(%rbp)
	movq	-5896(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp672:                               # Block address taken
.LBB11_3051:
	leaq	.L.str.582(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5904(%rbp)
	movq	-5904(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp673:                               # Block address taken
.LBB11_3052:
	leaq	.L.str.583(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5912(%rbp)
	movq	-5912(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp674:                               # Block address taken
.LBB11_3053:
	leaq	.L.str.584(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5920(%rbp)
	movq	-5920(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp675:                               # Block address taken
.LBB11_3054:
	leaq	.L.str.585(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5928(%rbp)
	movq	-5928(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp676:                               # Block address taken
.LBB11_3055:
	leaq	.L.str.586(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5936(%rbp)
	movq	-5936(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp677:                               # Block address taken
.LBB11_3056:
	leaq	.L.str.587(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5944(%rbp)
	movq	-5944(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp678:                               # Block address taken
.LBB11_3057:
	leaq	.L.str.588(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5952(%rbp)
	movq	-5952(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp679:                               # Block address taken
.LBB11_3058:
	leaq	.L.str.589(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5960(%rbp)
	movq	-5960(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp680:                               # Block address taken
.LBB11_3059:
	leaq	.L.str.590(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5968(%rbp)
	movq	-5968(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp681:                               # Block address taken
.LBB11_3060:
	leaq	.L.str.591(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5976(%rbp)
	movq	-5976(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp682:                               # Block address taken
.LBB11_3061:
	leaq	.L.str.592(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5984(%rbp)
	movq	-5984(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp683:                               # Block address taken
.LBB11_3062:
	leaq	.L.str.593(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -5992(%rbp)
	movq	-5992(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp684:                               # Block address taken
.LBB11_3063:
	leaq	.L.str.594(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6000(%rbp)
	movq	-6000(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp685:                               # Block address taken
.LBB11_3064:
	leaq	.L.str.595(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6008(%rbp)
	movq	-6008(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp686:                               # Block address taken
.LBB11_3065:
	leaq	.L.str.596(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6016(%rbp)
	movq	-6016(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp687:                               # Block address taken
.LBB11_3066:
	leaq	.L.str.597(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6024(%rbp)
	movq	-6024(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp688:                               # Block address taken
.LBB11_3067:
	leaq	.L.str.598(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6032(%rbp)
	movq	-6032(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp689:                               # Block address taken
.LBB11_3068:
	leaq	.L.str.599(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6040(%rbp)
	movq	-6040(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp690:                               # Block address taken
.LBB11_3069:
	leaq	.L.str.600(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6048(%rbp)
	movq	-6048(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp691:                               # Block address taken
.LBB11_3070:
	leaq	.L.str.601(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6056(%rbp)
	movq	-6056(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp692:                               # Block address taken
.LBB11_3071:
	leaq	.L.str.602(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6064(%rbp)
	movq	-6064(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp693:                               # Block address taken
.LBB11_3072:
	leaq	.L.str.603(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6072(%rbp)
	movq	-6072(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp694:                               # Block address taken
.LBB11_3073:
	leaq	.L.str.604(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6080(%rbp)
	movq	-6080(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp695:                               # Block address taken
.LBB11_3074:
	leaq	.L.str.605(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6088(%rbp)
	movq	-6088(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp696:                               # Block address taken
.LBB11_3075:
	leaq	.L.str.606(%rip), %rdi
	movl	$17, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6096(%rbp)
	movq	-6096(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp697:                               # Block address taken
.LBB11_3076:
	leaq	.L.str.607(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6104(%rbp)
	movq	-6104(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp698:                               # Block address taken
.LBB11_3077:
	leaq	.L.str.608(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6112(%rbp)
	movq	-6112(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp699:                               # Block address taken
.LBB11_3078:
	leaq	.L.str.609(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6120(%rbp)
	movq	-6120(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp700:                               # Block address taken
.LBB11_3079:
	leaq	.L.str.610(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6128(%rbp)
	movq	-6128(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp701:                               # Block address taken
.LBB11_3080:
	leaq	.L.str.611(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6136(%rbp)
	movq	-6136(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp702:                               # Block address taken
.LBB11_3081:
	leaq	.L.str.612(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6144(%rbp)
	movq	-6144(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp703:                               # Block address taken
.LBB11_3082:
	leaq	.L.str.613(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6152(%rbp)
	movq	-6152(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp704:                               # Block address taken
.LBB11_3083:
	leaq	.L.str.614(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6160(%rbp)
	movq	-6160(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp705:                               # Block address taken
.LBB11_3084:
	leaq	.L.str.615(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6168(%rbp)
	movq	-6168(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp706:                               # Block address taken
.LBB11_3085:
	leaq	.L.str.616(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6176(%rbp)
	movq	-6176(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp707:                               # Block address taken
.LBB11_3086:
	leaq	.L.str.617(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6184(%rbp)
	movq	-6184(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp708:                               # Block address taken
.LBB11_3087:
	leaq	.L.str.141(%rip), %rdi
	movl	$1, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6192(%rbp)
	movq	-6192(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp709:                               # Block address taken
.LBB11_3088:
	leaq	.L.str.618(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6200(%rbp)
	movq	-6200(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp710:                               # Block address taken
.LBB11_3089:
	leaq	.L.str.619(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6208(%rbp)
	movq	-6208(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp711:                               # Block address taken
.LBB11_3090:
	leaq	.L.str.620(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6216(%rbp)
	movq	-6216(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp712:                               # Block address taken
.LBB11_3091:
	leaq	.L.str.621(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6224(%rbp)
	movq	-6224(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp713:                               # Block address taken
.LBB11_3092:
	leaq	.L.str.622(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6232(%rbp)
	movq	-6232(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp714:                               # Block address taken
.LBB11_3093:
	leaq	.L.str.623(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6240(%rbp)
	movq	-6240(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp715:                               # Block address taken
.LBB11_3094:
	leaq	.L.str.624(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6248(%rbp)
	movq	-6248(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp716:                               # Block address taken
.LBB11_3095:
	leaq	.L.str.625(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6256(%rbp)
	movq	-6256(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp717:                               # Block address taken
.LBB11_3096:
	leaq	.L.str.626(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6264(%rbp)
	movq	-6264(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp718:                               # Block address taken
.LBB11_3097:
	leaq	.L.str.627(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6272(%rbp)
	movq	-6272(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp719:                               # Block address taken
.LBB11_3098:
	leaq	.L.str.628(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6280(%rbp)
	movq	-6280(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp720:                               # Block address taken
.LBB11_3099:
	leaq	.L.str.629(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6288(%rbp)
	movq	-6288(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp721:                               # Block address taken
.LBB11_3100:
	leaq	.L.str.630(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6296(%rbp)
	movq	-6296(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp722:                               # Block address taken
.LBB11_3101:
	leaq	.L.str.631(%rip), %rdi
	movl	$2, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6304(%rbp)
	movq	-6304(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp723:                               # Block address taken
.LBB11_3102:
	leaq	.L.str.632(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6312(%rbp)
	movq	-6312(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp724:                               # Block address taken
.LBB11_3103:
	leaq	.L.str.633(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6320(%rbp)
	movq	-6320(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp725:                               # Block address taken
.LBB11_3104:
	leaq	.L.str.634(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6328(%rbp)
	movq	-6328(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp726:                               # Block address taken
.LBB11_3105:
	leaq	.L.str.635(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6336(%rbp)
	movq	-6336(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp727:                               # Block address taken
.LBB11_3106:
	leaq	.L.str.636(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6344(%rbp)
	movq	-6344(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp728:                               # Block address taken
.LBB11_3107:
	leaq	.L.str.637(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6352(%rbp)
	movq	-6352(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp729:                               # Block address taken
.LBB11_3108:
	leaq	.L.str.638(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6360(%rbp)
	movq	-6360(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp730:                               # Block address taken
.LBB11_3109:
	leaq	.L.str.639(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6368(%rbp)
	movq	-6368(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp731:                               # Block address taken
.LBB11_3110:
	leaq	.L.str.640(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6376(%rbp)
	movq	-6376(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp732:                               # Block address taken
.LBB11_3111:
	leaq	.L.str.641(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6384(%rbp)
	movq	-6384(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp733:                               # Block address taken
.LBB11_3112:
	leaq	.L.str.642(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6392(%rbp)
	movq	-6392(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp734:                               # Block address taken
.LBB11_3113:
	leaq	.L.str.643(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6400(%rbp)
	movq	-6400(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp735:                               # Block address taken
.LBB11_3114:
	leaq	.L.str.644(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6408(%rbp)
	movq	-6408(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp736:                               # Block address taken
.LBB11_3115:
	leaq	.L.str.645(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6416(%rbp)
	movq	-6416(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp737:                               # Block address taken
.LBB11_3116:
	leaq	.L.str.646(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6424(%rbp)
	movq	-6424(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp738:                               # Block address taken
.LBB11_3117:
	leaq	.L.str.647(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6432(%rbp)
	movq	-6432(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp739:                               # Block address taken
.LBB11_3118:
	leaq	.L.str.648(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6440(%rbp)
	movq	-6440(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp740:                               # Block address taken
.LBB11_3119:
	leaq	.L.str.649(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6448(%rbp)
	movq	-6448(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp741:                               # Block address taken
.LBB11_3120:
	leaq	.L.str.650(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6456(%rbp)
	movq	-6456(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp742:                               # Block address taken
.LBB11_3121:
	leaq	.L.str.651(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6464(%rbp)
	movq	-6464(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp743:                               # Block address taken
.LBB11_3122:
	leaq	.L.str.652(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6472(%rbp)
	movq	-6472(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp744:                               # Block address taken
.LBB11_3123:
	leaq	.L.str.653(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6480(%rbp)
	movq	-6480(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp745:                               # Block address taken
.LBB11_3124:
	leaq	.L.str.654(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6488(%rbp)
	movq	-6488(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp746:                               # Block address taken
.LBB11_3125:
	leaq	.L.str.655(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6496(%rbp)
	movq	-6496(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp747:                               # Block address taken
.LBB11_3126:
	leaq	.L.str.656(%rip), %rdi
	movl	$2, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6504(%rbp)
	movq	-6504(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp748:                               # Block address taken
.LBB11_3127:
	leaq	.L.str.657(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6512(%rbp)
	movq	-6512(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp749:                               # Block address taken
.LBB11_3128:
	leaq	.L.str.658(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6520(%rbp)
	movq	-6520(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp750:                               # Block address taken
.LBB11_3129:
	leaq	.L.str.659(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6528(%rbp)
	movq	-6528(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp751:                               # Block address taken
.LBB11_3130:
	leaq	.L.str.660(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6536(%rbp)
	movq	-6536(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp752:                               # Block address taken
.LBB11_3131:
	leaq	.L.str.661(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6544(%rbp)
	movq	-6544(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp753:                               # Block address taken
.LBB11_3132:
	leaq	.L.str.662(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6552(%rbp)
	movq	-6552(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp754:                               # Block address taken
.LBB11_3133:
	leaq	.L.str.663(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6560(%rbp)
	movq	-6560(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp755:                               # Block address taken
.LBB11_3134:
	leaq	.L.str.664(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6568(%rbp)
	movq	-6568(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp756:                               # Block address taken
.LBB11_3135:
	leaq	.L.str.665(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6576(%rbp)
	movq	-6576(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp757:                               # Block address taken
.LBB11_3136:
	leaq	.L.str.666(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6584(%rbp)
	movq	-6584(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp758:                               # Block address taken
.LBB11_3137:
	leaq	.L.str.667(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6592(%rbp)
	movq	-6592(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp759:                               # Block address taken
.LBB11_3138:
	leaq	.L.str.668(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6600(%rbp)
	movq	-6600(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp760:                               # Block address taken
.LBB11_3139:
	leaq	.L.str.669(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6608(%rbp)
	movq	-6608(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp761:                               # Block address taken
.LBB11_3140:
	leaq	.L.str.670(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6616(%rbp)
	movq	-6616(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp762:                               # Block address taken
.LBB11_3141:
	leaq	.L.str.671(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6624(%rbp)
	movq	-6624(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp763:                               # Block address taken
.LBB11_3142:
	leaq	.L.str.672(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6632(%rbp)
	movq	-6632(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp764:                               # Block address taken
.LBB11_3143:
	leaq	.L.str.673(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6640(%rbp)
	movq	-6640(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp765:                               # Block address taken
.LBB11_3144:
	leaq	.L.str.674(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6648(%rbp)
	movq	-6648(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp766:                               # Block address taken
.LBB11_3145:
	leaq	.L.str.675(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6656(%rbp)
	movq	-6656(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp767:                               # Block address taken
.LBB11_3146:
	leaq	.L.str.676(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6664(%rbp)
	movq	-6664(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp768:                               # Block address taken
.LBB11_3147:
	leaq	.L.str.677(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6672(%rbp)
	movq	-6672(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp769:                               # Block address taken
.LBB11_3148:
	leaq	.L.str.678(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6680(%rbp)
	movq	-6680(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp770:                               # Block address taken
.LBB11_3149:
	leaq	.L.str.679(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6688(%rbp)
	movq	-6688(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp771:                               # Block address taken
.LBB11_3150:
	leaq	.L.str.680(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6696(%rbp)
	movq	-6696(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp772:                               # Block address taken
.LBB11_3151:
	leaq	.L.str.681(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6704(%rbp)
	movq	-6704(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp773:                               # Block address taken
.LBB11_3152:
	leaq	.L.str.682(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6712(%rbp)
	movq	-6712(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp774:                               # Block address taken
.LBB11_3153:
	leaq	.L.str.142(%rip), %rdi
	movl	$1, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6720(%rbp)
	movq	-6720(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp775:                               # Block address taken
.LBB11_3154:
	leaq	.L.str.683(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6728(%rbp)
	movq	-6728(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp776:                               # Block address taken
.LBB11_3155:
	leaq	.L.str.684(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6736(%rbp)
	movq	-6736(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp777:                               # Block address taken
.LBB11_3156:
	leaq	.L.str.685(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6744(%rbp)
	movq	-6744(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp778:                               # Block address taken
.LBB11_3157:
	leaq	.L.str.686(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6752(%rbp)
	movq	-6752(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp779:                               # Block address taken
.LBB11_3158:
	leaq	.L.str.687(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6760(%rbp)
	movq	-6760(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp780:                               # Block address taken
.LBB11_3159:
	leaq	.L.str.688(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6768(%rbp)
	movq	-6768(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp781:                               # Block address taken
.LBB11_3160:
	leaq	.L.str.689(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6776(%rbp)
	movq	-6776(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp782:                               # Block address taken
.LBB11_3161:
	leaq	.L.str.690(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6784(%rbp)
	movq	-6784(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp783:                               # Block address taken
.LBB11_3162:
	leaq	.L.str.691(%rip), %rdi
	movl	$14, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6792(%rbp)
	movq	-6792(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp784:                               # Block address taken
.LBB11_3163:
	leaq	.L.str.692(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6800(%rbp)
	movq	-6800(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp785:                               # Block address taken
.LBB11_3164:
	leaq	.L.str.693(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6808(%rbp)
	movq	-6808(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp786:                               # Block address taken
.LBB11_3165:
	leaq	.L.str.694(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6816(%rbp)
	movq	-6816(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp787:                               # Block address taken
.LBB11_3166:
	leaq	.L.str.695(%rip), %rdi
	movl	$15, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6824(%rbp)
	movq	-6824(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp788:                               # Block address taken
.LBB11_3167:
	leaq	.L.str.696(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6832(%rbp)
	movq	-6832(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp789:                               # Block address taken
.LBB11_3168:
	leaq	.L.str.697(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6840(%rbp)
	movq	-6840(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp790:                               # Block address taken
.LBB11_3169:
	leaq	.L.str.698(%rip), %rdi
	movl	$15, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6848(%rbp)
	movq	-6848(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp791:                               # Block address taken
.LBB11_3170:
	leaq	.L.str.699(%rip), %rdi
	movl	$2, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6856(%rbp)
	movq	-6856(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.Ltmp792:                               # Block address taken
.LBB11_3171:
	leaq	.L.str.700(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -6864(%rbp)
	movq	-6864(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3175
.LBB11_3172:                            #   in Loop: Header=BB11_6020 Depth=1
	cmpq	$255, -4816(%rbp)
	jbe	.LBB11_3174
# %bb.3173:
	jmp	.LBB11_3175
.LBB11_3174:                            #   in Loop: Header=BB11_6020 Depth=1
	movq	-4816(%rbp), %rax
	subq	$0, %rax
	leaq	_ZN8MEMORY_T6POKE64Edd.tmp$2482(%rip), %rcx
	movq	(%rcx,%rax,8), %rax
	movq	%rax, -15848(%rbp)      # 8-byte Spill
	jmp	.LBB11_6020
.LBB11_3175:
	jmp	.LBB11_4944
.Ltmp793:                               # Block address taken
.LBB11_3176:                            #   in Loop: Header=BB11_6020 Depth=1
	movq	-2216(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
	movq	%rax, -6872(%rbp)
	jmp	.LBB11_3188
.Ltmp794:                               # Block address taken
.LBB11_3177:
	movq	-2216(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	fb_DoubleToStr@PLT
	xorl	%edx, %edx
	movq	%rax, -6880(%rbp)
	movq	-6880(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3191
.Ltmp795:                               # Block address taken
.LBB11_3178:
	movq	-2216(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	fb_DoubleToStr@PLT
	movq	%rax, -6888(%rbp)
	movq	-6888(%rbp), %rsi
	movl	$1, %ecx
	movl	%ecx, %edi
	movl	%ecx, %edx
	callq	fb_PrintString@PLT
	jmp	.LBB11_3191
.Ltmp796:                               # Block address taken
.LBB11_3179:
	movq	-2216(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%xmm0, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	movq	%rax, %xmm0
	xorps	%xmm1, %xmm1
	addsd	%xmm1, %xmm0
	callq	fb_DoubleToStr@PLT
	xorl	%edx, %edx
	movq	%rax, -6896(%rbp)
	movq	-6896(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3191
.Ltmp797:                               # Block address taken
.LBB11_3180:
	movq	-2216(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%xmm0, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	movq	%rax, %xmm0
	xorps	%xmm1, %xmm1
	addsd	%xmm1, %xmm0
	callq	fb_DoubleToStr@PLT
	movq	%rax, -6904(%rbp)
	movq	-6904(%rbp), %rsi
	movl	$1, %edx
	movl	%edx, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3191
.Ltmp798:                               # Block address taken
.LBB11_3181:
	leaq	.L.str.701(%rip), %rdi
	movl	$2, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	movq	%rax, -6912(%rbp)
	movq	-6912(%rbp), %rsi
	movl	$1, %ecx
	movl	%ecx, %edi
	movl	%ecx, %edx
	callq	fb_PrintString@PLT
	jmp	.LBB11_3191
.Ltmp799:                               # Block address taken
.LBB11_3182:
	movsd	.LCPI11_345(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	mulsd	394896(%rax), %xmm0
	callq	fb_DoubleToStr@PLT
	xorl	%edx, %edx
	movq	%rax, -6920(%rbp)
	movq	-6920(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3191
.Ltmp800:                               # Block address taken
.LBB11_3183:
	movsd	.LCPI11_345(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	mulsd	394896(%rax), %xmm0
	callq	fb_DoubleToStr@PLT
	movq	%rax, -6928(%rbp)
	movq	-6928(%rbp), %rsi
	movl	$1, %ecx
	movl	%ecx, %edi
	movl	%ecx, %edx
	callq	fb_PrintString@PLT
	jmp	.LBB11_3191
.Ltmp801:                               # Block address taken
.LBB11_3184:
	movsd	.LCPI11_344(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	mulsd	394896(%rax), %xmm0
	callq	fb_DoubleToStr@PLT
	xorl	%edx, %edx
	movq	%rax, -6936(%rbp)
	movq	-6936(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3191
.Ltmp802:                               # Block address taken
.LBB11_3185:
	movsd	.LCPI11_344(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	mulsd	394896(%rax), %xmm0
	callq	fb_DoubleToStr@PLT
	movq	%rax, -6944(%rbp)
	movq	-6944(%rbp), %rsi
	movl	$1, %ecx
	movl	%ecx, %edi
	movl	%ecx, %edx
	callq	fb_PrintString@PLT
	jmp	.LBB11_3191
.Ltmp803:                               # Block address taken
.LBB11_3186:
	movsd	.LCPI11_343(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	mulsd	394896(%rax), %xmm0
	callq	fb_DoubleToStr@PLT
	xorl	%edx, %edx
	movq	%rax, -6952(%rbp)
	movq	-6952(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3191
.Ltmp804:                               # Block address taken
.LBB11_3187:
	movsd	.LCPI11_343(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	mulsd	394896(%rax), %xmm0
	callq	fb_DoubleToStr@PLT
	movq	%rax, -6960(%rbp)
	movq	-6960(%rbp), %rsi
	movl	$1, %ecx
	movl	%ecx, %edi
	movl	%ecx, %edx
	callq	fb_PrintString@PLT
	jmp	.LBB11_3191
.LBB11_3188:                            #   in Loop: Header=BB11_6020 Depth=1
	cmpq	$10, -6872(%rbp)
	jbe	.LBB11_3190
# %bb.3189:
	jmp	.LBB11_3191
.LBB11_3190:                            #   in Loop: Header=BB11_6020 Depth=1
	movq	-6872(%rbp), %rax
	subq	$0, %rax
	leaq	_ZN8MEMORY_T6POKE64Edd.tmp$2483(%rip), %rcx
	movq	(%rcx,%rax,8), %rax
	movq	%rax, -15848(%rbp)      # 8-byte Spill
	jmp	.LBB11_6020
.LBB11_3191:
	jmp	.LBB11_4944
.Ltmp805:                               # Block address taken
.LBB11_3192:
	movq	-2216(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rsi
	movl	$1, %edi
	movb	$0, %al
	callq	fb_CHR@PLT
	leaq	MSG$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rax, -6968(%rbp)
	movq	-6968(%rbp), %rax
	movq	%rcx, %rdi
	movq	$-1, %rcx
	movq	%rcx, %rsi
	movq	%rax, %rdx
	callq	fb_StrAssign@PLT
	xorl	%edx, %edx
	movq	%rax, -6976(%rbp)
	movl	$1, %edi
	leaq	MSG$(%rip), %rsi
	callq	fb_PrintString@PLT
	leaq	MSG$(%rip), %rax
	xorl	%r8d, %r8d
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1(%rip), %rdx
	movl	$1, %ecx
	callq	fb_StrAssign@PLT
	jmp	.LBB11_4944
.Ltmp806:                               # Block address taken
.LBB11_3193:
	movq	-2216(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rsi
	movl	$1, %edi
	movb	$0, %al
	callq	fb_CHR@PLT
	leaq	MSG$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rax, -6984(%rbp)
	movq	-6984(%rbp), %rax
	movq	%rcx, %rdi
	movq	$-1, %rcx
	movq	%rcx, %rsi
	movq	%rax, %rdx
	callq	fb_StrAssign@PLT
	movq	%rax, -6992(%rbp)
	movl	$1, %r8d
	movl	%r8d, %edi
	leaq	MSG$(%rip), %rsi
	movl	%r8d, %edx
	callq	fb_PrintString@PLT
	leaq	MSG$(%rip), %rax
	xorl	%r8d, %r8d
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1(%rip), %rdx
	movl	$1, %ecx
	callq	fb_StrAssign@PLT
	jmp	.LBB11_4944
.Ltmp807:                               # Block address taken
.LBB11_3194:
	movq	-2216(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	fb_DoubleToStr@PLT
	leaq	MSG$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rax, -7000(%rbp)
	movq	-7000(%rbp), %rax
	movq	%rcx, %rdi
	movq	$-1, %rcx
	movq	%rcx, %rsi
	movq	%rax, %rdx
	callq	fb_StrAssign@PLT
	xorl	%edx, %edx
	movq	%rax, -7008(%rbp)
	movl	$1, %edi
	leaq	MSG$(%rip), %rsi
	callq	fb_PrintString@PLT
	leaq	MSG$(%rip), %rax
	xorl	%r8d, %r8d
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1(%rip), %rdx
	movl	$1, %ecx
	callq	fb_StrAssign@PLT
	jmp	.LBB11_4944
.Ltmp808:                               # Block address taken
.LBB11_3195:
	movq	-2216(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	fb_DoubleToStr@PLT
	leaq	MSG$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rax, -7016(%rbp)
	movq	-7016(%rbp), %rax
	movq	%rcx, %rdi
	movq	$-1, %rcx
	movq	%rcx, %rsi
	movq	%rax, %rdx
	callq	fb_StrAssign@PLT
	movq	%rax, -7024(%rbp)
	movl	$1, %r8d
	movl	%r8d, %edi
	leaq	MSG$(%rip), %rsi
	movl	%r8d, %edx
	callq	fb_PrintString@PLT
	leaq	MSG$(%rip), %rax
	xorl	%r8d, %r8d
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1(%rip), %rdx
	movl	$1, %ecx
	callq	fb_StrAssign@PLT
	jmp	.LBB11_4944
.Ltmp809:                               # Block address taken
.LBB11_3196:
	movq	-2216(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
	movq	%rax, %rdi
	callq	fb_HEX_l@PLT
	leaq	MSG$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rax, -7032(%rbp)
	movq	-7032(%rbp), %rax
	movq	%rcx, %rdi
	movq	$-1, %rcx
	movq	%rcx, %rsi
	movq	%rax, %rdx
	callq	fb_StrAssign@PLT
	xorl	%edx, %edx
	movq	%rax, -7040(%rbp)
	movl	$1, %edi
	leaq	MSG$(%rip), %rsi
	callq	fb_PrintString@PLT
	leaq	MSG$(%rip), %rax
	xorl	%r8d, %r8d
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1(%rip), %rdx
	movl	$1, %ecx
	callq	fb_StrAssign@PLT
	jmp	.LBB11_4944
.Ltmp810:                               # Block address taken
.LBB11_3197:
	movq	-2216(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
	movq	%rax, %rdi
	callq	fb_HEX_l@PLT
	leaq	MSG$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rax, -7048(%rbp)
	movq	-7048(%rbp), %rax
	movq	%rcx, %rdi
	movq	$-1, %rcx
	movq	%rcx, %rsi
	movq	%rax, %rdx
	callq	fb_StrAssign@PLT
	movq	%rax, -7056(%rbp)
	movl	$1, %r8d
	movl	%r8d, %edi
	leaq	MSG$(%rip), %rsi
	movl	%r8d, %edx
	callq	fb_PrintString@PLT
	leaq	MSG$(%rip), %rax
	xorl	%r8d, %r8d
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1(%rip), %rdx
	movl	$1, %ecx
	callq	fb_StrAssign@PLT
	jmp	.LBB11_4944
.Ltmp811:                               # Block address taken
.LBB11_3198:                            #   in Loop: Header=BB11_6020 Depth=1
	movq	-2216(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
	movq	%rax, -7064(%rbp)
	jmp	.LBB11_3222
.Ltmp812:                               # Block address taken
.LBB11_3199:
	leaq	.L.str.702(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%esi, %esi
	movq	%rax, -7072(%rbp)
	movq	-7072(%rbp), %rdi
	callq	fb_StrLcase2@PLT
	xorl	%esi, %esi
	movq	%rax, -7080(%rbp)
	leaq	-664(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17288(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7080(%rbp), %rax
	movq	-17288(%rbp), %rdi      # 8-byte Reload
	leaq	.L.str.703(%rip), %rsi
	movl	$11, %edx
	movq	%rax, %rcx
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -7088(%rbp)
	leaq	-688(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17296(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7088(%rbp), %rax
	movq	-17296(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.704(%rip), %rcx
	movl	$2, %r8d
	callq	fb_StrConcat@PLT
	movq	%rax, -7096(%rbp)
	movq	-7096(%rbp), %rsi
	movl	$1, %r9d
	movl	%r9d, %edi
	movl	%r9d, %edx
	callq	fb_PrintString@PLT
	jmp	.LBB11_3225
.Ltmp813:                               # Block address taken
.LBB11_3200:
	leaq	.L.str.705(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%esi, %esi
	movq	%rax, -7104(%rbp)
	movq	-7104(%rbp), %rdi
	callq	fb_StrLcase2@PLT
	xorl	%esi, %esi
	movq	%rax, -7112(%rbp)
	leaq	-712(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17304(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7112(%rbp), %rax
	movq	-17304(%rbp), %rdi      # 8-byte Reload
	leaq	.L.str.703(%rip), %rsi
	movl	$11, %edx
	movq	%rax, %rcx
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -7120(%rbp)
	leaq	-736(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17312(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7120(%rbp), %rax
	movq	-17312(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.704(%rip), %rcx
	movl	$2, %r8d
	callq	fb_StrConcat@PLT
	movq	%rax, -7128(%rbp)
	movq	-7128(%rbp), %rsi
	movl	$1, %r9d
	movl	%r9d, %edi
	movl	%r9d, %edx
	callq	fb_PrintString@PLT
	jmp	.LBB11_3225
.Ltmp814:                               # Block address taken
.LBB11_3201:
	leaq	.L.str.706(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%esi, %esi
	movq	%rax, -7136(%rbp)
	movq	-7136(%rbp), %rdi
	callq	fb_StrLcase2@PLT
	xorl	%esi, %esi
	movq	%rax, -7144(%rbp)
	leaq	-760(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17320(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7144(%rbp), %rax
	movq	-17320(%rbp), %rdi      # 8-byte Reload
	leaq	.L.str.703(%rip), %rsi
	movl	$11, %edx
	movq	%rax, %rcx
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -7152(%rbp)
	leaq	-784(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17328(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7152(%rbp), %rax
	movq	-17328(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.704(%rip), %rcx
	movl	$2, %r8d
	callq	fb_StrConcat@PLT
	movq	%rax, -7160(%rbp)
	movq	-7160(%rbp), %rsi
	movl	$1, %r9d
	movl	%r9d, %edi
	movl	%r9d, %edx
	callq	fb_PrintString@PLT
	jmp	.LBB11_3225
.Ltmp815:                               # Block address taken
.LBB11_3202:
	leaq	.L.str.707(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%esi, %esi
	movq	%rax, -7168(%rbp)
	movq	-7168(%rbp), %rdi
	callq	fb_StrLcase2@PLT
	xorl	%esi, %esi
	movq	%rax, -7176(%rbp)
	leaq	-808(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17336(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7176(%rbp), %rax
	movq	-17336(%rbp), %rdi      # 8-byte Reload
	leaq	.L.str.703(%rip), %rsi
	movl	$11, %edx
	movq	%rax, %rcx
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -7184(%rbp)
	leaq	-832(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17344(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7184(%rbp), %rax
	movq	-17344(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.704(%rip), %rcx
	movl	$2, %r8d
	callq	fb_StrConcat@PLT
	movq	%rax, -7192(%rbp)
	movq	-7192(%rbp), %rsi
	movl	$1, %r9d
	movl	%r9d, %edi
	movl	%r9d, %edx
	callq	fb_PrintString@PLT
	jmp	.LBB11_3225
.Ltmp816:                               # Block address taken
.LBB11_3203:
	leaq	.L.str.708(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%esi, %esi
	movq	%rax, -7200(%rbp)
	movq	-7200(%rbp), %rdi
	callq	fb_StrLcase2@PLT
	xorl	%esi, %esi
	movq	%rax, -7208(%rbp)
	leaq	-856(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17352(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7208(%rbp), %rax
	movq	-17352(%rbp), %rdi      # 8-byte Reload
	leaq	.L.str.703(%rip), %rsi
	movl	$11, %edx
	movq	%rax, %rcx
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -7216(%rbp)
	leaq	-880(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17360(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7216(%rbp), %rax
	movq	-17360(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.704(%rip), %rcx
	movl	$2, %r8d
	callq	fb_StrConcat@PLT
	movq	%rax, -7224(%rbp)
	movq	-7224(%rbp), %rsi
	movl	$1, %r9d
	movl	%r9d, %edi
	movl	%r9d, %edx
	callq	fb_PrintString@PLT
	jmp	.LBB11_3225
.Ltmp817:                               # Block address taken
.LBB11_3204:
	leaq	.L.str.709(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%esi, %esi
	movq	%rax, -7232(%rbp)
	movq	-7232(%rbp), %rdi
	callq	fb_StrLcase2@PLT
	xorl	%esi, %esi
	movq	%rax, -7240(%rbp)
	leaq	-904(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17368(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7240(%rbp), %rax
	movq	-17368(%rbp), %rdi      # 8-byte Reload
	leaq	.L.str.703(%rip), %rsi
	movl	$11, %edx
	movq	%rax, %rcx
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -7248(%rbp)
	leaq	-928(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17376(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7248(%rbp), %rax
	movq	-17376(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.704(%rip), %rcx
	movl	$2, %r8d
	callq	fb_StrConcat@PLT
	movq	%rax, -7256(%rbp)
	movq	-7256(%rbp), %rsi
	movl	$1, %r9d
	movl	%r9d, %edi
	movl	%r9d, %edx
	callq	fb_PrintString@PLT
	jmp	.LBB11_3225
.Ltmp818:                               # Block address taken
.LBB11_3205:
	leaq	.L.str.710(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%esi, %esi
	movq	%rax, -7264(%rbp)
	movq	-7264(%rbp), %rdi
	callq	fb_StrLcase2@PLT
	xorl	%esi, %esi
	movq	%rax, -7272(%rbp)
	leaq	-952(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17384(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7272(%rbp), %rax
	movq	-17384(%rbp), %rdi      # 8-byte Reload
	leaq	.L.str.703(%rip), %rsi
	movl	$11, %edx
	movq	%rax, %rcx
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -7280(%rbp)
	leaq	-976(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17392(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7280(%rbp), %rax
	movq	-17392(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.704(%rip), %rcx
	movl	$2, %r8d
	callq	fb_StrConcat@PLT
	movq	%rax, -7288(%rbp)
	movq	-7288(%rbp), %rsi
	movl	$1, %r9d
	movl	%r9d, %edi
	movl	%r9d, %edx
	callq	fb_PrintString@PLT
	jmp	.LBB11_3225
.Ltmp819:                               # Block address taken
.LBB11_3206:
	leaq	.L.str.711(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%esi, %esi
	movq	%rax, -7296(%rbp)
	movq	-7296(%rbp), %rdi
	callq	fb_StrLcase2@PLT
	xorl	%esi, %esi
	movq	%rax, -7304(%rbp)
	leaq	-1000(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17400(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7304(%rbp), %rax
	movq	-17400(%rbp), %rdi      # 8-byte Reload
	leaq	.L.str.703(%rip), %rsi
	movl	$11, %edx
	movq	%rax, %rcx
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -7312(%rbp)
	leaq	-1024(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17408(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7312(%rbp), %rax
	movq	-17408(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.704(%rip), %rcx
	movl	$2, %r8d
	callq	fb_StrConcat@PLT
	movq	%rax, -7320(%rbp)
	movq	-7320(%rbp), %rsi
	movl	$1, %r9d
	movl	%r9d, %edi
	movl	%r9d, %edx
	callq	fb_PrintString@PLT
	jmp	.LBB11_3225
.Ltmp820:                               # Block address taken
.LBB11_3207:
	leaq	.L.str.712(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%esi, %esi
	movq	%rax, -7328(%rbp)
	movq	-7328(%rbp), %rdi
	callq	fb_StrLcase2@PLT
	xorl	%esi, %esi
	movq	%rax, -7336(%rbp)
	leaq	-1048(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17416(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7336(%rbp), %rax
	movq	-17416(%rbp), %rdi      # 8-byte Reload
	leaq	.L.str.703(%rip), %rsi
	movl	$11, %edx
	movq	%rax, %rcx
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -7344(%rbp)
	leaq	-1072(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17424(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7344(%rbp), %rax
	movq	-17424(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.704(%rip), %rcx
	movl	$2, %r8d
	callq	fb_StrConcat@PLT
	movq	%rax, -7352(%rbp)
	movq	-7352(%rbp), %rsi
	movl	$1, %r9d
	movl	%r9d, %edi
	movl	%r9d, %edx
	callq	fb_PrintString@PLT
	jmp	.LBB11_3225
.Ltmp821:                               # Block address taken
.LBB11_3208:
	leaq	.L.str.713(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%esi, %esi
	movq	%rax, -7360(%rbp)
	movq	-7360(%rbp), %rdi
	callq	fb_StrLcase2@PLT
	xorl	%esi, %esi
	movq	%rax, -7368(%rbp)
	leaq	-1096(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17432(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7368(%rbp), %rax
	movq	-17432(%rbp), %rdi      # 8-byte Reload
	leaq	.L.str.703(%rip), %rsi
	movl	$11, %edx
	movq	%rax, %rcx
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -7376(%rbp)
	leaq	-1120(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17440(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7376(%rbp), %rax
	movq	-17440(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.704(%rip), %rcx
	movl	$2, %r8d
	callq	fb_StrConcat@PLT
	movq	%rax, -7384(%rbp)
	movq	-7384(%rbp), %rsi
	movl	$1, %r9d
	movl	%r9d, %edi
	movl	%r9d, %edx
	callq	fb_PrintString@PLT
	jmp	.LBB11_3225
.Ltmp822:                               # Block address taken
.LBB11_3209:
	leaq	.L.str.714(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%esi, %esi
	movq	%rax, -7392(%rbp)
	movq	-7392(%rbp), %rdi
	callq	fb_StrLcase2@PLT
	xorl	%esi, %esi
	movq	%rax, -7400(%rbp)
	leaq	-1144(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17448(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7400(%rbp), %rax
	movq	-17448(%rbp), %rdi      # 8-byte Reload
	leaq	.L.str.703(%rip), %rsi
	movl	$11, %edx
	movq	%rax, %rcx
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -7408(%rbp)
	leaq	-1168(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17456(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7408(%rbp), %rax
	movq	-17456(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.704(%rip), %rcx
	movl	$2, %r8d
	callq	fb_StrConcat@PLT
	movq	%rax, -7416(%rbp)
	movq	-7416(%rbp), %rsi
	movl	$1, %r9d
	movl	%r9d, %edi
	movl	%r9d, %edx
	callq	fb_PrintString@PLT
	jmp	.LBB11_3225
.Ltmp823:                               # Block address taken
.LBB11_3210:
	leaq	.L.str.715(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%esi, %esi
	movq	%rax, -7424(%rbp)
	movq	-7424(%rbp), %rdi
	callq	fb_StrLcase2@PLT
	xorl	%esi, %esi
	movq	%rax, -7432(%rbp)
	leaq	-1192(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17464(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7432(%rbp), %rax
	movq	-17464(%rbp), %rdi      # 8-byte Reload
	leaq	.L.str.703(%rip), %rsi
	movl	$11, %edx
	movq	%rax, %rcx
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -7440(%rbp)
	leaq	-1216(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17472(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7440(%rbp), %rax
	movq	-17472(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.704(%rip), %rcx
	movl	$2, %r8d
	callq	fb_StrConcat@PLT
	movq	%rax, -7448(%rbp)
	movq	-7448(%rbp), %rsi
	movl	$1, %r9d
	movl	%r9d, %edi
	movl	%r9d, %edx
	callq	fb_PrintString@PLT
	jmp	.LBB11_3225
.Ltmp824:                               # Block address taken
.LBB11_3211:
	leaq	.L.str.716(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%esi, %esi
	movq	%rax, -7456(%rbp)
	movq	-7456(%rbp), %rdi
	callq	fb_StrLcase2@PLT
	xorl	%esi, %esi
	movq	%rax, -7464(%rbp)
	leaq	-1240(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17480(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7464(%rbp), %rax
	movq	-17480(%rbp), %rdi      # 8-byte Reload
	leaq	.L.str.703(%rip), %rsi
	movl	$11, %edx
	movq	%rax, %rcx
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -7472(%rbp)
	leaq	-1264(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17488(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7472(%rbp), %rax
	movq	-17488(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.704(%rip), %rcx
	movl	$2, %r8d
	callq	fb_StrConcat@PLT
	movq	%rax, -7480(%rbp)
	movq	-7480(%rbp), %rsi
	movl	$1, %r9d
	movl	%r9d, %edi
	movl	%r9d, %edx
	callq	fb_PrintString@PLT
	jmp	.LBB11_3225
.Ltmp825:                               # Block address taken
.LBB11_3212:
	leaq	.L.str.717(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%esi, %esi
	movq	%rax, -7488(%rbp)
	movq	-7488(%rbp), %rdi
	callq	fb_StrLcase2@PLT
	xorl	%esi, %esi
	movq	%rax, -7496(%rbp)
	leaq	-1288(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17496(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7496(%rbp), %rax
	movq	-17496(%rbp), %rdi      # 8-byte Reload
	leaq	.L.str.703(%rip), %rsi
	movl	$11, %edx
	movq	%rax, %rcx
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -7504(%rbp)
	leaq	-1312(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17504(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7504(%rbp), %rax
	movq	-17504(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.704(%rip), %rcx
	movl	$2, %r8d
	callq	fb_StrConcat@PLT
	movq	%rax, -7512(%rbp)
	movq	-7512(%rbp), %rsi
	movl	$1, %r9d
	movl	%r9d, %edi
	movl	%r9d, %edx
	callq	fb_PrintString@PLT
	jmp	.LBB11_3225
.Ltmp826:                               # Block address taken
.LBB11_3213:
	leaq	.L.str.718(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%esi, %esi
	movq	%rax, -7520(%rbp)
	movq	-7520(%rbp), %rdi
	callq	fb_StrLcase2@PLT
	xorl	%esi, %esi
	movq	%rax, -7528(%rbp)
	leaq	-1336(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17512(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7528(%rbp), %rax
	movq	-17512(%rbp), %rdi      # 8-byte Reload
	leaq	.L.str.703(%rip), %rsi
	movl	$11, %edx
	movq	%rax, %rcx
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -7536(%rbp)
	leaq	-1360(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17520(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7536(%rbp), %rax
	movq	-17520(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.704(%rip), %rcx
	movl	$2, %r8d
	callq	fb_StrConcat@PLT
	movq	%rax, -7544(%rbp)
	movq	-7544(%rbp), %rsi
	movl	$1, %r9d
	movl	%r9d, %edi
	movl	%r9d, %edx
	callq	fb_PrintString@PLT
	jmp	.LBB11_3225
.Ltmp827:                               # Block address taken
.LBB11_3214:
	leaq	.L.str.719(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%esi, %esi
	movq	%rax, -7552(%rbp)
	movq	-7552(%rbp), %rdi
	callq	fb_StrLcase2@PLT
	xorl	%esi, %esi
	movq	%rax, -7560(%rbp)
	leaq	-1384(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17528(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7560(%rbp), %rax
	movq	-17528(%rbp), %rdi      # 8-byte Reload
	leaq	.L.str.703(%rip), %rsi
	movl	$11, %edx
	movq	%rax, %rcx
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -7568(%rbp)
	leaq	-1408(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17536(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7568(%rbp), %rax
	movq	-17536(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.704(%rip), %rcx
	movl	$2, %r8d
	callq	fb_StrConcat@PLT
	movq	%rax, -7576(%rbp)
	movq	-7576(%rbp), %rsi
	movl	$1, %r9d
	movl	%r9d, %edi
	movl	%r9d, %edx
	callq	fb_PrintString@PLT
	jmp	.LBB11_3225
.Ltmp828:                               # Block address taken
.LBB11_3215:
	leaq	.L.str.720(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%esi, %esi
	movq	%rax, -7584(%rbp)
	movq	-7584(%rbp), %rdi
	callq	fb_StrLcase2@PLT
	xorl	%esi, %esi
	movq	%rax, -7592(%rbp)
	leaq	-1432(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17544(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7592(%rbp), %rax
	movq	-17544(%rbp), %rdi      # 8-byte Reload
	leaq	.L.str.703(%rip), %rsi
	movl	$11, %edx
	movq	%rax, %rcx
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -7600(%rbp)
	leaq	-1456(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17552(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7600(%rbp), %rax
	movq	-17552(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.704(%rip), %rcx
	movl	$2, %r8d
	callq	fb_StrConcat@PLT
	movq	%rax, -7608(%rbp)
	movq	-7608(%rbp), %rsi
	movl	$1, %r9d
	movl	%r9d, %edi
	movl	%r9d, %edx
	callq	fb_PrintString@PLT
	jmp	.LBB11_3225
.Ltmp829:                               # Block address taken
.LBB11_3216:
	leaq	.L.str.721(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%esi, %esi
	movq	%rax, -7616(%rbp)
	movq	-7616(%rbp), %rdi
	callq	fb_StrLcase2@PLT
	xorl	%esi, %esi
	movq	%rax, -7624(%rbp)
	leaq	-1480(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17560(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7624(%rbp), %rax
	movq	-17560(%rbp), %rdi      # 8-byte Reload
	leaq	.L.str.703(%rip), %rsi
	movl	$11, %edx
	movq	%rax, %rcx
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -7632(%rbp)
	leaq	-1504(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17568(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7632(%rbp), %rax
	movq	-17568(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.704(%rip), %rcx
	movl	$2, %r8d
	callq	fb_StrConcat@PLT
	movq	%rax, -7640(%rbp)
	movq	-7640(%rbp), %rsi
	movl	$1, %r9d
	movl	%r9d, %edi
	movl	%r9d, %edx
	callq	fb_PrintString@PLT
	jmp	.LBB11_3225
.Ltmp830:                               # Block address taken
.LBB11_3217:
	leaq	.L.str.722(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%esi, %esi
	movq	%rax, -7648(%rbp)
	movq	-7648(%rbp), %rdi
	callq	fb_StrLcase2@PLT
	xorl	%esi, %esi
	movq	%rax, -7656(%rbp)
	leaq	-1528(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17576(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7656(%rbp), %rax
	movq	-17576(%rbp), %rdi      # 8-byte Reload
	leaq	.L.str.703(%rip), %rsi
	movl	$11, %edx
	movq	%rax, %rcx
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -7664(%rbp)
	leaq	-1552(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17584(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7664(%rbp), %rax
	movq	-17584(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.704(%rip), %rcx
	movl	$2, %r8d
	callq	fb_StrConcat@PLT
	movq	%rax, -7672(%rbp)
	movq	-7672(%rbp), %rsi
	movl	$1, %r9d
	movl	%r9d, %edi
	movl	%r9d, %edx
	callq	fb_PrintString@PLT
	jmp	.LBB11_3225
.Ltmp831:                               # Block address taken
.LBB11_3218:
	leaq	.L.str.723(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%esi, %esi
	movq	%rax, -7680(%rbp)
	movq	-7680(%rbp), %rdi
	callq	fb_StrLcase2@PLT
	xorl	%esi, %esi
	movq	%rax, -7688(%rbp)
	leaq	-1576(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17592(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7688(%rbp), %rax
	movq	-17592(%rbp), %rdi      # 8-byte Reload
	leaq	.L.str.703(%rip), %rsi
	movl	$11, %edx
	movq	%rax, %rcx
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -7696(%rbp)
	leaq	-1600(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17600(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7696(%rbp), %rax
	movq	-17600(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.704(%rip), %rcx
	movl	$2, %r8d
	callq	fb_StrConcat@PLT
	movq	%rax, -7704(%rbp)
	movq	-7704(%rbp), %rsi
	movl	$1, %r9d
	movl	%r9d, %edi
	movl	%r9d, %edx
	callq	fb_PrintString@PLT
	jmp	.LBB11_3225
.Ltmp832:                               # Block address taken
.LBB11_3219:
	leaq	.L.str.724(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%esi, %esi
	movq	%rax, -7712(%rbp)
	movq	-7712(%rbp), %rdi
	callq	fb_StrLcase2@PLT
	xorl	%esi, %esi
	movq	%rax, -7720(%rbp)
	leaq	-1624(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17608(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7720(%rbp), %rax
	movq	-17608(%rbp), %rdi      # 8-byte Reload
	leaq	.L.str.703(%rip), %rsi
	movl	$11, %edx
	movq	%rax, %rcx
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -7728(%rbp)
	leaq	-1648(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17616(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7728(%rbp), %rax
	movq	-17616(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.704(%rip), %rcx
	movl	$2, %r8d
	callq	fb_StrConcat@PLT
	movq	%rax, -7736(%rbp)
	movq	-7736(%rbp), %rsi
	movl	$1, %r9d
	movl	%r9d, %edi
	movl	%r9d, %edx
	callq	fb_PrintString@PLT
	jmp	.LBB11_3225
.Ltmp833:                               # Block address taken
.LBB11_3220:
	leaq	.L.str.725(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%esi, %esi
	movq	%rax, -7744(%rbp)
	movq	-7744(%rbp), %rdi
	callq	fb_StrLcase2@PLT
	xorl	%esi, %esi
	movq	%rax, -7752(%rbp)
	leaq	-1672(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17624(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7752(%rbp), %rax
	movq	-17624(%rbp), %rdi      # 8-byte Reload
	leaq	.L.str.703(%rip), %rsi
	movl	$11, %edx
	movq	%rax, %rcx
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -7760(%rbp)
	leaq	-1696(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17632(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7760(%rbp), %rax
	movq	-17632(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.704(%rip), %rcx
	movl	$2, %r8d
	callq	fb_StrConcat@PLT
	movq	%rax, -7768(%rbp)
	movq	-7768(%rbp), %rsi
	movl	$1, %r9d
	movl	%r9d, %edi
	movl	%r9d, %edx
	callq	fb_PrintString@PLT
	jmp	.LBB11_3225
.Ltmp834:                               # Block address taken
.LBB11_3221:
	leaq	.L.str.726(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%esi, %esi
	movq	%rax, -7776(%rbp)
	movq	-7776(%rbp), %rdi
	callq	fb_StrLcase2@PLT
	xorl	%esi, %esi
	movq	%rax, -7784(%rbp)
	leaq	-1720(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17640(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7784(%rbp), %rax
	movq	-17640(%rbp), %rdi      # 8-byte Reload
	leaq	.L.str.703(%rip), %rsi
	movl	$11, %edx
	movq	%rax, %rcx
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -7792(%rbp)
	leaq	-1744(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -17648(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-7792(%rbp), %rax
	movq	-17648(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.704(%rip), %rcx
	movl	$2, %r8d
	callq	fb_StrConcat@PLT
	movq	%rax, -7800(%rbp)
	movq	-7800(%rbp), %rsi
	movl	$1, %r9d
	movl	%r9d, %edi
	movl	%r9d, %edx
	callq	fb_PrintString@PLT
	jmp	.LBB11_3225
.LBB11_3222:                            #   in Loop: Header=BB11_6020 Depth=1
	cmpq	$22, -7064(%rbp)
	jbe	.LBB11_3224
# %bb.3223:
	jmp	.LBB11_3225
.LBB11_3224:                            #   in Loop: Header=BB11_6020 Depth=1
	movq	-7064(%rbp), %rax
	subq	$0, %rax
	leaq	_ZN8MEMORY_T6POKE64Edd.tmp$2484(%rip), %rcx
	movq	(%rcx,%rax,8), %rax
	movq	%rax, -15848(%rbp)      # 8-byte Spill
	jmp	.LBB11_6020
.LBB11_3225:
	jmp	.LBB11_4944
.Ltmp835:                               # Block address taken
.LBB11_3226:                            #   in Loop: Header=BB11_6020 Depth=1
	movq	-2216(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
	movq	%rax, -7808(%rbp)
	jmp	.LBB11_3483
.Ltmp836:                               # Block address taken
.LBB11_3227:
	leaq	.L.str.727(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -7816(%rbp)
	movq	-7816(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp837:                               # Block address taken
.LBB11_3228:
	leaq	.L.str.728(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -7824(%rbp)
	movq	-7824(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp838:                               # Block address taken
.LBB11_3229:
	leaq	.L.str.729(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -7832(%rbp)
	movq	-7832(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp839:                               # Block address taken
.LBB11_3230:
	leaq	.L.str.730(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -7840(%rbp)
	movq	-7840(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp840:                               # Block address taken
.LBB11_3231:
	leaq	.L.str.731(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -7848(%rbp)
	movq	-7848(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp841:                               # Block address taken
.LBB11_3232:
	leaq	.L.str.732(%rip), %rdi
	movl	$14, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -7856(%rbp)
	movq	-7856(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp842:                               # Block address taken
.LBB11_3233:
	leaq	.L.str.733(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -7864(%rbp)
	movq	-7864(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp843:                               # Block address taken
.LBB11_3234:
	leaq	.L.str.734(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -7872(%rbp)
	movq	-7872(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp844:                               # Block address taken
.LBB11_3235:
	leaq	.L.str.735(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -7880(%rbp)
	movq	-7880(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp845:                               # Block address taken
.LBB11_3236:
	leaq	.L.str.736(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -7888(%rbp)
	movq	-7888(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp846:                               # Block address taken
.LBB11_3237:
	leaq	.L.str.737(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -7896(%rbp)
	movq	-7896(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp847:                               # Block address taken
.LBB11_3238:
	leaq	.L.str.143(%rip), %rdi
	movl	$1, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -7904(%rbp)
	movq	-7904(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp848:                               # Block address taken
.LBB11_3239:
	leaq	.L.str.738(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -7912(%rbp)
	movq	-7912(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp849:                               # Block address taken
.LBB11_3240:
	leaq	.L.str.739(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -7920(%rbp)
	movq	-7920(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp850:                               # Block address taken
.LBB11_3241:
	leaq	.L.str.740(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -7928(%rbp)
	movq	-7928(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp851:                               # Block address taken
.LBB11_3242:
	leaq	.L.str.741(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -7936(%rbp)
	movq	-7936(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp852:                               # Block address taken
.LBB11_3243:
	leaq	.L.str.742(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -7944(%rbp)
	movq	-7944(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp853:                               # Block address taken
.LBB11_3244:
	leaq	.L.str.743(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -7952(%rbp)
	movq	-7952(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp854:                               # Block address taken
.LBB11_3245:
	leaq	.L.str.744(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -7960(%rbp)
	movq	-7960(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp855:                               # Block address taken
.LBB11_3246:
	leaq	.L.str.745(%rip), %rdi
	movl	$17, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -7968(%rbp)
	movq	-7968(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp856:                               # Block address taken
.LBB11_3247:
	leaq	.L.str.746(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -7976(%rbp)
	movq	-7976(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp857:                               # Block address taken
.LBB11_3248:
	leaq	.L.str.747(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -7984(%rbp)
	movq	-7984(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp858:                               # Block address taken
.LBB11_3249:
	leaq	.L.str.748(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -7992(%rbp)
	movq	-7992(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp859:                               # Block address taken
.LBB11_3250:
	leaq	.L.str.749(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8000(%rbp)
	movq	-8000(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp860:                               # Block address taken
.LBB11_3251:
	leaq	.L.str.750(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8008(%rbp)
	movq	-8008(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp861:                               # Block address taken
.LBB11_3252:
	leaq	.L.str.751(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8016(%rbp)
	movq	-8016(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp862:                               # Block address taken
.LBB11_3253:
	leaq	.L.str.752(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8024(%rbp)
	movq	-8024(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp863:                               # Block address taken
.LBB11_3254:
	leaq	.L.str.753(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8032(%rbp)
	movq	-8032(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp864:                               # Block address taken
.LBB11_3255:
	leaq	.L.str.754(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8040(%rbp)
	movq	-8040(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp865:                               # Block address taken
.LBB11_3256:
	leaq	.L.str.755(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8048(%rbp)
	movq	-8048(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp866:                               # Block address taken
.LBB11_3257:
	leaq	.L.str.756(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8056(%rbp)
	movq	-8056(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp867:                               # Block address taken
.LBB11_3258:
	leaq	.L.str.757(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8064(%rbp)
	movq	-8064(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp868:                               # Block address taken
.LBB11_3259:
	leaq	.L.str.758(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8072(%rbp)
	movq	-8072(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp869:                               # Block address taken
.LBB11_3260:
	leaq	.L.str.759(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8080(%rbp)
	movq	-8080(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp870:                               # Block address taken
.LBB11_3261:
	leaq	.L.str.760(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8088(%rbp)
	movq	-8088(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp871:                               # Block address taken
.LBB11_3262:
	leaq	.L.str.761(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8096(%rbp)
	movq	-8096(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp872:                               # Block address taken
.LBB11_3263:
	leaq	.L.str.762(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8104(%rbp)
	movq	-8104(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp873:                               # Block address taken
.LBB11_3264:
	leaq	.L.str.763(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8112(%rbp)
	movq	-8112(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp874:                               # Block address taken
.LBB11_3265:
	leaq	.L.str.764(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8120(%rbp)
	movq	-8120(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp875:                               # Block address taken
.LBB11_3266:
	leaq	.L.str.144(%rip), %rdi
	movl	$1, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8128(%rbp)
	movq	-8128(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp876:                               # Block address taken
.LBB11_3267:
	leaq	.L.str.179(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8136(%rbp)
	movq	-8136(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp877:                               # Block address taken
.LBB11_3268:
	leaq	.L.str.765(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8144(%rbp)
	movq	-8144(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp878:                               # Block address taken
.LBB11_3269:
	leaq	.L.str.766(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8152(%rbp)
	movq	-8152(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp879:                               # Block address taken
.LBB11_3270:
	leaq	.L.str.767(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8160(%rbp)
	movq	-8160(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp880:                               # Block address taken
.LBB11_3271:
	leaq	.L.str.768(%rip), %rdi
	movl	$18, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8168(%rbp)
	movq	-8168(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp881:                               # Block address taken
.LBB11_3272:
	leaq	.L.str.769(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8176(%rbp)
	movq	-8176(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp882:                               # Block address taken
.LBB11_3273:
	leaq	.L.str.770(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8184(%rbp)
	movq	-8184(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp883:                               # Block address taken
.LBB11_3274:
	leaq	.L.str.771(%rip), %rdi
	movl	$2, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8192(%rbp)
	movq	-8192(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp884:                               # Block address taken
.LBB11_3275:
	leaq	.L.str.772(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8200(%rbp)
	movq	-8200(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp885:                               # Block address taken
.LBB11_3276:
	leaq	.L.str.773(%rip), %rdi
	movl	$14, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8208(%rbp)
	movq	-8208(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp886:                               # Block address taken
.LBB11_3277:
	leaq	.L.str.774(%rip), %rdi
	movl	$2, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8216(%rbp)
	movq	-8216(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp887:                               # Block address taken
.LBB11_3278:
	leaq	.L.str.775(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8224(%rbp)
	movq	-8224(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp888:                               # Block address taken
.LBB11_3279:
	leaq	.L.str.776(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8232(%rbp)
	movq	-8232(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp889:                               # Block address taken
.LBB11_3280:
	leaq	.L.str.777(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8240(%rbp)
	movq	-8240(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp890:                               # Block address taken
.LBB11_3281:
	leaq	.L.str.778(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8248(%rbp)
	movq	-8248(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp891:                               # Block address taken
.LBB11_3282:
	leaq	.L.str.779(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8256(%rbp)
	movq	-8256(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp892:                               # Block address taken
.LBB11_3283:
	leaq	.L.str.780(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8264(%rbp)
	movq	-8264(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp893:                               # Block address taken
.LBB11_3284:
	leaq	.L.str.180(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8272(%rbp)
	movq	-8272(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp894:                               # Block address taken
.LBB11_3285:
	leaq	.L.str.781(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8280(%rbp)
	movq	-8280(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp895:                               # Block address taken
.LBB11_3286:
	leaq	.L.str.782(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8288(%rbp)
	movq	-8288(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp896:                               # Block address taken
.LBB11_3287:
	leaq	.L.str.783(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8296(%rbp)
	movq	-8296(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp897:                               # Block address taken
.LBB11_3288:
	leaq	.L.str.784(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8304(%rbp)
	movq	-8304(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp898:                               # Block address taken
.LBB11_3289:
	leaq	.L.str.785(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8312(%rbp)
	movq	-8312(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp899:                               # Block address taken
.LBB11_3290:
	leaq	.L.str.786(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8320(%rbp)
	movq	-8320(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp900:                               # Block address taken
.LBB11_3291:
	leaq	.L.str.787(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8328(%rbp)
	movq	-8328(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp901:                               # Block address taken
.LBB11_3292:
	leaq	.L.str.788(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8336(%rbp)
	movq	-8336(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp902:                               # Block address taken
.LBB11_3293:
	leaq	.L.str.789(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8344(%rbp)
	movq	-8344(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp903:                               # Block address taken
.LBB11_3294:
	leaq	.L.str.790(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8352(%rbp)
	movq	-8352(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp904:                               # Block address taken
.LBB11_3295:
	leaq	.L.str.791(%rip), %rdi
	movl	$18, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8360(%rbp)
	movq	-8360(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp905:                               # Block address taken
.LBB11_3296:
	leaq	.L.str.792(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8368(%rbp)
	movq	-8368(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp906:                               # Block address taken
.LBB11_3297:
	leaq	.L.str.793(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8376(%rbp)
	movq	-8376(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp907:                               # Block address taken
.LBB11_3298:
	leaq	.L.str.794(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8384(%rbp)
	movq	-8384(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp908:                               # Block address taken
.LBB11_3299:
	leaq	.L.str.795(%rip), %rdi
	movl	$18, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8392(%rbp)
	movq	-8392(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp909:                               # Block address taken
.LBB11_3300:
	leaq	.L.str.796(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8400(%rbp)
	movq	-8400(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp910:                               # Block address taken
.LBB11_3301:
	leaq	.L.str.797(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8408(%rbp)
	movq	-8408(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp911:                               # Block address taken
.LBB11_3302:
	leaq	.L.str.798(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8416(%rbp)
	movq	-8416(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp912:                               # Block address taken
.LBB11_3303:
	leaq	.L.str.799(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8424(%rbp)
	movq	-8424(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp913:                               # Block address taken
.LBB11_3304:
	leaq	.L.str.800(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8432(%rbp)
	movq	-8432(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp914:                               # Block address taken
.LBB11_3305:
	leaq	.L.str.801(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8440(%rbp)
	movq	-8440(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp915:                               # Block address taken
.LBB11_3306:
	leaq	.L.str.802(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8448(%rbp)
	movq	-8448(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp916:                               # Block address taken
.LBB11_3307:
	leaq	.L.str.803(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8456(%rbp)
	movq	-8456(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp917:                               # Block address taken
.LBB11_3308:
	leaq	.L.str.804(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8464(%rbp)
	movq	-8464(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp918:                               # Block address taken
.LBB11_3309:
	leaq	.L.str.805(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8472(%rbp)
	movq	-8472(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp919:                               # Block address taken
.LBB11_3310:
	leaq	.L.str.806(%rip), %rdi
	movl	$14, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8480(%rbp)
	movq	-8480(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp920:                               # Block address taken
.LBB11_3311:
	leaq	.L.str.807(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8488(%rbp)
	movq	-8488(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp921:                               # Block address taken
.LBB11_3312:
	leaq	.L.str.808(%rip), %rdi
	movl	$2, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8496(%rbp)
	movq	-8496(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp922:                               # Block address taken
.LBB11_3313:
	leaq	.L.str.809(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8504(%rbp)
	movq	-8504(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp923:                               # Block address taken
.LBB11_3314:
	leaq	.L.str.810(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8512(%rbp)
	movq	-8512(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp924:                               # Block address taken
.LBB11_3315:
	leaq	.L.str.811(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8520(%rbp)
	movq	-8520(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp925:                               # Block address taken
.LBB11_3316:
	leaq	.L.str.812(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8528(%rbp)
	movq	-8528(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp926:                               # Block address taken
.LBB11_3317:
	leaq	.L.str.813(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8536(%rbp)
	movq	-8536(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp927:                               # Block address taken
.LBB11_3318:
	leaq	.L.str.814(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8544(%rbp)
	movq	-8544(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp928:                               # Block address taken
.LBB11_3319:
	leaq	.L.str.815(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8552(%rbp)
	movq	-8552(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp929:                               # Block address taken
.LBB11_3320:
	leaq	.L.str.816(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8560(%rbp)
	movq	-8560(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp930:                               # Block address taken
.LBB11_3321:
	leaq	.L.str.817(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8568(%rbp)
	movq	-8568(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp931:                               # Block address taken
.LBB11_3322:
	leaq	.L.str.818(%rip), %rdi
	movl	$14, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8576(%rbp)
	movq	-8576(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp932:                               # Block address taken
.LBB11_3323:
	leaq	.L.str.819(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8584(%rbp)
	movq	-8584(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp933:                               # Block address taken
.LBB11_3324:
	leaq	.L.str.820(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8592(%rbp)
	movq	-8592(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp934:                               # Block address taken
.LBB11_3325:
	leaq	.L.str.821(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8600(%rbp)
	movq	-8600(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp935:                               # Block address taken
.LBB11_3326:
	leaq	.L.str.822(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8608(%rbp)
	movq	-8608(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp936:                               # Block address taken
.LBB11_3327:
	leaq	.L.str.823(%rip), %rdi
	movl	$14, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8616(%rbp)
	movq	-8616(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp937:                               # Block address taken
.LBB11_3328:
	leaq	.L.str.824(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8624(%rbp)
	movq	-8624(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp938:                               # Block address taken
.LBB11_3329:
	leaq	.L.str.825(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8632(%rbp)
	movq	-8632(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp939:                               # Block address taken
.LBB11_3330:
	leaq	.L.str.826(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8640(%rbp)
	movq	-8640(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp940:                               # Block address taken
.LBB11_3331:
	leaq	.L.str.827(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8648(%rbp)
	movq	-8648(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp941:                               # Block address taken
.LBB11_3332:
	leaq	.L.str.828(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8656(%rbp)
	movq	-8656(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp942:                               # Block address taken
.LBB11_3333:
	leaq	.L.str.829(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8664(%rbp)
	movq	-8664(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp943:                               # Block address taken
.LBB11_3334:
	leaq	.L.str.830(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8672(%rbp)
	movq	-8672(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp944:                               # Block address taken
.LBB11_3335:
	leaq	.L.str.831(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8680(%rbp)
	movq	-8680(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp945:                               # Block address taken
.LBB11_3336:
	leaq	.L.str.832(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8688(%rbp)
	movq	-8688(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp946:                               # Block address taken
.LBB11_3337:
	leaq	.L.str.833(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8696(%rbp)
	movq	-8696(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp947:                               # Block address taken
.LBB11_3338:
	leaq	.L.str.834(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8704(%rbp)
	movq	-8704(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp948:                               # Block address taken
.LBB11_3339:
	leaq	.L.str.835(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8712(%rbp)
	movq	-8712(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp949:                               # Block address taken
.LBB11_3340:
	leaq	.L.str.836(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8720(%rbp)
	movq	-8720(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp950:                               # Block address taken
.LBB11_3341:
	leaq	.L.str.837(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8728(%rbp)
	movq	-8728(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp951:                               # Block address taken
.LBB11_3342:
	leaq	.L.str.838(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8736(%rbp)
	movq	-8736(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp952:                               # Block address taken
.LBB11_3343:
	leaq	.L.str.839(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8744(%rbp)
	movq	-8744(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp953:                               # Block address taken
.LBB11_3344:
	leaq	.L.str.840(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8752(%rbp)
	movq	-8752(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp954:                               # Block address taken
.LBB11_3345:
	leaq	.L.str.841(%rip), %rdi
	movl	$16, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8760(%rbp)
	movq	-8760(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp955:                               # Block address taken
.LBB11_3346:
	leaq	.L.str.842(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8768(%rbp)
	movq	-8768(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp956:                               # Block address taken
.LBB11_3347:
	leaq	.L.str.843(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8776(%rbp)
	movq	-8776(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp957:                               # Block address taken
.LBB11_3348:
	leaq	.L.str.844(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8784(%rbp)
	movq	-8784(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp958:                               # Block address taken
.LBB11_3349:
	leaq	.L.str.845(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8792(%rbp)
	movq	-8792(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp959:                               # Block address taken
.LBB11_3350:
	leaq	.L.str.846(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8800(%rbp)
	movq	-8800(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp960:                               # Block address taken
.LBB11_3351:
	leaq	.L.str.847(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8808(%rbp)
	movq	-8808(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp961:                               # Block address taken
.LBB11_3352:
	leaq	.L.str.848(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8816(%rbp)
	movq	-8816(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp962:                               # Block address taken
.LBB11_3353:
	leaq	.L.str.849(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8824(%rbp)
	movq	-8824(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp963:                               # Block address taken
.LBB11_3354:
	leaq	.L.str.850(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8832(%rbp)
	movq	-8832(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp964:                               # Block address taken
.LBB11_3355:
	leaq	.L.str.851(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8840(%rbp)
	movq	-8840(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp965:                               # Block address taken
.LBB11_3356:
	leaq	.L.str.852(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8848(%rbp)
	movq	-8848(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp966:                               # Block address taken
.LBB11_3357:
	leaq	.L.str.853(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8856(%rbp)
	movq	-8856(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp967:                               # Block address taken
.LBB11_3358:
	leaq	.L.str.854(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8864(%rbp)
	movq	-8864(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp968:                               # Block address taken
.LBB11_3359:
	leaq	.L.str.855(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8872(%rbp)
	movq	-8872(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp969:                               # Block address taken
.LBB11_3360:
	leaq	.L.str.856(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8880(%rbp)
	movq	-8880(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp970:                               # Block address taken
.LBB11_3361:
	leaq	.L.str.857(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8888(%rbp)
	movq	-8888(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp971:                               # Block address taken
.LBB11_3362:
	leaq	.L.str.858(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8896(%rbp)
	movq	-8896(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp972:                               # Block address taken
.LBB11_3363:
	leaq	.L.str.859(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8904(%rbp)
	movq	-8904(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp973:                               # Block address taken
.LBB11_3364:
	leaq	.L.str.182(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8912(%rbp)
	movq	-8912(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp974:                               # Block address taken
.LBB11_3365:
	leaq	.L.str.860(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8920(%rbp)
	movq	-8920(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp975:                               # Block address taken
.LBB11_3366:
	leaq	.L.str.861(%rip), %rdi
	movl	$15, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8928(%rbp)
	movq	-8928(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp976:                               # Block address taken
.LBB11_3367:
	leaq	.L.str.862(%rip), %rdi
	movl	$2, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8936(%rbp)
	movq	-8936(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp977:                               # Block address taken
.LBB11_3368:
	leaq	.L.str.863(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8944(%rbp)
	movq	-8944(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp978:                               # Block address taken
.LBB11_3369:
	leaq	.L.str.864(%rip), %rdi
	movl	$15, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8952(%rbp)
	movq	-8952(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp979:                               # Block address taken
.LBB11_3370:
	leaq	.L.str.865(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8960(%rbp)
	movq	-8960(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp980:                               # Block address taken
.LBB11_3371:
	leaq	.L.str.866(%rip), %rdi
	movl	$15, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8968(%rbp)
	movq	-8968(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp981:                               # Block address taken
.LBB11_3372:
	leaq	.L.str.867(%rip), %rdi
	movl	$14, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8976(%rbp)
	movq	-8976(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp982:                               # Block address taken
.LBB11_3373:
	leaq	.L.str.868(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8984(%rbp)
	movq	-8984(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp983:                               # Block address taken
.LBB11_3374:
	leaq	.L.str.869(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -8992(%rbp)
	movq	-8992(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp984:                               # Block address taken
.LBB11_3375:
	leaq	.L.str.870(%rip), %rdi
	movl	$14, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9000(%rbp)
	movq	-9000(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp985:                               # Block address taken
.LBB11_3376:
	leaq	.L.str.871(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9008(%rbp)
	movq	-9008(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp986:                               # Block address taken
.LBB11_3377:
	leaq	.L.str.872(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9016(%rbp)
	movq	-9016(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp987:                               # Block address taken
.LBB11_3378:
	leaq	.L.str.873(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9024(%rbp)
	movq	-9024(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp988:                               # Block address taken
.LBB11_3379:
	leaq	.L.str.874(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9032(%rbp)
	movq	-9032(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp989:                               # Block address taken
.LBB11_3380:
	leaq	.L.str.875(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9040(%rbp)
	movq	-9040(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp990:                               # Block address taken
.LBB11_3381:
	leaq	.L.str.876(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9048(%rbp)
	movq	-9048(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp991:                               # Block address taken
.LBB11_3382:
	leaq	.L.str.877(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9056(%rbp)
	movq	-9056(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp992:                               # Block address taken
.LBB11_3383:
	leaq	.L.str.878(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9064(%rbp)
	movq	-9064(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp993:                               # Block address taken
.LBB11_3384:
	leaq	.L.str.879(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9072(%rbp)
	movq	-9072(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp994:                               # Block address taken
.LBB11_3385:
	leaq	.L.str.880(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9080(%rbp)
	movq	-9080(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp995:                               # Block address taken
.LBB11_3386:
	leaq	.L.str.881(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9088(%rbp)
	movq	-9088(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp996:                               # Block address taken
.LBB11_3387:
	leaq	.L.str.882(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9096(%rbp)
	movq	-9096(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp997:                               # Block address taken
.LBB11_3388:
	leaq	.L.str.883(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9104(%rbp)
	movq	-9104(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp998:                               # Block address taken
.LBB11_3389:
	leaq	.L.str.884(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9112(%rbp)
	movq	-9112(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp999:                               # Block address taken
.LBB11_3390:
	leaq	.L.str.885(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9120(%rbp)
	movq	-9120(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1000:                              # Block address taken
.LBB11_3391:
	leaq	.L.str.145(%rip), %rdi
	movl	$1, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9128(%rbp)
	movq	-9128(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1001:                              # Block address taken
.LBB11_3392:
	leaq	.L.str.886(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9136(%rbp)
	movq	-9136(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1002:                              # Block address taken
.LBB11_3393:
	leaq	.L.str.887(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9144(%rbp)
	movq	-9144(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1003:                              # Block address taken
.LBB11_3394:
	leaq	.L.str.888(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9152(%rbp)
	movq	-9152(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1004:                              # Block address taken
.LBB11_3395:
	leaq	.L.str.889(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9160(%rbp)
	movq	-9160(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1005:                              # Block address taken
.LBB11_3396:
	leaq	.L.str.890(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9168(%rbp)
	movq	-9168(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1006:                              # Block address taken
.LBB11_3397:
	leaq	.L.str.891(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9176(%rbp)
	movq	-9176(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1007:                              # Block address taken
.LBB11_3398:
	leaq	.L.str.892(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9184(%rbp)
	movq	-9184(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1008:                              # Block address taken
.LBB11_3399:
	leaq	.L.str.146(%rip), %rdi
	movl	$1, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9192(%rbp)
	movq	-9192(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1009:                              # Block address taken
.LBB11_3400:
	leaq	.L.str.893(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9200(%rbp)
	movq	-9200(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1010:                              # Block address taken
.LBB11_3401:
	leaq	.L.str.894(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9208(%rbp)
	movq	-9208(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1011:                              # Block address taken
.LBB11_3402:
	leaq	.L.str.895(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9216(%rbp)
	movq	-9216(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1012:                              # Block address taken
.LBB11_3403:
	leaq	.L.str.147(%rip), %rdi
	movl	$1, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9224(%rbp)
	movq	-9224(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1013:                              # Block address taken
.LBB11_3404:
	leaq	.L.str.896(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9232(%rbp)
	movq	-9232(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1014:                              # Block address taken
.LBB11_3405:
	leaq	.L.str.897(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9240(%rbp)
	movq	-9240(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1015:                              # Block address taken
.LBB11_3406:
	leaq	.L.str.898(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9248(%rbp)
	movq	-9248(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1016:                              # Block address taken
.LBB11_3407:
	leaq	.L.str.899(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9256(%rbp)
	movq	-9256(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1017:                              # Block address taken
.LBB11_3408:
	leaq	.L.str.900(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9264(%rbp)
	movq	-9264(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1018:                              # Block address taken
.LBB11_3409:
	leaq	.L.str.901(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9272(%rbp)
	movq	-9272(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1019:                              # Block address taken
.LBB11_3410:
	leaq	.L.str.902(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9280(%rbp)
	movq	-9280(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1020:                              # Block address taken
.LBB11_3411:
	leaq	.L.str.903(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9288(%rbp)
	movq	-9288(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1021:                              # Block address taken
.LBB11_3412:
	leaq	.L.str.904(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9296(%rbp)
	movq	-9296(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1022:                              # Block address taken
.LBB11_3413:
	leaq	.L.str.904(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9304(%rbp)
	movq	-9304(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1023:                              # Block address taken
.LBB11_3414:
	leaq	.L.str.905(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9312(%rbp)
	movq	-9312(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1024:                              # Block address taken
.LBB11_3415:
	leaq	.L.str.906(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9320(%rbp)
	movq	-9320(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1025:                              # Block address taken
.LBB11_3416:
	leaq	.L.str.907(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9328(%rbp)
	movq	-9328(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1026:                              # Block address taken
.LBB11_3417:
	leaq	.L.str.908(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9336(%rbp)
	movq	-9336(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1027:                              # Block address taken
.LBB11_3418:
	leaq	.L.str.909(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9344(%rbp)
	movq	-9344(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1028:                              # Block address taken
.LBB11_3419:
	leaq	.L.str.910(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9352(%rbp)
	movq	-9352(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1029:                              # Block address taken
.LBB11_3420:
	leaq	.L.str.911(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9360(%rbp)
	movq	-9360(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1030:                              # Block address taken
.LBB11_3421:
	leaq	.L.str.912(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9368(%rbp)
	movq	-9368(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1031:                              # Block address taken
.LBB11_3422:
	leaq	.L.str.913(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9376(%rbp)
	movq	-9376(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1032:                              # Block address taken
.LBB11_3423:
	leaq	.L.str.914(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9384(%rbp)
	movq	-9384(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1033:                              # Block address taken
.LBB11_3424:
	leaq	.L.str.915(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9392(%rbp)
	movq	-9392(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1034:                              # Block address taken
.LBB11_3425:
	leaq	.L.str.916(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9400(%rbp)
	movq	-9400(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1035:                              # Block address taken
.LBB11_3426:
	leaq	.L.str.917(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9408(%rbp)
	movq	-9408(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1036:                              # Block address taken
.LBB11_3427:
	leaq	.L.str.918(%rip), %rdi
	movl	$14, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9416(%rbp)
	movq	-9416(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1037:                              # Block address taken
.LBB11_3428:
	leaq	.L.str.919(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9424(%rbp)
	movq	-9424(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1038:                              # Block address taken
.LBB11_3429:
	leaq	.L.str.920(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9432(%rbp)
	movq	-9432(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1039:                              # Block address taken
.LBB11_3430:
	leaq	.L.str.921(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9440(%rbp)
	movq	-9440(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1040:                              # Block address taken
.LBB11_3431:
	leaq	.L.str.922(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9448(%rbp)
	movq	-9448(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1041:                              # Block address taken
.LBB11_3432:
	leaq	.L.str.923(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9456(%rbp)
	movq	-9456(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1042:                              # Block address taken
.LBB11_3433:
	leaq	.L.str.924(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9464(%rbp)
	movq	-9464(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1043:                              # Block address taken
.LBB11_3434:
	leaq	.L.str.925(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9472(%rbp)
	movq	-9472(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1044:                              # Block address taken
.LBB11_3435:
	leaq	.L.str.926(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9480(%rbp)
	movq	-9480(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1045:                              # Block address taken
.LBB11_3436:
	leaq	.L.str.927(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9488(%rbp)
	movq	-9488(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1046:                              # Block address taken
.LBB11_3437:
	leaq	.L.str.928(%rip), %rdi
	movl	$2, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9496(%rbp)
	movq	-9496(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1047:                              # Block address taken
.LBB11_3438:
	leaq	.L.str.929(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9504(%rbp)
	movq	-9504(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1048:                              # Block address taken
.LBB11_3439:
	leaq	.L.str.930(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9512(%rbp)
	movq	-9512(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1049:                              # Block address taken
.LBB11_3440:
	leaq	.L.str.931(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9520(%rbp)
	movq	-9520(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1050:                              # Block address taken
.LBB11_3441:
	leaq	.L.str.932(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9528(%rbp)
	movq	-9528(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1051:                              # Block address taken
.LBB11_3442:
	leaq	.L.str.933(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9536(%rbp)
	movq	-9536(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1052:                              # Block address taken
.LBB11_3443:
	leaq	.L.str.934(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9544(%rbp)
	movq	-9544(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1053:                              # Block address taken
.LBB11_3444:
	leaq	.L.str.935(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9552(%rbp)
	movq	-9552(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1054:                              # Block address taken
.LBB11_3445:
	leaq	.L.str.936(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9560(%rbp)
	movq	-9560(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1055:                              # Block address taken
.LBB11_3446:
	leaq	.L.str.937(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9568(%rbp)
	movq	-9568(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1056:                              # Block address taken
.LBB11_3447:
	leaq	.L.str.938(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9576(%rbp)
	movq	-9576(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1057:                              # Block address taken
.LBB11_3448:
	leaq	.L.str.939(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9584(%rbp)
	movq	-9584(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1058:                              # Block address taken
.LBB11_3449:
	leaq	.L.str.940(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9592(%rbp)
	movq	-9592(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1059:                              # Block address taken
.LBB11_3450:
	leaq	.L.str.941(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9600(%rbp)
	movq	-9600(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1060:                              # Block address taken
.LBB11_3451:
	leaq	.L.str.942(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9608(%rbp)
	movq	-9608(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1061:                              # Block address taken
.LBB11_3452:
	leaq	.L.str.943(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9616(%rbp)
	movq	-9616(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1062:                              # Block address taken
.LBB11_3453:
	leaq	.L.str.944(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9624(%rbp)
	movq	-9624(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1063:                              # Block address taken
.LBB11_3454:
	leaq	.L.str.945(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9632(%rbp)
	movq	-9632(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1064:                              # Block address taken
.LBB11_3455:
	leaq	.L.str.946(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9640(%rbp)
	movq	-9640(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1065:                              # Block address taken
.LBB11_3456:
	leaq	.L.str.947(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9648(%rbp)
	movq	-9648(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1066:                              # Block address taken
.LBB11_3457:
	leaq	.L.str.948(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9656(%rbp)
	movq	-9656(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1067:                              # Block address taken
.LBB11_3458:
	leaq	.L.str.949(%rip), %rdi
	movl	$16, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9664(%rbp)
	movq	-9664(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1068:                              # Block address taken
.LBB11_3459:
	leaq	.L.str.950(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9672(%rbp)
	movq	-9672(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1069:                              # Block address taken
.LBB11_3460:
	leaq	.L.str.951(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9680(%rbp)
	movq	-9680(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1070:                              # Block address taken
.LBB11_3461:
	leaq	.L.str.952(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9688(%rbp)
	movq	-9688(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1071:                              # Block address taken
.LBB11_3462:
	leaq	.L.str.953(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9696(%rbp)
	movq	-9696(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1072:                              # Block address taken
.LBB11_3463:
	leaq	.L.str.954(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9704(%rbp)
	movq	-9704(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1073:                              # Block address taken
.LBB11_3464:
	leaq	.L.str.955(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9712(%rbp)
	movq	-9712(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1074:                              # Block address taken
.LBB11_3465:
	leaq	.L.str.956(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9720(%rbp)
	movq	-9720(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1075:                              # Block address taken
.LBB11_3466:
	leaq	.L.str.957(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9728(%rbp)
	movq	-9728(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1076:                              # Block address taken
.LBB11_3467:
	leaq	.L.str.148(%rip), %rdi
	movl	$1, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9736(%rbp)
	movq	-9736(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1077:                              # Block address taken
.LBB11_3468:
	leaq	.L.str.958(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9744(%rbp)
	movq	-9744(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1078:                              # Block address taken
.LBB11_3469:
	leaq	.L.str.959(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9752(%rbp)
	movq	-9752(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1079:                              # Block address taken
.LBB11_3470:
	leaq	.L.str.960(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9760(%rbp)
	movq	-9760(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1080:                              # Block address taken
.LBB11_3471:
	leaq	.L.str.961(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9768(%rbp)
	movq	-9768(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1081:                              # Block address taken
.LBB11_3472:
	leaq	.L.str.962(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9776(%rbp)
	movq	-9776(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1082:                              # Block address taken
.LBB11_3473:
	leaq	.L.str.963(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9784(%rbp)
	movq	-9784(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1083:                              # Block address taken
.LBB11_3474:
	leaq	.L.str.964(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9792(%rbp)
	movq	-9792(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1084:                              # Block address taken
.LBB11_3475:
	leaq	.L.str.965(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9800(%rbp)
	movq	-9800(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1085:                              # Block address taken
.LBB11_3476:
	leaq	.L.str.966(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9808(%rbp)
	movq	-9808(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1086:                              # Block address taken
.LBB11_3477:
	leaq	.L.str.967(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9816(%rbp)
	movq	-9816(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1087:                              # Block address taken
.LBB11_3478:
	leaq	.L.str.968(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9824(%rbp)
	movq	-9824(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1088:                              # Block address taken
.LBB11_3479:
	leaq	.L.str.969(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9832(%rbp)
	movq	-9832(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1089:                              # Block address taken
.LBB11_3480:
	leaq	.L.str.970(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9840(%rbp)
	movq	-9840(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1090:                              # Block address taken
.LBB11_3481:
	leaq	.L.str.971(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9848(%rbp)
	movq	-9848(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.Ltmp1091:                              # Block address taken
.LBB11_3482:
	leaq	.L.str.972(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9856(%rbp)
	movq	-9856(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3486
.LBB11_3483:                            #   in Loop: Header=BB11_6020 Depth=1
	cmpq	$255, -7808(%rbp)
	jbe	.LBB11_3485
# %bb.3484:
	jmp	.LBB11_3486
.LBB11_3485:                            #   in Loop: Header=BB11_6020 Depth=1
	movq	-7808(%rbp), %rax
	subq	$0, %rax
	leaq	_ZN8MEMORY_T6POKE64Edd.tmp$2485(%rip), %rcx
	movq	(%rcx,%rax,8), %rax
	movq	%rax, -15848(%rbp)      # 8-byte Spill
	jmp	.LBB11_6020
.LBB11_3486:
	jmp	.LBB11_4944
.Ltmp1092:                              # Block address taken
.LBB11_3487:                            #   in Loop: Header=BB11_6020 Depth=1
	movq	-2216(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
	movq	%rax, -9864(%rbp)
	jmp	.LBB11_3744
.Ltmp1093:                              # Block address taken
.LBB11_3488:
	leaq	.L.str.973(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9872(%rbp)
	movq	-9872(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1094:                              # Block address taken
.LBB11_3489:
	leaq	.L.str.974(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9880(%rbp)
	movq	-9880(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1095:                              # Block address taken
.LBB11_3490:
	leaq	.L.str.975(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9888(%rbp)
	movq	-9888(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1096:                              # Block address taken
.LBB11_3491:
	leaq	.L.str.976(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9896(%rbp)
	movq	-9896(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1097:                              # Block address taken
.LBB11_3492:
	leaq	.L.str.977(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9904(%rbp)
	movq	-9904(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1098:                              # Block address taken
.LBB11_3493:
	leaq	.L.str.978(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9912(%rbp)
	movq	-9912(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1099:                              # Block address taken
.LBB11_3494:
	leaq	.L.str.979(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9920(%rbp)
	movq	-9920(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1100:                              # Block address taken
.LBB11_3495:
	leaq	.L.str.980(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9928(%rbp)
	movq	-9928(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1101:                              # Block address taken
.LBB11_3496:
	leaq	.L.str.981(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9936(%rbp)
	movq	-9936(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1102:                              # Block address taken
.LBB11_3497:
	leaq	.L.str.982(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9944(%rbp)
	movq	-9944(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1103:                              # Block address taken
.LBB11_3498:
	leaq	.L.str.983(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9952(%rbp)
	movq	-9952(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1104:                              # Block address taken
.LBB11_3499:
	leaq	.L.str.984(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9960(%rbp)
	movq	-9960(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1105:                              # Block address taken
.LBB11_3500:
	leaq	.L.str.985(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9968(%rbp)
	movq	-9968(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1106:                              # Block address taken
.LBB11_3501:
	leaq	.L.str.986(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9976(%rbp)
	movq	-9976(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1107:                              # Block address taken
.LBB11_3502:
	leaq	.L.str.987(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9984(%rbp)
	movq	-9984(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1108:                              # Block address taken
.LBB11_3503:
	leaq	.L.str.988(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -9992(%rbp)
	movq	-9992(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1109:                              # Block address taken
.LBB11_3504:
	leaq	.L.str.989(%rip), %rdi
	movl	$17, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10000(%rbp)
	movq	-10000(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1110:                              # Block address taken
.LBB11_3505:
	leaq	.L.str.990(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10008(%rbp)
	movq	-10008(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1111:                              # Block address taken
.LBB11_3506:
	leaq	.L.str.991(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10016(%rbp)
	movq	-10016(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1112:                              # Block address taken
.LBB11_3507:
	leaq	.L.str.992(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10024(%rbp)
	movq	-10024(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1113:                              # Block address taken
.LBB11_3508:
	leaq	.L.str.993(%rip), %rdi
	movl	$15, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10032(%rbp)
	movq	-10032(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1114:                              # Block address taken
.LBB11_3509:
	leaq	.L.str.994(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10040(%rbp)
	movq	-10040(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1115:                              # Block address taken
.LBB11_3510:
	leaq	.L.str.995(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10048(%rbp)
	movq	-10048(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1116:                              # Block address taken
.LBB11_3511:
	leaq	.L.str.996(%rip), %rdi
	movl	$17, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10056(%rbp)
	movq	-10056(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1117:                              # Block address taken
.LBB11_3512:
	leaq	.L.str.997(%rip), %rdi
	movl	$17, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10064(%rbp)
	movq	-10064(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1118:                              # Block address taken
.LBB11_3513:
	leaq	.L.str.998(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10072(%rbp)
	movq	-10072(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1119:                              # Block address taken
.LBB11_3514:
	leaq	.L.str.999(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10080(%rbp)
	movq	-10080(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1120:                              # Block address taken
.LBB11_3515:
	leaq	.L.str.1000(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10088(%rbp)
	movq	-10088(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1121:                              # Block address taken
.LBB11_3516:
	leaq	.L.str.1001(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10096(%rbp)
	movq	-10096(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1122:                              # Block address taken
.LBB11_3517:
	leaq	.L.str.1002(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10104(%rbp)
	movq	-10104(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1123:                              # Block address taken
.LBB11_3518:
	leaq	.L.str.1003(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10112(%rbp)
	movq	-10112(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1124:                              # Block address taken
.LBB11_3519:
	leaq	.L.str.1004(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10120(%rbp)
	movq	-10120(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1125:                              # Block address taken
.LBB11_3520:
	leaq	.L.str.1005(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10128(%rbp)
	movq	-10128(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1126:                              # Block address taken
.LBB11_3521:
	leaq	.L.str.1006(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10136(%rbp)
	movq	-10136(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1127:                              # Block address taken
.LBB11_3522:
	leaq	.L.str.1007(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10144(%rbp)
	movq	-10144(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1128:                              # Block address taken
.LBB11_3523:
	leaq	.L.str.1008(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10152(%rbp)
	movq	-10152(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1129:                              # Block address taken
.LBB11_3524:
	leaq	.L.str.1009(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10160(%rbp)
	movq	-10160(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1130:                              # Block address taken
.LBB11_3525:
	leaq	.L.str.1010(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10168(%rbp)
	movq	-10168(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1131:                              # Block address taken
.LBB11_3526:
	leaq	.L.str.1011(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10176(%rbp)
	movq	-10176(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1132:                              # Block address taken
.LBB11_3527:
	leaq	.L.str.1012(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10184(%rbp)
	movq	-10184(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1133:                              # Block address taken
.LBB11_3528:
	leaq	.L.str.1013(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10192(%rbp)
	movq	-10192(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1134:                              # Block address taken
.LBB11_3529:
	leaq	.L.str.1014(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10200(%rbp)
	movq	-10200(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1135:                              # Block address taken
.LBB11_3530:
	leaq	.L.str.1015(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10208(%rbp)
	movq	-10208(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1136:                              # Block address taken
.LBB11_3531:
	leaq	.L.str.1016(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10216(%rbp)
	movq	-10216(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1137:                              # Block address taken
.LBB11_3532:
	leaq	.L.str.1017(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10224(%rbp)
	movq	-10224(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1138:                              # Block address taken
.LBB11_3533:
	leaq	.L.str.1018(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10232(%rbp)
	movq	-10232(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1139:                              # Block address taken
.LBB11_3534:
	leaq	.L.str.1019(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10240(%rbp)
	movq	-10240(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1140:                              # Block address taken
.LBB11_3535:
	leaq	.L.str.1020(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10248(%rbp)
	movq	-10248(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1141:                              # Block address taken
.LBB11_3536:
	leaq	.L.str.1021(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10256(%rbp)
	movq	-10256(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1142:                              # Block address taken
.LBB11_3537:
	leaq	.L.str.1022(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10264(%rbp)
	movq	-10264(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1143:                              # Block address taken
.LBB11_3538:
	leaq	.L.str.1023(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10272(%rbp)
	movq	-10272(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1144:                              # Block address taken
.LBB11_3539:
	leaq	.L.str.1024(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10280(%rbp)
	movq	-10280(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1145:                              # Block address taken
.LBB11_3540:
	leaq	.L.str.1025(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10288(%rbp)
	movq	-10288(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1146:                              # Block address taken
.LBB11_3541:
	leaq	.L.str.1026(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10296(%rbp)
	movq	-10296(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1147:                              # Block address taken
.LBB11_3542:
	leaq	.L.str.1027(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10304(%rbp)
	movq	-10304(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1148:                              # Block address taken
.LBB11_3543:
	leaq	.L.str.1028(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10312(%rbp)
	movq	-10312(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1149:                              # Block address taken
.LBB11_3544:
	leaq	.L.str.1029(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10320(%rbp)
	movq	-10320(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1150:                              # Block address taken
.LBB11_3545:
	leaq	.L.str.1030(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10328(%rbp)
	movq	-10328(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1151:                              # Block address taken
.LBB11_3546:
	leaq	.L.str.1031(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10336(%rbp)
	movq	-10336(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1152:                              # Block address taken
.LBB11_3547:
	leaq	.L.str.1032(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10344(%rbp)
	movq	-10344(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1153:                              # Block address taken
.LBB11_3548:
	leaq	.L.str.1033(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10352(%rbp)
	movq	-10352(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1154:                              # Block address taken
.LBB11_3549:
	leaq	.L.str.1034(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10360(%rbp)
	movq	-10360(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1155:                              # Block address taken
.LBB11_3550:
	leaq	.L.str.1035(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10368(%rbp)
	movq	-10368(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1156:                              # Block address taken
.LBB11_3551:
	leaq	.L.str.1036(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10376(%rbp)
	movq	-10376(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1157:                              # Block address taken
.LBB11_3552:
	leaq	.L.str.1037(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10384(%rbp)
	movq	-10384(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1158:                              # Block address taken
.LBB11_3553:
	leaq	.L.str.1038(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10392(%rbp)
	movq	-10392(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1159:                              # Block address taken
.LBB11_3554:
	leaq	.L.str.1039(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10400(%rbp)
	movq	-10400(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1160:                              # Block address taken
.LBB11_3555:
	leaq	.L.str.149(%rip), %rdi
	movl	$1, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10408(%rbp)
	movq	-10408(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1161:                              # Block address taken
.LBB11_3556:
	leaq	.L.str.1040(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10416(%rbp)
	movq	-10416(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1162:                              # Block address taken
.LBB11_3557:
	leaq	.L.str.1041(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10424(%rbp)
	movq	-10424(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1163:                              # Block address taken
.LBB11_3558:
	leaq	.L.str.1042(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10432(%rbp)
	movq	-10432(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1164:                              # Block address taken
.LBB11_3559:
	leaq	.L.str.1043(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10440(%rbp)
	movq	-10440(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1165:                              # Block address taken
.LBB11_3560:
	leaq	.L.str.1044(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10448(%rbp)
	movq	-10448(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1166:                              # Block address taken
.LBB11_3561:
	leaq	.L.str.1045(%rip), %rdi
	movl	$14, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10456(%rbp)
	movq	-10456(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1167:                              # Block address taken
.LBB11_3562:
	leaq	.L.str.1046(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10464(%rbp)
	movq	-10464(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1168:                              # Block address taken
.LBB11_3563:
	leaq	.L.str.1047(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10472(%rbp)
	movq	-10472(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1169:                              # Block address taken
.LBB11_3564:
	leaq	.L.str.1048(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10480(%rbp)
	movq	-10480(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1170:                              # Block address taken
.LBB11_3565:
	leaq	.L.str.1049(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10488(%rbp)
	movq	-10488(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1171:                              # Block address taken
.LBB11_3566:
	leaq	.L.str.1050(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10496(%rbp)
	movq	-10496(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1172:                              # Block address taken
.LBB11_3567:
	leaq	.L.str.1051(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10504(%rbp)
	movq	-10504(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1173:                              # Block address taken
.LBB11_3568:
	leaq	.L.str.1052(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10512(%rbp)
	movq	-10512(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1174:                              # Block address taken
.LBB11_3569:
	leaq	.L.str.1053(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10520(%rbp)
	movq	-10520(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1175:                              # Block address taken
.LBB11_3570:
	leaq	.L.str.1054(%rip), %rdi
	movl	$2, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10528(%rbp)
	movq	-10528(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1176:                              # Block address taken
.LBB11_3571:
	leaq	.L.str.1055(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10536(%rbp)
	movq	-10536(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1177:                              # Block address taken
.LBB11_3572:
	leaq	.L.str.1056(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10544(%rbp)
	movq	-10544(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1178:                              # Block address taken
.LBB11_3573:
	leaq	.L.str.1057(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10552(%rbp)
	movq	-10552(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1179:                              # Block address taken
.LBB11_3574:
	leaq	.L.str.1058(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10560(%rbp)
	movq	-10560(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1180:                              # Block address taken
.LBB11_3575:
	leaq	.L.str.1059(%rip), %rdi
	movl	$15, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10568(%rbp)
	movq	-10568(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1181:                              # Block address taken
.LBB11_3576:
	leaq	.L.str.1060(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10576(%rbp)
	movq	-10576(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1182:                              # Block address taken
.LBB11_3577:
	leaq	.L.str.1061(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10584(%rbp)
	movq	-10584(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1183:                              # Block address taken
.LBB11_3578:
	leaq	.L.str.1062(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10592(%rbp)
	movq	-10592(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1184:                              # Block address taken
.LBB11_3579:
	leaq	.L.str.1063(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10600(%rbp)
	movq	-10600(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1185:                              # Block address taken
.LBB11_3580:
	leaq	.L.str.1064(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10608(%rbp)
	movq	-10608(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1186:                              # Block address taken
.LBB11_3581:
	leaq	.L.str.1065(%rip), %rdi
	movl	$14, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10616(%rbp)
	movq	-10616(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1187:                              # Block address taken
.LBB11_3582:
	leaq	.L.str.1066(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10624(%rbp)
	movq	-10624(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1188:                              # Block address taken
.LBB11_3583:
	leaq	.L.str.1067(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10632(%rbp)
	movq	-10632(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1189:                              # Block address taken
.LBB11_3584:
	leaq	.L.str.1068(%rip), %rdi
	movl	$14, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10640(%rbp)
	movq	-10640(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1190:                              # Block address taken
.LBB11_3585:
	leaq	.L.str.1069(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10648(%rbp)
	movq	-10648(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1191:                              # Block address taken
.LBB11_3586:
	leaq	.L.str.1070(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10656(%rbp)
	movq	-10656(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1192:                              # Block address taken
.LBB11_3587:
	leaq	.L.str.1071(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10664(%rbp)
	movq	-10664(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1193:                              # Block address taken
.LBB11_3588:
	leaq	.L.str.1072(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10672(%rbp)
	movq	-10672(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1194:                              # Block address taken
.LBB11_3589:
	leaq	.L.str.1073(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10680(%rbp)
	movq	-10680(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1195:                              # Block address taken
.LBB11_3590:
	leaq	.L.str.1074(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10688(%rbp)
	movq	-10688(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1196:                              # Block address taken
.LBB11_3591:
	leaq	.L.str.1075(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	movq	%rax, -10696(%rbp)
	movq	-10696(%rbp), %rsi
	movl	$1, %ecx
	movl	%ecx, %edi
	movl	%ecx, %edx
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1197:                              # Block address taken
.LBB11_3592:
	leaq	.L.str.1076(%rip), %rdi
	movl	$15, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10704(%rbp)
	movq	-10704(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1198:                              # Block address taken
.LBB11_3593:
	leaq	.L.str.1077(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10712(%rbp)
	movq	-10712(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1199:                              # Block address taken
.LBB11_3594:
	leaq	.L.str.1078(%rip), %rdi
	movl	$14, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10720(%rbp)
	movq	-10720(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1200:                              # Block address taken
.LBB11_3595:
	leaq	.L.str.150(%rip), %rdi
	movl	$1, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10728(%rbp)
	movq	-10728(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1201:                              # Block address taken
.LBB11_3596:
	leaq	.L.str.1079(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10736(%rbp)
	movq	-10736(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1202:                              # Block address taken
.LBB11_3597:
	leaq	.L.str.1080(%rip), %rdi
	movl	$15, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10744(%rbp)
	movq	-10744(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1203:                              # Block address taken
.LBB11_3598:
	leaq	.L.str.1081(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10752(%rbp)
	movq	-10752(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1204:                              # Block address taken
.LBB11_3599:
	leaq	.L.str.1082(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10760(%rbp)
	movq	-10760(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1205:                              # Block address taken
.LBB11_3600:
	leaq	.L.str.1083(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10768(%rbp)
	movq	-10768(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1206:                              # Block address taken
.LBB11_3601:
	leaq	.L.str.1084(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10776(%rbp)
	movq	-10776(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1207:                              # Block address taken
.LBB11_3602:
	leaq	.L.str.1085(%rip), %rdi
	movl	$2, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10784(%rbp)
	movq	-10784(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1208:                              # Block address taken
.LBB11_3603:
	leaq	.L.str.1086(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10792(%rbp)
	movq	-10792(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1209:                              # Block address taken
.LBB11_3604:
	leaq	.L.str.1087(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10800(%rbp)
	movq	-10800(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1210:                              # Block address taken
.LBB11_3605:
	leaq	.L.str.1088(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10808(%rbp)
	movq	-10808(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1211:                              # Block address taken
.LBB11_3606:
	leaq	.L.str.1089(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10816(%rbp)
	movq	-10816(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1212:                              # Block address taken
.LBB11_3607:
	leaq	.L.str.1090(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10824(%rbp)
	movq	-10824(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1213:                              # Block address taken
.LBB11_3608:
	leaq	.L.str.1091(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10832(%rbp)
	movq	-10832(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1214:                              # Block address taken
.LBB11_3609:
	leaq	.L.str.1092(%rip), %rdi
	movl	$2, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10840(%rbp)
	movq	-10840(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1215:                              # Block address taken
.LBB11_3610:
	leaq	.L.str.1093(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10848(%rbp)
	movq	-10848(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1216:                              # Block address taken
.LBB11_3611:
	leaq	.L.str.1094(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10856(%rbp)
	movq	-10856(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1217:                              # Block address taken
.LBB11_3612:
	leaq	.L.str.1095(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10864(%rbp)
	movq	-10864(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1218:                              # Block address taken
.LBB11_3613:
	leaq	.L.str.1096(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10872(%rbp)
	movq	-10872(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1219:                              # Block address taken
.LBB11_3614:
	leaq	.L.str.1097(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10880(%rbp)
	movq	-10880(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1220:                              # Block address taken
.LBB11_3615:
	leaq	.L.str.1098(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10888(%rbp)
	movq	-10888(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1221:                              # Block address taken
.LBB11_3616:
	leaq	.L.str.1099(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10896(%rbp)
	movq	-10896(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1222:                              # Block address taken
.LBB11_3617:
	leaq	.L.str.1100(%rip), %rdi
	movl	$2, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10904(%rbp)
	movq	-10904(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1223:                              # Block address taken
.LBB11_3618:
	leaq	.L.str.1101(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10912(%rbp)
	movq	-10912(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1224:                              # Block address taken
.LBB11_3619:
	leaq	.L.str.1102(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10920(%rbp)
	movq	-10920(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1225:                              # Block address taken
.LBB11_3620:
	leaq	.L.str.1103(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10928(%rbp)
	movq	-10928(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1226:                              # Block address taken
.LBB11_3621:
	leaq	.L.str.1104(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10936(%rbp)
	movq	-10936(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1227:                              # Block address taken
.LBB11_3622:
	leaq	.L.str.1105(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10944(%rbp)
	movq	-10944(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1228:                              # Block address taken
.LBB11_3623:
	leaq	.L.str.1106(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10952(%rbp)
	movq	-10952(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1229:                              # Block address taken
.LBB11_3624:
	leaq	.L.str.1107(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10960(%rbp)
	movq	-10960(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1230:                              # Block address taken
.LBB11_3625:
	leaq	.L.str.1108(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10968(%rbp)
	movq	-10968(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1231:                              # Block address taken
.LBB11_3626:
	leaq	.L.str.1109(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10976(%rbp)
	movq	-10976(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1232:                              # Block address taken
.LBB11_3627:
	leaq	.L.str.1110(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10984(%rbp)
	movq	-10984(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1233:                              # Block address taken
.LBB11_3628:
	leaq	.L.str.1111(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -10992(%rbp)
	movq	-10992(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1234:                              # Block address taken
.LBB11_3629:
	leaq	.L.str.1112(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11000(%rbp)
	movq	-11000(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1235:                              # Block address taken
.LBB11_3630:
	leaq	.L.str.1113(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11008(%rbp)
	movq	-11008(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1236:                              # Block address taken
.LBB11_3631:
	leaq	.L.str.1114(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11016(%rbp)
	movq	-11016(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1237:                              # Block address taken
.LBB11_3632:
	leaq	.L.str.1115(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11024(%rbp)
	movq	-11024(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1238:                              # Block address taken
.LBB11_3633:
	leaq	.L.str.151(%rip), %rdi
	movl	$1, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11032(%rbp)
	movq	-11032(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1239:                              # Block address taken
.LBB11_3634:
	leaq	.L.str.1116(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11040(%rbp)
	movq	-11040(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1240:                              # Block address taken
.LBB11_3635:
	leaq	.L.str.1117(%rip), %rdi
	movl	$14, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11048(%rbp)
	movq	-11048(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1241:                              # Block address taken
.LBB11_3636:
	leaq	.L.str.1118(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11056(%rbp)
	movq	-11056(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1242:                              # Block address taken
.LBB11_3637:
	leaq	.L.str.1119(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11064(%rbp)
	movq	-11064(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1243:                              # Block address taken
.LBB11_3638:
	leaq	.L.str.1120(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11072(%rbp)
	movq	-11072(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1244:                              # Block address taken
.LBB11_3639:
	leaq	.L.str.1121(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11080(%rbp)
	movq	-11080(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1245:                              # Block address taken
.LBB11_3640:
	leaq	.L.str.1122(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11088(%rbp)
	movq	-11088(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1246:                              # Block address taken
.LBB11_3641:
	leaq	.L.str.1123(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11096(%rbp)
	movq	-11096(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1247:                              # Block address taken
.LBB11_3642:
	leaq	.L.str.1124(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11104(%rbp)
	movq	-11104(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1248:                              # Block address taken
.LBB11_3643:
	leaq	.L.str.1125(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11112(%rbp)
	movq	-11112(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1249:                              # Block address taken
.LBB11_3644:
	leaq	.L.str.1126(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11120(%rbp)
	movq	-11120(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1250:                              # Block address taken
.LBB11_3645:
	leaq	.L.str.1127(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11128(%rbp)
	movq	-11128(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1251:                              # Block address taken
.LBB11_3646:
	leaq	.L.str.1128(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11136(%rbp)
	movq	-11136(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1252:                              # Block address taken
.LBB11_3647:
	leaq	.L.str.1129(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11144(%rbp)
	movq	-11144(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1253:                              # Block address taken
.LBB11_3648:
	leaq	.L.str.1130(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11152(%rbp)
	movq	-11152(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1254:                              # Block address taken
.LBB11_3649:
	leaq	.L.str.1131(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11160(%rbp)
	movq	-11160(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1255:                              # Block address taken
.LBB11_3650:
	leaq	.L.str.1132(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11168(%rbp)
	movq	-11168(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1256:                              # Block address taken
.LBB11_3651:
	leaq	.L.str.1133(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11176(%rbp)
	movq	-11176(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1257:                              # Block address taken
.LBB11_3652:
	leaq	.L.str.1134(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11184(%rbp)
	movq	-11184(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1258:                              # Block address taken
.LBB11_3653:
	leaq	.L.str.1135(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11192(%rbp)
	movq	-11192(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1259:                              # Block address taken
.LBB11_3654:
	leaq	.L.str.1136(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11200(%rbp)
	movq	-11200(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1260:                              # Block address taken
.LBB11_3655:
	leaq	.L.str.1137(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11208(%rbp)
	movq	-11208(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1261:                              # Block address taken
.LBB11_3656:
	leaq	.L.str.1138(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11216(%rbp)
	movq	-11216(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1262:                              # Block address taken
.LBB11_3657:
	leaq	.L.str.1139(%rip), %rdi
	movl	$2, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11224(%rbp)
	movq	-11224(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1263:                              # Block address taken
.LBB11_3658:
	leaq	.L.str.1140(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11232(%rbp)
	movq	-11232(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1264:                              # Block address taken
.LBB11_3659:
	leaq	.L.str.1141(%rip), %rdi
	movl	$2, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11240(%rbp)
	movq	-11240(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1265:                              # Block address taken
.LBB11_3660:
	leaq	.L.str.1142(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11248(%rbp)
	movq	-11248(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1266:                              # Block address taken
.LBB11_3661:
	leaq	.L.str.1143(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11256(%rbp)
	movq	-11256(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1267:                              # Block address taken
.LBB11_3662:
	leaq	.L.str.1144(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11264(%rbp)
	movq	-11264(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1268:                              # Block address taken
.LBB11_3663:
	leaq	.L.str.1145(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11272(%rbp)
	movq	-11272(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1269:                              # Block address taken
.LBB11_3664:
	leaq	.L.str.1146(%rip), %rdi
	movl	$2, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11280(%rbp)
	movq	-11280(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1270:                              # Block address taken
.LBB11_3665:
	leaq	.L.str.1147(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11288(%rbp)
	movq	-11288(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1271:                              # Block address taken
.LBB11_3666:
	leaq	.L.str.1148(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11296(%rbp)
	movq	-11296(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1272:                              # Block address taken
.LBB11_3667:
	leaq	.L.str.1149(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11304(%rbp)
	movq	-11304(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1273:                              # Block address taken
.LBB11_3668:
	leaq	.L.str.1150(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11312(%rbp)
	movq	-11312(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1274:                              # Block address taken
.LBB11_3669:
	leaq	.L.str.1151(%rip), %rdi
	movl	$15, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11320(%rbp)
	movq	-11320(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1275:                              # Block address taken
.LBB11_3670:
	leaq	.L.str.1152(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11328(%rbp)
	movq	-11328(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1276:                              # Block address taken
.LBB11_3671:
	leaq	.L.str.1153(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11336(%rbp)
	movq	-11336(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1277:                              # Block address taken
.LBB11_3672:
	leaq	.L.str.1154(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11344(%rbp)
	movq	-11344(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1278:                              # Block address taken
.LBB11_3673:
	leaq	.L.str.1155(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11352(%rbp)
	movq	-11352(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1279:                              # Block address taken
.LBB11_3674:
	leaq	.L.str.1156(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11360(%rbp)
	movq	-11360(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1280:                              # Block address taken
.LBB11_3675:
	leaq	.L.str.1157(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11368(%rbp)
	movq	-11368(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1281:                              # Block address taken
.LBB11_3676:
	leaq	.L.str.1158(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11376(%rbp)
	movq	-11376(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1282:                              # Block address taken
.LBB11_3677:
	leaq	.L.str.1159(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11384(%rbp)
	movq	-11384(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1283:                              # Block address taken
.LBB11_3678:
	leaq	.L.str.1160(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11392(%rbp)
	movq	-11392(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1284:                              # Block address taken
.LBB11_3679:
	leaq	.L.str.1161(%rip), %rdi
	movl	$14, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11400(%rbp)
	movq	-11400(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1285:                              # Block address taken
.LBB11_3680:
	leaq	.L.str.1162(%rip), %rdi
	movl	$17, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11408(%rbp)
	movq	-11408(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1286:                              # Block address taken
.LBB11_3681:
	leaq	.L.str.1163(%rip), %rdi
	movl	$16, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11416(%rbp)
	movq	-11416(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1287:                              # Block address taken
.LBB11_3682:
	leaq	.L.str.1164(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11424(%rbp)
	movq	-11424(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1288:                              # Block address taken
.LBB11_3683:
	leaq	.L.str.1165(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11432(%rbp)
	movq	-11432(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1289:                              # Block address taken
.LBB11_3684:
	leaq	.L.str.1166(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11440(%rbp)
	movq	-11440(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1290:                              # Block address taken
.LBB11_3685:
	leaq	.L.str.1167(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11448(%rbp)
	movq	-11448(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1291:                              # Block address taken
.LBB11_3686:
	leaq	.L.str.1168(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11456(%rbp)
	movq	-11456(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1292:                              # Block address taken
.LBB11_3687:
	leaq	.L.str.1169(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11464(%rbp)
	movq	-11464(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1293:                              # Block address taken
.LBB11_3688:
	leaq	.L.str.1170(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11472(%rbp)
	movq	-11472(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1294:                              # Block address taken
.LBB11_3689:
	leaq	.L.str.1171(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11480(%rbp)
	movq	-11480(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1295:                              # Block address taken
.LBB11_3690:
	leaq	.L.str.1172(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11488(%rbp)
	movq	-11488(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1296:                              # Block address taken
.LBB11_3691:
	leaq	.L.str.1173(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11496(%rbp)
	movq	-11496(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1297:                              # Block address taken
.LBB11_3692:
	leaq	.L.str.1174(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11504(%rbp)
	movq	-11504(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1298:                              # Block address taken
.LBB11_3693:
	leaq	.L.str.1175(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11512(%rbp)
	movq	-11512(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1299:                              # Block address taken
.LBB11_3694:
	leaq	.L.str.1176(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11520(%rbp)
	movq	-11520(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1300:                              # Block address taken
.LBB11_3695:
	leaq	.L.str.1177(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11528(%rbp)
	movq	-11528(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1301:                              # Block address taken
.LBB11_3696:
	leaq	.L.str.1178(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11536(%rbp)
	movq	-11536(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1302:                              # Block address taken
.LBB11_3697:
	leaq	.L.str.1179(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11544(%rbp)
	movq	-11544(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1303:                              # Block address taken
.LBB11_3698:
	leaq	.L.str.1180(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11552(%rbp)
	movq	-11552(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1304:                              # Block address taken
.LBB11_3699:
	leaq	.L.str.1181(%rip), %rdi
	movl	$14, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11560(%rbp)
	movq	-11560(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1305:                              # Block address taken
.LBB11_3700:
	leaq	.L.str.1182(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11568(%rbp)
	movq	-11568(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1306:                              # Block address taken
.LBB11_3701:
	leaq	.L.str.1183(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11576(%rbp)
	movq	-11576(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1307:                              # Block address taken
.LBB11_3702:
	leaq	.L.str.1184(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11584(%rbp)
	movq	-11584(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1308:                              # Block address taken
.LBB11_3703:
	leaq	.L.str.1185(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11592(%rbp)
	movq	-11592(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1309:                              # Block address taken
.LBB11_3704:
	leaq	.L.str.1186(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11600(%rbp)
	movq	-11600(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1310:                              # Block address taken
.LBB11_3705:
	leaq	.L.str.1187(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11608(%rbp)
	movq	-11608(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1311:                              # Block address taken
.LBB11_3706:
	leaq	.L.str.1188(%rip), %rdi
	movl	$17, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11616(%rbp)
	movq	-11616(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1312:                              # Block address taken
.LBB11_3707:
	leaq	.L.str.1189(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11624(%rbp)
	movq	-11624(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1313:                              # Block address taken
.LBB11_3708:
	leaq	.L.str.1190(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11632(%rbp)
	movq	-11632(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1314:                              # Block address taken
.LBB11_3709:
	leaq	.L.str.1191(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11640(%rbp)
	movq	-11640(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1315:                              # Block address taken
.LBB11_3710:
	leaq	.L.str.1192(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11648(%rbp)
	movq	-11648(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1316:                              # Block address taken
.LBB11_3711:
	leaq	.L.str.1193(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11656(%rbp)
	movq	-11656(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1317:                              # Block address taken
.LBB11_3712:
	leaq	.L.str.1194(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11664(%rbp)
	movq	-11664(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1318:                              # Block address taken
.LBB11_3713:
	leaq	.L.str.1195(%rip), %rdi
	movl	$17, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11672(%rbp)
	movq	-11672(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1319:                              # Block address taken
.LBB11_3714:
	leaq	.L.str.1196(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11680(%rbp)
	movq	-11680(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1320:                              # Block address taken
.LBB11_3715:
	leaq	.L.str.1197(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11688(%rbp)
	movq	-11688(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1321:                              # Block address taken
.LBB11_3716:
	leaq	.L.str.1198(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11696(%rbp)
	movq	-11696(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1322:                              # Block address taken
.LBB11_3717:
	leaq	.L.str.1199(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11704(%rbp)
	movq	-11704(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1323:                              # Block address taken
.LBB11_3718:
	leaq	.L.str.1200(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11712(%rbp)
	movq	-11712(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1324:                              # Block address taken
.LBB11_3719:
	leaq	.L.str.1201(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11720(%rbp)
	movq	-11720(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1325:                              # Block address taken
.LBB11_3720:
	leaq	.L.str.1202(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11728(%rbp)
	movq	-11728(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1326:                              # Block address taken
.LBB11_3721:
	leaq	.L.str.1203(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11736(%rbp)
	movq	-11736(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1327:                              # Block address taken
.LBB11_3722:
	leaq	.L.str.1204(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11744(%rbp)
	movq	-11744(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1328:                              # Block address taken
.LBB11_3723:
	leaq	.L.str.1205(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11752(%rbp)
	movq	-11752(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1329:                              # Block address taken
.LBB11_3724:
	leaq	.L.str.152(%rip), %rdi
	movl	$1, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11760(%rbp)
	movq	-11760(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1330:                              # Block address taken
.LBB11_3725:
	leaq	.L.str.1206(%rip), %rdi
	movl	$16, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11768(%rbp)
	movq	-11768(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1331:                              # Block address taken
.LBB11_3726:
	leaq	.L.str.1207(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11776(%rbp)
	movq	-11776(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1332:                              # Block address taken
.LBB11_3727:
	leaq	.L.str.1208(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11784(%rbp)
	movq	-11784(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1333:                              # Block address taken
.LBB11_3728:
	leaq	.L.str.1209(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11792(%rbp)
	movq	-11792(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1334:                              # Block address taken
.LBB11_3729:
	leaq	.L.str.1210(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11800(%rbp)
	movq	-11800(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1335:                              # Block address taken
.LBB11_3730:
	leaq	.L.str.1211(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11808(%rbp)
	movq	-11808(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1336:                              # Block address taken
.LBB11_3731:
	leaq	.L.str.1212(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11816(%rbp)
	movq	-11816(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1337:                              # Block address taken
.LBB11_3732:
	leaq	.L.str.1213(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11824(%rbp)
	movq	-11824(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1338:                              # Block address taken
.LBB11_3733:
	leaq	.L.str.1214(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11832(%rbp)
	movq	-11832(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1339:                              # Block address taken
.LBB11_3734:
	leaq	.L.str.1215(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11840(%rbp)
	movq	-11840(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1340:                              # Block address taken
.LBB11_3735:
	leaq	.L.str.153(%rip), %rdi
	movl	$1, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11848(%rbp)
	movq	-11848(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1341:                              # Block address taken
.LBB11_3736:
	leaq	.L.str.1216(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11856(%rbp)
	movq	-11856(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1342:                              # Block address taken
.LBB11_3737:
	leaq	.L.str.1217(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11864(%rbp)
	movq	-11864(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1343:                              # Block address taken
.LBB11_3738:
	leaq	.L.str.1218(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11872(%rbp)
	movq	-11872(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1344:                              # Block address taken
.LBB11_3739:
	leaq	.L.str.1219(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11880(%rbp)
	movq	-11880(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1345:                              # Block address taken
.LBB11_3740:
	leaq	.L.str.1220(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11888(%rbp)
	movq	-11888(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1346:                              # Block address taken
.LBB11_3741:
	leaq	.L.str.1221(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11896(%rbp)
	movq	-11896(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1347:                              # Block address taken
.LBB11_3742:
	leaq	.L.str.1222(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11904(%rbp)
	movq	-11904(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.Ltmp1348:                              # Block address taken
.LBB11_3743:
	leaq	.L.str.1223(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11912(%rbp)
	movq	-11912(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_3747
.LBB11_3744:                            #   in Loop: Header=BB11_6020 Depth=1
	cmpq	$255, -9864(%rbp)
	jbe	.LBB11_3746
# %bb.3745:
	jmp	.LBB11_3747
.LBB11_3746:                            #   in Loop: Header=BB11_6020 Depth=1
	movq	-9864(%rbp), %rax
	subq	$0, %rax
	leaq	_ZN8MEMORY_T6POKE64Edd.tmp$2486(%rip), %rcx
	movq	(%rcx,%rax,8), %rax
	movq	%rax, -15848(%rbp)      # 8-byte Spill
	jmp	.LBB11_6020
.LBB11_3747:
	jmp	.LBB11_4944
.Ltmp1349:                              # Block address taken
.LBB11_3748:
	movq	-2216(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
	movq	%rax, -11920(%rbp)
	cmpq	$0, -11920(%rbp)
	je	.LBB11_3750
# %bb.3749:
	jmp	.LBB11_3752
.LBB11_3750:
	jmp	.LBB11_3751
.LBB11_3751:
	leaq	.L.str.1224(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11928(%rbp)
	movq	-11928(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3752:
	cmpq	$1, -11920(%rbp)
	je	.LBB11_3754
# %bb.3753:
	jmp	.LBB11_3756
.LBB11_3754:
	jmp	.LBB11_3755
.LBB11_3755:
	leaq	.L.str.1225(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11936(%rbp)
	movq	-11936(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3756:
	cmpq	$2, -11920(%rbp)
	je	.LBB11_3758
# %bb.3757:
	jmp	.LBB11_3760
.LBB11_3758:
	jmp	.LBB11_3759
.LBB11_3759:
	leaq	.L.str.1226(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11944(%rbp)
	movq	-11944(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3760:
	cmpq	$3, -11920(%rbp)
	je	.LBB11_3762
# %bb.3761:
	jmp	.LBB11_3764
.LBB11_3762:
	jmp	.LBB11_3763
.LBB11_3763:
	leaq	.L.str.1227(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11952(%rbp)
	movq	-11952(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3764:
	cmpq	$4, -11920(%rbp)
	je	.LBB11_3766
# %bb.3765:
	jmp	.LBB11_3768
.LBB11_3766:
	jmp	.LBB11_3767
.LBB11_3767:
	leaq	.L.str.1228(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11960(%rbp)
	movq	-11960(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3768:
	cmpq	$5, -11920(%rbp)
	je	.LBB11_3770
# %bb.3769:
	jmp	.LBB11_3772
.LBB11_3770:
	jmp	.LBB11_3771
.LBB11_3771:
	leaq	.L.str.1229(%rip), %rdi
	movl	$2, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11968(%rbp)
	movq	-11968(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3772:
	cmpq	$6, -11920(%rbp)
	je	.LBB11_3774
# %bb.3773:
	jmp	.LBB11_3776
.LBB11_3774:
	jmp	.LBB11_3775
.LBB11_3775:
	leaq	.L.str.1230(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11976(%rbp)
	movq	-11976(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3776:
	cmpq	$7, -11920(%rbp)
	je	.LBB11_3778
# %bb.3777:
	jmp	.LBB11_3780
.LBB11_3778:
	jmp	.LBB11_3779
.LBB11_3779:
	leaq	.L.str.1231(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11984(%rbp)
	movq	-11984(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3780:
	cmpq	$8, -11920(%rbp)
	je	.LBB11_3782
# %bb.3781:
	jmp	.LBB11_3784
.LBB11_3782:
	jmp	.LBB11_3783
.LBB11_3783:
	leaq	.L.str.1232(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -11992(%rbp)
	movq	-11992(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3784:
	cmpq	$9, -11920(%rbp)
	je	.LBB11_3786
# %bb.3785:
	jmp	.LBB11_3788
.LBB11_3786:
	jmp	.LBB11_3787
.LBB11_3787:
	leaq	.L.str.1233(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12000(%rbp)
	movq	-12000(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3788:
	cmpq	$10, -11920(%rbp)
	je	.LBB11_3790
# %bb.3789:
	jmp	.LBB11_3792
.LBB11_3790:
	jmp	.LBB11_3791
.LBB11_3791:
	leaq	.L.str.1234(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12008(%rbp)
	movq	-12008(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3792:
	cmpq	$11, -11920(%rbp)
	je	.LBB11_3794
# %bb.3793:
	jmp	.LBB11_3796
.LBB11_3794:
	jmp	.LBB11_3795
.LBB11_3795:
	leaq	.L.str.1235(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12016(%rbp)
	movq	-12016(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3796:
	cmpq	$12, -11920(%rbp)
	je	.LBB11_3798
# %bb.3797:
	jmp	.LBB11_3800
.LBB11_3798:
	jmp	.LBB11_3799
.LBB11_3799:
	leaq	.L.str.1236(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12024(%rbp)
	movq	-12024(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3800:
	cmpq	$13, -11920(%rbp)
	je	.LBB11_3802
# %bb.3801:
	jmp	.LBB11_3804
.LBB11_3802:
	jmp	.LBB11_3803
.LBB11_3803:
	leaq	.L.str.1237(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12032(%rbp)
	movq	-12032(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3804:
	cmpq	$14, -11920(%rbp)
	je	.LBB11_3806
# %bb.3805:
	jmp	.LBB11_3808
.LBB11_3806:
	jmp	.LBB11_3807
.LBB11_3807:
	leaq	.L.str.1238(%rip), %rdi
	movl	$15, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12040(%rbp)
	movq	-12040(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3808:
	cmpq	$15, -11920(%rbp)
	je	.LBB11_3810
# %bb.3809:
	jmp	.LBB11_3812
.LBB11_3810:
	jmp	.LBB11_3811
.LBB11_3811:
	leaq	.L.str.1239(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12048(%rbp)
	movq	-12048(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3812:
	cmpq	$16, -11920(%rbp)
	je	.LBB11_3814
# %bb.3813:
	jmp	.LBB11_3816
.LBB11_3814:
	jmp	.LBB11_3815
.LBB11_3815:
	leaq	.L.str.1240(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12056(%rbp)
	movq	-12056(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3816:
	cmpq	$17, -11920(%rbp)
	je	.LBB11_3818
# %bb.3817:
	jmp	.LBB11_3820
.LBB11_3818:
	jmp	.LBB11_3819
.LBB11_3819:
	leaq	.L.str.1241(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12064(%rbp)
	movq	-12064(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3820:
	cmpq	$18, -11920(%rbp)
	je	.LBB11_3822
# %bb.3821:
	jmp	.LBB11_3824
.LBB11_3822:
	jmp	.LBB11_3823
.LBB11_3823:
	leaq	.L.str.1242(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12072(%rbp)
	movq	-12072(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3824:
	cmpq	$19, -11920(%rbp)
	je	.LBB11_3826
# %bb.3825:
	jmp	.LBB11_3828
.LBB11_3826:
	jmp	.LBB11_3827
.LBB11_3827:
	leaq	.L.str.1243(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12080(%rbp)
	movq	-12080(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3828:
	cmpq	$20, -11920(%rbp)
	je	.LBB11_3830
# %bb.3829:
	jmp	.LBB11_3832
.LBB11_3830:
	jmp	.LBB11_3831
.LBB11_3831:
	leaq	.L.str.1244(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12088(%rbp)
	movq	-12088(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3832:
	cmpq	$21, -11920(%rbp)
	je	.LBB11_3834
# %bb.3833:
	jmp	.LBB11_3836
.LBB11_3834:
	jmp	.LBB11_3835
.LBB11_3835:
	leaq	.L.str.1245(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12096(%rbp)
	movq	-12096(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3836:
	cmpq	$22, -11920(%rbp)
	je	.LBB11_3838
# %bb.3837:
	jmp	.LBB11_3840
.LBB11_3838:
	jmp	.LBB11_3839
.LBB11_3839:
	leaq	.L.str.1246(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12104(%rbp)
	movq	-12104(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3840:
	cmpq	$23, -11920(%rbp)
	je	.LBB11_3842
# %bb.3841:
	jmp	.LBB11_3844
.LBB11_3842:
	jmp	.LBB11_3843
.LBB11_3843:
	leaq	.L.str.1247(%rip), %rdi
	movl	$19, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12112(%rbp)
	movq	-12112(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3844:
	cmpq	$24, -11920(%rbp)
	je	.LBB11_3846
# %bb.3845:
	jmp	.LBB11_3848
.LBB11_3846:
	jmp	.LBB11_3847
.LBB11_3847:
	leaq	.L.str.1248(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12120(%rbp)
	movq	-12120(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3848:
	cmpq	$25, -11920(%rbp)
	je	.LBB11_3850
# %bb.3849:
	jmp	.LBB11_3852
.LBB11_3850:
	jmp	.LBB11_3851
.LBB11_3851:
	leaq	.L.str.1249(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12128(%rbp)
	movq	-12128(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3852:
	cmpq	$26, -11920(%rbp)
	je	.LBB11_3854
# %bb.3853:
	jmp	.LBB11_3856
.LBB11_3854:
	jmp	.LBB11_3855
.LBB11_3855:
	leaq	.L.str.1250(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12136(%rbp)
	movq	-12136(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3856:
	cmpq	$27, -11920(%rbp)
	je	.LBB11_3858
# %bb.3857:
	jmp	.LBB11_3860
.LBB11_3858:
	jmp	.LBB11_3859
.LBB11_3859:
	leaq	.L.str.1251(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12144(%rbp)
	movq	-12144(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3860:
	cmpq	$28, -11920(%rbp)
	je	.LBB11_3862
# %bb.3861:
	jmp	.LBB11_3864
.LBB11_3862:
	jmp	.LBB11_3863
.LBB11_3863:
	leaq	.L.str.1252(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12152(%rbp)
	movq	-12152(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3864:
	cmpq	$29, -11920(%rbp)
	je	.LBB11_3866
# %bb.3865:
	jmp	.LBB11_3868
.LBB11_3866:
	jmp	.LBB11_3867
.LBB11_3867:
	leaq	.L.str.1253(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12160(%rbp)
	movq	-12160(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3868:
	cmpq	$30, -11920(%rbp)
	je	.LBB11_3870
# %bb.3869:
	jmp	.LBB11_3872
.LBB11_3870:
	jmp	.LBB11_3871
.LBB11_3871:
	leaq	.L.str.1254(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12168(%rbp)
	movq	-12168(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3872:
	cmpq	$31, -11920(%rbp)
	je	.LBB11_3874
# %bb.3873:
	jmp	.LBB11_3876
.LBB11_3874:
	jmp	.LBB11_3875
.LBB11_3875:
	leaq	.L.str.1255(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12176(%rbp)
	movq	-12176(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3876:
	cmpq	$32, -11920(%rbp)
	je	.LBB11_3878
# %bb.3877:
	jmp	.LBB11_3880
.LBB11_3878:
	jmp	.LBB11_3879
.LBB11_3879:
	leaq	.L.str.1256(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12184(%rbp)
	movq	-12184(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3880:
	cmpq	$33, -11920(%rbp)
	je	.LBB11_3882
# %bb.3881:
	jmp	.LBB11_3884
.LBB11_3882:
	jmp	.LBB11_3883
.LBB11_3883:
	leaq	.L.str.1257(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12192(%rbp)
	movq	-12192(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3884:
	cmpq	$34, -11920(%rbp)
	je	.LBB11_3886
# %bb.3885:
	jmp	.LBB11_3888
.LBB11_3886:
	jmp	.LBB11_3887
.LBB11_3887:
	leaq	.L.str.1258(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12200(%rbp)
	movq	-12200(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3888:
	cmpq	$35, -11920(%rbp)
	je	.LBB11_3890
# %bb.3889:
	jmp	.LBB11_3892
.LBB11_3890:
	jmp	.LBB11_3891
.LBB11_3891:
	leaq	.L.str.1259(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12208(%rbp)
	movq	-12208(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3892:
	cmpq	$36, -11920(%rbp)
	je	.LBB11_3894
# %bb.3893:
	jmp	.LBB11_3896
.LBB11_3894:
	jmp	.LBB11_3895
.LBB11_3895:
	leaq	.L.str.1260(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12216(%rbp)
	movq	-12216(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3896:
	cmpq	$37, -11920(%rbp)
	je	.LBB11_3898
# %bb.3897:
	jmp	.LBB11_3900
.LBB11_3898:
	jmp	.LBB11_3899
.LBB11_3899:
	leaq	.L.str.1261(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12224(%rbp)
	movq	-12224(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3900:
	cmpq	$38, -11920(%rbp)
	je	.LBB11_3902
# %bb.3901:
	jmp	.LBB11_3904
.LBB11_3902:
	jmp	.LBB11_3903
.LBB11_3903:
	leaq	.L.str.1262(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12232(%rbp)
	movq	-12232(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3904:
	cmpq	$39, -11920(%rbp)
	je	.LBB11_3906
# %bb.3905:
	jmp	.LBB11_3908
.LBB11_3906:
	jmp	.LBB11_3907
.LBB11_3907:
	leaq	.L.str.1263(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12240(%rbp)
	movq	-12240(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3908:
	cmpq	$40, -11920(%rbp)
	je	.LBB11_3910
# %bb.3909:
	jmp	.LBB11_3912
.LBB11_3910:
	jmp	.LBB11_3911
.LBB11_3911:
	leaq	.L.str.1264(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12248(%rbp)
	movq	-12248(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3912:
	cmpq	$41, -11920(%rbp)
	je	.LBB11_3914
# %bb.3913:
	jmp	.LBB11_3916
.LBB11_3914:
	jmp	.LBB11_3915
.LBB11_3915:
	leaq	.L.str.1265(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12256(%rbp)
	movq	-12256(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3916:
	cmpq	$42, -11920(%rbp)
	je	.LBB11_3918
# %bb.3917:
	jmp	.LBB11_3920
.LBB11_3918:
	jmp	.LBB11_3919
.LBB11_3919:
	leaq	.L.str.1266(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12264(%rbp)
	movq	-12264(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3920:
	cmpq	$43, -11920(%rbp)
	je	.LBB11_3922
# %bb.3921:
	jmp	.LBB11_3924
.LBB11_3922:
	jmp	.LBB11_3923
.LBB11_3923:
	leaq	.L.str.1267(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12272(%rbp)
	movq	-12272(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3924:
	cmpq	$44, -11920(%rbp)
	je	.LBB11_3926
# %bb.3925:
	jmp	.LBB11_3928
.LBB11_3926:
	jmp	.LBB11_3927
.LBB11_3927:
	leaq	.L.str.1268(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12280(%rbp)
	movq	-12280(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3928:
	cmpq	$45, -11920(%rbp)
	je	.LBB11_3930
# %bb.3929:
	jmp	.LBB11_3932
.LBB11_3930:
	jmp	.LBB11_3931
.LBB11_3931:
	leaq	.L.str.1269(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12288(%rbp)
	movq	-12288(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3932:
	cmpq	$46, -11920(%rbp)
	je	.LBB11_3934
# %bb.3933:
	jmp	.LBB11_3936
.LBB11_3934:
	jmp	.LBB11_3935
.LBB11_3935:
	leaq	.L.str.1270(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12296(%rbp)
	movq	-12296(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3936:
	cmpq	$47, -11920(%rbp)
	je	.LBB11_3938
# %bb.3937:
	jmp	.LBB11_3940
.LBB11_3938:
	jmp	.LBB11_3939
.LBB11_3939:
	leaq	.L.str.1271(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12304(%rbp)
	movq	-12304(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3940:
	cmpq	$48, -11920(%rbp)
	je	.LBB11_3942
# %bb.3941:
	jmp	.LBB11_3944
.LBB11_3942:
	jmp	.LBB11_3943
.LBB11_3943:
	leaq	.L.str.1272(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12312(%rbp)
	movq	-12312(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3944:
	cmpq	$49, -11920(%rbp)
	je	.LBB11_3946
# %bb.3945:
	jmp	.LBB11_3948
.LBB11_3946:
	jmp	.LBB11_3947
.LBB11_3947:
	leaq	.L.str.1273(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12320(%rbp)
	movq	-12320(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3948:
	cmpq	$50, -11920(%rbp)
	je	.LBB11_3950
# %bb.3949:
	jmp	.LBB11_3952
.LBB11_3950:
	jmp	.LBB11_3951
.LBB11_3951:
	leaq	.L.str.1274(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12328(%rbp)
	movq	-12328(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3952:
	cmpq	$51, -11920(%rbp)
	je	.LBB11_3954
# %bb.3953:
	jmp	.LBB11_3956
.LBB11_3954:
	jmp	.LBB11_3955
.LBB11_3955:
	leaq	.L.str.1275(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12336(%rbp)
	movq	-12336(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3956:
	cmpq	$52, -11920(%rbp)
	je	.LBB11_3958
# %bb.3957:
	jmp	.LBB11_3960
.LBB11_3958:
	jmp	.LBB11_3959
.LBB11_3959:
	leaq	.L.str.1276(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12344(%rbp)
	movq	-12344(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3960:
	cmpq	$53, -11920(%rbp)
	je	.LBB11_3962
# %bb.3961:
	jmp	.LBB11_3964
.LBB11_3962:
	jmp	.LBB11_3963
.LBB11_3963:
	leaq	.L.str.1277(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12352(%rbp)
	movq	-12352(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3964:
	cmpq	$54, -11920(%rbp)
	je	.LBB11_3966
# %bb.3965:
	jmp	.LBB11_3968
.LBB11_3966:
	jmp	.LBB11_3967
.LBB11_3967:
	leaq	.L.str.1278(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12360(%rbp)
	movq	-12360(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3968:
	cmpq	$55, -11920(%rbp)
	je	.LBB11_3970
# %bb.3969:
	jmp	.LBB11_3972
.LBB11_3970:
	jmp	.LBB11_3971
.LBB11_3971:
	leaq	.L.str.1279(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12368(%rbp)
	movq	-12368(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3972:
	cmpq	$56, -11920(%rbp)
	je	.LBB11_3974
# %bb.3973:
	jmp	.LBB11_3976
.LBB11_3974:
	jmp	.LBB11_3975
.LBB11_3975:
	leaq	.L.str.1280(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12376(%rbp)
	movq	-12376(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3976:
	cmpq	$57, -11920(%rbp)
	je	.LBB11_3978
# %bb.3977:
	jmp	.LBB11_3980
.LBB11_3978:
	jmp	.LBB11_3979
.LBB11_3979:
	leaq	.L.str.1281(%rip), %rdi
	movl	$2, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12384(%rbp)
	movq	-12384(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3980:
	cmpq	$58, -11920(%rbp)
	je	.LBB11_3982
# %bb.3981:
	jmp	.LBB11_3984
.LBB11_3982:
	jmp	.LBB11_3983
.LBB11_3983:
	leaq	.L.str.1282(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12392(%rbp)
	movq	-12392(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3984:
	cmpq	$59, -11920(%rbp)
	je	.LBB11_3986
# %bb.3985:
	jmp	.LBB11_3988
.LBB11_3986:
	jmp	.LBB11_3987
.LBB11_3987:
	leaq	.L.str.1283(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12400(%rbp)
	movq	-12400(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3988:
	cmpq	$60, -11920(%rbp)
	je	.LBB11_3990
# %bb.3989:
	jmp	.LBB11_3992
.LBB11_3990:
	jmp	.LBB11_3991
.LBB11_3991:
	leaq	.L.str.1284(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12408(%rbp)
	movq	-12408(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3992:
	cmpq	$61, -11920(%rbp)
	je	.LBB11_3994
# %bb.3993:
	jmp	.LBB11_3996
.LBB11_3994:
	jmp	.LBB11_3995
.LBB11_3995:
	leaq	.L.str.1285(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12416(%rbp)
	movq	-12416(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_3996:
	cmpq	$62, -11920(%rbp)
	je	.LBB11_3998
# %bb.3997:
	jmp	.LBB11_4000
.LBB11_3998:
	jmp	.LBB11_3999
.LBB11_3999:
	leaq	.L.str.1286(%rip), %rdi
	movl	$2, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12424(%rbp)
	movq	-12424(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4000:
	cmpq	$63, -11920(%rbp)
	je	.LBB11_4002
# %bb.4001:
	jmp	.LBB11_4004
.LBB11_4002:
	jmp	.LBB11_4003
.LBB11_4003:
	leaq	.L.str.1287(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12432(%rbp)
	movq	-12432(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4004:
	cmpq	$64, -11920(%rbp)
	je	.LBB11_4006
# %bb.4005:
	jmp	.LBB11_4008
.LBB11_4006:
	jmp	.LBB11_4007
.LBB11_4007:
	leaq	.L.str.1287(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12440(%rbp)
	movq	-12440(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4008:
	cmpq	$65, -11920(%rbp)
	je	.LBB11_4010
# %bb.4009:
	jmp	.LBB11_4012
.LBB11_4010:
	jmp	.LBB11_4011
.LBB11_4011:
	leaq	.L.str.1288(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12448(%rbp)
	movq	-12448(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4012:
	cmpq	$66, -11920(%rbp)
	je	.LBB11_4014
# %bb.4013:
	jmp	.LBB11_4016
.LBB11_4014:
	jmp	.LBB11_4015
.LBB11_4015:
	leaq	.L.str.1289(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12456(%rbp)
	movq	-12456(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4016:
	cmpq	$67, -11920(%rbp)
	je	.LBB11_4018
# %bb.4017:
	jmp	.LBB11_4020
.LBB11_4018:
	jmp	.LBB11_4019
.LBB11_4019:
	leaq	.L.str.1290(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12464(%rbp)
	movq	-12464(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4020:
	cmpq	$68, -11920(%rbp)
	je	.LBB11_4022
# %bb.4021:
	jmp	.LBB11_4024
.LBB11_4022:
	jmp	.LBB11_4023
.LBB11_4023:
	leaq	.L.str.1291(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12472(%rbp)
	movq	-12472(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4024:
	cmpq	$69, -11920(%rbp)
	je	.LBB11_4026
# %bb.4025:
	jmp	.LBB11_4028
.LBB11_4026:
	jmp	.LBB11_4027
.LBB11_4027:
	leaq	.L.str.1292(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12480(%rbp)
	movq	-12480(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4028:
	cmpq	$70, -11920(%rbp)
	je	.LBB11_4030
# %bb.4029:
	jmp	.LBB11_4032
.LBB11_4030:
	jmp	.LBB11_4031
.LBB11_4031:
	leaq	.L.str.1293(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12488(%rbp)
	movq	-12488(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4032:
	cmpq	$71, -11920(%rbp)
	je	.LBB11_4034
# %bb.4033:
	jmp	.LBB11_4036
.LBB11_4034:
	jmp	.LBB11_4035
.LBB11_4035:
	leaq	.L.str.1294(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12496(%rbp)
	movq	-12496(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4036:
	cmpq	$72, -11920(%rbp)
	je	.LBB11_4038
# %bb.4037:
	jmp	.LBB11_4040
.LBB11_4038:
	jmp	.LBB11_4039
.LBB11_4039:
	leaq	.L.str.1295(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12504(%rbp)
	movq	-12504(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4040:
	cmpq	$73, -11920(%rbp)
	je	.LBB11_4042
# %bb.4041:
	jmp	.LBB11_4044
.LBB11_4042:
	jmp	.LBB11_4043
.LBB11_4043:
	leaq	.L.str.1296(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12512(%rbp)
	movq	-12512(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4044:
	cmpq	$74, -11920(%rbp)
	je	.LBB11_4046
# %bb.4045:
	jmp	.LBB11_4048
.LBB11_4046:
	jmp	.LBB11_4047
.LBB11_4047:
	leaq	.L.str.1297(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12520(%rbp)
	movq	-12520(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4048:
	cmpq	$75, -11920(%rbp)
	je	.LBB11_4050
# %bb.4049:
	jmp	.LBB11_4052
.LBB11_4050:
	jmp	.LBB11_4051
.LBB11_4051:
	leaq	.L.str.1298(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12528(%rbp)
	movq	-12528(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4052:
	cmpq	$76, -11920(%rbp)
	je	.LBB11_4054
# %bb.4053:
	jmp	.LBB11_4056
.LBB11_4054:
	jmp	.LBB11_4055
.LBB11_4055:
	leaq	.L.str.1299(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12536(%rbp)
	movq	-12536(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4056:
	cmpq	$77, -11920(%rbp)
	je	.LBB11_4058
# %bb.4057:
	jmp	.LBB11_4060
.LBB11_4058:
	jmp	.LBB11_4059
.LBB11_4059:
	leaq	.L.str.154(%rip), %rdi
	movl	$1, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12544(%rbp)
	movq	-12544(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4060:
	cmpq	$78, -11920(%rbp)
	je	.LBB11_4062
# %bb.4061:
	jmp	.LBB11_4064
.LBB11_4062:
	jmp	.LBB11_4063
.LBB11_4063:
	leaq	.L.str.1300(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12552(%rbp)
	movq	-12552(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4064:
	cmpq	$79, -11920(%rbp)
	je	.LBB11_4066
# %bb.4065:
	jmp	.LBB11_4068
.LBB11_4066:
	jmp	.LBB11_4067
.LBB11_4067:
	leaq	.L.str.1301(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12560(%rbp)
	movq	-12560(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4068:
	cmpq	$80, -11920(%rbp)
	je	.LBB11_4070
# %bb.4069:
	jmp	.LBB11_4072
.LBB11_4070:
	jmp	.LBB11_4071
.LBB11_4071:
	leaq	.L.str.1302(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12568(%rbp)
	movq	-12568(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4072:
	cmpq	$81, -11920(%rbp)
	je	.LBB11_4074
# %bb.4073:
	jmp	.LBB11_4076
.LBB11_4074:
	jmp	.LBB11_4075
.LBB11_4075:
	leaq	.L.str.1303(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12576(%rbp)
	movq	-12576(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4076:
	cmpq	$82, -11920(%rbp)
	je	.LBB11_4078
# %bb.4077:
	jmp	.LBB11_4080
.LBB11_4078:
	jmp	.LBB11_4079
.LBB11_4079:
	leaq	.L.str.1304(%rip), %rdi
	movl	$14, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12584(%rbp)
	movq	-12584(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4080:
	cmpq	$83, -11920(%rbp)
	je	.LBB11_4082
# %bb.4081:
	jmp	.LBB11_4084
.LBB11_4082:
	jmp	.LBB11_4083
.LBB11_4083:
	leaq	.L.str.1305(%rip), %rdi
	movl	$20, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12592(%rbp)
	movq	-12592(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4084:
	cmpq	$84, -11920(%rbp)
	je	.LBB11_4086
# %bb.4085:
	jmp	.LBB11_4088
.LBB11_4086:
	jmp	.LBB11_4087
.LBB11_4087:
	leaq	.L.str.1306(%rip), %rdi
	movl	$15, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12600(%rbp)
	movq	-12600(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4088:
	cmpq	$95, -11920(%rbp)
	je	.LBB11_4090
# %bb.4089:
	jmp	.LBB11_4092
.LBB11_4090:
	jmp	.LBB11_4091
.LBB11_4091:
	leaq	.L.str.1307(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12608(%rbp)
	movq	-12608(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4092:
	cmpq	$86, -11920(%rbp)
	je	.LBB11_4094
# %bb.4093:
	jmp	.LBB11_4096
.LBB11_4094:
	jmp	.LBB11_4095
.LBB11_4095:
	leaq	.L.str.1308(%rip), %rdi
	movl	$14, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12616(%rbp)
	movq	-12616(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4096:
	cmpq	$87, -11920(%rbp)
	je	.LBB11_4098
# %bb.4097:
	jmp	.LBB11_4100
.LBB11_4098:
	jmp	.LBB11_4099
.LBB11_4099:
	leaq	.L.str.1309(%rip), %rdi
	movl	$20, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12624(%rbp)
	movq	-12624(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4100:
	cmpq	$88, -11920(%rbp)
	je	.LBB11_4102
# %bb.4101:
	jmp	.LBB11_4104
.LBB11_4102:
	jmp	.LBB11_4103
.LBB11_4103:
	leaq	.L.str.1310(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12632(%rbp)
	movq	-12632(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4104:
	cmpq	$89, -11920(%rbp)
	je	.LBB11_4106
# %bb.4105:
	jmp	.LBB11_4108
.LBB11_4106:
	jmp	.LBB11_4107
.LBB11_4107:
	leaq	.L.str.1311(%rip), %rdi
	movl	$19, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12640(%rbp)
	movq	-12640(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4108:
	cmpq	$90, -11920(%rbp)
	je	.LBB11_4110
# %bb.4109:
	jmp	.LBB11_4112
.LBB11_4110:
	jmp	.LBB11_4111
.LBB11_4111:
	leaq	.L.str.1312(%rip), %rdi
	movl	$15, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12648(%rbp)
	movq	-12648(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4112:
	cmpq	$91, -11920(%rbp)
	je	.LBB11_4114
# %bb.4113:
	jmp	.LBB11_4116
.LBB11_4114:
	jmp	.LBB11_4115
.LBB11_4115:
	leaq	.L.str.1313(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12656(%rbp)
	movq	-12656(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4116:
	cmpq	$92, -11920(%rbp)
	je	.LBB11_4118
# %bb.4117:
	jmp	.LBB11_4120
.LBB11_4118:
	jmp	.LBB11_4119
.LBB11_4119:
	leaq	.L.str.1314(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12664(%rbp)
	movq	-12664(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4120:
	cmpq	$93, -11920(%rbp)
	je	.LBB11_4122
# %bb.4121:
	jmp	.LBB11_4124
.LBB11_4122:
	jmp	.LBB11_4123
.LBB11_4123:
	leaq	.L.str.1315(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12672(%rbp)
	movq	-12672(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4124:
	cmpq	$94, -11920(%rbp)
	je	.LBB11_4126
# %bb.4125:
	jmp	.LBB11_4128
.LBB11_4126:
	jmp	.LBB11_4127
.LBB11_4127:
	leaq	.L.str.1316(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12680(%rbp)
	movq	-12680(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4128:
	cmpq	$95, -11920(%rbp)
	je	.LBB11_4130
# %bb.4129:
	jmp	.LBB11_4132
.LBB11_4130:
	jmp	.LBB11_4131
.LBB11_4131:
	leaq	.L.str.1317(%rip), %rdi
	movl	$17, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12688(%rbp)
	movq	-12688(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4132:
	cmpq	$96, -11920(%rbp)
	je	.LBB11_4134
# %bb.4133:
	jmp	.LBB11_4136
.LBB11_4134:
	jmp	.LBB11_4135
.LBB11_4135:
	leaq	.L.str.1318(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12696(%rbp)
	movq	-12696(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4136:
	cmpq	$97, -11920(%rbp)
	je	.LBB11_4138
# %bb.4137:
	jmp	.LBB11_4140
.LBB11_4138:
	jmp	.LBB11_4139
.LBB11_4139:
	leaq	.L.str.1319(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12704(%rbp)
	movq	-12704(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4140:
	cmpq	$98, -11920(%rbp)
	je	.LBB11_4142
# %bb.4141:
	jmp	.LBB11_4144
.LBB11_4142:
	jmp	.LBB11_4143
.LBB11_4143:
	leaq	.L.str.1320(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12712(%rbp)
	movq	-12712(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4144:
	cmpq	$99, -11920(%rbp)
	je	.LBB11_4146
# %bb.4145:
	jmp	.LBB11_4148
.LBB11_4146:
	jmp	.LBB11_4147
.LBB11_4147:
	leaq	.L.str.1321(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12720(%rbp)
	movq	-12720(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4148:
	cmpq	$100, -11920(%rbp)
	je	.LBB11_4150
# %bb.4149:
	jmp	.LBB11_4152
.LBB11_4150:
	jmp	.LBB11_4151
.LBB11_4151:
	leaq	.L.str.1322(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12728(%rbp)
	movq	-12728(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4152:
	cmpq	$101, -11920(%rbp)
	je	.LBB11_4154
# %bb.4153:
	jmp	.LBB11_4156
.LBB11_4154:
	jmp	.LBB11_4155
.LBB11_4155:
	leaq	.L.str.1323(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12736(%rbp)
	movq	-12736(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4156:
	cmpq	$102, -11920(%rbp)
	je	.LBB11_4158
# %bb.4157:
	jmp	.LBB11_4160
.LBB11_4158:
	jmp	.LBB11_4159
.LBB11_4159:
	leaq	.L.str.1324(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12744(%rbp)
	movq	-12744(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4160:
	cmpq	$103, -11920(%rbp)
	je	.LBB11_4162
# %bb.4161:
	jmp	.LBB11_4164
.LBB11_4162:
	jmp	.LBB11_4163
.LBB11_4163:
	leaq	.L.str.1325(%rip), %rdi
	movl	$2, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12752(%rbp)
	movq	-12752(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4164:
	cmpq	$104, -11920(%rbp)
	je	.LBB11_4166
# %bb.4165:
	jmp	.LBB11_4168
.LBB11_4166:
	jmp	.LBB11_4167
.LBB11_4167:
	leaq	.L.str.1326(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12760(%rbp)
	movq	-12760(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4168:
	cmpq	$105, -11920(%rbp)
	je	.LBB11_4170
# %bb.4169:
	jmp	.LBB11_4172
.LBB11_4170:
	jmp	.LBB11_4171
.LBB11_4171:
	leaq	.L.str.1327(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12768(%rbp)
	movq	-12768(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4172:
	cmpq	$106, -11920(%rbp)
	je	.LBB11_4174
# %bb.4173:
	jmp	.LBB11_4176
.LBB11_4174:
	jmp	.LBB11_4175
.LBB11_4175:
	leaq	.L.str.1328(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12776(%rbp)
	movq	-12776(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4176:
	cmpq	$107, -11920(%rbp)
	je	.LBB11_4178
# %bb.4177:
	jmp	.LBB11_4180
.LBB11_4178:
	jmp	.LBB11_4179
.LBB11_4179:
	leaq	.L.str.1329(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12784(%rbp)
	movq	-12784(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4180:
	cmpq	$108, -11920(%rbp)
	je	.LBB11_4182
# %bb.4181:
	jmp	.LBB11_4184
.LBB11_4182:
	jmp	.LBB11_4183
.LBB11_4183:
	leaq	.L.str.1330(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12792(%rbp)
	movq	-12792(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4184:
	cmpq	$109, -11920(%rbp)
	je	.LBB11_4186
# %bb.4185:
	jmp	.LBB11_4188
.LBB11_4186:
	jmp	.LBB11_4187
.LBB11_4187:
	leaq	.L.str.1331(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12800(%rbp)
	movq	-12800(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4188:
	cmpq	$110, -11920(%rbp)
	je	.LBB11_4190
# %bb.4189:
	jmp	.LBB11_4192
.LBB11_4190:
	jmp	.LBB11_4191
.LBB11_4191:
	leaq	.L.str.1332(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12808(%rbp)
	movq	-12808(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4192:
	cmpq	$111, -11920(%rbp)
	je	.LBB11_4194
# %bb.4193:
	jmp	.LBB11_4196
.LBB11_4194:
	jmp	.LBB11_4195
.LBB11_4195:
	leaq	.L.str.1328(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12816(%rbp)
	movq	-12816(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4196:
	cmpq	$112, -11920(%rbp)
	je	.LBB11_4198
# %bb.4197:
	jmp	.LBB11_4200
.LBB11_4198:
	jmp	.LBB11_4199
.LBB11_4199:
	leaq	.L.str.1333(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12824(%rbp)
	movq	-12824(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4200:
	cmpq	$113, -11920(%rbp)
	je	.LBB11_4202
# %bb.4201:
	jmp	.LBB11_4204
.LBB11_4202:
	jmp	.LBB11_4203
.LBB11_4203:
	leaq	.L.str.1334(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12832(%rbp)
	movq	-12832(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4204:
	cmpq	$114, -11920(%rbp)
	je	.LBB11_4206
# %bb.4205:
	jmp	.LBB11_4208
.LBB11_4206:
	jmp	.LBB11_4207
.LBB11_4207:
	leaq	.L.str.1335(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12840(%rbp)
	movq	-12840(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4208:
	cmpq	$115, -11920(%rbp)
	je	.LBB11_4210
# %bb.4209:
	jmp	.LBB11_4212
.LBB11_4210:
	jmp	.LBB11_4211
.LBB11_4211:
	leaq	.L.str.1336(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12848(%rbp)
	movq	-12848(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4212:
	cmpq	$116, -11920(%rbp)
	je	.LBB11_4214
# %bb.4213:
	jmp	.LBB11_4216
.LBB11_4214:
	jmp	.LBB11_4215
.LBB11_4215:
	leaq	.L.str.1337(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12856(%rbp)
	movq	-12856(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4216:
	cmpq	$117, -11920(%rbp)
	je	.LBB11_4218
# %bb.4217:
	jmp	.LBB11_4220
.LBB11_4218:
	jmp	.LBB11_4219
.LBB11_4219:
	leaq	.L.str.1338(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12864(%rbp)
	movq	-12864(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4220:
	cmpq	$118, -11920(%rbp)
	je	.LBB11_4222
# %bb.4221:
	jmp	.LBB11_4224
.LBB11_4222:
	jmp	.LBB11_4223
.LBB11_4223:
	leaq	.L.str.1339(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12872(%rbp)
	movq	-12872(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4224:
	cmpq	$119, -11920(%rbp)
	je	.LBB11_4226
# %bb.4225:
	jmp	.LBB11_4228
.LBB11_4226:
	jmp	.LBB11_4227
.LBB11_4227:
	leaq	.L.str.1340(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12880(%rbp)
	movq	-12880(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4228:
	cmpq	$120, -11920(%rbp)
	je	.LBB11_4230
# %bb.4229:
	jmp	.LBB11_4232
.LBB11_4230:
	jmp	.LBB11_4231
.LBB11_4231:
	leaq	.L.str.1341(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12888(%rbp)
	movq	-12888(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4232:
	cmpq	$121, -11920(%rbp)
	je	.LBB11_4234
# %bb.4233:
	jmp	.LBB11_4236
.LBB11_4234:
	jmp	.LBB11_4235
.LBB11_4235:
	leaq	.L.str.1342(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12896(%rbp)
	movq	-12896(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4236:
	cmpq	$122, -11920(%rbp)
	je	.LBB11_4238
# %bb.4237:
	jmp	.LBB11_4240
.LBB11_4238:
	jmp	.LBB11_4239
.LBB11_4239:
	leaq	.L.str.1343(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12904(%rbp)
	movq	-12904(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4240:
	cmpq	$123, -11920(%rbp)
	je	.LBB11_4242
# %bb.4241:
	jmp	.LBB11_4244
.LBB11_4242:
	jmp	.LBB11_4243
.LBB11_4243:
	leaq	.L.str.1344(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12912(%rbp)
	movq	-12912(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4244:
	cmpq	$124, -11920(%rbp)
	je	.LBB11_4246
# %bb.4245:
	jmp	.LBB11_4248
.LBB11_4246:
	jmp	.LBB11_4247
.LBB11_4247:
	leaq	.L.str.1345(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12920(%rbp)
	movq	-12920(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4248:
	cmpq	$125, -11920(%rbp)
	je	.LBB11_4250
# %bb.4249:
	jmp	.LBB11_4252
.LBB11_4250:
	jmp	.LBB11_4251
.LBB11_4251:
	leaq	.L.str.1346(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12928(%rbp)
	movq	-12928(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4252:
	cmpq	$126, -11920(%rbp)
	je	.LBB11_4254
# %bb.4253:
	jmp	.LBB11_4256
.LBB11_4254:
	jmp	.LBB11_4255
.LBB11_4255:
	leaq	.L.str.1347(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12936(%rbp)
	movq	-12936(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4256:
	cmpq	$127, -11920(%rbp)
	je	.LBB11_4258
# %bb.4257:
	jmp	.LBB11_4260
.LBB11_4258:
	jmp	.LBB11_4259
.LBB11_4259:
	leaq	.L.str.1348(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12944(%rbp)
	movq	-12944(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4260:
	cmpq	$128, -11920(%rbp)
	je	.LBB11_4262
# %bb.4261:
	jmp	.LBB11_4264
.LBB11_4262:
	jmp	.LBB11_4263
.LBB11_4263:
	leaq	.L.str.1349(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12952(%rbp)
	movq	-12952(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4264:
	cmpq	$129, -11920(%rbp)
	je	.LBB11_4266
# %bb.4265:
	jmp	.LBB11_4268
.LBB11_4266:
	jmp	.LBB11_4267
.LBB11_4267:
	leaq	.L.str.1350(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12960(%rbp)
	movq	-12960(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4268:
	cmpq	$130, -11920(%rbp)
	je	.LBB11_4270
# %bb.4269:
	jmp	.LBB11_4272
.LBB11_4270:
	jmp	.LBB11_4271
.LBB11_4271:
	leaq	.L.str.1351(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12968(%rbp)
	movq	-12968(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4272:
	cmpq	$131, -11920(%rbp)
	je	.LBB11_4274
# %bb.4273:
	jmp	.LBB11_4276
.LBB11_4274:
	jmp	.LBB11_4275
.LBB11_4275:
	leaq	.L.str.1352(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12976(%rbp)
	movq	-12976(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4276:
	cmpq	$132, -11920(%rbp)
	je	.LBB11_4278
# %bb.4277:
	jmp	.LBB11_4280
.LBB11_4278:
	jmp	.LBB11_4279
.LBB11_4279:
	leaq	.L.str.1353(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12984(%rbp)
	movq	-12984(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4280:
	cmpq	$133, -11920(%rbp)
	je	.LBB11_4282
# %bb.4281:
	jmp	.LBB11_4284
.LBB11_4282:
	jmp	.LBB11_4283
.LBB11_4283:
	leaq	.L.str.1354(%rip), %rdi
	movl	$18, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -12992(%rbp)
	movq	-12992(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4284:
	cmpq	$134, -11920(%rbp)
	je	.LBB11_4286
# %bb.4285:
	jmp	.LBB11_4288
.LBB11_4286:
	jmp	.LBB11_4287
.LBB11_4287:
	leaq	.L.str.1355(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13000(%rbp)
	movq	-13000(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4288:
	cmpq	$135, -11920(%rbp)
	je	.LBB11_4290
# %bb.4289:
	jmp	.LBB11_4292
.LBB11_4290:
	jmp	.LBB11_4291
.LBB11_4291:
	leaq	.L.str.1356(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13008(%rbp)
	movq	-13008(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4292:
	cmpq	$136, -11920(%rbp)
	je	.LBB11_4294
# %bb.4293:
	jmp	.LBB11_4296
.LBB11_4294:
	jmp	.LBB11_4295
.LBB11_4295:
	leaq	.L.str.1357(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13016(%rbp)
	movq	-13016(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4296:
	cmpq	$137, -11920(%rbp)
	je	.LBB11_4298
# %bb.4297:
	jmp	.LBB11_4300
.LBB11_4298:
	jmp	.LBB11_4299
.LBB11_4299:
	leaq	.L.str.1358(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13024(%rbp)
	movq	-13024(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4300:
	cmpq	$138, -11920(%rbp)
	je	.LBB11_4302
# %bb.4301:
	jmp	.LBB11_4304
.LBB11_4302:
	jmp	.LBB11_4303
.LBB11_4303:
	leaq	.L.str.1359(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13032(%rbp)
	movq	-13032(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4304:
	cmpq	$139, -11920(%rbp)
	je	.LBB11_4306
# %bb.4305:
	jmp	.LBB11_4308
.LBB11_4306:
	jmp	.LBB11_4307
.LBB11_4307:
	leaq	.L.str.1360(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13040(%rbp)
	movq	-13040(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4308:
	cmpq	$140, -11920(%rbp)
	je	.LBB11_4310
# %bb.4309:
	jmp	.LBB11_4312
.LBB11_4310:
	jmp	.LBB11_4311
.LBB11_4311:
	leaq	.L.str.1361(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13048(%rbp)
	movq	-13048(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4312:
	cmpq	$141, -11920(%rbp)
	je	.LBB11_4314
# %bb.4313:
	jmp	.LBB11_4316
.LBB11_4314:
	jmp	.LBB11_4315
.LBB11_4315:
	leaq	.L.str.1362(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13056(%rbp)
	movq	-13056(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4316:
	cmpq	$142, -11920(%rbp)
	je	.LBB11_4318
# %bb.4317:
	jmp	.LBB11_4320
.LBB11_4318:
	jmp	.LBB11_4319
.LBB11_4319:
	leaq	.L.str.1363(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13064(%rbp)
	movq	-13064(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4320:
	cmpq	$143, -11920(%rbp)
	je	.LBB11_4322
# %bb.4321:
	jmp	.LBB11_4324
.LBB11_4322:
	jmp	.LBB11_4323
.LBB11_4323:
	leaq	.L.str.1364(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13072(%rbp)
	movq	-13072(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4324:
	cmpq	$144, -11920(%rbp)
	je	.LBB11_4326
# %bb.4325:
	jmp	.LBB11_4328
.LBB11_4326:
	jmp	.LBB11_4327
.LBB11_4327:
	leaq	.L.str.1365(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13080(%rbp)
	movq	-13080(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4328:
	cmpq	$145, -11920(%rbp)
	je	.LBB11_4330
# %bb.4329:
	jmp	.LBB11_4332
.LBB11_4330:
	jmp	.LBB11_4331
.LBB11_4331:
	leaq	.L.str.1366(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13088(%rbp)
	movq	-13088(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4332:
	cmpq	$146, -11920(%rbp)
	je	.LBB11_4334
# %bb.4333:
	jmp	.LBB11_4336
.LBB11_4334:
	jmp	.LBB11_4335
.LBB11_4335:
	leaq	.L.str.1367(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13096(%rbp)
	movq	-13096(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4336:
	cmpq	$147, -11920(%rbp)
	je	.LBB11_4338
# %bb.4337:
	jmp	.LBB11_4340
.LBB11_4338:
	jmp	.LBB11_4339
.LBB11_4339:
	leaq	.L.str.1368(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13104(%rbp)
	movq	-13104(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4340:
	cmpq	$148, -11920(%rbp)
	je	.LBB11_4342
# %bb.4341:
	jmp	.LBB11_4344
.LBB11_4342:
	jmp	.LBB11_4343
.LBB11_4343:
	leaq	.L.str.1369(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13112(%rbp)
	movq	-13112(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4344:
	cmpq	$149, -11920(%rbp)
	je	.LBB11_4346
# %bb.4345:
	jmp	.LBB11_4348
.LBB11_4346:
	jmp	.LBB11_4347
.LBB11_4347:
	leaq	.L.str.1370(%rip), %rdi
	movl	$17, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13120(%rbp)
	movq	-13120(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4348:
	cmpq	$150, -11920(%rbp)
	je	.LBB11_4350
# %bb.4349:
	jmp	.LBB11_4352
.LBB11_4350:
	jmp	.LBB11_4351
.LBB11_4351:
	leaq	.L.str.1371(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13128(%rbp)
	movq	-13128(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4352:
	cmpq	$151, -11920(%rbp)
	je	.LBB11_4354
# %bb.4353:
	jmp	.LBB11_4356
.LBB11_4354:
	jmp	.LBB11_4355
.LBB11_4355:
	leaq	.L.str.1372(%rip), %rdi
	movl	$15, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13136(%rbp)
	movq	-13136(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4356:
	cmpq	$152, -11920(%rbp)
	je	.LBB11_4358
# %bb.4357:
	jmp	.LBB11_4360
.LBB11_4358:
	jmp	.LBB11_4359
.LBB11_4359:
	leaq	.L.str.1373(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13144(%rbp)
	movq	-13144(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4360:
	cmpq	$153, -11920(%rbp)
	je	.LBB11_4362
# %bb.4361:
	jmp	.LBB11_4364
.LBB11_4362:
	jmp	.LBB11_4363
.LBB11_4363:
	leaq	.L.str.1374(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13152(%rbp)
	movq	-13152(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4364:
	cmpq	$154, -11920(%rbp)
	je	.LBB11_4366
# %bb.4365:
	jmp	.LBB11_4368
.LBB11_4366:
	jmp	.LBB11_4367
.LBB11_4367:
	leaq	.L.str.1375(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13160(%rbp)
	movq	-13160(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4368:
	cmpq	$155, -11920(%rbp)
	je	.LBB11_4370
# %bb.4369:
	jmp	.LBB11_4372
.LBB11_4370:
	jmp	.LBB11_4371
.LBB11_4371:
	leaq	.L.str.1376(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13168(%rbp)
	movq	-13168(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4372:
	cmpq	$156, -11920(%rbp)
	je	.LBB11_4374
# %bb.4373:
	jmp	.LBB11_4376
.LBB11_4374:
	jmp	.LBB11_4375
.LBB11_4375:
	leaq	.L.str.1377(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13176(%rbp)
	movq	-13176(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4376:
	cmpq	$157, -11920(%rbp)
	je	.LBB11_4378
# %bb.4377:
	jmp	.LBB11_4380
.LBB11_4378:
	jmp	.LBB11_4379
.LBB11_4379:
	leaq	.L.str.1378(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13184(%rbp)
	movq	-13184(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4380:
	cmpq	$158, -11920(%rbp)
	je	.LBB11_4382
# %bb.4381:
	jmp	.LBB11_4384
.LBB11_4382:
	jmp	.LBB11_4383
.LBB11_4383:
	leaq	.L.str.1379(%rip), %rdi
	movl	$14, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13192(%rbp)
	movq	-13192(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4384:
	cmpq	$159, -11920(%rbp)
	je	.LBB11_4386
# %bb.4385:
	jmp	.LBB11_4388
.LBB11_4386:
	jmp	.LBB11_4387
.LBB11_4387:
	leaq	.L.str.1380(%rip), %rdi
	movl	$14, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13200(%rbp)
	movq	-13200(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4388:
	cmpq	$160, -11920(%rbp)
	je	.LBB11_4390
# %bb.4389:
	jmp	.LBB11_4392
.LBB11_4390:
	jmp	.LBB11_4391
.LBB11_4391:
	leaq	.L.str.1381(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13208(%rbp)
	movq	-13208(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4392:
	cmpq	$161, -11920(%rbp)
	je	.LBB11_4394
# %bb.4393:
	jmp	.LBB11_4396
.LBB11_4394:
	jmp	.LBB11_4395
.LBB11_4395:
	leaq	.L.str.1382(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13216(%rbp)
	movq	-13216(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4396:
	cmpq	$162, -11920(%rbp)
	je	.LBB11_4398
# %bb.4397:
	jmp	.LBB11_4400
.LBB11_4398:
	jmp	.LBB11_4399
.LBB11_4399:
	leaq	.L.str.1383(%rip), %rdi
	movl	$14, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13224(%rbp)
	movq	-13224(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4400:
	cmpq	$163, -11920(%rbp)
	je	.LBB11_4402
# %bb.4401:
	jmp	.LBB11_4404
.LBB11_4402:
	jmp	.LBB11_4403
.LBB11_4403:
	leaq	.L.str.1384(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13232(%rbp)
	movq	-13232(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4404:
	cmpq	$164, -11920(%rbp)
	je	.LBB11_4406
# %bb.4405:
	jmp	.LBB11_4408
.LBB11_4406:
	jmp	.LBB11_4407
.LBB11_4407:
	leaq	.L.str.1385(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13240(%rbp)
	movq	-13240(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4408:
	cmpq	$165, -11920(%rbp)
	je	.LBB11_4410
# %bb.4409:
	jmp	.LBB11_4412
.LBB11_4410:
	jmp	.LBB11_4411
.LBB11_4411:
	leaq	.L.str.1386(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13248(%rbp)
	movq	-13248(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4412:
	cmpq	$166, -11920(%rbp)
	je	.LBB11_4414
# %bb.4413:
	jmp	.LBB11_4416
.LBB11_4414:
	jmp	.LBB11_4415
.LBB11_4415:
	leaq	.L.str.1387(%rip), %rdi
	movl	$15, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13256(%rbp)
	movq	-13256(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4416:
	cmpq	$167, -11920(%rbp)
	je	.LBB11_4418
# %bb.4417:
	jmp	.LBB11_4420
.LBB11_4418:
	jmp	.LBB11_4419
.LBB11_4419:
	leaq	.L.str.1388(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13264(%rbp)
	movq	-13264(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4420:
	cmpq	$168, -11920(%rbp)
	je	.LBB11_4422
# %bb.4421:
	jmp	.LBB11_4424
.LBB11_4422:
	jmp	.LBB11_4423
.LBB11_4423:
	leaq	.L.str.1388(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13272(%rbp)
	movq	-13272(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4424:
	cmpq	$169, -11920(%rbp)
	je	.LBB11_4426
# %bb.4425:
	jmp	.LBB11_4428
.LBB11_4426:
	jmp	.LBB11_4427
.LBB11_4427:
	leaq	.L.str.1389(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13280(%rbp)
	movq	-13280(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4428:
	cmpq	$170, -11920(%rbp)
	je	.LBB11_4430
# %bb.4429:
	jmp	.LBB11_4432
.LBB11_4430:
	jmp	.LBB11_4431
.LBB11_4431:
	leaq	.L.str.1390(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13288(%rbp)
	movq	-13288(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4432:
	cmpq	$171, -11920(%rbp)
	je	.LBB11_4434
# %bb.4433:
	jmp	.LBB11_4436
.LBB11_4434:
	jmp	.LBB11_4435
.LBB11_4435:
	leaq	.L.str.1391(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13296(%rbp)
	movq	-13296(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4436:
	cmpq	$172, -11920(%rbp)
	je	.LBB11_4438
# %bb.4437:
	jmp	.LBB11_4440
.LBB11_4438:
	jmp	.LBB11_4439
.LBB11_4439:
	leaq	.L.str.1392(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13304(%rbp)
	movq	-13304(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4440:
	cmpq	$173, -11920(%rbp)
	je	.LBB11_4442
# %bb.4441:
	jmp	.LBB11_4444
.LBB11_4442:
	jmp	.LBB11_4443
.LBB11_4443:
	leaq	.L.str.1393(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13312(%rbp)
	movq	-13312(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4444:
	cmpq	$174, -11920(%rbp)
	je	.LBB11_4446
# %bb.4445:
	jmp	.LBB11_4448
.LBB11_4446:
	jmp	.LBB11_4447
.LBB11_4447:
	leaq	.L.str.1394(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13320(%rbp)
	movq	-13320(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4448:
	cmpq	$175, -11920(%rbp)
	je	.LBB11_4450
# %bb.4449:
	jmp	.LBB11_4452
.LBB11_4450:
	jmp	.LBB11_4451
.LBB11_4451:
	leaq	.L.str.1395(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13328(%rbp)
	movq	-13328(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4452:
	cmpq	$176, -11920(%rbp)
	je	.LBB11_4454
# %bb.4453:
	jmp	.LBB11_4456
.LBB11_4454:
	jmp	.LBB11_4455
.LBB11_4455:
	leaq	.L.str.1396(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13336(%rbp)
	movq	-13336(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4456:
	cmpq	$177, -11920(%rbp)
	je	.LBB11_4458
# %bb.4457:
	jmp	.LBB11_4460
.LBB11_4458:
	jmp	.LBB11_4459
.LBB11_4459:
	leaq	.L.str.1397(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13344(%rbp)
	movq	-13344(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4460:
	cmpq	$178, -11920(%rbp)
	je	.LBB11_4462
# %bb.4461:
	jmp	.LBB11_4464
.LBB11_4462:
	jmp	.LBB11_4463
.LBB11_4463:
	leaq	.L.str.1398(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13352(%rbp)
	movq	-13352(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4464:
	cmpq	$179, -11920(%rbp)
	je	.LBB11_4466
# %bb.4465:
	jmp	.LBB11_4468
.LBB11_4466:
	jmp	.LBB11_4467
.LBB11_4467:
	leaq	.L.str.1399(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13360(%rbp)
	movq	-13360(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4468:
	cmpq	$180, -11920(%rbp)
	je	.LBB11_4470
# %bb.4469:
	jmp	.LBB11_4472
.LBB11_4470:
	jmp	.LBB11_4471
.LBB11_4471:
	leaq	.L.str.1400(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13368(%rbp)
	movq	-13368(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4472:
	cmpq	$181, -11920(%rbp)
	je	.LBB11_4474
# %bb.4473:
	jmp	.LBB11_4476
.LBB11_4474:
	jmp	.LBB11_4475
.LBB11_4475:
	leaq	.L.str.1401(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13376(%rbp)
	movq	-13376(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4476:
	cmpq	$182, -11920(%rbp)
	je	.LBB11_4478
# %bb.4477:
	jmp	.LBB11_4480
.LBB11_4478:
	jmp	.LBB11_4479
.LBB11_4479:
	leaq	.L.str.1402(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13384(%rbp)
	movq	-13384(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4480:
	cmpq	$183, -11920(%rbp)
	je	.LBB11_4482
# %bb.4481:
	jmp	.LBB11_4484
.LBB11_4482:
	jmp	.LBB11_4483
.LBB11_4483:
	leaq	.L.str.1403(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13392(%rbp)
	movq	-13392(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4484:
	cmpq	$184, -11920(%rbp)
	je	.LBB11_4486
# %bb.4485:
	jmp	.LBB11_4488
.LBB11_4486:
	jmp	.LBB11_4487
.LBB11_4487:
	leaq	.L.str.1404(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13400(%rbp)
	movq	-13400(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4488:
	cmpq	$185, -11920(%rbp)
	je	.LBB11_4490
# %bb.4489:
	jmp	.LBB11_4492
.LBB11_4490:
	jmp	.LBB11_4491
.LBB11_4491:
	leaq	.L.str.1405(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13408(%rbp)
	movq	-13408(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4492:
	cmpq	$186, -11920(%rbp)
	je	.LBB11_4494
# %bb.4493:
	jmp	.LBB11_4496
.LBB11_4494:
	jmp	.LBB11_4495
.LBB11_4495:
	leaq	.L.str.1406(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13416(%rbp)
	movq	-13416(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4496:
	cmpq	$187, -11920(%rbp)
	je	.LBB11_4498
# %bb.4497:
	jmp	.LBB11_4500
.LBB11_4498:
	jmp	.LBB11_4499
.LBB11_4499:
	leaq	.L.str.1407(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13424(%rbp)
	movq	-13424(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4500:
	cmpq	$188, -11920(%rbp)
	je	.LBB11_4502
# %bb.4501:
	jmp	.LBB11_4504
.LBB11_4502:
	jmp	.LBB11_4503
.LBB11_4503:
	leaq	.L.str.1408(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13432(%rbp)
	movq	-13432(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4504:
	cmpq	$189, -11920(%rbp)
	je	.LBB11_4506
# %bb.4505:
	jmp	.LBB11_4508
.LBB11_4506:
	jmp	.LBB11_4507
.LBB11_4507:
	leaq	.L.str.1409(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13440(%rbp)
	movq	-13440(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4508:
	cmpq	$190, -11920(%rbp)
	je	.LBB11_4510
# %bb.4509:
	jmp	.LBB11_4512
.LBB11_4510:
	jmp	.LBB11_4511
.LBB11_4511:
	leaq	.L.str.1410(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13448(%rbp)
	movq	-13448(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4512:
	cmpq	$191, -11920(%rbp)
	je	.LBB11_4514
# %bb.4513:
	jmp	.LBB11_4516
.LBB11_4514:
	jmp	.LBB11_4515
.LBB11_4515:
	leaq	.L.str.1411(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13456(%rbp)
	movq	-13456(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4516:
	cmpq	$192, -11920(%rbp)
	je	.LBB11_4518
# %bb.4517:
	jmp	.LBB11_4520
.LBB11_4518:
	jmp	.LBB11_4519
.LBB11_4519:
	leaq	.L.str.1412(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13464(%rbp)
	movq	-13464(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4520:
	cmpq	$193, -11920(%rbp)
	je	.LBB11_4522
# %bb.4521:
	jmp	.LBB11_4524
.LBB11_4522:
	jmp	.LBB11_4523
.LBB11_4523:
	leaq	.L.str.1413(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13472(%rbp)
	movq	-13472(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4524:
	cmpq	$194, -11920(%rbp)
	je	.LBB11_4526
# %bb.4525:
	jmp	.LBB11_4528
.LBB11_4526:
	jmp	.LBB11_4527
.LBB11_4527:
	leaq	.L.str.1414(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13480(%rbp)
	movq	-13480(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4528:
	cmpq	$195, -11920(%rbp)
	je	.LBB11_4530
# %bb.4529:
	jmp	.LBB11_4532
.LBB11_4530:
	jmp	.LBB11_4531
.LBB11_4531:
	leaq	.L.str.1415(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13488(%rbp)
	movq	-13488(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4532:
	cmpq	$196, -11920(%rbp)
	je	.LBB11_4534
# %bb.4533:
	jmp	.LBB11_4536
.LBB11_4534:
	jmp	.LBB11_4535
.LBB11_4535:
	leaq	.L.str.1416(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13496(%rbp)
	movq	-13496(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4536:
	cmpq	$197, -11920(%rbp)
	je	.LBB11_4538
# %bb.4537:
	jmp	.LBB11_4540
.LBB11_4538:
	jmp	.LBB11_4539
.LBB11_4539:
	leaq	.L.str.1417(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13504(%rbp)
	movq	-13504(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4540:
	cmpq	$198, -11920(%rbp)
	je	.LBB11_4542
# %bb.4541:
	jmp	.LBB11_4544
.LBB11_4542:
	jmp	.LBB11_4543
.LBB11_4543:
	leaq	.L.str.1418(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13512(%rbp)
	movq	-13512(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4544:
	cmpq	$199, -11920(%rbp)
	je	.LBB11_4546
# %bb.4545:
	jmp	.LBB11_4548
.LBB11_4546:
	jmp	.LBB11_4547
.LBB11_4547:
	leaq	.L.str.1419(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13520(%rbp)
	movq	-13520(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4548:
	cmpq	$200, -11920(%rbp)
	je	.LBB11_4550
# %bb.4549:
	jmp	.LBB11_4552
.LBB11_4550:
	jmp	.LBB11_4551
.LBB11_4551:
	leaq	.L.str.1420(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13528(%rbp)
	movq	-13528(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4552:
	cmpq	$201, -11920(%rbp)
	je	.LBB11_4554
# %bb.4553:
	jmp	.LBB11_4556
.LBB11_4554:
	jmp	.LBB11_4555
.LBB11_4555:
	leaq	.L.str.1421(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13536(%rbp)
	movq	-13536(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4556:
	cmpq	$202, -11920(%rbp)
	je	.LBB11_4558
# %bb.4557:
	jmp	.LBB11_4560
.LBB11_4558:
	jmp	.LBB11_4559
.LBB11_4559:
	leaq	.L.str.1422(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13544(%rbp)
	movq	-13544(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4560:
	cmpq	$203, -11920(%rbp)
	je	.LBB11_4562
# %bb.4561:
	jmp	.LBB11_4564
.LBB11_4562:
	jmp	.LBB11_4563
.LBB11_4563:
	leaq	.L.str.1423(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13552(%rbp)
	movq	-13552(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4564:
	cmpq	$204, -11920(%rbp)
	je	.LBB11_4566
# %bb.4565:
	jmp	.LBB11_4568
.LBB11_4566:
	jmp	.LBB11_4567
.LBB11_4567:
	leaq	.L.str.1423(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13560(%rbp)
	movq	-13560(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4568:
	cmpq	$205, -11920(%rbp)
	je	.LBB11_4570
# %bb.4569:
	jmp	.LBB11_4572
.LBB11_4570:
	jmp	.LBB11_4571
.LBB11_4571:
	leaq	.L.str.1424(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13568(%rbp)
	movq	-13568(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4572:
	cmpq	$206, -11920(%rbp)
	je	.LBB11_4574
# %bb.4573:
	jmp	.LBB11_4576
.LBB11_4574:
	jmp	.LBB11_4575
.LBB11_4575:
	leaq	.L.str.1425(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13576(%rbp)
	movq	-13576(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4576:
	cmpq	$207, -11920(%rbp)
	je	.LBB11_4578
# %bb.4577:
	jmp	.LBB11_4580
.LBB11_4578:
	jmp	.LBB11_4579
.LBB11_4579:
	leaq	.L.str.1426(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13584(%rbp)
	movq	-13584(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4580:
	cmpq	$208, -11920(%rbp)
	je	.LBB11_4582
# %bb.4581:
	jmp	.LBB11_4584
.LBB11_4582:
	jmp	.LBB11_4583
.LBB11_4583:
	leaq	.L.str.1427(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13592(%rbp)
	movq	-13592(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4584:
	cmpq	$209, -11920(%rbp)
	je	.LBB11_4586
# %bb.4585:
	jmp	.LBB11_4588
.LBB11_4586:
	jmp	.LBB11_4587
.LBB11_4587:
	leaq	.L.str.1427(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13600(%rbp)
	movq	-13600(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4588:
	cmpq	$210, -11920(%rbp)
	je	.LBB11_4590
# %bb.4589:
	jmp	.LBB11_4592
.LBB11_4590:
	jmp	.LBB11_4591
.LBB11_4591:
	leaq	.L.str.1428(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13608(%rbp)
	movq	-13608(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4592:
	cmpq	$211, -11920(%rbp)
	je	.LBB11_4594
# %bb.4593:
	jmp	.LBB11_4596
.LBB11_4594:
	jmp	.LBB11_4595
.LBB11_4595:
	leaq	.L.str.1429(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13616(%rbp)
	movq	-13616(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4596:
	cmpq	$212, -11920(%rbp)
	je	.LBB11_4598
# %bb.4597:
	jmp	.LBB11_4600
.LBB11_4598:
	jmp	.LBB11_4599
.LBB11_4599:
	leaq	.L.str.1430(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13624(%rbp)
	movq	-13624(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4600:
	cmpq	$213, -11920(%rbp)
	je	.LBB11_4602
# %bb.4601:
	jmp	.LBB11_4604
.LBB11_4602:
	jmp	.LBB11_4603
.LBB11_4603:
	leaq	.L.str.1431(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13632(%rbp)
	movq	-13632(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4604:
	cmpq	$214, -11920(%rbp)
	je	.LBB11_4606
# %bb.4605:
	jmp	.LBB11_4608
.LBB11_4606:
	jmp	.LBB11_4607
.LBB11_4607:
	leaq	.L.str.1432(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13640(%rbp)
	movq	-13640(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4608:
	cmpq	$215, -11920(%rbp)
	je	.LBB11_4610
# %bb.4609:
	jmp	.LBB11_4612
.LBB11_4610:
	jmp	.LBB11_4611
.LBB11_4611:
	leaq	.L.str.1433(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13648(%rbp)
	movq	-13648(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4612:
	cmpq	$216, -11920(%rbp)
	je	.LBB11_4614
# %bb.4613:
	jmp	.LBB11_4616
.LBB11_4614:
	jmp	.LBB11_4615
.LBB11_4615:
	leaq	.L.str.1434(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13656(%rbp)
	movq	-13656(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4616:
	cmpq	$217, -11920(%rbp)
	je	.LBB11_4618
# %bb.4617:
	jmp	.LBB11_4620
.LBB11_4618:
	jmp	.LBB11_4619
.LBB11_4619:
	leaq	.L.str.1435(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13664(%rbp)
	movq	-13664(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4620:
	cmpq	$218, -11920(%rbp)
	je	.LBB11_4622
# %bb.4621:
	jmp	.LBB11_4624
.LBB11_4622:
	jmp	.LBB11_4623
.LBB11_4623:
	leaq	.L.str.1436(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13672(%rbp)
	movq	-13672(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4624:
	cmpq	$219, -11920(%rbp)
	je	.LBB11_4626
# %bb.4625:
	jmp	.LBB11_4628
.LBB11_4626:
	jmp	.LBB11_4627
.LBB11_4627:
	leaq	.L.str.1437(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13680(%rbp)
	movq	-13680(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4628:
	cmpq	$220, -11920(%rbp)
	je	.LBB11_4630
# %bb.4629:
	jmp	.LBB11_4632
.LBB11_4630:
	jmp	.LBB11_4631
.LBB11_4631:
	leaq	.L.str.1438(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13688(%rbp)
	movq	-13688(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4632:
	cmpq	$221, -11920(%rbp)
	je	.LBB11_4634
# %bb.4633:
	jmp	.LBB11_4636
.LBB11_4634:
	jmp	.LBB11_4635
.LBB11_4635:
	leaq	.L.str.1439(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13696(%rbp)
	movq	-13696(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4636:
	cmpq	$222, -11920(%rbp)
	je	.LBB11_4638
# %bb.4637:
	jmp	.LBB11_4640
.LBB11_4638:
	jmp	.LBB11_4639
.LBB11_4639:
	leaq	.L.str.1440(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13704(%rbp)
	movq	-13704(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4640:
	cmpq	$223, -11920(%rbp)
	je	.LBB11_4642
# %bb.4641:
	jmp	.LBB11_4644
.LBB11_4642:
	jmp	.LBB11_4643
.LBB11_4643:
	leaq	.L.str.1441(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13712(%rbp)
	movq	-13712(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4644:
	cmpq	$224, -11920(%rbp)
	je	.LBB11_4646
# %bb.4645:
	jmp	.LBB11_4648
.LBB11_4646:
	jmp	.LBB11_4647
.LBB11_4647:
	leaq	.L.str.1442(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13720(%rbp)
	movq	-13720(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4648:
	cmpq	$225, -11920(%rbp)
	je	.LBB11_4650
# %bb.4649:
	jmp	.LBB11_4652
.LBB11_4650:
	jmp	.LBB11_4651
.LBB11_4651:
	leaq	.L.str.1443(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13728(%rbp)
	movq	-13728(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4652:
	cmpq	$226, -11920(%rbp)
	je	.LBB11_4654
# %bb.4653:
	jmp	.LBB11_4656
.LBB11_4654:
	jmp	.LBB11_4655
.LBB11_4655:
	leaq	.L.str.1444(%rip), %rdi
	movl	$14, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13736(%rbp)
	movq	-13736(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4656:
	cmpq	$227, -11920(%rbp)
	je	.LBB11_4658
# %bb.4657:
	jmp	.LBB11_4660
.LBB11_4658:
	jmp	.LBB11_4659
.LBB11_4659:
	leaq	.L.str.1445(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13744(%rbp)
	movq	-13744(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4660:
	cmpq	$228, -11920(%rbp)
	je	.LBB11_4662
# %bb.4661:
	jmp	.LBB11_4664
.LBB11_4662:
	jmp	.LBB11_4663
.LBB11_4663:
	leaq	.L.str.1446(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13752(%rbp)
	movq	-13752(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4664:
	cmpq	$229, -11920(%rbp)
	je	.LBB11_4666
# %bb.4665:
	jmp	.LBB11_4668
.LBB11_4666:
	jmp	.LBB11_4667
.LBB11_4667:
	leaq	.L.str.1447(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13760(%rbp)
	movq	-13760(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4668:
	cmpq	$230, -11920(%rbp)
	je	.LBB11_4670
# %bb.4669:
	jmp	.LBB11_4672
.LBB11_4670:
	jmp	.LBB11_4671
.LBB11_4671:
	leaq	.L.str.1448(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13768(%rbp)
	movq	-13768(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4672:
	cmpq	$231, -11920(%rbp)
	je	.LBB11_4674
# %bb.4673:
	jmp	.LBB11_4676
.LBB11_4674:
	jmp	.LBB11_4675
.LBB11_4675:
	leaq	.L.str.1449(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13776(%rbp)
	movq	-13776(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4676:
	cmpq	$232, -11920(%rbp)
	je	.LBB11_4678
# %bb.4677:
	jmp	.LBB11_4680
.LBB11_4678:
	jmp	.LBB11_4679
.LBB11_4679:
	leaq	.L.str.1450(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13784(%rbp)
	movq	-13784(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4680:
	cmpq	$233, -11920(%rbp)
	je	.LBB11_4682
# %bb.4681:
	jmp	.LBB11_4684
.LBB11_4682:
	jmp	.LBB11_4683
.LBB11_4683:
	leaq	.L.str.1451(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13792(%rbp)
	movq	-13792(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4684:
	cmpq	$234, -11920(%rbp)
	je	.LBB11_4686
# %bb.4685:
	jmp	.LBB11_4688
.LBB11_4686:
	jmp	.LBB11_4687
.LBB11_4687:
	leaq	.L.str.1452(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13800(%rbp)
	movq	-13800(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4688:
	cmpq	$235, -11920(%rbp)
	je	.LBB11_4690
# %bb.4689:
	jmp	.LBB11_4692
.LBB11_4690:
	jmp	.LBB11_4691
.LBB11_4691:
	leaq	.L.str.1453(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13808(%rbp)
	movq	-13808(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4692:
	cmpq	$236, -11920(%rbp)
	je	.LBB11_4694
# %bb.4693:
	jmp	.LBB11_4696
.LBB11_4694:
	jmp	.LBB11_4695
.LBB11_4695:
	leaq	.L.str.1454(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13816(%rbp)
	movq	-13816(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4696:
	cmpq	$237, -11920(%rbp)
	je	.LBB11_4698
# %bb.4697:
	jmp	.LBB11_4700
.LBB11_4698:
	jmp	.LBB11_4699
.LBB11_4699:
	leaq	.L.str.155(%rip), %rdi
	movl	$1, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13824(%rbp)
	movq	-13824(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4700:
	cmpq	$238, -11920(%rbp)
	je	.LBB11_4702
# %bb.4701:
	jmp	.LBB11_4704
.LBB11_4702:
	jmp	.LBB11_4703
.LBB11_4703:
	leaq	.L.str.1455(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13832(%rbp)
	movq	-13832(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4704:
	cmpq	$239, -11920(%rbp)
	je	.LBB11_4706
# %bb.4705:
	jmp	.LBB11_4708
.LBB11_4706:
	jmp	.LBB11_4707
.LBB11_4707:
	leaq	.L.str.1456(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13840(%rbp)
	movq	-13840(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4708:
	cmpq	$240, -11920(%rbp)
	je	.LBB11_4710
# %bb.4709:
	jmp	.LBB11_4712
.LBB11_4710:
	jmp	.LBB11_4711
.LBB11_4711:
	leaq	.L.str.1457(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13848(%rbp)
	movq	-13848(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4712:
	cmpq	$241, -11920(%rbp)
	je	.LBB11_4714
# %bb.4713:
	jmp	.LBB11_4716
.LBB11_4714:
	jmp	.LBB11_4715
.LBB11_4715:
	leaq	.L.str.1458(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13856(%rbp)
	movq	-13856(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4716:
	cmpq	$242, -11920(%rbp)
	je	.LBB11_4718
# %bb.4717:
	jmp	.LBB11_4720
.LBB11_4718:
	jmp	.LBB11_4719
.LBB11_4719:
	leaq	.L.str.1459(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13864(%rbp)
	movq	-13864(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4720:
	cmpq	$243, -11920(%rbp)
	je	.LBB11_4722
# %bb.4721:
	jmp	.LBB11_4724
.LBB11_4722:
	jmp	.LBB11_4723
.LBB11_4723:
	leaq	.L.str.1460(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13872(%rbp)
	movq	-13872(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4724:
	cmpq	$244, -11920(%rbp)
	je	.LBB11_4726
# %bb.4725:
	jmp	.LBB11_4728
.LBB11_4726:
	jmp	.LBB11_4727
.LBB11_4727:
	leaq	.L.str.1461(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13880(%rbp)
	movq	-13880(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4728:
	cmpq	$245, -11920(%rbp)
	je	.LBB11_4730
# %bb.4729:
	jmp	.LBB11_4732
.LBB11_4730:
	jmp	.LBB11_4731
.LBB11_4731:
	leaq	.L.str.1462(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13888(%rbp)
	movq	-13888(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4732:
	cmpq	$246, -11920(%rbp)
	je	.LBB11_4734
# %bb.4733:
	jmp	.LBB11_4736
.LBB11_4734:
	jmp	.LBB11_4735
.LBB11_4735:
	leaq	.L.str.1463(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13896(%rbp)
	movq	-13896(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4736:
	cmpq	$247, -11920(%rbp)
	je	.LBB11_4738
# %bb.4737:
	jmp	.LBB11_4740
.LBB11_4738:
	jmp	.LBB11_4739
.LBB11_4739:
	leaq	.L.str.1464(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13904(%rbp)
	movq	-13904(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4740:
	cmpq	$248, -11920(%rbp)
	je	.LBB11_4742
# %bb.4741:
	jmp	.LBB11_4744
.LBB11_4742:
	jmp	.LBB11_4743
.LBB11_4743:
	leaq	.L.str.1465(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13912(%rbp)
	movq	-13912(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4744:
	cmpq	$249, -11920(%rbp)
	je	.LBB11_4746
# %bb.4745:
	jmp	.LBB11_4748
.LBB11_4746:
	jmp	.LBB11_4747
.LBB11_4747:
	leaq	.L.str.1466(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13920(%rbp)
	movq	-13920(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4748:
	cmpq	$250, -11920(%rbp)
	je	.LBB11_4750
# %bb.4749:
	jmp	.LBB11_4752
.LBB11_4750:
	jmp	.LBB11_4751
.LBB11_4751:
	leaq	.L.str.1467(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13928(%rbp)
	movq	-13928(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4752:
	cmpq	$251, -11920(%rbp)
	je	.LBB11_4754
# %bb.4753:
	jmp	.LBB11_4756
.LBB11_4754:
	jmp	.LBB11_4755
.LBB11_4755:
	leaq	.L.str.1468(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13936(%rbp)
	movq	-13936(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4756:
	cmpq	$252, -11920(%rbp)
	je	.LBB11_4758
# %bb.4757:
	jmp	.LBB11_4760
.LBB11_4758:
	jmp	.LBB11_4759
.LBB11_4759:
	leaq	.L.str.1469(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13944(%rbp)
	movq	-13944(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4760:
	cmpq	$253, -11920(%rbp)
	je	.LBB11_4762
# %bb.4761:
	jmp	.LBB11_4764
.LBB11_4762:
	jmp	.LBB11_4763
.LBB11_4763:
	leaq	.L.str.1470(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13952(%rbp)
	movq	-13952(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4764:
	cmpq	$254, -11920(%rbp)
	je	.LBB11_4766
# %bb.4765:
	jmp	.LBB11_4768
.LBB11_4766:
	jmp	.LBB11_4767
.LBB11_4767:
	leaq	.L.str.1471(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13960(%rbp)
	movq	-13960(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4773
.LBB11_4768:
	cmpq	$255, -11920(%rbp)
	je	.LBB11_4770
# %bb.4769:
	jmp	.LBB11_4772
.LBB11_4770:
	jmp	.LBB11_4771
.LBB11_4771:
	leaq	.L.str.1472(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13968(%rbp)
	movq	-13968(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
.LBB11_4772:
	jmp	.LBB11_4773
.LBB11_4773:
	jmp	.LBB11_4944
.Ltmp1350:                              # Block address taken
.LBB11_4774:                            #   in Loop: Header=BB11_6020 Depth=1
	movq	-2216(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
	movq	%rax, -13976(%rbp)
	jmp	.LBB11_4937
.Ltmp1351:                              # Block address taken
.LBB11_4775:
	leaq	.L.str.1473(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13984(%rbp)
	movq	-13984(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1352:                              # Block address taken
.LBB11_4776:
	leaq	.L.str.1474(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -13992(%rbp)
	movq	-13992(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1353:                              # Block address taken
.LBB11_4777:
	leaq	.L.str.1475(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14000(%rbp)
	movq	-14000(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1354:                              # Block address taken
.LBB11_4778:
	leaq	.L.str.1476(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14008(%rbp)
	movq	-14008(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1355:                              # Block address taken
.LBB11_4779:
	leaq	.L.str.1477(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14016(%rbp)
	movq	-14016(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1356:                              # Block address taken
.LBB11_4780:
	leaq	.L.str.1478(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14024(%rbp)
	movq	-14024(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1357:                              # Block address taken
.LBB11_4781:
	leaq	.L.str.1479(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14032(%rbp)
	movq	-14032(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1358:                              # Block address taken
.LBB11_4782:
	leaq	.L.str.1480(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14040(%rbp)
	movq	-14040(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1359:                              # Block address taken
.LBB11_4783:
	leaq	.L.str.1481(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14048(%rbp)
	movq	-14048(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1360:                              # Block address taken
.LBB11_4784:
	leaq	.L.str.1482(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14056(%rbp)
	movq	-14056(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1361:                              # Block address taken
.LBB11_4785:
	leaq	.L.str.1483(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14064(%rbp)
	movq	-14064(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1362:                              # Block address taken
.LBB11_4786:
	leaq	.L.str.1484(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14072(%rbp)
	movq	-14072(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1363:                              # Block address taken
.LBB11_4787:
	leaq	.L.str.1485(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14080(%rbp)
	movq	-14080(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1364:                              # Block address taken
.LBB11_4788:
	leaq	.L.str.1486(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14088(%rbp)
	movq	-14088(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1365:                              # Block address taken
.LBB11_4789:
	leaq	.L.str.1486(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14096(%rbp)
	movq	-14096(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1366:                              # Block address taken
.LBB11_4790:
	leaq	.L.str.1487(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14104(%rbp)
	movq	-14104(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1367:                              # Block address taken
.LBB11_4791:
	leaq	.L.str.1488(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14112(%rbp)
	movq	-14112(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1368:                              # Block address taken
.LBB11_4792:
	leaq	.L.str.1489(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14120(%rbp)
	movq	-14120(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1369:                              # Block address taken
.LBB11_4793:
	leaq	.L.str.1490(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14128(%rbp)
	movq	-14128(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1370:                              # Block address taken
.LBB11_4794:
	leaq	.L.str.1491(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14136(%rbp)
	movq	-14136(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1371:                              # Block address taken
.LBB11_4795:
	leaq	.L.str.1492(%rip), %rdi
	movl	$2, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14144(%rbp)
	movq	-14144(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1372:                              # Block address taken
.LBB11_4796:
	leaq	.L.str.1493(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14152(%rbp)
	movq	-14152(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1373:                              # Block address taken
.LBB11_4797:
	leaq	.L.str.1494(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14160(%rbp)
	movq	-14160(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1374:                              # Block address taken
.LBB11_4798:
	leaq	.L.str.1495(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14168(%rbp)
	movq	-14168(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1375:                              # Block address taken
.LBB11_4799:
	leaq	.L.str.1496(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14176(%rbp)
	movq	-14176(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1376:                              # Block address taken
.LBB11_4800:
	leaq	.L.str.1497(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14184(%rbp)
	movq	-14184(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1377:                              # Block address taken
.LBB11_4801:
	leaq	.L.str.1498(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14192(%rbp)
	movq	-14192(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1378:                              # Block address taken
.LBB11_4802:
	leaq	.L.str.1499(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14200(%rbp)
	movq	-14200(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1379:                              # Block address taken
.LBB11_4803:
	leaq	.L.str.1500(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14208(%rbp)
	movq	-14208(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1380:                              # Block address taken
.LBB11_4804:
	leaq	.L.str.1501(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14216(%rbp)
	movq	-14216(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1381:                              # Block address taken
.LBB11_4805:
	leaq	.L.str.1502(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14224(%rbp)
	movq	-14224(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1382:                              # Block address taken
.LBB11_4806:
	leaq	.L.str.1503(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14232(%rbp)
	movq	-14232(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1383:                              # Block address taken
.LBB11_4807:
	leaq	.L.str.1504(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14240(%rbp)
	movq	-14240(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1384:                              # Block address taken
.LBB11_4808:
	leaq	.L.str.1505(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14248(%rbp)
	movq	-14248(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1385:                              # Block address taken
.LBB11_4809:
	leaq	.L.str.1506(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14256(%rbp)
	movq	-14256(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1386:                              # Block address taken
.LBB11_4810:
	leaq	.L.str.1507(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14264(%rbp)
	movq	-14264(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1387:                              # Block address taken
.LBB11_4811:
	leaq	.L.str.1508(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14272(%rbp)
	movq	-14272(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1388:                              # Block address taken
.LBB11_4812:
	leaq	.L.str.1509(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14280(%rbp)
	movq	-14280(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1389:                              # Block address taken
.LBB11_4813:
	leaq	.L.str.1510(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14288(%rbp)
	movq	-14288(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1390:                              # Block address taken
.LBB11_4814:
	leaq	.L.str.1511(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14296(%rbp)
	movq	-14296(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1391:                              # Block address taken
.LBB11_4815:
	leaq	.L.str.1512(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14304(%rbp)
	movq	-14304(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1392:                              # Block address taken
.LBB11_4816:
	leaq	.L.str.1513(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14312(%rbp)
	movq	-14312(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1393:                              # Block address taken
.LBB11_4817:
	leaq	.L.str.1514(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14320(%rbp)
	movq	-14320(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1394:                              # Block address taken
.LBB11_4818:
	leaq	.L.str.1515(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14328(%rbp)
	movq	-14328(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1395:                              # Block address taken
.LBB11_4819:
	leaq	.L.str.1516(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14336(%rbp)
	movq	-14336(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1396:                              # Block address taken
.LBB11_4820:
	leaq	.L.str.1517(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14344(%rbp)
	movq	-14344(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1397:                              # Block address taken
.LBB11_4821:
	leaq	.L.str.1518(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14352(%rbp)
	movq	-14352(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1398:                              # Block address taken
.LBB11_4822:
	leaq	.L.str.1519(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14360(%rbp)
	movq	-14360(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1399:                              # Block address taken
.LBB11_4823:
	leaq	.L.str.1520(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14368(%rbp)
	movq	-14368(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1400:                              # Block address taken
.LBB11_4824:
	leaq	.L.str.1521(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14376(%rbp)
	movq	-14376(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1401:                              # Block address taken
.LBB11_4825:
	leaq	.L.str.156(%rip), %rdi
	movl	$1, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14384(%rbp)
	movq	-14384(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1402:                              # Block address taken
.LBB11_4826:
	leaq	.L.str.1522(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14392(%rbp)
	movq	-14392(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1403:                              # Block address taken
.LBB11_4827:
	leaq	.L.str.1523(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14400(%rbp)
	movq	-14400(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1404:                              # Block address taken
.LBB11_4828:
	leaq	.L.str.1524(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14408(%rbp)
	movq	-14408(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1405:                              # Block address taken
.LBB11_4829:
	leaq	.L.str.1525(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14416(%rbp)
	movq	-14416(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1406:                              # Block address taken
.LBB11_4830:
	leaq	.L.str.1526(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14424(%rbp)
	movq	-14424(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1407:                              # Block address taken
.LBB11_4831:
	leaq	.L.str.1527(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14432(%rbp)
	movq	-14432(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1408:                              # Block address taken
.LBB11_4832:
	leaq	.L.str.1528(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14440(%rbp)
	movq	-14440(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1409:                              # Block address taken
.LBB11_4833:
	leaq	.L.str.1529(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14448(%rbp)
	movq	-14448(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1410:                              # Block address taken
.LBB11_4834:
	leaq	.L.str.1530(%rip), %rdi
	movl	$16, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14456(%rbp)
	movq	-14456(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1411:                              # Block address taken
.LBB11_4835:
	leaq	.L.str.1531(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14464(%rbp)
	movq	-14464(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1412:                              # Block address taken
.LBB11_4836:
	leaq	.L.str.1532(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14472(%rbp)
	movq	-14472(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1413:                              # Block address taken
.LBB11_4837:
	leaq	.L.str.1533(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14480(%rbp)
	movq	-14480(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1414:                              # Block address taken
.LBB11_4838:
	leaq	.L.str.1534(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14488(%rbp)
	movq	-14488(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1415:                              # Block address taken
.LBB11_4839:
	leaq	.L.str.1535(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14496(%rbp)
	movq	-14496(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1416:                              # Block address taken
.LBB11_4840:
	leaq	.L.str.1536(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14504(%rbp)
	movq	-14504(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1417:                              # Block address taken
.LBB11_4841:
	leaq	.L.str.1537(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14512(%rbp)
	movq	-14512(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1418:                              # Block address taken
.LBB11_4842:
	leaq	.L.str.1538(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14520(%rbp)
	movq	-14520(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1419:                              # Block address taken
.LBB11_4843:
	leaq	.L.str.1539(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14528(%rbp)
	movq	-14528(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1420:                              # Block address taken
.LBB11_4844:
	leaq	.L.str.1540(%rip), %rdi
	movl	$2, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14536(%rbp)
	movq	-14536(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1421:                              # Block address taken
.LBB11_4845:
	leaq	.L.str.1541(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14544(%rbp)
	movq	-14544(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1422:                              # Block address taken
.LBB11_4846:
	leaq	.L.str.1542(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14552(%rbp)
	movq	-14552(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1423:                              # Block address taken
.LBB11_4847:
	leaq	.L.str.1543(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14560(%rbp)
	movq	-14560(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1424:                              # Block address taken
.LBB11_4848:
	leaq	.L.str.1544(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14568(%rbp)
	movq	-14568(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1425:                              # Block address taken
.LBB11_4849:
	leaq	.L.str.1545(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14576(%rbp)
	movq	-14576(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1426:                              # Block address taken
.LBB11_4850:
	leaq	.L.str.1546(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14584(%rbp)
	movq	-14584(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1427:                              # Block address taken
.LBB11_4851:
	leaq	.L.str.1547(%rip), %rdi
	movl	$15, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14592(%rbp)
	movq	-14592(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1428:                              # Block address taken
.LBB11_4852:
	leaq	.L.str.1548(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14600(%rbp)
	movq	-14600(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1429:                              # Block address taken
.LBB11_4853:
	leaq	.L.str.1549(%rip), %rdi
	movl	$15, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14608(%rbp)
	movq	-14608(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1430:                              # Block address taken
.LBB11_4854:
	leaq	.L.str.1550(%rip), %rdi
	movl	$14, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14616(%rbp)
	movq	-14616(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1431:                              # Block address taken
.LBB11_4855:
	leaq	.L.str.1551(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14624(%rbp)
	movq	-14624(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1432:                              # Block address taken
.LBB11_4856:
	leaq	.L.str.1552(%rip), %rdi
	movl	$20, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14632(%rbp)
	movq	-14632(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1433:                              # Block address taken
.LBB11_4857:
	leaq	.L.str.1553(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14640(%rbp)
	movq	-14640(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1434:                              # Block address taken
.LBB11_4858:
	leaq	.L.str.1554(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14648(%rbp)
	movq	-14648(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1435:                              # Block address taken
.LBB11_4859:
	leaq	.L.str.1555(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14656(%rbp)
	movq	-14656(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1436:                              # Block address taken
.LBB11_4860:
	leaq	.L.str.1556(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14664(%rbp)
	movq	-14664(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1437:                              # Block address taken
.LBB11_4861:
	leaq	.L.str.1557(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14672(%rbp)
	movq	-14672(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1438:                              # Block address taken
.LBB11_4862:
	leaq	.L.str.1558(%rip), %rdi
	movl	$9, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14680(%rbp)
	movq	-14680(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1439:                              # Block address taken
.LBB11_4863:
	leaq	.L.str.1559(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14688(%rbp)
	movq	-14688(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1440:                              # Block address taken
.LBB11_4864:
	leaq	.L.str.1560(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14696(%rbp)
	movq	-14696(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1441:                              # Block address taken
.LBB11_4865:
	leaq	.L.str.1561(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14704(%rbp)
	movq	-14704(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1442:                              # Block address taken
.LBB11_4866:
	leaq	.L.str.1562(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14712(%rbp)
	movq	-14712(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1443:                              # Block address taken
.LBB11_4867:
	leaq	.L.str.1563(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14720(%rbp)
	movq	-14720(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1444:                              # Block address taken
.LBB11_4868:
	leaq	.L.str.1564(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14728(%rbp)
	movq	-14728(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1445:                              # Block address taken
.LBB11_4869:
	leaq	.L.str.1565(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14736(%rbp)
	movq	-14736(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1446:                              # Block address taken
.LBB11_4870:
	leaq	.L.str.1566(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14744(%rbp)
	movq	-14744(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1447:                              # Block address taken
.LBB11_4871:
	leaq	.L.str.1567(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14752(%rbp)
	movq	-14752(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1448:                              # Block address taken
.LBB11_4872:
	leaq	.L.str.1568(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14760(%rbp)
	movq	-14760(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1449:                              # Block address taken
.LBB11_4873:
	leaq	.L.str.1569(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14768(%rbp)
	movq	-14768(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1450:                              # Block address taken
.LBB11_4874:
	leaq	.L.str.1570(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14776(%rbp)
	movq	-14776(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1451:                              # Block address taken
.LBB11_4875:
	leaq	.L.str.1571(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14784(%rbp)
	movq	-14784(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1452:                              # Block address taken
.LBB11_4876:
	leaq	.L.str.157(%rip), %rdi
	movl	$1, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14792(%rbp)
	movq	-14792(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1453:                              # Block address taken
.LBB11_4877:
	leaq	.L.str.1572(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14800(%rbp)
	movq	-14800(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1454:                              # Block address taken
.LBB11_4878:
	leaq	.L.str.1573(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14808(%rbp)
	movq	-14808(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1455:                              # Block address taken
.LBB11_4879:
	leaq	.L.str.1574(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14816(%rbp)
	movq	-14816(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1456:                              # Block address taken
.LBB11_4880:
	leaq	.L.str.1575(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14824(%rbp)
	movq	-14824(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1457:                              # Block address taken
.LBB11_4881:
	leaq	.L.str.1576(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14832(%rbp)
	movq	-14832(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1458:                              # Block address taken
.LBB11_4882:
	leaq	.L.str.1577(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14840(%rbp)
	movq	-14840(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1459:                              # Block address taken
.LBB11_4883:
	leaq	.L.str.1578(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14848(%rbp)
	movq	-14848(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1460:                              # Block address taken
.LBB11_4884:
	leaq	.L.str.1579(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14856(%rbp)
	movq	-14856(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1461:                              # Block address taken
.LBB11_4885:
	leaq	.L.str.1580(%rip), %rdi
	movl	$12, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14864(%rbp)
	movq	-14864(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1462:                              # Block address taken
.LBB11_4886:
	leaq	.L.str.1581(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14872(%rbp)
	movq	-14872(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1463:                              # Block address taken
.LBB11_4887:
	leaq	.L.str.1582(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14880(%rbp)
	movq	-14880(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1464:                              # Block address taken
.LBB11_4888:
	leaq	.L.str.1583(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14888(%rbp)
	movq	-14888(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1465:                              # Block address taken
.LBB11_4889:
	leaq	.L.str.1584(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14896(%rbp)
	movq	-14896(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1466:                              # Block address taken
.LBB11_4890:
	leaq	.L.str.1585(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14904(%rbp)
	movq	-14904(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1467:                              # Block address taken
.LBB11_4891:
	leaq	.L.str.1586(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14912(%rbp)
	movq	-14912(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1468:                              # Block address taken
.LBB11_4892:
	leaq	.L.str.1587(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14920(%rbp)
	movq	-14920(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1469:                              # Block address taken
.LBB11_4893:
	leaq	.L.str.1588(%rip), %rdi
	movl	$14, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14928(%rbp)
	movq	-14928(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1470:                              # Block address taken
.LBB11_4894:
	leaq	.L.str.1589(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14936(%rbp)
	movq	-14936(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1471:                              # Block address taken
.LBB11_4895:
	leaq	.L.str.1590(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14944(%rbp)
	movq	-14944(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1472:                              # Block address taken
.LBB11_4896:
	leaq	.L.str.1591(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14952(%rbp)
	movq	-14952(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1473:                              # Block address taken
.LBB11_4897:
	leaq	.L.str.1592(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14960(%rbp)
	movq	-14960(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1474:                              # Block address taken
.LBB11_4898:
	leaq	.L.str.1593(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14968(%rbp)
	movq	-14968(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1475:                              # Block address taken
.LBB11_4899:
	leaq	.L.str.1594(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14976(%rbp)
	movq	-14976(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1476:                              # Block address taken
.LBB11_4900:
	leaq	.L.str.1595(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14984(%rbp)
	movq	-14984(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1477:                              # Block address taken
.LBB11_4901:
	leaq	.L.str.1596(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -14992(%rbp)
	movq	-14992(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1478:                              # Block address taken
.LBB11_4902:
	leaq	.L.str.1597(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15000(%rbp)
	movq	-15000(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1479:                              # Block address taken
.LBB11_4903:
	leaq	.L.str.1598(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15008(%rbp)
	movq	-15008(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1480:                              # Block address taken
.LBB11_4904:
	leaq	.L.str.158(%rip), %rdi
	movl	$1, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15016(%rbp)
	movq	-15016(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1481:                              # Block address taken
.LBB11_4905:
	leaq	.L.str.1599(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15024(%rbp)
	movq	-15024(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1482:                              # Block address taken
.LBB11_4906:
	leaq	.L.str.1600(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15032(%rbp)
	movq	-15032(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1483:                              # Block address taken
.LBB11_4907:
	leaq	.L.str.1601(%rip), %rdi
	movl	$7, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15040(%rbp)
	movq	-15040(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1484:                              # Block address taken
.LBB11_4908:
	leaq	.L.str.1602(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15048(%rbp)
	movq	-15048(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1485:                              # Block address taken
.LBB11_4909:
	leaq	.L.str.1603(%rip), %rdi
	movl	$11, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15056(%rbp)
	movq	-15056(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1486:                              # Block address taken
.LBB11_4910:
	leaq	.L.str.1604(%rip), %rdi
	movl	$16, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15064(%rbp)
	movq	-15064(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1487:                              # Block address taken
.LBB11_4911:
	leaq	.L.str.1605(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15072(%rbp)
	movq	-15072(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1488:                              # Block address taken
.LBB11_4912:
	leaq	.L.str.1606(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15080(%rbp)
	movq	-15080(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1489:                              # Block address taken
.LBB11_4913:
	leaq	.L.str.1607(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15088(%rbp)
	movq	-15088(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1490:                              # Block address taken
.LBB11_4914:
	leaq	.L.str.1608(%rip), %rdi
	movl	$13, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15096(%rbp)
	movq	-15096(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1491:                              # Block address taken
.LBB11_4915:
	leaq	.L.str.1609(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15104(%rbp)
	movq	-15104(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1492:                              # Block address taken
.LBB11_4916:
	leaq	.L.str.1610(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15112(%rbp)
	movq	-15112(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1493:                              # Block address taken
.LBB11_4917:
	leaq	.L.str.1611(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15120(%rbp)
	movq	-15120(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1494:                              # Block address taken
.LBB11_4918:
	leaq	.L.str.1612(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15128(%rbp)
	movq	-15128(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1495:                              # Block address taken
.LBB11_4919:
	leaq	.L.str.1613(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15136(%rbp)
	movq	-15136(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1496:                              # Block address taken
.LBB11_4920:
	leaq	.L.str.1614(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15144(%rbp)
	movq	-15144(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1497:                              # Block address taken
.LBB11_4921:
	leaq	.L.str.1615(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15152(%rbp)
	movq	-15152(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1498:                              # Block address taken
.LBB11_4922:
	leaq	.L.str.1616(%rip), %rdi
	movl	$15, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15160(%rbp)
	movq	-15160(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1499:                              # Block address taken
.LBB11_4923:
	leaq	.L.str.1617(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15168(%rbp)
	movq	-15168(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1500:                              # Block address taken
.LBB11_4924:
	leaq	.L.str.1618(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15176(%rbp)
	movq	-15176(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1501:                              # Block address taken
.LBB11_4925:
	leaq	.L.str.1619(%rip), %rdi
	movl	$10, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15184(%rbp)
	movq	-15184(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1502:                              # Block address taken
.LBB11_4926:
	leaq	.L.str.159(%rip), %rdi
	movl	$1, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15192(%rbp)
	movq	-15192(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1503:                              # Block address taken
.LBB11_4927:
	leaq	.L.str.1620(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15200(%rbp)
	movq	-15200(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1504:                              # Block address taken
.LBB11_4928:
	leaq	.L.str.1621(%rip), %rdi
	movl	$8, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15208(%rbp)
	movq	-15208(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1505:                              # Block address taken
.LBB11_4929:
	leaq	.L.str.160(%rip), %rdi
	movl	$1, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15216(%rbp)
	movq	-15216(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1506:                              # Block address taken
.LBB11_4930:
	leaq	.L.str.1622(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15224(%rbp)
	movq	-15224(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1507:                              # Block address taken
.LBB11_4931:
	leaq	.L.str.1623(%rip), %rdi
	movl	$3, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15232(%rbp)
	movq	-15232(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1508:                              # Block address taken
.LBB11_4932:
	leaq	.L.str.1624(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15240(%rbp)
	movq	-15240(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1509:                              # Block address taken
.LBB11_4933:
	leaq	.L.str.161(%rip), %rdi
	movl	$1, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15248(%rbp)
	movq	-15248(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1510:                              # Block address taken
.LBB11_4934:
	leaq	.L.str.1625(%rip), %rdi
	movl	$4, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15256(%rbp)
	movq	-15256(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1511:                              # Block address taken
.LBB11_4935:
	leaq	.L.str.1626(%rip), %rdi
	movl	$6, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15264(%rbp)
	movq	-15264(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.Ltmp1512:                              # Block address taken
.LBB11_4936:
	leaq	.L.str.1627(%rip), %rdi
	movl	$5, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edx, %edx
	movq	%rax, -15272(%rbp)
	movq	-15272(%rbp), %rsi
	movl	$1, %edi
	callq	fb_PrintString@PLT
	jmp	.LBB11_4940
.LBB11_4937:                            #   in Loop: Header=BB11_6020 Depth=1
	cmpq	$161, -13976(%rbp)
	jbe	.LBB11_4939
# %bb.4938:
	jmp	.LBB11_4940
.LBB11_4939:                            #   in Loop: Header=BB11_6020 Depth=1
	movq	-13976(%rbp), %rax
	subq	$0, %rax
	leaq	_ZN8MEMORY_T6POKE64Edd.tmp$2487(%rip), %rcx
	movq	(%rcx,%rax,8), %rax
	movq	%rax, -15848(%rbp)      # 8-byte Spill
	jmp	.LBB11_6020
.LBB11_4940:
	jmp	.LBB11_4944
.LBB11_4941:
	cmpq	$20, -2304(%rbp)
	jbe	.LBB11_4943
# %bb.4942:
	jmp	.LBB11_4944
.LBB11_4943:
	movq	-2304(%rbp), %rax
	subq	$0, %rax
	leaq	_ZN8MEMORY_T6POKE64Edd.tmp$2488(%rip), %rcx
	movq	(%rcx,%rax,8), %rax
	movq	%rax, -15848(%rbp)      # 8-byte Spill
	jmp	.LBB11_6020
.Ltmp1513:                              # Block address taken
.LBB11_4944:
	jmp	.LBB11_6016
.LBB11_4945:
	movsd	.LCPI11_296(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_4946
	jp	.LBB11_4946
	jmp	.LBB11_4947
.LBB11_4946:
	jmp	.LBB11_5110
.LBB11_4947:
	jmp	.LBB11_4948
.LBB11_4948:
	movsd	-2232(%rbp), %xmm0      # xmm0 = mem[0],zero
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB11_4949
	jp	.LBB11_4949
	jmp	.LBB11_4950
.LBB11_4949:
	jmp	.LBB11_4952
.LBB11_4950:
	jmp	.LBB11_4951
.LBB11_4951:
	leaq	FILENAME$(%rip), %rax
	xorl	%r8d, %r8d
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1628(%rip), %rdx
	movl	$8, %ecx
	callq	fb_StrAssign@PLT
	leaq	COMPILER$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1629(%rip), %rdx
	movl	$5, %ecx
	movq	%rax, -17656(%rbp)      # 8-byte Spill
	callq	fb_StrAssign@PLT
	jmp	.LBB11_5109
.LBB11_4952:
	movsd	.LCPI11_7(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_4953
	jp	.LBB11_4953
	jmp	.LBB11_4954
.LBB11_4953:
	jmp	.LBB11_4956
.LBB11_4954:
	jmp	.LBB11_4955
.LBB11_4955:
	leaq	FILENAME$(%rip), %rax
	xorl	%r8d, %r8d
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1628(%rip), %rdx
	movl	$8, %ecx
	callq	fb_StrAssign@PLT
	leaq	COMPILER$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1630(%rip), %rdx
	movl	$14, %ecx
	movq	%rax, -17664(%rbp)      # 8-byte Spill
	callq	fb_StrAssign@PLT
	jmp	.LBB11_5109
.LBB11_4956:
	movsd	.LCPI11_9(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_4957
	jp	.LBB11_4957
	jmp	.LBB11_4958
.LBB11_4957:
	jmp	.LBB11_4960
.LBB11_4958:
	jmp	.LBB11_4959
.LBB11_4959:
	jmp	.LBB11_5109
.LBB11_4960:
	movsd	.LCPI11_10(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_4961
	jp	.LBB11_4961
	jmp	.LBB11_4962
.LBB11_4961:
	jmp	.LBB11_4964
.LBB11_4962:
	jmp	.LBB11_4963
.LBB11_4963:
	jmp	.LBB11_5109
.LBB11_4964:
	movsd	.LCPI11_11(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_4965
	jp	.LBB11_4965
	jmp	.LBB11_4966
.LBB11_4965:
	jmp	.LBB11_4968
.LBB11_4966:
	jmp	.LBB11_4967
.LBB11_4967:
	jmp	.LBB11_5109
.LBB11_4968:
	movsd	.LCPI11_12(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_4969
	jp	.LBB11_4969
	jmp	.LBB11_4970
.LBB11_4969:
	jmp	.LBB11_4972
.LBB11_4970:
	jmp	.LBB11_4971
.LBB11_4971:
	leaq	FILENAME$(%rip), %rax
	xorl	%r8d, %r8d
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1631(%rip), %rdx
	movl	$9, %ecx
	callq	fb_StrAssign@PLT
	leaq	COMPILER$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1(%rip), %rdx
	movl	$1, %ecx
	movq	%rax, -17672(%rbp)      # 8-byte Spill
	callq	fb_StrAssign@PLT
	jmp	.LBB11_5109
.LBB11_4972:
	movsd	.LCPI11_13(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_4973
	jp	.LBB11_4973
	jmp	.LBB11_4974
.LBB11_4973:
	jmp	.LBB11_4976
.LBB11_4974:
	jmp	.LBB11_4975
.LBB11_4975:
	leaq	FILENAME$(%rip), %rax
	xorl	%r8d, %r8d
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1632(%rip), %rdx
	movl	$8, %ecx
	callq	fb_StrAssign@PLT
	leaq	COMPILER$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1633(%rip), %rdx
	movl	$6, %ecx
	movq	%rax, -17680(%rbp)      # 8-byte Spill
	callq	fb_StrAssign@PLT
	jmp	.LBB11_5109
.LBB11_4976:
	movsd	.LCPI11_15(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_4977
	jp	.LBB11_4977
	jmp	.LBB11_4978
.LBB11_4977:
	jmp	.LBB11_4980
.LBB11_4978:
	jmp	.LBB11_4979
.LBB11_4979:
	leaq	FILENAME$(%rip), %rax
	xorl	%r8d, %r8d
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1634(%rip), %rdx
	movl	$8, %ecx
	callq	fb_StrAssign@PLT
	leaq	COMPILER$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1635(%rip), %rdx
	movl	$10, %ecx
	movq	%rax, -17688(%rbp)      # 8-byte Spill
	callq	fb_StrAssign@PLT
	jmp	.LBB11_5109
.LBB11_4980:
	movsd	.LCPI11_16(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_4981
	jp	.LBB11_4981
	jmp	.LBB11_4982
.LBB11_4981:
	jmp	.LBB11_4984
.LBB11_4982:
	jmp	.LBB11_4983
.LBB11_4983:
	leaq	FILENAME$(%rip), %rax
	xorl	%r8d, %r8d
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1636(%rip), %rdx
	movl	$8, %ecx
	callq	fb_StrAssign@PLT
	leaq	COMPILER$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1637(%rip), %rdx
	movl	$5, %ecx
	movq	%rax, -17696(%rbp)      # 8-byte Spill
	callq	fb_StrAssign@PLT
	jmp	.LBB11_5109
.LBB11_4984:
	movsd	.LCPI11_17(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_4985
	jp	.LBB11_4985
	jmp	.LBB11_4986
.LBB11_4985:
	jmp	.LBB11_4988
.LBB11_4986:
	jmp	.LBB11_4987
.LBB11_4987:
	leaq	FILENAME$(%rip), %rax
	xorl	%r8d, %r8d
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1638(%rip), %rdx
	movl	$8, %ecx
	callq	fb_StrAssign@PLT
	leaq	COMPILER$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1(%rip), %rdx
	movl	$1, %ecx
	movq	%rax, -17704(%rbp)      # 8-byte Spill
	callq	fb_StrAssign@PLT
	jmp	.LBB11_5109
.LBB11_4988:
	movsd	.LCPI11_19(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_4989
	jp	.LBB11_4989
	jmp	.LBB11_4990
.LBB11_4989:
	jmp	.LBB11_4992
.LBB11_4990:
	jmp	.LBB11_4991
.LBB11_4991:
	leaq	FILENAME$(%rip), %rax
	xorl	%r8d, %r8d
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.186(%rip), %rdx
	movl	$8, %ecx
	callq	fb_StrAssign@PLT
	leaq	COMPILER$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1639(%rip), %rdx
	movl	$8, %ecx
	movq	%rax, -17712(%rbp)      # 8-byte Spill
	callq	fb_StrAssign@PLT
	jmp	.LBB11_5109
.LBB11_4992:
	movsd	.LCPI11_20(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_4993
	jp	.LBB11_4993
	jmp	.LBB11_4994
.LBB11_4993:
	jmp	.LBB11_4996
.LBB11_4994:
	jmp	.LBB11_4995
.LBB11_4995:
	leaq	FILENAME$(%rip), %rax
	xorl	%r8d, %r8d
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1640(%rip), %rdx
	movl	$9, %ecx
	callq	fb_StrAssign@PLT
	leaq	COMPILER$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1641(%rip), %rdx
	movl	$6, %ecx
	movq	%rax, -17720(%rbp)      # 8-byte Spill
	callq	fb_StrAssign@PLT
	jmp	.LBB11_5109
.LBB11_4996:
	movsd	.LCPI11_21(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_4997
	jp	.LBB11_4997
	jmp	.LBB11_4998
.LBB11_4997:
	jmp	.LBB11_5000
.LBB11_4998:
	jmp	.LBB11_4999
.LBB11_4999:
	leaq	FILENAME$(%rip), %rax
	xorl	%r8d, %r8d
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1642(%rip), %rdx
	movl	$6, %ecx
	callq	fb_StrAssign@PLT
	leaq	COMPILER$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1643(%rip), %rdx
	movl	$5, %ecx
	movq	%rax, -17728(%rbp)      # 8-byte Spill
	callq	fb_StrAssign@PLT
	jmp	.LBB11_5109
.LBB11_5000:
	movsd	.LCPI11_22(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5001
	jp	.LBB11_5001
	jmp	.LBB11_5002
.LBB11_5001:
	jmp	.LBB11_5004
.LBB11_5002:
	jmp	.LBB11_5003
.LBB11_5003:
	leaq	FILENAME$(%rip), %rax
	xorl	%r8d, %r8d
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1644(%rip), %rdx
	movl	$8, %ecx
	callq	fb_StrAssign@PLT
	leaq	COMPILER$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1645(%rip), %rdx
	movl	$5, %ecx
	movq	%rax, -17736(%rbp)      # 8-byte Spill
	callq	fb_StrAssign@PLT
	jmp	.LBB11_5109
.LBB11_5004:
	movsd	.LCPI11_23(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5005
	jp	.LBB11_5005
	jmp	.LBB11_5006
.LBB11_5005:
	jmp	.LBB11_5008
.LBB11_5006:
	jmp	.LBB11_5007
.LBB11_5007:
	leaq	FILENAME$(%rip), %rax
	xorl	%r8d, %r8d
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1646(%rip), %rdx
	movl	$7, %ecx
	callq	fb_StrAssign@PLT
	leaq	COMPILER$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1647(%rip), %rdx
	movl	$5, %ecx
	movq	%rax, -17744(%rbp)      # 8-byte Spill
	callq	fb_StrAssign@PLT
	jmp	.LBB11_5109
.LBB11_5008:
	movsd	.LCPI11_24(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5009
	jp	.LBB11_5009
	jmp	.LBB11_5010
.LBB11_5009:
	jmp	.LBB11_5012
.LBB11_5010:
	jmp	.LBB11_5011
.LBB11_5011:
	leaq	FILENAME$(%rip), %rax
	xorl	%r8d, %r8d
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1648(%rip), %rdx
	movl	$7, %ecx
	callq	fb_StrAssign@PLT
	leaq	COMPILER$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1649(%rip), %rdx
	movl	$6, %ecx
	movq	%rax, -17752(%rbp)      # 8-byte Spill
	callq	fb_StrAssign@PLT
	jmp	.LBB11_5109
.LBB11_5012:
	movsd	.LCPI11_25(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5013
	jp	.LBB11_5013
	jmp	.LBB11_5014
.LBB11_5013:
	jmp	.LBB11_5016
.LBB11_5014:
	jmp	.LBB11_5015
.LBB11_5015:
	leaq	FILENAME$(%rip), %rax
	xorl	%r8d, %r8d
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1650(%rip), %rdx
	movl	$8, %ecx
	callq	fb_StrAssign@PLT
	leaq	COMPILER$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1651(%rip), %rdx
	movl	$8, %ecx
	movq	%rax, -17760(%rbp)      # 8-byte Spill
	callq	fb_StrAssign@PLT
	jmp	.LBB11_5109
.LBB11_5016:
	movsd	.LCPI11_7(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5017
	jp	.LBB11_5017
	jmp	.LBB11_5018
.LBB11_5017:
	jmp	.LBB11_5020
.LBB11_5018:
	jmp	.LBB11_5019
.LBB11_5019:
	leaq	FILENAME$(%rip), %rax
	xorl	%r8d, %r8d
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1652(%rip), %rdx
	movl	$7, %ecx
	callq	fb_StrAssign@PLT
	leaq	COMPILER$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1653(%rip), %rdx
	movl	$8, %ecx
	movq	%rax, -17768(%rbp)      # 8-byte Spill
	callq	fb_StrAssign@PLT
	jmp	.LBB11_5109
.LBB11_5020:
	movsd	.LCPI11_28(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5021
	jp	.LBB11_5021
	jmp	.LBB11_5022
.LBB11_5021:
	jmp	.LBB11_5024
.LBB11_5022:
	jmp	.LBB11_5023
.LBB11_5023:
	leaq	FILENAME$(%rip), %rax
	xorl	%r8d, %r8d
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1654(%rip), %rdx
	movl	$10, %ecx
	callq	fb_StrAssign@PLT
	leaq	COMPILER$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1655(%rip), %rdx
	movl	$7, %ecx
	movq	%rax, -17776(%rbp)      # 8-byte Spill
	callq	fb_StrAssign@PLT
	jmp	.LBB11_5109
.LBB11_5024:
	movsd	.LCPI11_30(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5025
	jp	.LBB11_5025
	jmp	.LBB11_5026
.LBB11_5025:
	jmp	.LBB11_5028
.LBB11_5026:
	jmp	.LBB11_5027
.LBB11_5027:
	leaq	FILENAME$(%rip), %rax
	xorl	%r8d, %r8d
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1656(%rip), %rdx
	movl	$6, %ecx
	callq	fb_StrAssign@PLT
	leaq	COMPILER$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1657(%rip), %rdx
	movl	$18, %ecx
	movq	%rax, -17784(%rbp)      # 8-byte Spill
	callq	fb_StrAssign@PLT
	jmp	.LBB11_5109
.LBB11_5028:
	movsd	.LCPI11_27(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5029
	jp	.LBB11_5029
	jmp	.LBB11_5030
.LBB11_5029:
	jmp	.LBB11_5032
.LBB11_5030:
	jmp	.LBB11_5031
.LBB11_5031:
	leaq	FILENAME$(%rip), %rax
	xorl	%r8d, %r8d
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1658(%rip), %rdx
	movl	$7, %ecx
	callq	fb_StrAssign@PLT
	leaq	COMPILER$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1659(%rip), %rdx
	movl	$9, %ecx
	movq	%rax, -17792(%rbp)      # 8-byte Spill
	callq	fb_StrAssign@PLT
	jmp	.LBB11_5109
.LBB11_5032:
	movsd	.LCPI11_33(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5033
	jp	.LBB11_5033
	jmp	.LBB11_5034
.LBB11_5033:
	jmp	.LBB11_5036
.LBB11_5034:
	jmp	.LBB11_5035
.LBB11_5035:
	leaq	FILENAME$(%rip), %rax
	xorl	%r8d, %r8d
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1660(%rip), %rdx
	movl	$6, %ecx
	callq	fb_StrAssign@PLT
	leaq	COMPILER$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1661(%rip), %rdx
	movl	$9, %ecx
	movq	%rax, -17800(%rbp)      # 8-byte Spill
	callq	fb_StrAssign@PLT
	jmp	.LBB11_5109
.LBB11_5036:
	movsd	.LCPI11_35(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5037
	jp	.LBB11_5037
	jmp	.LBB11_5038
.LBB11_5037:
	jmp	.LBB11_5040
.LBB11_5038:
	jmp	.LBB11_5039
.LBB11_5039:
	leaq	FILENAME$(%rip), %rax
	xorl	%r8d, %r8d
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1662(%rip), %rdx
	movl	$9, %ecx
	callq	fb_StrAssign@PLT
	leaq	COMPILER$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1663(%rip), %rdx
	movl	$6, %ecx
	movq	%rax, -17808(%rbp)      # 8-byte Spill
	callq	fb_StrAssign@PLT
	jmp	.LBB11_5109
.LBB11_5040:
	movsd	.LCPI11_37(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5041
	jp	.LBB11_5041
	jmp	.LBB11_5042
.LBB11_5041:
	jmp	.LBB11_5044
.LBB11_5042:
	jmp	.LBB11_5043
.LBB11_5043:
	leaq	FILENAME$(%rip), %rax
	xorl	%r8d, %r8d
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1664(%rip), %rdx
	movl	$10, %ecx
	callq	fb_StrAssign@PLT
	leaq	COMPILER$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1665(%rip), %rdx
	movl	$8, %ecx
	movq	%rax, -17816(%rbp)      # 8-byte Spill
	callq	fb_StrAssign@PLT
	jmp	.LBB11_5109
.LBB11_5044:
	movsd	.LCPI11_39(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5045
	jp	.LBB11_5045
	jmp	.LBB11_5046
.LBB11_5045:
	jmp	.LBB11_5048
.LBB11_5046:
	jmp	.LBB11_5047
.LBB11_5047:
	xorl	%eax, %eax
	leaq	FILENAME$(%rip), %rdi
	movl	$3, %esi
	movl	%eax, %edx
	movl	%eax, %ecx
	movl	$1, %r8d
	movl	%eax, %r9d
	callq	fb_FileOpen@PLT
	jmp	.LBB11_5109
.LBB11_5048:
	movsd	.LCPI11_41(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5049
	jp	.LBB11_5049
	jmp	.LBB11_5050
.LBB11_5049:
	jmp	.LBB11_5052
.LBB11_5050:
	jmp	.LBB11_5051
.LBB11_5051:
	movl	$1, %edi
	callq	fb_FileClose@PLT
	jmp	.LBB11_5109
.LBB11_5052:
	movsd	.LCPI11_43(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5053
	jp	.LBB11_5053
	jmp	.LBB11_5054
.LBB11_5053:
	jmp	.LBB11_5078
.LBB11_5054:
	jmp	.LBB11_5055
.LBB11_5055:
	xorl	%r8d, %r8d
	movq	FGIMAGE$(%rip), %rdi
	movq	SCR_W$(%rip), %rax
	movq	%rax, %rcx
	shrq	%rcx
	movl	%eax, %edx
	andl	$1, %edx
	movl	%edx, %esi
	orq	%rcx, %rsi
	cvtsi2ss	%rsi, %xmm0
	addss	%xmm0, %xmm0
	cvtsi2ss	%rax, %xmm1
	testq	%rax, %rax
	movl	%r8d, -17820(%rbp)      # 4-byte Spill
	movq	%rdi, -17832(%rbp)      # 8-byte Spill
	movss	%xmm1, -17836(%rbp)     # 4-byte Spill
	movss	%xmm0, -17840(%rbp)     # 4-byte Spill
	js	.LBB11_6029
# %bb.6028:
	movss	-17836(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movss	%xmm0, -17840(%rbp)     # 4-byte Spill
.LBB11_6029:
	movss	-17840(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movq	SCR_H$(%rip), %rax
	movq	%rax, %rcx
	shrq	%rcx
	movl	%eax, %edx
	andl	$1, %edx
	movl	%edx, %esi
	orq	%rcx, %rsi
	cvtsi2ss	%rsi, %xmm1
	addss	%xmm1, %xmm1
	cvtsi2ss	%rax, %xmm2
	testq	%rax, %rax
	movss	%xmm0, -17844(%rbp)     # 4-byte Spill
	movss	%xmm2, -17848(%rbp)     # 4-byte Spill
	movss	%xmm1, -17852(%rbp)     # 4-byte Spill
	js	.LBB11_6031
# %bb.6030:
	movss	-17848(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movss	%xmm0, -17852(%rbp)     # 4-byte Spill
.LBB11_6031:
	movss	-17852(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movq	-17832(%rbp), %rdi      # 8-byte Reload
	xorps	%xmm1, %xmm1
	movss	%xmm0, -17856(%rbp)     # 4-byte Spill
	movaps	%xmm1, %xmm0
	movss	-17844(%rbp), %xmm2     # 4-byte Reload
                                        # xmm2 = mem[0],zero,zero,zero
	movss	-17856(%rbp), %xmm3     # 4-byte Reload
                                        # xmm3 = mem[0],zero,zero,zero
	movl	$4278190080, %esi       # imm = 0xFF000000
	movl	$2, %edx
	movl	$65535, %ecx            # imm = 0xFFFF
	movl	-17820(%rbp), %r8d      # 4-byte Reload
	callq	fb_GfxLine@PLT
	leaq	COMPILER$(%rip), %rax
	leaq	FILENAME$(%rip), %rdi
	xorl	%esi, %esi
	leaq	-1768(%rbp), %r9
	movq	%r9, %r10
	movq	%rdi, -17864(%rbp)      # 8-byte Spill
	movq	%r10, %rdi
	movl	$24, %edx
	movq	%rax, -17872(%rbp)      # 8-byte Spill
	movq	%r9, -17880(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-17880(%rbp), %rdi      # 8-byte Reload
	movq	-17872(%rbp), %rsi      # 8-byte Reload
	movq	$-1, %rax
	movq	%rax, %rdx
	movq	-17864(%rbp), %rcx      # 8-byte Reload
	movq	%rax, %r8
	callq	fb_StrConcat@PLT
	movq	%rax, -15280(%rbp)
	movq	-15280(%rbp), %rdi
	callq	fb_Shell@PLT
	leaq	.L.str.167(%rip), %rdi
	movl	$15, %esi
	movl	%eax, -17884(%rbp)      # 4-byte Spill
	callq	fb_StrAllocTempDescZEx@PLT
	movq	%rax, -15288(%rbp)
	movq	-15288(%rbp), %rdi
	callq	fb_Shell@PLT
	leaq	.L.str.168(%rip), %rdi
	movl	$7, %esi
	movl	%eax, -17888(%rbp)      # 4-byte Spill
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%r11d, %r11d
	movq	%rax, -15296(%rbp)
	movq	-15296(%rbp), %rdi
	movl	$2, %esi
	movl	%r11d, %edx
	movl	%r11d, %ecx
	movl	$1, %r8d
	movl	%r11d, %r9d
	callq	fb_FileOpen@PLT
	movq	$0, SCR_POS$(%rip)
	movq	-2216(%rbp), %rdi
	xorps	%xmm0, %xmm0
	movsd	%xmm0, 394896(%rdi)
	movq	-2216(%rbp), %rdi
	movsd	%xmm0, 394904(%rdi)
	movq	-2216(%rbp), %rdi
	movsd	%xmm0, 394912(%rdi)
.LBB11_5056:                            # =>This Loop Header: Depth=1
                                        #     Child Loop BB11_5064 Depth 2
	movl	$1, %edi
	callq	fb_FileEof@PLT
	movl	%eax, -15300(%rbp)
	movslq	-15300(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB11_5058
# %bb.5057:
	jmp	.LBB11_5068
.LBB11_5058:                            #   in Loop: Header=BB11_5056 Depth=1
	leaq	STRCODE$(%rip), %rax
	xorl	%ecx, %ecx
	movl	$1, %edi
	movq	%rax, %rsi
	movq	$-1, %rdx
	callq	fb_FileLineInput@PLT
	leaq	STRCODE$(%rip), %rdx
	movw	$1, INDEX$(%rip)
	movq	%rdx, %rdi
	movq	$-1, %rsi
	movl	%eax, -17892(%rbp)      # 4-byte Spill
	callq	fb_StrLen@PLT
	movq	%rax, -15312(%rbp)
	movq	-15312(%rbp), %rax
                                        # kill: def $ax killed $ax killed $rax
	movw	%ax, -15302(%rbp)
	jmp	.LBB11_5064
.LBB11_5059:                            #   in Loop: Header=BB11_5064 Depth=2
	xorl	%eax, %eax
	movsd	.LCPI11_88(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_53(%rip), %xmm1 # xmm1 = mem[0],zero
	movzwl	INDEX$(%rip), %ecx
	movl	%ecx, %esi
	leaq	STRCODE$(%rip), %rdi
	movl	$1, %edx
	movq	%rdx, -17904(%rbp)      # 8-byte Spill
	movl	%eax, -17908(%rbp)      # 4-byte Spill
	movsd	%xmm0, -17920(%rbp)     # 8-byte Spill
	movsd	%xmm1, -17928(%rbp)     # 8-byte Spill
	callq	fb_StrMid@PLT
	movq	%rax, -15320(%rbp)
	movq	-15320(%rbp), %rdi
	movq	-17904(%rbp), %rsi      # 8-byte Reload
	callq	fb_ASC@PLT
	movl	%eax, -15324(%rbp)
	movl	-15324(%rbp), %eax
	movl	%eax, %edx
	cvtsi2sd	%rdx, %xmm0
	movq	-2216(%rbp), %rdx
	movsd	%xmm0, 394888(%rdx)
	movq	-2216(%rbp), %rdx
	movsd	394888(%rdx), %xmm0     # xmm0 = mem[0],zero
	movsd	-17928(%rbp), %xmm1     # 8-byte Reload
                                        # xmm1 = mem[0],zero
	ucomisd	%xmm1, %xmm0
	seta	%r8b
	andb	$1, %r8b
	movzbl	%r8b, %eax
	movl	-17908(%rbp), %ecx      # 4-byte Reload
	subl	%eax, %ecx
	movslq	%ecx, %rdx
	movq	-2216(%rbp), %rsi
	movsd	-17920(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	ucomisd	394888(%rsi), %xmm0
	seta	%r8b
	andb	$1, %r8b
	movzbl	%r8b, %eax
	movl	-17908(%rbp), %ecx      # 4-byte Reload
	subl	%eax, %ecx
	movslq	%ecx, %rsi
	andq	%rsi, %rdx
	cmpq	$0, %rdx
	jne	.LBB11_5061
# %bb.5060:                             #   in Loop: Header=BB11_5064 Depth=2
	jmp	.LBB11_5062
.LBB11_5061:                            #   in Loop: Header=BB11_5064 Depth=2
	movsd	.LCPI11_29(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	394888(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
.LBB11_5062:                            #   in Loop: Header=BB11_5064 Depth=2
	movsd	.LCPI11_29(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	movzwl	INDEX$(%rip), %eax
	movl	%eax, %ecx
	movq	SCR_POS$(%rip), %rdx
	leaq	16383(%rcx,%rdx), %rcx
	movq	%rcx, %xmm1
	movaps	.LCPI11_297(%rip), %xmm2 # xmm2 = [1127219200,1160773632,0,0]
	punpckldq	%xmm2, %xmm1    # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	movapd	.LCPI11_298(%rip), %xmm2 # xmm2 = [4.503599627370496E+15,1.9342813113834067E+25]
	subpd	%xmm2, %xmm1
	movaps	%xmm1, %xmm2
	unpckhpd	%xmm1, %xmm1    # xmm1 = xmm1[1,1]
	addsd	%xmm2, %xmm1
	movq	-2216(%rbp), %rcx
	addsd	394888(%rcx), %xmm0
	movq	%rdi, -17936(%rbp)      # 8-byte Spill
	movsd	%xmm1, -17944(%rbp)     # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	andq	$63, %rcx
	cvtsi2sd	%rcx, %xmm1
	movq	-17936(%rbp), %rdi      # 8-byte Reload
	movsd	-17944(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	callq	_ZN8MEMORY_T5POKEBEdd
# %bb.5063:                             #   in Loop: Header=BB11_5064 Depth=2
	movzwl	INDEX$(%rip), %eax
	movl	%eax, %ecx
	addq	$1, %rcx
                                        # kill: def $cx killed $cx killed $rcx
	movw	%cx, INDEX$(%rip)
.LBB11_5064:                            #   Parent Loop BB11_5056 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movzwl	INDEX$(%rip), %eax
	movl	%eax, %ecx
	movzwl	-15302(%rbp), %eax
	movl	%eax, %edx
	cmpq	%rdx, %rcx
	jg	.LBB11_5066
# %bb.5065:                             #   in Loop: Header=BB11_5064 Depth=2
	jmp	.LBB11_5059
.LBB11_5066:                            #   in Loop: Header=BB11_5056 Depth=1
	jmp	.LBB11_5067
.LBB11_5067:                            #   in Loop: Header=BB11_5056 Depth=1
	movq	SCR_POS$(%rip), %rax
	addq	$90, %rax
	movq	%rax, SCR_POS$(%rip)
	jmp	.LBB11_5056
.LBB11_5068:
	movq	$5400, SCR_POS$(%rip)   # imm = 0x1518
	movq	-2216(%rbp), %rax
	xorps	%xmm0, %xmm0
	movsd	%xmm0, 394912(%rax)
	movl	$1, %edi
	callq	fb_FileClose@PLT
	leaq	STRCODE$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1666(%rip), %rdx
	movl	$27, %ecx
	movl	%eax, -17948(%rbp)      # 4-byte Spill
	callq	fb_StrAssign@PLT
	leaq	STRCODE$(%rip), %rcx
	movw	$1, INDEX$(%rip)
	movq	%rcx, %rdi
	movq	$-1, %rsi
	movq	%rax, -17960(%rbp)      # 8-byte Spill
	callq	fb_StrLen@PLT
	movq	%rax, -15336(%rbp)
	movq	-15336(%rbp), %rax
                                        # kill: def $ax killed $ax killed $rax
	movw	%ax, -15326(%rbp)
	jmp	.LBB11_5074
.LBB11_5069:                            #   in Loop: Header=BB11_5074 Depth=1
	xorl	%eax, %eax
	movsd	.LCPI11_88(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_53(%rip), %xmm1 # xmm1 = mem[0],zero
	movzwl	INDEX$(%rip), %ecx
	movl	%ecx, %esi
	leaq	STRCODE$(%rip), %rdi
	movl	$1, %edx
	movq	%rdx, -17968(%rbp)      # 8-byte Spill
	movl	%eax, -17972(%rbp)      # 4-byte Spill
	movsd	%xmm0, -17984(%rbp)     # 8-byte Spill
	movsd	%xmm1, -17992(%rbp)     # 8-byte Spill
	callq	fb_StrMid@PLT
	movq	%rax, -15344(%rbp)
	movq	-15344(%rbp), %rdi
	movq	-17968(%rbp), %rsi      # 8-byte Reload
	callq	fb_ASC@PLT
	movl	%eax, -15348(%rbp)
	movl	-15348(%rbp), %eax
	movl	%eax, %edx
	cvtsi2sd	%rdx, %xmm0
	movq	-2216(%rbp), %rdx
	movsd	%xmm0, 394888(%rdx)
	movq	-2216(%rbp), %rdx
	movsd	394888(%rdx), %xmm0     # xmm0 = mem[0],zero
	movsd	-17992(%rbp), %xmm1     # 8-byte Reload
                                        # xmm1 = mem[0],zero
	ucomisd	%xmm1, %xmm0
	seta	%r8b
	andb	$1, %r8b
	movzbl	%r8b, %eax
	movl	-17972(%rbp), %ecx      # 4-byte Reload
	subl	%eax, %ecx
	movslq	%ecx, %rdx
	movq	-2216(%rbp), %rsi
	movsd	-17984(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	ucomisd	394888(%rsi), %xmm0
	seta	%r8b
	andb	$1, %r8b
	movzbl	%r8b, %eax
	movl	-17972(%rbp), %ecx      # 4-byte Reload
	subl	%eax, %ecx
	movslq	%ecx, %rsi
	andq	%rsi, %rdx
	cmpq	$0, %rdx
	jne	.LBB11_5071
# %bb.5070:                             #   in Loop: Header=BB11_5074 Depth=1
	jmp	.LBB11_5072
.LBB11_5071:                            #   in Loop: Header=BB11_5074 Depth=1
	movsd	.LCPI11_29(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	394888(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
.LBB11_5072:                            #   in Loop: Header=BB11_5074 Depth=1
	movsd	.LCPI11_29(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	movzwl	INDEX$(%rip), %eax
	movl	%eax, %ecx
	movq	SCR_POS$(%rip), %rdx
	leaq	16383(%rcx,%rdx), %rcx
	movq	%rcx, %xmm1
	movaps	.LCPI11_297(%rip), %xmm2 # xmm2 = [1127219200,1160773632,0,0]
	punpckldq	%xmm2, %xmm1    # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	movapd	.LCPI11_298(%rip), %xmm2 # xmm2 = [4.503599627370496E+15,1.9342813113834067E+25]
	subpd	%xmm2, %xmm1
	movaps	%xmm1, %xmm2
	unpckhpd	%xmm1, %xmm1    # xmm1 = xmm1[1,1]
	addsd	%xmm2, %xmm1
	movq	-2216(%rbp), %rcx
	addsd	394888(%rcx), %xmm0
	movq	%rdi, -18000(%rbp)      # 8-byte Spill
	movsd	%xmm1, -18008(%rbp)     # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	andq	$63, %rcx
	cvtsi2sd	%rcx, %xmm1
	movq	-18000(%rbp), %rdi      # 8-byte Reload
	movsd	-18008(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	callq	_ZN8MEMORY_T5POKEBEdd
# %bb.5073:                             #   in Loop: Header=BB11_5074 Depth=1
	movzwl	INDEX$(%rip), %eax
	movl	%eax, %ecx
	addq	$1, %rcx
                                        # kill: def $cx killed $cx killed $rcx
	movw	%cx, INDEX$(%rip)
.LBB11_5074:                            # =>This Inner Loop Header: Depth=1
	movzwl	INDEX$(%rip), %eax
	movl	%eax, %ecx
	movzwl	-15326(%rbp), %eax
	movl	%eax, %edx
	cmpq	%rdx, %rcx
	jg	.LBB11_5076
# %bb.5075:                             #   in Loop: Header=BB11_5074 Depth=1
	jmp	.LBB11_5069
.LBB11_5076:
	jmp	.LBB11_5077
.LBB11_5077:
	xorl	%r8d, %r8d
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -1792(%rbp)
	movq	$0, -1776(%rbp)
	leaq	.L.str.1667(%rip), %rsi
	leaq	FILENAME$(%rip), %rcx
	leaq	-1792(%rbp), %rdi
	movl	$13, %edx
	movq	$-1, %rax
	movl	%r8d, -18012(%rbp)      # 4-byte Spill
	movq	%rax, %r8
	movq	%rax, -18024(%rbp)      # 8-byte Spill
	callq	fb_StrConcat@PLT
	movq	%rax, -15360(%rbp)
	movq	-15360(%rbp), %rdi
	callq	fb_Shell@PLT
	movq	$0, SCR_POS$(%rip)
	leaq	STRCODE$(%rip), %rdi
	leaq	.L.str.1(%rip), %rdx
	movl	$1, %ecx
	xorl	%r9d, %r9d
	movq	-18024(%rbp), %rsi      # 8-byte Reload
	movl	%r9d, %r8d
	movl	%eax, -18028(%rbp)      # 4-byte Spill
	movl	%r9d, -18032(%rbp)      # 4-byte Spill
	callq	fb_StrAssign@PLT
	movq	FGIMAGE$(%rip), %rsi
	movq	fb_hPutPSet@GOTPCREL(%rip), %rcx
	movq	%rsp, %rdx
	movq	%rcx, 16(%rdx)
	movq	$0, 40(%rdx)
	movq	$0, 32(%rdx)
	movl	$-1, 24(%rdx)
	movl	$1, 8(%rdx)
	movl	$0, (%rdx)
	movl	-18032(%rbp), %r8d      # 4-byte Reload
	movl	%r8d, %edi
	xorps	%xmm0, %xmm0
	movl	$-65536, %r9d           # imm = 0xFFFF0000
	movss	%xmm0, -18036(%rbp)     # 4-byte Spill
	movss	-18036(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movl	%r9d, %edx
	movl	%r9d, %ecx
	movl	%r9d, %r8d
	movq	%rax, -18048(%rbp)      # 8-byte Spill
	callq	fb_GfxPut@PLT
	movl	$-1, %edi
	movl	%eax, -18052(%rbp)      # 4-byte Spill
	callq	fb_Sleep@PLT
	movq	FGIMAGE$(%rip), %rdi
	movq	SCR_W$(%rip), %rsi
	movq	%rsi, %r10
	shrq	%r10
	movl	%esi, %eax
	andl	$1, %eax
	movl	%eax, %r11d
	orq	%r10, %r11
	cvtsi2ss	%r11, %xmm0
	addss	%xmm0, %xmm0
	cvtsi2ss	%rsi, %xmm1
	testq	%rsi, %rsi
	movq	%rdi, -18064(%rbp)      # 8-byte Spill
	movss	%xmm1, -18068(%rbp)     # 4-byte Spill
	movss	%xmm0, -18072(%rbp)     # 4-byte Spill
	js	.LBB11_6033
# %bb.6032:
	movss	-18068(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movss	%xmm0, -18072(%rbp)     # 4-byte Spill
.LBB11_6033:
	movss	-18072(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movq	SCR_H$(%rip), %rax
	movq	%rax, %rcx
	shrq	%rcx
	movl	%eax, %edx
	andl	$1, %edx
	movl	%edx, %esi
	orq	%rcx, %rsi
	cvtsi2ss	%rsi, %xmm1
	addss	%xmm1, %xmm1
	cvtsi2ss	%rax, %xmm2
	testq	%rax, %rax
	movss	%xmm0, -18076(%rbp)     # 4-byte Spill
	movss	%xmm2, -18080(%rbp)     # 4-byte Spill
	movss	%xmm1, -18084(%rbp)     # 4-byte Spill
	js	.LBB11_6035
# %bb.6034:
	movss	-18080(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movss	%xmm0, -18084(%rbp)     # 4-byte Spill
.LBB11_6035:
	movss	-18084(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movq	-18064(%rbp), %rdi      # 8-byte Reload
	xorps	%xmm1, %xmm1
	movss	%xmm0, -18088(%rbp)     # 4-byte Spill
	movaps	%xmm1, %xmm0
	movss	-18076(%rbp), %xmm2     # 4-byte Reload
                                        # xmm2 = mem[0],zero,zero,zero
	movss	-18088(%rbp), %xmm3     # 4-byte Reload
                                        # xmm3 = mem[0],zero,zero,zero
	movl	$4278190080, %esi       # imm = 0xFF000000
	movl	$2, %edx
	movl	$65535, %ecx            # imm = 0xFFFF
	movl	-18012(%rbp), %r8d      # 4-byte Reload
	callq	fb_GfxLine@PLT
	xorl	%eax, %eax
	movl	%eax, %edi
	xorl	%eax, %eax
	movq	fb_hPutPSet@GOTPCREL(%rip), %r9
	movq	FGIMAGE$(%rip), %rsi
	xorps	%xmm0, %xmm0
	movss	%xmm0, -18092(%rbp)     # 4-byte Spill
	movss	-18092(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movl	$4294901760, %ecx       # imm = 0xFFFF0000
	movl	%ecx, %edx
	movl	%ecx, -18096(%rbp)      # 4-byte Spill
	movl	-18096(%rbp), %r8d      # 4-byte Reload
	movl	-18096(%rbp), %r10d     # 4-byte Reload
	movq	%r9, -18104(%rbp)       # 8-byte Spill
	movl	%r10d, %r9d
	movl	$0, (%rsp)
	movl	$1, 8(%rsp)
	movq	-18104(%rbp), %r11      # 8-byte Reload
	movq	%r11, 16(%rsp)
	movl	$-1, 24(%rsp)
	movq	$0, 32(%rsp)
	movq	$0, 40(%rsp)
	movl	%eax, -18108(%rbp)      # 4-byte Spill
	callq	fb_GfxPut@PLT
	jmp	.LBB11_5109
.LBB11_5078:
	movsd	.LCPI11_45(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5079
	jp	.LBB11_5079
	jmp	.LBB11_5080
.LBB11_5079:
	jmp	.LBB11_5104
.LBB11_5080:
	jmp	.LBB11_5081
.LBB11_5081:
	xorl	%r8d, %r8d
	movq	-2216(%rbp), %rax
	movq	$0, 394840(%rax)
	movq	-2216(%rbp), %rax
	movq	$0, 394848(%rax)
	movq	FGIMAGE$(%rip), %rdi
	movq	SCR_W$(%rip), %rax
	movq	%rax, %rcx
	shrq	%rcx
	movl	%eax, %edx
	andl	$1, %edx
	movl	%edx, %esi
	orq	%rcx, %rsi
	cvtsi2ss	%rsi, %xmm0
	addss	%xmm0, %xmm0
	cvtsi2ss	%rax, %xmm1
	testq	%rax, %rax
	movl	%r8d, -18112(%rbp)      # 4-byte Spill
	movq	%rdi, -18120(%rbp)      # 8-byte Spill
	movss	%xmm1, -18124(%rbp)     # 4-byte Spill
	movss	%xmm0, -18128(%rbp)     # 4-byte Spill
	js	.LBB11_6037
# %bb.6036:
	movss	-18124(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movss	%xmm0, -18128(%rbp)     # 4-byte Spill
.LBB11_6037:
	movss	-18128(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movq	SCR_H$(%rip), %rax
	movq	%rax, %rcx
	shrq	%rcx
	movl	%eax, %edx
	andl	$1, %edx
	movl	%edx, %esi
	orq	%rcx, %rsi
	cvtsi2ss	%rsi, %xmm1
	addss	%xmm1, %xmm1
	cvtsi2ss	%rax, %xmm2
	testq	%rax, %rax
	movss	%xmm0, -18132(%rbp)     # 4-byte Spill
	movss	%xmm2, -18136(%rbp)     # 4-byte Spill
	movss	%xmm1, -18140(%rbp)     # 4-byte Spill
	js	.LBB11_6039
# %bb.6038:
	movss	-18136(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movss	%xmm0, -18140(%rbp)     # 4-byte Spill
.LBB11_6039:
	movss	-18140(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movq	-18120(%rbp), %rdi      # 8-byte Reload
	xorps	%xmm1, %xmm1
	movss	%xmm0, -18144(%rbp)     # 4-byte Spill
	movaps	%xmm1, %xmm0
	movss	-18132(%rbp), %xmm2     # 4-byte Reload
                                        # xmm2 = mem[0],zero,zero,zero
	movss	-18144(%rbp), %xmm3     # 4-byte Reload
                                        # xmm3 = mem[0],zero,zero,zero
	movl	$4278190080, %esi       # imm = 0xFF000000
	movl	$2, %edx
	movl	$65535, %ecx            # imm = 0xFFFF
	movl	-18112(%rbp), %r8d      # 4-byte Reload
	callq	fb_GfxLine@PLT
	xorl	%eax, %eax
	leaq	FILENAME$(%rip), %rdi
	movl	%eax, %esi
	movl	%eax, %edx
	movl	%eax, %ecx
	movl	$1, %r8d
	movl	%eax, %r9d
	callq	fb_FileOpen@PLT
	movq	$0, SCR_POS$(%rip)
	movq	-2216(%rbp), %rdi
	xorps	%xmm0, %xmm0
	movsd	%xmm0, 394896(%rdi)
	movq	-2216(%rbp), %rdi
	movsd	%xmm0, 394904(%rdi)
	movq	-2216(%rbp), %rdi
	movsd	%xmm0, 394912(%rdi)
.LBB11_5082:                            # =>This Loop Header: Depth=1
                                        #     Child Loop BB11_5090 Depth 2
	movl	$1, %edi
	callq	fb_FileEof@PLT
	movl	%eax, -15364(%rbp)
	movslq	-15364(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB11_5084
# %bb.5083:
	jmp	.LBB11_5094
.LBB11_5084:                            #   in Loop: Header=BB11_5082 Depth=1
	leaq	STRCODE$(%rip), %rax
	xorl	%ecx, %ecx
	movl	$1, %edi
	movq	%rax, %rsi
	movq	$-1, %rdx
	callq	fb_FileLineInput@PLT
	leaq	STRCODE$(%rip), %rdx
	movw	$1, INDEX$(%rip)
	movq	%rdx, %rdi
	movq	$-1, %rsi
	movl	%eax, -18148(%rbp)      # 4-byte Spill
	callq	fb_StrLen@PLT
	movq	%rax, -15376(%rbp)
	movq	-15376(%rbp), %rax
                                        # kill: def $ax killed $ax killed $rax
	movw	%ax, -15366(%rbp)
	jmp	.LBB11_5090
.LBB11_5085:                            #   in Loop: Header=BB11_5090 Depth=2
	xorl	%eax, %eax
	movsd	.LCPI11_88(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_53(%rip), %xmm1 # xmm1 = mem[0],zero
	movzwl	INDEX$(%rip), %ecx
	movl	%ecx, %esi
	leaq	STRCODE$(%rip), %rdi
	movl	$1, %edx
	movq	%rdx, -18160(%rbp)      # 8-byte Spill
	movl	%eax, -18164(%rbp)      # 4-byte Spill
	movsd	%xmm0, -18176(%rbp)     # 8-byte Spill
	movsd	%xmm1, -18184(%rbp)     # 8-byte Spill
	callq	fb_StrMid@PLT
	movq	%rax, -15384(%rbp)
	movq	-15384(%rbp), %rdi
	movq	-18160(%rbp), %rsi      # 8-byte Reload
	callq	fb_ASC@PLT
	movl	%eax, -15388(%rbp)
	movl	-15388(%rbp), %eax
	movl	%eax, %edx
	cvtsi2sd	%rdx, %xmm0
	movq	-2216(%rbp), %rdx
	movsd	%xmm0, 394888(%rdx)
	movq	-2216(%rbp), %rdx
	movsd	394888(%rdx), %xmm0     # xmm0 = mem[0],zero
	movsd	-18184(%rbp), %xmm1     # 8-byte Reload
                                        # xmm1 = mem[0],zero
	ucomisd	%xmm1, %xmm0
	seta	%r8b
	andb	$1, %r8b
	movzbl	%r8b, %eax
	movl	-18164(%rbp), %ecx      # 4-byte Reload
	subl	%eax, %ecx
	movslq	%ecx, %rdx
	movq	-2216(%rbp), %rsi
	movsd	-18176(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	ucomisd	394888(%rsi), %xmm0
	seta	%r8b
	andb	$1, %r8b
	movzbl	%r8b, %eax
	movl	-18164(%rbp), %ecx      # 4-byte Reload
	subl	%eax, %ecx
	movslq	%ecx, %rsi
	andq	%rsi, %rdx
	cmpq	$0, %rdx
	jne	.LBB11_5087
# %bb.5086:                             #   in Loop: Header=BB11_5090 Depth=2
	jmp	.LBB11_5088
.LBB11_5087:                            #   in Loop: Header=BB11_5090 Depth=2
	movsd	.LCPI11_29(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	394888(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
.LBB11_5088:                            #   in Loop: Header=BB11_5090 Depth=2
	movsd	.LCPI11_29(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	movzwl	INDEX$(%rip), %eax
	movl	%eax, %ecx
	movq	SCR_POS$(%rip), %rdx
	leaq	16383(%rcx,%rdx), %rcx
	movq	%rcx, %xmm1
	movaps	.LCPI11_297(%rip), %xmm2 # xmm2 = [1127219200,1160773632,0,0]
	punpckldq	%xmm2, %xmm1    # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	movapd	.LCPI11_298(%rip), %xmm2 # xmm2 = [4.503599627370496E+15,1.9342813113834067E+25]
	subpd	%xmm2, %xmm1
	movaps	%xmm1, %xmm2
	unpckhpd	%xmm1, %xmm1    # xmm1 = xmm1[1,1]
	addsd	%xmm2, %xmm1
	movq	-2216(%rbp), %rcx
	addsd	394888(%rcx), %xmm0
	movq	%rdi, -18192(%rbp)      # 8-byte Spill
	movsd	%xmm1, -18200(%rbp)     # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	andq	$63, %rcx
	cvtsi2sd	%rcx, %xmm1
	movq	-18192(%rbp), %rdi      # 8-byte Reload
	movsd	-18200(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	callq	_ZN8MEMORY_T5POKEBEdd
# %bb.5089:                             #   in Loop: Header=BB11_5090 Depth=2
	movzwl	INDEX$(%rip), %eax
	movl	%eax, %ecx
	addq	$1, %rcx
                                        # kill: def $cx killed $cx killed $rcx
	movw	%cx, INDEX$(%rip)
.LBB11_5090:                            #   Parent Loop BB11_5082 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movzwl	INDEX$(%rip), %eax
	movl	%eax, %ecx
	movzwl	-15366(%rbp), %eax
	movl	%eax, %edx
	cmpq	%rdx, %rcx
	jg	.LBB11_5092
# %bb.5091:                             #   in Loop: Header=BB11_5090 Depth=2
	jmp	.LBB11_5085
.LBB11_5092:                            #   in Loop: Header=BB11_5082 Depth=1
	jmp	.LBB11_5093
.LBB11_5093:                            #   in Loop: Header=BB11_5082 Depth=1
	movq	SCR_POS$(%rip), %rax
	addq	$90, %rax
	movq	%rax, SCR_POS$(%rip)
	jmp	.LBB11_5082
.LBB11_5094:
	movq	$5400, SCR_POS$(%rip)   # imm = 0x1518
	movq	-2216(%rbp), %rax
	xorps	%xmm0, %xmm0
	movsd	%xmm0, 394912(%rax)
	movl	$1, %edi
	callq	fb_FileClose@PLT
	leaq	STRCODE$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1666(%rip), %rdx
	movl	$27, %ecx
	movl	%eax, -18204(%rbp)      # 4-byte Spill
	callq	fb_StrAssign@PLT
	leaq	STRCODE$(%rip), %rcx
	movw	$1, INDEX$(%rip)
	movq	%rcx, %rdi
	movq	$-1, %rsi
	movq	%rax, -18216(%rbp)      # 8-byte Spill
	callq	fb_StrLen@PLT
	movq	%rax, -15400(%rbp)
	movq	-15400(%rbp), %rax
                                        # kill: def $ax killed $ax killed $rax
	movw	%ax, -15390(%rbp)
	jmp	.LBB11_5100
.LBB11_5095:                            #   in Loop: Header=BB11_5100 Depth=1
	xorl	%eax, %eax
	movsd	.LCPI11_88(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_53(%rip), %xmm1 # xmm1 = mem[0],zero
	movzwl	INDEX$(%rip), %ecx
	movl	%ecx, %esi
	leaq	STRCODE$(%rip), %rdi
	movl	$1, %edx
	movq	%rdx, -18224(%rbp)      # 8-byte Spill
	movl	%eax, -18228(%rbp)      # 4-byte Spill
	movsd	%xmm0, -18240(%rbp)     # 8-byte Spill
	movsd	%xmm1, -18248(%rbp)     # 8-byte Spill
	callq	fb_StrMid@PLT
	movq	%rax, -15408(%rbp)
	movq	-15408(%rbp), %rdi
	movq	-18224(%rbp), %rsi      # 8-byte Reload
	callq	fb_ASC@PLT
	movl	%eax, -15412(%rbp)
	movl	-15412(%rbp), %eax
	movl	%eax, %edx
	cvtsi2sd	%rdx, %xmm0
	movq	-2216(%rbp), %rdx
	movsd	%xmm0, 394888(%rdx)
	movq	-2216(%rbp), %rdx
	movsd	394888(%rdx), %xmm0     # xmm0 = mem[0],zero
	movsd	-18248(%rbp), %xmm1     # 8-byte Reload
                                        # xmm1 = mem[0],zero
	ucomisd	%xmm1, %xmm0
	seta	%r8b
	andb	$1, %r8b
	movzbl	%r8b, %eax
	movl	-18228(%rbp), %ecx      # 4-byte Reload
	subl	%eax, %ecx
	movslq	%ecx, %rdx
	movq	-2216(%rbp), %rsi
	movsd	-18240(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	ucomisd	394888(%rsi), %xmm0
	seta	%r8b
	andb	$1, %r8b
	movzbl	%r8b, %eax
	movl	-18228(%rbp), %ecx      # 4-byte Reload
	subl	%eax, %ecx
	movslq	%ecx, %rsi
	andq	%rsi, %rdx
	cmpq	$0, %rdx
	jne	.LBB11_5097
# %bb.5096:                             #   in Loop: Header=BB11_5100 Depth=1
	jmp	.LBB11_5098
.LBB11_5097:                            #   in Loop: Header=BB11_5100 Depth=1
	movsd	.LCPI11_29(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	394888(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
.LBB11_5098:                            #   in Loop: Header=BB11_5100 Depth=1
	movsd	.LCPI11_29(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	movzwl	INDEX$(%rip), %eax
	movl	%eax, %ecx
	movq	SCR_POS$(%rip), %rdx
	leaq	16383(%rcx,%rdx), %rcx
	movq	%rcx, %xmm1
	movaps	.LCPI11_297(%rip), %xmm2 # xmm2 = [1127219200,1160773632,0,0]
	punpckldq	%xmm2, %xmm1    # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	movapd	.LCPI11_298(%rip), %xmm2 # xmm2 = [4.503599627370496E+15,1.9342813113834067E+25]
	subpd	%xmm2, %xmm1
	movaps	%xmm1, %xmm2
	unpckhpd	%xmm1, %xmm1    # xmm1 = xmm1[1,1]
	addsd	%xmm2, %xmm1
	movq	-2216(%rbp), %rcx
	addsd	394888(%rcx), %xmm0
	movq	%rdi, -18256(%rbp)      # 8-byte Spill
	movsd	%xmm1, -18264(%rbp)     # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	andq	$63, %rcx
	cvtsi2sd	%rcx, %xmm1
	movq	-18256(%rbp), %rdi      # 8-byte Reload
	movsd	-18264(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	callq	_ZN8MEMORY_T5POKEBEdd
# %bb.5099:                             #   in Loop: Header=BB11_5100 Depth=1
	movzwl	INDEX$(%rip), %eax
	movl	%eax, %ecx
	addq	$1, %rcx
                                        # kill: def $cx killed $cx killed $rcx
	movw	%cx, INDEX$(%rip)
.LBB11_5100:                            # =>This Inner Loop Header: Depth=1
	movzwl	INDEX$(%rip), %eax
	movl	%eax, %ecx
	movzwl	-15390(%rbp), %eax
	movl	%eax, %edx
	cmpq	%rdx, %rcx
	jg	.LBB11_5102
# %bb.5101:                             #   in Loop: Header=BB11_5100 Depth=1
	jmp	.LBB11_5095
.LBB11_5102:
	jmp	.LBB11_5103
.LBB11_5103:
	xorl	%r8d, %r8d
	movq	$0, SCR_POS$(%rip)
	leaq	STRCODE$(%rip), %rdi
	leaq	.L.str.1(%rip), %rdx
	movq	$-1, %rsi
	movl	$1, %ecx
	xorl	%eax, %eax
	movl	%r8d, -18268(%rbp)      # 4-byte Spill
	movl	%eax, %r8d
	movl	%eax, -18272(%rbp)      # 4-byte Spill
	callq	fb_StrAssign@PLT
	movq	FGIMAGE$(%rip), %rsi
	movq	fb_hPutPSet@GOTPCREL(%rip), %rcx
	movq	%rsp, %rdx
	movq	%rcx, 16(%rdx)
	movq	$0, 40(%rdx)
	movq	$0, 32(%rdx)
	movl	$-1, 24(%rdx)
	movl	$1, 8(%rdx)
	movl	$0, (%rdx)
	movl	-18272(%rbp), %r8d      # 4-byte Reload
	movl	%r8d, %edi
	xorps	%xmm0, %xmm0
	movl	$-65536, %r9d           # imm = 0xFFFF0000
	movss	%xmm0, -18276(%rbp)     # 4-byte Spill
	movss	-18276(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movl	%r9d, %edx
	movl	%r9d, %ecx
	movl	%r9d, %r8d
	movq	%rax, -18288(%rbp)      # 8-byte Spill
	callq	fb_GfxPut@PLT
	movl	$-1, %edi
	movl	%eax, -18292(%rbp)      # 4-byte Spill
	callq	fb_Sleep@PLT
	movq	FGIMAGE$(%rip), %rdi
	movq	SCR_W$(%rip), %rsi
	movq	%rsi, %r10
	shrq	%r10
	movl	%esi, %eax
	andl	$1, %eax
	movl	%eax, %r11d
	orq	%r10, %r11
	cvtsi2ss	%r11, %xmm0
	addss	%xmm0, %xmm0
	cvtsi2ss	%rsi, %xmm1
	testq	%rsi, %rsi
	movq	%rdi, -18304(%rbp)      # 8-byte Spill
	movss	%xmm1, -18308(%rbp)     # 4-byte Spill
	movss	%xmm0, -18312(%rbp)     # 4-byte Spill
	js	.LBB11_6041
# %bb.6040:
	movss	-18308(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movss	%xmm0, -18312(%rbp)     # 4-byte Spill
.LBB11_6041:
	movss	-18312(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movq	SCR_H$(%rip), %rax
	movq	%rax, %rcx
	shrq	%rcx
	movl	%eax, %edx
	andl	$1, %edx
	movl	%edx, %esi
	orq	%rcx, %rsi
	cvtsi2ss	%rsi, %xmm1
	addss	%xmm1, %xmm1
	cvtsi2ss	%rax, %xmm2
	testq	%rax, %rax
	movss	%xmm0, -18316(%rbp)     # 4-byte Spill
	movss	%xmm2, -18320(%rbp)     # 4-byte Spill
	movss	%xmm1, -18324(%rbp)     # 4-byte Spill
	js	.LBB11_6043
# %bb.6042:
	movss	-18320(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movss	%xmm0, -18324(%rbp)     # 4-byte Spill
.LBB11_6043:
	movss	-18324(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movq	-18304(%rbp), %rdi      # 8-byte Reload
	xorps	%xmm1, %xmm1
	movss	%xmm0, -18328(%rbp)     # 4-byte Spill
	movaps	%xmm1, %xmm0
	movss	-18316(%rbp), %xmm2     # 4-byte Reload
                                        # xmm2 = mem[0],zero,zero,zero
	movss	-18328(%rbp), %xmm3     # 4-byte Reload
                                        # xmm3 = mem[0],zero,zero,zero
	movl	$4278190080, %esi       # imm = 0xFF000000
	movl	$2, %edx
	movl	$65535, %ecx            # imm = 0xFFFF
	movl	-18268(%rbp), %r8d      # 4-byte Reload
	callq	fb_GfxLine@PLT
	xorl	%eax, %eax
	movl	%eax, %edi
	xorl	%eax, %eax
	movq	fb_hPutPSet@GOTPCREL(%rip), %r9
	movq	FGIMAGE$(%rip), %rsi
	xorps	%xmm0, %xmm0
	movss	%xmm0, -18332(%rbp)     # 4-byte Spill
	movss	-18332(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movl	$4294901760, %ecx       # imm = 0xFFFF0000
	movl	%ecx, %edx
	movl	%ecx, -18336(%rbp)      # 4-byte Spill
	movl	-18336(%rbp), %r8d      # 4-byte Reload
	movl	-18336(%rbp), %r10d     # 4-byte Reload
	movq	%r9, -18344(%rbp)       # 8-byte Spill
	movl	%r10d, %r9d
	movl	$0, (%rsp)
	movl	$1, 8(%rsp)
	movq	-18344(%rbp), %r11      # 8-byte Reload
	movq	%r11, 16(%rsp)
	movl	$-1, 24(%rsp)
	movq	$0, 32(%rsp)
	movq	$0, 40(%rsp)
	movl	%eax, -18348(%rbp)      # 4-byte Spill
	callq	fb_GfxPut@PLT
	jmp	.LBB11_5109
.LBB11_5104:
	movsd	.LCPI11_47(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5105
	jp	.LBB11_5105
	jmp	.LBB11_5106
.LBB11_5105:
	jmp	.LBB11_5108
.LBB11_5106:
	jmp	.LBB11_5107
.LBB11_5107:
	leaq	FILENAME$(%rip), %rax
	xorl	%r8d, %r8d
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1(%rip), %rdx
	movl	$1, %ecx
	callq	fb_StrAssign@PLT
.LBB11_5108:
	jmp	.LBB11_5109
.LBB11_5109:
	jmp	.LBB11_6016
.LBB11_5110:
	movsd	.LCPI11_299(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5111
	jp	.LBB11_5111
	jmp	.LBB11_5112
.LBB11_5111:
	jmp	.LBB11_5114
.LBB11_5112:
	jmp	.LBB11_5113
.LBB11_5113:
	leaq	FILENAME$(%rip), %rax
	xorl	%r8d, %r8d
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1631(%rip), %rdx
	movl	$9, %ecx
	callq	fb_StrAssign@PLT
	movsd	.LCPI11_295(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	movq	%rax, -18360(%rbp)      # 8-byte Spill
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_6016
.LBB11_5114:
	movsd	.LCPI11_300(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5115
	jp	.LBB11_5115
	jmp	.LBB11_5116
.LBB11_5115:
	jmp	.LBB11_5127
.LBB11_5116:
	jmp	.LBB11_5117
.LBB11_5117:
	xorl	%eax, %eax
	leaq	-1816(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	%eax, %esi
	movl	$8, %edx
	movq	%rdx, -18368(%rbp)      # 8-byte Spill
	movl	%eax, -18372(%rbp)      # 4-byte Spill
	movq	%rcx, -18384(%rbp)      # 8-byte Spill
	callq	memset@PLT
	leaq	-1824(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	-18372(%rbp), %esi      # 4-byte Reload
	movq	-18368(%rbp), %rdx      # 8-byte Reload
	movq	%rcx, -18392(%rbp)      # 8-byte Spill
	callq	memset@PLT
	leaq	-1832(%rbp), %rcx
	movq	%rcx, %rdi
	movl	-18372(%rbp), %esi      # 4-byte Reload
	movq	-18368(%rbp), %rdx      # 8-byte Reload
	callq	memset@PLT
	leaq	-1840(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	-18372(%rbp), %esi      # 4-byte Reload
	movq	-18368(%rbp), %rdx      # 8-byte Reload
	movq	%rcx, -18400(%rbp)      # 8-byte Spill
	callq	memset@PLT
	leaq	-1848(%rbp), %rcx
	movq	%rcx, %rdi
	movl	-18372(%rbp), %esi      # 4-byte Reload
	movq	-18368(%rbp), %rdx      # 8-byte Reload
	callq	memset@PLT
	movq	$0, -1808(%rbp)
	movq	$0, -1800(%rbp)
	movq	-18384(%rbp), %rdi      # 8-byte Reload
	movq	-18392(%rbp), %rsi      # 8-byte Reload
	leaq	-1800(%rbp), %rdx
	movq	-18400(%rbp), %rcx      # 8-byte Reload
	leaq	-1808(%rbp), %r8
	callq	fb_GetMouse64@PLT
	movl	%eax, -15416(%rbp)
	cvtsi2sdl	-15416(%rbp), %xmm0
	movq	-2216(%rbp), %rcx
	movsd	%xmm0, 394576(%rcx)
	cvtsi2sdq	-1816(%rbp), %xmm0
	movq	-2216(%rbp), %rcx
	movsd	%xmm0, 394840(%rcx)
	cvtsi2sdq	-1824(%rbp), %xmm0
	movq	-2216(%rbp), %rcx
	movsd	%xmm0, 394848(%rcx)
	cvtsi2sdq	-1832(%rbp), %xmm0
	movq	-2216(%rbp), %rcx
	movsd	%xmm0, 394856(%rcx)
	movq	-1840(%rbp), %rcx
	andq	$1, %rcx
	cmpq	$0, %rcx
	jne	.LBB11_5119
# %bb.5118:
	jmp	.LBB11_5120
.LBB11_5119:
	movsd	.LCPI11_7(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394864(%rax)
.LBB11_5120:
	movq	-1840(%rbp), %rax
	andq	$2, %rax
	cmpq	$0, %rax
	jne	.LBB11_5122
# %bb.5121:
	jmp	.LBB11_5123
.LBB11_5122:
	movsd	.LCPI11_9(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394864(%rax)
.LBB11_5123:
	movq	-1840(%rbp), %rax
	andq	$4, %rax
	cmpq	$0, %rax
	jne	.LBB11_5125
# %bb.5124:
	jmp	.LBB11_5126
.LBB11_5125:
	movsd	.LCPI11_11(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394864(%rax)
.LBB11_5126:
	jmp	.LBB11_6016
.LBB11_5127:
	movsd	.LCPI11_301(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5128
	jp	.LBB11_5128
	jmp	.LBB11_5129
.LBB11_5128:
	jmp	.LBB11_5131
.LBB11_5129:
	jmp	.LBB11_5130
.LBB11_5130:
	movq	-2216(%rbp), %rax
	movsd	394840(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %edi
	movq	-2216(%rbp), %rax
	movsd	394848(%rax), %xmm0     # xmm0 = mem[0],zero
	movl	%edi, -18404(%rbp)      # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %esi
	movl	-18404(%rbp), %edi      # 4-byte Reload
	callq	fb_PageCopy@PLT
	jmp	.LBB11_6016
.LBB11_5131:
	movsd	.LCPI11_302(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5132
	jp	.LBB11_5132
	jmp	.LBB11_5133
.LBB11_5132:
	jmp	.LBB11_5147
.LBB11_5133:
	jmp	.LBB11_5134
.LBB11_5134:
	xorl	%esi, %esi
	leaq	-1897(%rbp), %rdi
	movl	$1, %edx
	callq	memset@PLT
	movq	$0, -15424(%rbp)
.LBB11_5135:                            # =>This Inner Loop Header: Depth=1
	movq	-2216(%rbp), %rax
	movq	-15424(%rbp), %rcx
	shlq	$3, %rcx
	xorps	%xmm0, %xmm0
	movsd	%xmm0, 134479872(%rax,%rcx)
# %bb.5136:                             #   in Loop: Header=BB11_5135 Depth=1
	movq	-15424(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -15424(%rbp)
# %bb.5137:                             #   in Loop: Header=BB11_5135 Depth=1
	cmpq	$8191, -15424(%rbp)     # imm = 0x1FFF
	jg	.LBB11_5139
# %bb.5138:                             #   in Loop: Header=BB11_5135 Depth=1
	jmp	.LBB11_5135
.LBB11_5139:
	jmp	.LBB11_5140
.LBB11_5140:
	movsd	-2232(%rbp), %xmm0      # xmm0 = mem[0],zero
	callq	fb_DoubleToStr@PLT
	xorl	%esi, %esi
	movq	%rax, -15432(%rbp)
	leaq	-1872(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -18416(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-15432(%rbp), %rax
	movq	-18416(%rbp), %rdi      # 8-byte Reload
	leaq	.L.str.1668(%rip), %rsi
	movl	$11, %edx
	movq	%rax, %rcx
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -15440(%rbp)
	leaq	-1896(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -18424(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-15440(%rbp), %rax
	movq	-18424(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.1669(%rip), %rcx
	movl	$5, %r8d
	callq	fb_StrConcat@PLT
	xorl	%r9d, %r9d
	movq	%rax, -15448(%rbp)
	movq	-15448(%rbp), %rdi
	movl	%r9d, %esi
	movl	%r9d, %edx
	movl	%r9d, %ecx
	movl	$1, %r8d
	callq	fb_FileOpen@PLT
	movq	$0, -15456(%rbp)
	movl	$1, %edi
	movl	%eax, -18428(%rbp)      # 4-byte Spill
	callq	fb_FileSize@PLT
	movq	%rax, -15472(%rbp)
	movq	-15472(%rbp), %rax
	movq	%rax, -15464(%rbp)
	jmp	.LBB11_5143
.LBB11_5141:                            #   in Loop: Header=BB11_5143 Depth=1
	xorl	%eax, %eax
	movl	%eax, %esi
	movl	$1, %edi
	leaq	-1897(%rbp), %rdx
	movl	$1, %ecx
	callq	fb_FileGetLarge@PLT
	movzbl	-1897(%rbp), %edi
	cvtsi2sd	%edi, %xmm0
	movq	-2216(%rbp), %rcx
	movq	-15456(%rbp), %rdx
	shlq	$3, %rdx
	movsd	%xmm0, 134479872(%rcx,%rdx)
# %bb.5142:                             #   in Loop: Header=BB11_5143 Depth=1
	movq	-15456(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -15456(%rbp)
.LBB11_5143:                            # =>This Inner Loop Header: Depth=1
	movq	-15456(%rbp), %rax
	cmpq	-15464(%rbp), %rax
	jg	.LBB11_5145
# %bb.5144:                             #   in Loop: Header=BB11_5143 Depth=1
	jmp	.LBB11_5141
.LBB11_5145:
	jmp	.LBB11_5146
.LBB11_5146:
	movl	$1, %edi
	callq	fb_FileClose@PLT
	jmp	.LBB11_6016
.LBB11_5147:
	movsd	.LCPI11_303(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5149
	jp	.LBB11_5149
# %bb.5148:
	jmp	.LBB11_5153
.LBB11_5149:
	jmp	.LBB11_5150
.LBB11_5150:
	movsd	.LCPI11_304(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5151
	jp	.LBB11_5151
	jmp	.LBB11_5152
.LBB11_5151:
	jmp	.LBB11_5184
.LBB11_5152:
	jmp	.LBB11_5153
.LBB11_5153:
	xorps	%xmm0, %xmm0
	ucomisd	-2232(%rbp), %xmm0
	jbe	.LBB11_5155
# %bb.5154:
	jmp	.LBB11_5159
.LBB11_5155:
	movsd	.LCPI11_24(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jbe	.LBB11_5157
# %bb.5156:
	jmp	.LBB11_5159
.LBB11_5157:
	jmp	.LBB11_5158
.LBB11_5158:
	movq	-2216(%rbp), %rdi
	movzwl	FCOLOR$(%rip), %eax
	cvtsi2sd	%eax, %xmm0
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	movsd	%xmm0, -18440(%rbp)     # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rdi, -18448(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	cqto
	movl	$255, %ecx
	idivq	%rcx
	cvtsi2sd	%rdx, %xmm1
	movq	-18448(%rbp), %rdi      # 8-byte Reload
	movsd	-18440(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_5179
.LBB11_5159:
	movsd	.LCPI11_25(%rip), %xmm0 # xmm0 = mem[0],zero
	ucomisd	-2232(%rbp), %xmm0
	jbe	.LBB11_5161
# %bb.5160:
	jmp	.LBB11_5165
.LBB11_5161:
	movsd	.LCPI11_53(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jbe	.LBB11_5163
# %bb.5162:
	jmp	.LBB11_5165
.LBB11_5163:
	jmp	.LBB11_5164
.LBB11_5164:
	movsd	.LCPI11_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_306(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	addsd	-2232(%rbp), %xmm1
	movsd	%xmm0, -18456(%rbp)     # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rdi, -18464(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	cqto
	movl	$255, %ecx
	idivq	%rcx
	imulq	$17, %rdx, %rdx
	movq	%rdx, %rax
	cqto
	idivq	%rcx
	cvtsi2sd	%rdx, %xmm1
	movq	-18464(%rbp), %rdi      # 8-byte Reload
	movsd	-18456(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_5179
.LBB11_5165:
	movsd	.LCPI11_29(%rip), %xmm0 # xmm0 = mem[0],zero
	ucomisd	-2232(%rbp), %xmm0
	jbe	.LBB11_5167
# %bb.5166:
	jmp	.LBB11_5171
.LBB11_5167:
	movsd	.LCPI11_70(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jbe	.LBB11_5169
# %bb.5168:
	jmp	.LBB11_5171
.LBB11_5169:
	jmp	.LBB11_5170
.LBB11_5170:
	movsd	.LCPI11_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_307(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	addsd	-2232(%rbp), %xmm1
	movsd	%xmm0, -18472(%rbp)     # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rdi, -18480(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	cqto
	movl	$255, %ecx
	idivq	%rcx
	imulq	$17, %rdx, %rdx
	movq	%rdx, %rax
	cqto
	idivq	%rcx
	cvtsi2sd	%rdx, %xmm1
	movq	-18480(%rbp), %rdi      # 8-byte Reload
	movsd	-18472(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_5179
.LBB11_5171:
	movsd	.LCPI11_71(%rip), %xmm0 # xmm0 = mem[0],zero
	ucomisd	-2232(%rbp), %xmm0
	jbe	.LBB11_5173
# %bb.5172:
	jmp	.LBB11_5177
.LBB11_5173:
	movsd	.LCPI11_87(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jbe	.LBB11_5175
# %bb.5174:
	jmp	.LBB11_5177
.LBB11_5175:
	jmp	.LBB11_5176
.LBB11_5176:
	movsd	.LCPI11_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_308(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	addsd	-2232(%rbp), %xmm1
	movsd	%xmm0, -18488(%rbp)     # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rdi, -18496(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	cqto
	movl	$255, %ecx
	idivq	%rcx
	imulq	$17, %rdx, %rdx
	movq	%rdx, %rax
	cqto
	idivq	%rcx
	cvtsi2sd	%rdx, %xmm1
	movq	-18496(%rbp), %rdi      # 8-byte Reload
	movsd	-18488(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_5179
.LBB11_5177:
	movsd	.LCPI11_267(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_309(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	addsd	-2232(%rbp), %xmm1
	movsd	%xmm0, -18504(%rbp)     # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rdi, -18512(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	cqto
	movl	$255, %ecx
	idivq	%rcx
	imulq	$17, %rdx, %rdx
	movq	%rdx, %rax
	cqto
	idivq	%rcx
	cvtsi2sd	%rdx, %xmm1
	movq	-18512(%rbp), %rdi      # 8-byte Reload
	movsd	-18504(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	callq	_ZN8MEMORY_T6POKE64Edd
# %bb.5178:
	jmp	.LBB11_5179
.LBB11_5179:
	movsd	.LCPI11_242(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	addsd	SYS_OFFSET$(%rip), %xmm0
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5180
	jp	.LBB11_5180
	jmp	.LBB11_5181
.LBB11_5180:
	jmp	.LBB11_5182
.LBB11_5181:
	movq	-2216(%rbp), %rdi
	movsd	.LCPI11_466(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -18520(%rbp)     # 8-byte Spill
	callq	_ZN8MEMORY_T6PEEK64Ed
	movsd	%xmm0, -15480(%rbp)
	movq	-2216(%rbp), %rdi
	movzwl	EXTCOL$(%rip), %eax
	cvtsi2sd	%eax, %xmm0
	movsd	-15480(%rbp), %xmm1     # xmm1 = mem[0],zero
	callq	_ZN8MEMORY_T6POKE64Edd
	movq	-2216(%rbp), %rdi
	movsd	-18520(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	callq	_ZN8MEMORY_T6PEEK64Ed
	movsd	%xmm0, -15488(%rbp)
	movq	-2216(%rbp), %rdi
	movzwl	BGCOL0$(%rip), %eax
	cvtsi2sd	%eax, %xmm0
	movsd	-15488(%rbp), %xmm1     # xmm1 = mem[0],zero
	callq	_ZN8MEMORY_T6POKE64Edd
.LBB11_5182:
	jmp	.LBB11_5183
.LBB11_5183:
	jmp	.LBB11_6016
.LBB11_5184:
	movsd	.LCPI11_305(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5185
	jp	.LBB11_5185
	jmp	.LBB11_5186
.LBB11_5185:
	jmp	.LBB11_5214
.LBB11_5186:
	jmp	.LBB11_5187
.LBB11_5187:
	xorps	%xmm0, %xmm0
	ucomisd	-2232(%rbp), %xmm0
	jbe	.LBB11_5189
# %bb.5188:
	jmp	.LBB11_5193
.LBB11_5189:
	movsd	.LCPI11_24(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jbe	.LBB11_5191
# %bb.5190:
	jmp	.LBB11_5193
.LBB11_5191:
	jmp	.LBB11_5192
.LBB11_5192:
	movq	-2216(%rbp), %rdi
	movzwl	BGCOL0$(%rip), %eax
	cvtsi2sd	%eax, %xmm0
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	movsd	%xmm0, -18528(%rbp)     # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rdi, -18536(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	cqto
	movl	$255, %ecx
	idivq	%rcx
	cvtsi2sd	%rdx, %xmm1
	movq	-18536(%rbp), %rdi      # 8-byte Reload
	movsd	-18528(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_5213
.LBB11_5193:
	movsd	.LCPI11_25(%rip), %xmm0 # xmm0 = mem[0],zero
	ucomisd	-2232(%rbp), %xmm0
	jbe	.LBB11_5195
# %bb.5194:
	jmp	.LBB11_5199
.LBB11_5195:
	movsd	.LCPI11_53(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jbe	.LBB11_5197
# %bb.5196:
	jmp	.LBB11_5199
.LBB11_5197:
	jmp	.LBB11_5198
.LBB11_5198:
	movsd	.LCPI11_264(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_306(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	addsd	-2232(%rbp), %xmm1
	movsd	%xmm0, -18544(%rbp)     # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rdi, -18552(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	cqto
	movl	$255, %ecx
	idivq	%rcx
	imulq	$17, %rdx, %rdx
	movq	%rdx, %rax
	cqto
	idivq	%rcx
	cvtsi2sd	%rdx, %xmm1
	movq	-18552(%rbp), %rdi      # 8-byte Reload
	movsd	-18544(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_5213
.LBB11_5199:
	movsd	.LCPI11_29(%rip), %xmm0 # xmm0 = mem[0],zero
	ucomisd	-2232(%rbp), %xmm0
	jbe	.LBB11_5201
# %bb.5200:
	jmp	.LBB11_5205
.LBB11_5201:
	movsd	.LCPI11_70(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jbe	.LBB11_5203
# %bb.5202:
	jmp	.LBB11_5205
.LBB11_5203:
	jmp	.LBB11_5204
.LBB11_5204:
	movsd	.LCPI11_263(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_307(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	addsd	-2232(%rbp), %xmm1
	movsd	%xmm0, -18560(%rbp)     # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rdi, -18568(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	cqto
	movl	$255, %ecx
	idivq	%rcx
	imulq	$17, %rdx, %rdx
	movq	%rdx, %rax
	cqto
	idivq	%rcx
	cvtsi2sd	%rdx, %xmm1
	movq	-18568(%rbp), %rdi      # 8-byte Reload
	movsd	-18560(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_5213
.LBB11_5205:
	movsd	.LCPI11_71(%rip), %xmm0 # xmm0 = mem[0],zero
	ucomisd	-2232(%rbp), %xmm0
	jbe	.LBB11_5207
# %bb.5206:
	jmp	.LBB11_5211
.LBB11_5207:
	movsd	.LCPI11_87(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jbe	.LBB11_5209
# %bb.5208:
	jmp	.LBB11_5211
.LBB11_5209:
	jmp	.LBB11_5210
.LBB11_5210:
	movsd	.LCPI11_262(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_308(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	addsd	-2232(%rbp), %xmm1
	movsd	%xmm0, -18576(%rbp)     # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rdi, -18584(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	cqto
	movl	$255, %ecx
	idivq	%rcx
	imulq	$17, %rdx, %rdx
	movq	%rdx, %rax
	cqto
	idivq	%rcx
	cvtsi2sd	%rdx, %xmm1
	movq	-18584(%rbp), %rdi      # 8-byte Reload
	movsd	-18576(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_5213
.LBB11_5211:
	movsd	.LCPI11_268(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_309(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	addsd	-2232(%rbp), %xmm1
	movsd	%xmm0, -18592(%rbp)     # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rdi, -18600(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	cqto
	movl	$255, %ecx
	idivq	%rcx
	imulq	$17, %rdx, %rdx
	movq	%rdx, %rax
	cqto
	idivq	%rcx
	cvtsi2sd	%rdx, %xmm1
	movq	-18600(%rbp), %rdi      # 8-byte Reload
	movsd	-18592(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	callq	_ZN8MEMORY_T6POKE64Edd
# %bb.5212:
	jmp	.LBB11_5213
.LBB11_5213:
	jmp	.LBB11_6016
.LBB11_5214:
	movsd	.LCPI11_310(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5215
	jp	.LBB11_5215
	jmp	.LBB11_5216
.LBB11_5215:
	jmp	.LBB11_5218
.LBB11_5216:
	jmp	.LBB11_5217
.LBB11_5217:
	xorl	%r8d, %r8d
	movq	FGIMAGE$(%rip), %rdi
	movq	-2216(%rbp), %rax
	movsd	394840(%rax), %xmm0     # xmm0 = mem[0],zero
	cvtsd2ss	%xmm0, %xmm0
	movq	-2216(%rbp), %rax
	movsd	394848(%rax), %xmm1     # xmm1 = mem[0],zero
	cvtsd2ss	%xmm1, %xmm1
	movq	-2216(%rbp), %rax
	movsd	394864(%rax), %xmm2     # xmm2 = mem[0],zero
	cvtsd2ss	%xmm2, %xmm2
	movq	-2216(%rbp), %rax
	movsd	394872(%rax), %xmm3     # xmm3 = mem[0],zero
	cvtsd2ss	%xmm3, %xmm3
	movq	-2216(%rbp), %rax
	movsd	394824(%rax), %xmm4     # xmm4 = mem[0],zero
	movss	%xmm0, -18604(%rbp)     # 4-byte Spill
	movaps	%xmm4, %xmm0
	movl	%r8d, -18608(%rbp)      # 4-byte Spill
	movq	%rdi, -18616(%rbp)      # 8-byte Spill
	movss	%xmm1, -18620(%rbp)     # 4-byte Spill
	movss	%xmm2, -18624(%rbp)     # 4-byte Spill
	movss	%xmm3, -18628(%rbp)     # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
                                        # kill: def $eax killed $eax killed $rax
	movq	-18616(%rbp), %rdi      # 8-byte Reload
	movss	-18604(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movss	-18620(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movss	-18624(%rbp), %xmm2     # 4-byte Reload
                                        # xmm2 = mem[0],zero,zero,zero
	movss	-18628(%rbp), %xmm3     # 4-byte Reload
                                        # xmm3 = mem[0],zero,zero,zero
	movl	%eax, %esi
	movl	$2, %edx
	movl	$65535, %ecx            # imm = 0xFFFF
	movl	-18608(%rbp), %r8d      # 4-byte Reload
	callq	fb_GfxLine@PLT
	jmp	.LBB11_6016
.LBB11_5218:
	movsd	.LCPI11_311(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5219
	jp	.LBB11_5219
	jmp	.LBB11_5220
.LBB11_5219:
	jmp	.LBB11_5222
.LBB11_5220:
	jmp	.LBB11_5221
.LBB11_5221:
	xorl	%r8d, %r8d
	movq	FGIMAGE$(%rip), %rdi
	movq	-2216(%rbp), %rax
	movsd	394840(%rax), %xmm0     # xmm0 = mem[0],zero
	cvtsd2ss	%xmm0, %xmm0
	movq	-2216(%rbp), %rax
	movsd	394848(%rax), %xmm1     # xmm1 = mem[0],zero
	cvtsd2ss	%xmm1, %xmm1
	movq	-2216(%rbp), %rax
	movsd	394864(%rax), %xmm2     # xmm2 = mem[0],zero
	cvtsd2ss	%xmm2, %xmm2
	movq	-2216(%rbp), %rax
	movsd	394872(%rax), %xmm3     # xmm3 = mem[0],zero
	cvtsd2ss	%xmm3, %xmm3
	movq	-2216(%rbp), %rax
	movsd	394832(%rax), %xmm4     # xmm4 = mem[0],zero
	movss	%xmm0, -18632(%rbp)     # 4-byte Spill
	movaps	%xmm4, %xmm0
	movl	%r8d, -18636(%rbp)      # 4-byte Spill
	movq	%rdi, -18648(%rbp)      # 8-byte Spill
	movss	%xmm1, -18652(%rbp)     # 4-byte Spill
	movss	%xmm2, -18656(%rbp)     # 4-byte Spill
	movss	%xmm3, -18660(%rbp)     # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
                                        # kill: def $eax killed $eax killed $rax
	movq	-18648(%rbp), %rdi      # 8-byte Reload
	movss	-18632(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movss	-18652(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movss	-18656(%rbp), %xmm2     # 4-byte Reload
                                        # xmm2 = mem[0],zero,zero,zero
	movss	-18660(%rbp), %xmm3     # 4-byte Reload
                                        # xmm3 = mem[0],zero,zero,zero
	movl	%eax, %esi
	movl	$2, %edx
	movl	$65535, %ecx            # imm = 0xFFFF
	movl	-18636(%rbp), %r8d      # 4-byte Reload
	callq	fb_GfxLine@PLT
	jmp	.LBB11_6016
.LBB11_5222:
	movsd	.LCPI11_312(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5223
	jp	.LBB11_5223
	jmp	.LBB11_5224
.LBB11_5223:
	jmp	.LBB11_5232
.LBB11_5224:
	jmp	.LBB11_5225
.LBB11_5225:
	xorl	%eax, %eax
	movl	%eax, %edi
	movl	$8, %esi
	movl	%eax, %edx
	movl	%eax, %ecx
	movl	%eax, %r8d
	callq	fb_GfxScreen@PLT
	leaq	STRCODE$(%rip), %rdi
	movl	%eax, -18664(%rbp)      # 4-byte Spill
	callq	fb_Chain@PLT
	leaq	STRCODE$(%rip), %rdi
	xorl	%r8d, %r8d
	movq	$-1, %rsi
	leaq	.L.str.1(%rip), %rdx
	movl	$1, %ecx
	movl	%eax, -18668(%rbp)      # 4-byte Spill
	callq	fb_StrAssign@PLT
	xorl	%r8d, %r8d
	movl	$1920, %edi             # imm = 0x780
	movl	$1080, %esi             # imm = 0x438
	movl	$32, %edx
	movl	%r8d, %ecx
	movl	$65, %r9d
	movl	%r8d, -18672(%rbp)      # 4-byte Spill
	movl	%r9d, %r8d
	movl	-18672(%rbp), %r9d      # 4-byte Reload
	movq	%rax, -18680(%rbp)      # 8-byte Spill
	callq	fb_GfxScreenRes@PLT
	movl	$4294901760, %edi       # imm = 0xFFFF0000
	movl	%eax, -18684(%rbp)      # 4-byte Spill
	callq	fb_Cls@PLT
	xorl	%eax, %eax
	movl	%eax, %esi
	leaq	.L.str.1(%rip), %rdi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%ecx, %ecx
	movl	%ecx, %edi
	xorl	%ecx, %ecx
	movq	%rax, -15496(%rbp)
	movq	-15496(%rbp), %rax
	xorps	%xmm0, %xmm0
	movss	%xmm0, -18688(%rbp)     # 4-byte Spill
	movss	-18688(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movl	$4278190080, %esi       # imm = 0xFF000000
	movl	%ecx, %edx
	movl	%ecx, -18692(%rbp)      # 4-byte Spill
	movq	%rax, %rcx
	movl	-18692(%rbp), %r8d      # 4-byte Reload
	movl	$1073741828, %r9d       # imm = 0x40000004
	callq	fb_GfxPaint@PLT
	xorps	%xmm0, %xmm0
	movsd	%xmm0, OFFSET$(%rip)
.LBB11_5226:                            # =>This Inner Loop Header: Depth=1
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	movq	-2216(%rbp), %rax
	movsd	395608(%rax), %xmm0     # xmm0 = mem[0],zero
	addsd	OFFSET$(%rip), %xmm0
	callq	_ZN8MEMORY_T6POKE64Edd
# %bb.5227:                             #   in Loop: Header=BB11_5226 Depth=1
	movsd	.LCPI11_7(%rip), %xmm0  # xmm0 = mem[0],zero
	addsd	OFFSET$(%rip), %xmm0
	movsd	%xmm0, OFFSET$(%rip)
# %bb.5228:                             #   in Loop: Header=BB11_5226 Depth=1
	movsd	.LCPI11_313(%rip), %xmm0 # xmm0 = mem[0],zero
	ucomisd	OFFSET$(%rip), %xmm0
	jb	.LBB11_5230
# %bb.5229:                             #   in Loop: Header=BB11_5226 Depth=1
	jmp	.LBB11_5226
.LBB11_5230:
	jmp	.LBB11_5231
.LBB11_5231:
	jmp	.LBB11_6016
.LBB11_5232:
	movsd	.LCPI11_314(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5233
	jp	.LBB11_5233
	jmp	.LBB11_5234
.LBB11_5233:
	jmp	.LBB11_5242
.LBB11_5234:
	jmp	.LBB11_5235
.LBB11_5235:
	xorl	%eax, %eax
	movl	%eax, %edi
	movl	$8, %esi
	movl	%eax, %edx
	movl	%eax, %ecx
	movl	%eax, %r8d
	callq	fb_GfxScreen@PLT
	leaq	STRCODE$(%rip), %r9
	xorl	%esi, %esi
	leaq	-1928(%rbp), %r10
	movq	%r10, %r11
	movq	%r11, %rdi
	movl	$24, %edx
	movl	%eax, -18696(%rbp)      # 4-byte Spill
	movq	%r9, -18704(%rbp)       # 8-byte Spill
	movq	%r10, -18712(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-18712(%rbp), %rdi      # 8-byte Reload
	leaq	.L.str.1670(%rip), %rsi
	movl	$6, %edx
	movq	-18704(%rbp), %rcx      # 8-byte Reload
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	movq	%rax, -15504(%rbp)
	movq	-15504(%rbp), %rdi
	callq	fb_Shell@PLT
	leaq	STRCODE$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1(%rip), %rdx
	movl	$1, %ecx
	movl	%eax, -18716(%rbp)      # 4-byte Spill
	callq	fb_StrAssign@PLT
	xorl	%r8d, %r8d
	movl	$1920, %edi             # imm = 0x780
	movl	$1080, %esi             # imm = 0x438
	movl	$32, %edx
	movl	%r8d, %ecx
	movl	$65, %ebx
	movl	%r8d, -18720(%rbp)      # 4-byte Spill
	movl	%ebx, %r8d
	movl	-18720(%rbp), %r9d      # 4-byte Reload
	movq	%rax, -18728(%rbp)      # 8-byte Spill
	callq	fb_GfxScreenRes@PLT
	movl	$4294901760, %edi       # imm = 0xFFFF0000
	movl	%eax, -18732(%rbp)      # 4-byte Spill
	callq	fb_Cls@PLT
	xorl	%eax, %eax
	movl	%eax, %esi
	leaq	.L.str.1(%rip), %rdi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%ecx, %ecx
	movl	%ecx, %edi
	xorl	%ecx, %ecx
	movq	%rax, -15512(%rbp)
	movq	-15512(%rbp), %rax
	xorps	%xmm0, %xmm0
	movss	%xmm0, -18736(%rbp)     # 4-byte Spill
	movss	-18736(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movl	$4278190080, %esi       # imm = 0xFF000000
	movl	%ecx, %edx
	movl	%ecx, -18740(%rbp)      # 4-byte Spill
	movq	%rax, %rcx
	movl	-18740(%rbp), %r8d      # 4-byte Reload
	movl	$1073741828, %r9d       # imm = 0x40000004
	callq	fb_GfxPaint@PLT
	xorps	%xmm0, %xmm0
	movsd	%xmm0, OFFSET$(%rip)
.LBB11_5236:                            # =>This Inner Loop Header: Depth=1
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rdi
	movq	-2216(%rbp), %rax
	movsd	395608(%rax), %xmm0     # xmm0 = mem[0],zero
	addsd	OFFSET$(%rip), %xmm0
	callq	_ZN8MEMORY_T6POKE64Edd
# %bb.5237:                             #   in Loop: Header=BB11_5236 Depth=1
	movsd	.LCPI11_7(%rip), %xmm0  # xmm0 = mem[0],zero
	addsd	OFFSET$(%rip), %xmm0
	movsd	%xmm0, OFFSET$(%rip)
# %bb.5238:                             #   in Loop: Header=BB11_5236 Depth=1
	movsd	.LCPI11_313(%rip), %xmm0 # xmm0 = mem[0],zero
	ucomisd	OFFSET$(%rip), %xmm0
	jb	.LBB11_5240
# %bb.5239:                             #   in Loop: Header=BB11_5236 Depth=1
	jmp	.LBB11_5236
.LBB11_5240:
	jmp	.LBB11_5241
.LBB11_5241:
	jmp	.LBB11_6016
.LBB11_5242:
	movsd	.LCPI11_315(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5243
	jp	.LBB11_5243
	jmp	.LBB11_5244
.LBB11_5243:
	jmp	.LBB11_5246
.LBB11_5244:
	jmp	.LBB11_5245
.LBB11_5245:
	xorl	%eax, %eax
	movl	%eax, %edi
	movl	$8, %esi
	movl	%eax, %edx
	movl	%eax, %ecx
	movl	%eax, %r8d
	callq	fb_GfxScreen@PLT
	leaq	STRCODE$(%rip), %r9
	xorl	%esi, %esi
	leaq	-1952(%rbp), %r10
	movq	%r10, %r11
	movq	%r11, %rdi
	movl	$24, %edx
	movl	%eax, -18744(%rbp)      # 4-byte Spill
	movq	%r9, -18752(%rbp)       # 8-byte Spill
	movq	%r10, -18760(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-18760(%rbp), %rdi      # 8-byte Reload
	leaq	.L.str.1671(%rip), %rsi
	movl	$8, %edx
	movq	-18752(%rbp), %rcx      # 8-byte Reload
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -15520(%rbp)
	leaq	-1976(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -18768(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-15520(%rbp), %rax
	movq	-18768(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.1672(%rip), %rcx
	movl	$19, %r8d
	callq	fb_StrConcat@PLT
	movq	%rax, -15528(%rbp)
	movq	-15528(%rbp), %rdi
	callq	fb_Shell@PLT
	leaq	STRCODE$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1(%rip), %rdx
	movl	$1, %ecx
	movl	%eax, -18772(%rbp)      # 4-byte Spill
	callq	fb_StrAssign@PLT
	xorl	%r8d, %r8d
	movl	$1920, %edi             # imm = 0x780
	movl	$1080, %esi             # imm = 0x438
	movl	$32, %edx
	movl	%r8d, %ecx
	movl	$65, %ebx
	movl	%r8d, -18776(%rbp)      # 4-byte Spill
	movl	%ebx, %r8d
	movl	-18776(%rbp), %r9d      # 4-byte Reload
	movq	%rax, -18784(%rbp)      # 8-byte Spill
	callq	fb_GfxScreenRes@PLT
	movl	$4294901760, %edi       # imm = 0xFFFF0000
	movl	%eax, -18788(%rbp)      # 4-byte Spill
	callq	fb_Cls@PLT
	xorl	%eax, %eax
	movl	%eax, %esi
	leaq	.L.str.1(%rip), %rdi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%ecx, %ecx
	movl	%ecx, %edi
	xorl	%ecx, %ecx
	movq	%rax, -15536(%rbp)
	movq	-15536(%rbp), %rax
	xorps	%xmm0, %xmm0
	movss	%xmm0, -18792(%rbp)     # 4-byte Spill
	movss	-18792(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movl	$4278190080, %esi       # imm = 0xFF000000
	movl	%ecx, %edx
	movl	%ecx, -18796(%rbp)      # 4-byte Spill
	movq	%rax, %rcx
	movl	-18796(%rbp), %r8d      # 4-byte Reload
	movl	$1073741828, %r9d       # imm = 0x40000004
	callq	fb_GfxPaint@PLT
	jmp	.LBB11_6016
.LBB11_5246:
	movsd	.LCPI11_316(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5247
	jp	.LBB11_5247
	jmp	.LBB11_5248
.LBB11_5247:
	jmp	.LBB11_5250
.LBB11_5248:
	jmp	.LBB11_5249
.LBB11_5249:
	leaq	STRCODE$(%rip), %rax
	xorl	%esi, %esi
	leaq	-2000(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	$24, %edx
	movq	%rax, -18808(%rbp)      # 8-byte Spill
	movq	%rcx, -18816(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-18816(%rbp), %rdi      # 8-byte Reload
	movq	-18808(%rbp), %rsi      # 8-byte Reload
	movq	$-1, %rdx
	leaq	.L.str.1673(%rip), %rcx
	movl	$5, %r8d
	callq	fb_StrConcat@PLT
	xorl	%r9d, %r9d
	movq	%rax, -15544(%rbp)
	movq	-15544(%rbp), %rdi
	movl	$3, %esi
	movl	%r9d, %edx
	movl	%r9d, %ecx
	movl	$1, %r8d
	callq	fb_FileOpen@PLT
	leaq	STRCODE$(%rip), %rdi
	xorl	%r8d, %r8d
	movq	$-1, %rsi
	leaq	.L.str.1(%rip), %rdx
	movl	$1, %ecx
	movl	%eax, -18820(%rbp)      # 4-byte Spill
	callq	fb_StrAssign@PLT
	jmp	.LBB11_6016
.LBB11_5250:
	movsd	.LCPI11_317(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5251
	jp	.LBB11_5251
	jmp	.LBB11_5252
.LBB11_5251:
	jmp	.LBB11_5254
.LBB11_5252:
	jmp	.LBB11_5253
.LBB11_5253:
	movl	$1, %eax
	movl	%eax, %edi
	leaq	STRCODE$(%rip), %rsi
	movl	%eax, %edx
	callq	fb_PrintString@PLT
	leaq	STRCODE$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1(%rip), %rdx
	movl	$1, %ecx
	callq	fb_StrAssign@PLT
	jmp	.LBB11_6016
.LBB11_5254:
	movsd	.LCPI11_318(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5255
	jp	.LBB11_5255
	jmp	.LBB11_5256
.LBB11_5255:
	jmp	.LBB11_5258
.LBB11_5256:
	jmp	.LBB11_5257
.LBB11_5257:
	movl	$1, %edi
	callq	fb_FileClose@PLT
	leaq	STRCODE$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1(%rip), %rdx
	movl	$1, %ecx
	movl	%eax, -18824(%rbp)      # 4-byte Spill
	callq	fb_StrAssign@PLT
	jmp	.LBB11_6016
.LBB11_5258:
	movsd	.LCPI11_319(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5259
	jp	.LBB11_5259
	jmp	.LBB11_5260
.LBB11_5259:
	jmp	.LBB11_5262
.LBB11_5260:
	jmp	.LBB11_5261
.LBB11_5261:
	leaq	STRCODE$(%rip), %rax
	xorl	%esi, %esi
	leaq	-2024(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	$24, %edx
	movq	%rax, -18832(%rbp)      # 8-byte Spill
	movq	%rcx, -18840(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-18840(%rbp), %rdi      # 8-byte Reload
	leaq	.L.str.1674(%rip), %rsi
	movl	$6, %edx
	movq	-18832(%rbp), %rcx      # 8-byte Reload
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -15552(%rbp)
	leaq	-2048(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -18848(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-15552(%rbp), %rax
	movq	-18848(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.1675(%rip), %rcx
	movl	$15, %r8d
	callq	fb_StrConcat@PLT
	leaq	STRCODE$(%rip), %rcx
	xorl	%esi, %esi
	movq	%rax, -15560(%rbp)
	leaq	-2072(%rbp), %rax
	movq	%rax, %rdx
	movq	%rdx, %rdi
	movl	$24, %edx
	movq	%rcx, -18856(%rbp)      # 8-byte Spill
	movq	%rax, -18864(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-15560(%rbp), %rax
	movq	-18864(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rax
	movq	%rax, %rdx
	movq	-18856(%rbp), %rcx      # 8-byte Reload
	movq	%rax, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -15568(%rbp)
	leaq	-2096(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -18872(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-15568(%rbp), %rax
	movq	-18872(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.1676(%rip), %rcx
	movl	$5, %r8d
	callq	fb_StrConcat@PLT
	movq	%rax, -15576(%rbp)
	movq	-15576(%rbp), %rdi
	callq	fb_Shell@PLT
	leaq	STRCODE$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1(%rip), %rdx
	movl	$1, %ecx
	movl	%eax, -18876(%rbp)      # 4-byte Spill
	callq	fb_StrAssign@PLT
	jmp	.LBB11_6016
.LBB11_5262:
	movsd	.LCPI11_320(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5263
	jp	.LBB11_5263
	jmp	.LBB11_5264
.LBB11_5263:
	jmp	.LBB11_5272
.LBB11_5264:
	jmp	.LBB11_5265
.LBB11_5265:
	xorl	%eax, %eax
	movl	%eax, %edi
	movl	$8, %esi
	movl	%eax, %edx
	movl	%eax, %ecx
	movl	%eax, %r8d
	callq	fb_GfxScreen@PLT
	leaq	STRCODE$(%rip), %r9
	xorl	%esi, %esi
	leaq	-2120(%rbp), %r10
	movq	%r10, %r11
	movq	%r11, %rdi
	movl	$24, %edx
	movl	%eax, -18880(%rbp)      # 4-byte Spill
	movq	%r9, -18888(%rbp)       # 8-byte Spill
	movq	%r10, -18896(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-18896(%rbp), %rdi      # 8-byte Reload
	leaq	.L.str.1677(%rip), %rsi
	movl	$17, %edx
	movq	-18888(%rbp), %rcx      # 8-byte Reload
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -15584(%rbp)
	leaq	-2144(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -18904(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-15584(%rbp), %rax
	movq	-18904(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.79(%rip), %rcx
	movl	$2, %r8d
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -15592(%rbp)
	leaq	-2168(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -18912(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-15592(%rbp), %rax
	movq	-18912(%rbp), %rdi      # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.1678(%rip), %rcx
	movl	$7, %r8d
	callq	fb_StrConcat@PLT
	movq	%rax, -15600(%rbp)
	movq	-15600(%rbp), %rdi
	callq	fb_Shell@PLT
	leaq	STRCODE$(%rip), %rcx
	xorl	%esi, %esi
	leaq	-2192(%rbp), %rdx
	movq	%rdx, %rdi
	movl	$24, %r8d
	movq	%rdx, -18920(%rbp)      # 8-byte Spill
	movq	%r8, %rdx
	movl	%eax, -18924(%rbp)      # 4-byte Spill
	movq	%rcx, -18936(%rbp)      # 8-byte Spill
	callq	memset@PLT
	movq	-18920(%rbp), %rdi      # 8-byte Reload
	leaq	.L.str.1679(%rip), %rsi
	movl	$4, %edx
	movq	-18936(%rbp), %rcx      # 8-byte Reload
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	movq	%rax, -15608(%rbp)
	movq	-15608(%rbp), %rdi
	callq	fb_Shell@PLT
	leaq	STRCODE$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1(%rip), %rdx
	movl	$1, %ecx
	movl	%eax, -18940(%rbp)      # 4-byte Spill
	callq	fb_StrAssign@PLT
	xorl	%r8d, %r8d
	movl	$1920, %edi             # imm = 0x780
	movl	$1080, %esi             # imm = 0x438
	movl	$32, %edx
	movl	%r8d, %ecx
	movl	$65, %ebx
	movl	%r8d, -18944(%rbp)      # 4-byte Spill
	movl	%ebx, %r8d
	movl	-18944(%rbp), %r9d      # 4-byte Reload
	movq	%rax, -18952(%rbp)      # 8-byte Spill
	callq	fb_GfxScreenRes@PLT
	movl	$4294901760, %edi       # imm = 0xFFFF0000
	movl	%eax, -18956(%rbp)      # 4-byte Spill
	callq	fb_Cls@PLT
	xorl	%eax, %eax
	movl	%eax, %esi
	leaq	.L.str.1(%rip), %rdi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%ecx, %ecx
	movl	%ecx, %edi
	xorl	%ecx, %ecx
	movq	%rax, -15616(%rbp)
	movq	-15616(%rbp), %rax
	xorps	%xmm0, %xmm0
	movss	%xmm0, -18960(%rbp)     # 4-byte Spill
	movss	-18960(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movl	$4278190080, %esi       # imm = 0xFF000000
	movl	%ecx, %edx
	movl	%ecx, -18964(%rbp)      # 4-byte Spill
	movq	%rax, %rcx
	movl	-18964(%rbp), %r8d      # 4-byte Reload
	movl	$1073741828, %r9d       # imm = 0x40000004
	callq	fb_GfxPaint@PLT
	xorps	%xmm0, %xmm0
	movsd	%xmm0, OFFSET$(%rip)
.LBB11_5266:                            # =>This Inner Loop Header: Depth=1
	movsd	.LCPI11_29(%rip), %xmm1 # xmm1 = mem[0],zero
	movsd	.LCPI11_321(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	movq	-2216(%rbp), %rax
	addsd	SYS_OFFSET$(%rip), %xmm0
	movsd	%xmm1, -18976(%rbp)     # 8-byte Spill
	movq	%rdi, -18984(%rbp)      # 8-byte Spill
	movq	%rax, -18992(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-18992(%rbp), %rcx      # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	addsd	OFFSET$(%rip), %xmm0
	movq	-18984(%rbp), %rdi      # 8-byte Reload
	movsd	-18976(%rbp), %xmm1     # 8-byte Reload
                                        # xmm1 = mem[0],zero
	callq	_ZN8MEMORY_T6POKE64Edd
# %bb.5267:                             #   in Loop: Header=BB11_5266 Depth=1
	movsd	.LCPI11_7(%rip), %xmm0  # xmm0 = mem[0],zero
	addsd	OFFSET$(%rip), %xmm0
	movsd	%xmm0, OFFSET$(%rip)
# %bb.5268:                             #   in Loop: Header=BB11_5266 Depth=1
	movsd	.LCPI11_313(%rip), %xmm0 # xmm0 = mem[0],zero
	ucomisd	OFFSET$(%rip), %xmm0
	jb	.LBB11_5270
# %bb.5269:                             #   in Loop: Header=BB11_5266 Depth=1
	jmp	.LBB11_5266
.LBB11_5270:
	jmp	.LBB11_5271
.LBB11_5271:
	jmp	.LBB11_6016
.LBB11_5272:
	movsd	.LCPI11_322(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5273
	jp	.LBB11_5273
	jmp	.LBB11_5274
.LBB11_5273:
	jmp	.LBB11_5276
.LBB11_5274:
	jmp	.LBB11_5275
.LBB11_5275:
	leaq	STRCODE$(%rip), %rdi
	callq	fb_Shell@PLT
	leaq	STRCODE$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1(%rip), %rdx
	movl	$1, %ecx
	movl	%eax, -18996(%rbp)      # 4-byte Spill
	callq	fb_StrAssign@PLT
	jmp	.LBB11_6016
.LBB11_5276:
	movsd	.LCPI11_323(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5277
	jp	.LBB11_5277
	jmp	.LBB11_5278
.LBB11_5277:
	jmp	.LBB11_5280
.LBB11_5278:
	jmp	.LBB11_5279
.LBB11_5279:
	movsd	-2232(%rbp), %xmm0      # xmm0 = mem[0],zero
	movsd	%xmm0, SWCH$(%rip)
	jmp	.LBB11_6016
.LBB11_5280:
	movsd	.LCPI11_324(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5281
	jp	.LBB11_5281
	jmp	.LBB11_5282
.LBB11_5281:
	jmp	.LBB11_5284
.LBB11_5282:
	jmp	.LBB11_5283
.LBB11_5283:
	movsd	-2232(%rbp), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rsi
	movl	$1, %edi
	movb	$0, %al
	callq	fb_CHR@PLT
	xorl	%esi, %esi
	movq	%rax, -15624(%rbp)
	movq	-15624(%rbp), %rdi
	callq	fb_StrLcase2@PLT
	leaq	STRCODE$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rax, -15632(%rbp)
	movq	-15632(%rbp), %rax
	movq	%rcx, %rdi
	movq	$-1, %rcx
	movq	%rcx, %rsi
	movq	%rax, %rdx
	callq	fb_StrConcatAssign@PLT
	movq	%rax, -15640(%rbp)
	jmp	.LBB11_6016
.LBB11_5284:
	movsd	.LCPI11_325(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5285
	jp	.LBB11_5285
	jmp	.LBB11_5286
.LBB11_5285:
	jmp	.LBB11_5288
.LBB11_5286:
	jmp	.LBB11_5287
.LBB11_5287:
	movl	$1, %eax
	movl	%eax, %edi
	leaq	STRCODE$(%rip), %rsi
	movl	%eax, %edx
	callq	fb_PrintString@PLT
	leaq	STRCODE$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rcx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1(%rip), %rdx
	movl	$1, %ecx
	callq	fb_StrAssign@PLT
	jmp	.LBB11_6016
.LBB11_5288:
	movsd	.LCPI11_326(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5289
	jp	.LBB11_5289
	jmp	.LBB11_5290
.LBB11_5289:
	jmp	.LBB11_5304
.LBB11_5290:
	jmp	.LBB11_5291
.LBB11_5291:
	movsd	-2232(%rbp), %xmm0      # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movzwl	RVS$(%rip), %ecx
	movl	%ecx, %edx
	shlq	$3, %rdx
	movsd	%xmm0, (%rax,%rdx)
	movq	-2216(%rbp), %rax
	movsd	C$(%rip), %xmm0         # xmm0 = mem[0],zero
	movq	%rax, -19008(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-19008(%rbp), %rdx      # 8-byte Reload
	movsd	134479872(%rdx,%rax), %xmm0 # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movsd	X$(%rip), %xmm0         # xmm0 = mem[0],zero
	movq	%rax, -19016(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	andq	$63, %rax
	movq	%rax, %rcx
                                        # kill: def $cl killed $rcx
	movl	$128, %eax
	sarq	%cl, %rax
	movq	-19016(%rbp), %rdx      # 8-byte Reload
	andq	%rax, %rdx
	cmpq	$0, %rdx
	jne	.LBB11_5293
# %bb.5292:
	jmp	.LBB11_5298
.LBB11_5293:
	movq	-2216(%rbp), %rax
	movzwl	RVS$(%rip), %ecx
	movl	%ecx, %edx
	shlq	$3, %rdx
	movsd	(%rax,%rdx), %xmm0      # xmm0 = mem[0],zero
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB11_5295
	jp	.LBB11_5295
# %bb.5294:
	jmp	.LBB11_5296
.LBB11_5295:
	movsd	.LCPI11_311(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_5297
.LBB11_5296:
	movsd	.LCPI11_310(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
.LBB11_5297:
	jmp	.LBB11_5303
.LBB11_5298:
	movq	-2216(%rbp), %rax
	movzwl	RVS$(%rip), %ecx
	movl	%ecx, %edx
	shlq	$3, %rdx
	movsd	(%rax,%rdx), %xmm0      # xmm0 = mem[0],zero
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB11_5300
	jp	.LBB11_5300
# %bb.5299:
	jmp	.LBB11_5301
.LBB11_5300:
	movsd	.LCPI11_310(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_5302
.LBB11_5301:
	movsd	.LCPI11_311(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
.LBB11_5302:
	jmp	.LBB11_5303
.LBB11_5303:
	jmp	.LBB11_6016
.LBB11_5304:
	movsd	.LCPI11_327(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5305
	jp	.LBB11_5305
	jmp	.LBB11_5306
.LBB11_5305:
	jmp	.LBB11_5308
.LBB11_5306:
	jmp	.LBB11_5307
.LBB11_5307:
	movl	$1, %edi
	callq	fb_FileClose@PLT
	jmp	.LBB11_6016
.LBB11_5308:
	movsd	.LCPI11_328(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5309
	jp	.LBB11_5309
	jmp	.LBB11_5310
.LBB11_5309:
	jmp	.LBB11_5312
.LBB11_5310:
	jmp	.LBB11_5311
.LBB11_5311:
	movsd	-2232(%rbp), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rsi
	movl	$1, %edi
	movb	$0, %al
	callq	fb_CHR@PLT
	xorl	%esi, %esi
	movq	%rax, -15648(%rbp)
	movq	-15648(%rbp), %rdi
	callq	fb_StrLcase2@PLT
	leaq	FILENAME$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rax, -15656(%rbp)
	movq	-15656(%rbp), %rax
	movq	%rcx, %rdi
	movq	$-1, %rcx
	movq	%rcx, %rsi
	movq	%rax, %rdx
	callq	fb_StrConcatAssign@PLT
	movq	%rax, -15664(%rbp)
	jmp	.LBB11_6016
.LBB11_5312:
	movsd	.LCPI11_329(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5313
	jp	.LBB11_5313
	jmp	.LBB11_5314
.LBB11_5313:
	jmp	.LBB11_5316
.LBB11_5314:
	jmp	.LBB11_5315
.LBB11_5315:
	movsd	.LCPI11_295(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	leaq	FILENAME$(%rip), %rax
	xorl	%r8d, %r8d
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1(%rip), %rdx
	movl	$1, %ecx
	callq	fb_StrAssign@PLT
	jmp	.LBB11_6016
.LBB11_5316:
	movsd	.LCPI11_330(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5317
	jp	.LBB11_5317
	jmp	.LBB11_5318
.LBB11_5317:
	jmp	.LBB11_5328
.LBB11_5318:
	jmp	.LBB11_5319
.LBB11_5319:
	movsd	-2232(%rbp), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
	movq	%rax, -15672(%rbp)
	jmp	.LBB11_5324
.Ltmp1514:                              # Block address taken
.LBB11_5320:
	movq	-2216(%rbp), %rax
	xorps	%xmm0, %xmm0
	movsd	%xmm0, 395032(%rax)
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395040(%rax)
	jmp	.LBB11_5327
.Ltmp1515:                              # Block address taken
.LBB11_5321:
	movsd	.LCPI11_338(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395032(%rax)
	movq	-2216(%rbp), %rax
	xorps	%xmm0, %xmm0
	movsd	%xmm0, 395040(%rax)
	jmp	.LBB11_5327
.Ltmp1516:                              # Block address taken
.LBB11_5322:
	movsd	.LCPI11_337(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	xorps	%xmm1, %xmm1
	movsd	%xmm1, 395032(%rax)
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395040(%rax)
	jmp	.LBB11_5327
.Ltmp1517:                              # Block address taken
.LBB11_5323:
	movsd	.LCPI11_337(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_338(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm1, 395032(%rax)
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395040(%rax)
	jmp	.LBB11_5327
.LBB11_5324:
	cmpq	$3, -15672(%rbp)
	jbe	.LBB11_5326
# %bb.5325:
	jmp	.LBB11_5327
.LBB11_5326:
	movq	-15672(%rbp), %rax
	subq	$0, %rax
	leaq	_ZN8MEMORY_T6POKE64Edd.tmp$2489(%rip), %rcx
	movq	(%rcx,%rax,8), %rax
	movq	%rax, -15848(%rbp)      # 8-byte Spill
	jmp	.LBB11_6020
.LBB11_5327:
	jmp	.LBB11_6016
.LBB11_5328:
	movsd	.LCPI11_331(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5329
	jp	.LBB11_5329
	jmp	.LBB11_5330
.LBB11_5329:
	jmp	.LBB11_5343
.LBB11_5330:
	jmp	.LBB11_5331
.LBB11_5331:
	movq	-2216(%rbp), %rax
	movsd	394984(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -19024(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-19024(%rbp), %rcx      # 8-byte Reload
	movsd	134752968(%rcx,%rax,8), %xmm0 # xmm0 = mem[0],zero
	movsd	394848(%rcx), %xmm1     # xmm1 = mem[0],zero
	movsd	394856(%rcx), %xmm2     # xmm2 = mem[0],zero
	mulsd	%xmm0, %xmm1
	movsd	134750088(%rcx,%rax,8), %xmm0 # xmm0 = mem[0],zero
	mulsd	%xmm0, %xmm2
	subsd	%xmm2, %xmm1
	movsd	%xmm1, 394872(%rcx)
	movq	-2216(%rbp), %rax
	movsd	394848(%rax), %xmm0     # xmm0 = mem[0],zero
	movsd	394856(%rax), %xmm1     # xmm1 = mem[0],zero
	movsd	394984(%rax), %xmm2     # xmm2 = mem[0],zero
	movsd	%xmm0, -19032(%rbp)     # 8-byte Spill
	movaps	%xmm2, %xmm0
	movq	%rax, -19040(%rbp)      # 8-byte Spill
	movsd	%xmm1, -19048(%rbp)     # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-19040(%rbp), %rcx      # 8-byte Reload
	movsd	134752968(%rcx,%rax,8), %xmm0 # xmm0 = mem[0],zero
	movsd	-19048(%rbp), %xmm1     # 8-byte Reload
                                        # xmm1 = mem[0],zero
	mulsd	%xmm0, %xmm1
	movsd	134750088(%rcx,%rax,8), %xmm0 # xmm0 = mem[0],zero
	movsd	-19032(%rbp), %xmm2     # 8-byte Reload
                                        # xmm2 = mem[0],zero
	mulsd	%xmm0, %xmm2
	addsd	%xmm2, %xmm1
	movsd	%xmm1, 394880(%rcx)
	movq	-2216(%rbp), %rax
	movsd	394872(%rax), %xmm0     # xmm0 = mem[0],zero
	movsd	%xmm0, 394848(%rax)
	movq	-2216(%rbp), %rax
	movsd	394880(%rax), %xmm0     # xmm0 = mem[0],zero
	movsd	%xmm0, 394856(%rax)
	movq	-2216(%rbp), %rax
	movsd	394840(%rax), %xmm0     # xmm0 = mem[0],zero
	movsd	394856(%rax), %xmm1     # xmm1 = mem[0],zero
	movsd	394992(%rax), %xmm2     # xmm2 = mem[0],zero
	movsd	%xmm0, -19056(%rbp)     # 8-byte Spill
	movaps	%xmm2, %xmm0
	movq	%rax, -19064(%rbp)      # 8-byte Spill
	movsd	%xmm1, -19072(%rbp)     # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-19064(%rbp), %rcx      # 8-byte Reload
	movsd	134752968(%rcx,%rax,8), %xmm0 # xmm0 = mem[0],zero
	movsd	-19072(%rbp), %xmm1     # 8-byte Reload
                                        # xmm1 = mem[0],zero
	mulsd	%xmm0, %xmm1
	movsd	134750088(%rcx,%rax,8), %xmm0 # xmm0 = mem[0],zero
	movsd	-19056(%rbp), %xmm2     # 8-byte Reload
                                        # xmm2 = mem[0],zero
	mulsd	%xmm0, %xmm2
	subsd	%xmm2, %xmm1
	movsd	%xmm1, 394880(%rcx)
	movq	-2216(%rbp), %rax
	movsd	394992(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -19080(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-19080(%rbp), %rcx      # 8-byte Reload
	movsd	134752968(%rcx,%rax,8), %xmm0 # xmm0 = mem[0],zero
	movsd	394840(%rcx), %xmm1     # xmm1 = mem[0],zero
	movsd	394856(%rcx), %xmm2     # xmm2 = mem[0],zero
	mulsd	%xmm0, %xmm1
	movsd	134750088(%rcx,%rax,8), %xmm0 # xmm0 = mem[0],zero
	mulsd	%xmm0, %xmm2
	addsd	%xmm2, %xmm1
	movsd	%xmm1, 394864(%rcx)
	movq	-2216(%rbp), %rax
	movsd	394864(%rax), %xmm0     # xmm0 = mem[0],zero
	movsd	%xmm0, 394840(%rax)
	movq	-2216(%rbp), %rax
	movsd	394880(%rax), %xmm0     # xmm0 = mem[0],zero
	movsd	%xmm0, 395024(%rax)
	movq	-2216(%rbp), %rax
	movsd	395000(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -19088(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-19088(%rbp), %rcx      # 8-byte Reload
	movsd	134752968(%rcx,%rax,8), %xmm0 # xmm0 = mem[0],zero
	movsd	394840(%rcx), %xmm1     # xmm1 = mem[0],zero
	movsd	394848(%rcx), %xmm2     # xmm2 = mem[0],zero
	mulsd	%xmm0, %xmm1
	movsd	134750088(%rcx,%rax,8), %xmm0 # xmm0 = mem[0],zero
	mulsd	%xmm0, %xmm2
	subsd	%xmm2, %xmm1
	movsd	%xmm1, 394864(%rcx)
	movq	-2216(%rbp), %rax
	movsd	394840(%rax), %xmm0     # xmm0 = mem[0],zero
	movsd	394848(%rax), %xmm1     # xmm1 = mem[0],zero
	movsd	395000(%rax), %xmm2     # xmm2 = mem[0],zero
	movsd	%xmm0, -19096(%rbp)     # 8-byte Spill
	movaps	%xmm2, %xmm0
	movq	%rax, -19104(%rbp)      # 8-byte Spill
	movsd	%xmm1, -19112(%rbp)     # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-19104(%rbp), %rcx      # 8-byte Reload
	movsd	134752968(%rcx,%rax,8), %xmm0 # xmm0 = mem[0],zero
	movsd	-19112(%rbp), %xmm1     # 8-byte Reload
                                        # xmm1 = mem[0],zero
	mulsd	%xmm0, %xmm1
	movsd	134750088(%rcx,%rax,8), %xmm0 # xmm0 = mem[0],zero
	movsd	-19096(%rbp), %xmm2     # 8-byte Reload
                                        # xmm2 = mem[0],zero
	mulsd	%xmm0, %xmm2
	addsd	%xmm2, %xmm1
	movsd	%xmm1, 394872(%rcx)
	movq	-2216(%rbp), %rax
	movsd	394864(%rax), %xmm0     # xmm0 = mem[0],zero
	movsd	%xmm0, 395008(%rax)
	movq	-2216(%rbp), %rax
	movsd	394872(%rax), %xmm0     # xmm0 = mem[0],zero
	movsd	%xmm0, 395016(%rax)
	movq	-2216(%rbp), %rax
	movsd	395008(%rax), %xmm0     # xmm0 = mem[0],zero
	movsd	394888(%rax), %xmm1     # xmm1 = mem[0],zero
	movsd	394896(%rax), %xmm2     # xmm2 = mem[0],zero
	mulsd	%xmm0, %xmm1
	movsd	395024(%rax), %xmm0     # xmm0 = mem[0],zero
	movsd	394912(%rax), %xmm3     # xmm3 = mem[0],zero
	addsd	%xmm3, %xmm0
	divsd	%xmm0, %xmm1
	addsd	%xmm2, %xmm1
	movsd	%xmm1, 394936(%rax)
	movq	-2216(%rbp), %rax
	movsd	395016(%rax), %xmm0     # xmm0 = mem[0],zero
	movsd	394888(%rax), %xmm1     # xmm1 = mem[0],zero
	movsd	394904(%rax), %xmm2     # xmm2 = mem[0],zero
	mulsd	%xmm0, %xmm1
	movsd	395024(%rax), %xmm0     # xmm0 = mem[0],zero
	movsd	394912(%rax), %xmm3     # xmm3 = mem[0],zero
	addsd	%xmm3, %xmm0
	divsd	%xmm0, %xmm1
	addsd	%xmm2, %xmm1
	movsd	%xmm1, 394944(%rax)
	movq	-2216(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movsd	394840(%rax), %xmm1     # xmm1 = mem[0],zero
	movsd	394856(%rax), %xmm2     # xmm2 = mem[0],zero
	mulsd	%xmm1, %xmm0
	movsd	394912(%rax), %xmm1     # xmm1 = mem[0],zero
	addsd	%xmm1, %xmm2
	divsd	%xmm2, %xmm0
	movsd	394896(%rax), %xmm1     # xmm1 = mem[0],zero
	addsd	%xmm1, %xmm0
	movsd	%xmm0, 394952(%rax)
	movq	-2216(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movsd	394848(%rax), %xmm1     # xmm1 = mem[0],zero
	movsd	394856(%rax), %xmm2     # xmm2 = mem[0],zero
	mulsd	%xmm1, %xmm0
	movsd	394912(%rax), %xmm1     # xmm1 = mem[0],zero
	addsd	%xmm1, %xmm2
	divsd	%xmm2, %xmm0
	movsd	394904(%rax), %xmm1     # xmm1 = mem[0],zero
	addsd	%xmm1, %xmm0
	movsd	%xmm0, 394960(%rax)
	movsd	-2232(%rbp), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
	movq	%rax, -15680(%rbp)
	jmp	.LBB11_5339
.Ltmp1518:                              # Block address taken
.LBB11_5332:
	xorl	%ecx, %ecx
	movq	FGIMAGE$(%rip), %rdi
	movq	-2216(%rbp), %rax
	movsd	394936(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	394952(%rax), %xmm0
	movl	%ecx, -19116(%rbp)      # 4-byte Spill
	movq	%rdi, -19128(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	sarq	$1, %rax
	cvtsi2ss	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	394944(%rax), %xmm1     # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	394960(%rax), %xmm1
	movss	%xmm0, -19132(%rbp)     # 4-byte Spill
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	sarq	$1, %rax
	cvtsi2ss	%rax, %xmm1
	movq	-2216(%rbp), %rax
	movsd	394824(%rax), %xmm0     # xmm0 = mem[0],zero
	movss	%xmm1, -19136(%rbp)     # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
                                        # kill: def $eax killed $eax killed $rax
	movq	-19128(%rbp), %rdi      # 8-byte Reload
	movss	-19132(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movss	-19136(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movl	%eax, %esi
	movl	$4, %edx
	movl	-19116(%rbp), %ecx      # 4-byte Reload
	callq	fb_GfxPset@PLT
	jmp	.LBB11_5342
.Ltmp1519:                              # Block address taken
.LBB11_5333:
	movss	.LCPI11_336(%rip), %xmm5 # xmm5 = mem[0],zero,zero,zero
	xorl	%edx, %edx
	movq	FGIMAGE$(%rip), %rdi
	movq	-2216(%rbp), %rax
	movsd	394936(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	394952(%rax), %xmm0
	movss	%xmm5, -19140(%rbp)     # 4-byte Spill
	movl	%edx, -19144(%rbp)      # 4-byte Spill
	movq	%rdi, -19152(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	sarq	$1, %rax
	cvtsi2ss	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	394944(%rax), %xmm1     # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	394960(%rax), %xmm1
	movss	%xmm0, -19156(%rbp)     # 4-byte Spill
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	sarq	$1, %rax
	cvtsi2ss	%rax, %xmm1
	movq	-2216(%rbp), %rax
	movsd	394968(%rax), %xmm0     # xmm0 = mem[0],zero
	cvtsd2ss	%xmm0, %xmm2
	movq	-2216(%rbp), %rax
	movsd	394824(%rax), %xmm0     # xmm0 = mem[0],zero
	movss	%xmm1, -19160(%rbp)     # 4-byte Spill
	movss	%xmm2, -19164(%rbp)     # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
                                        # kill: def $eax killed $eax killed $rax
	movq	-19152(%rbp), %rdi      # 8-byte Reload
	movss	-19156(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movss	-19160(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movss	-19164(%rbp), %xmm2     # 4-byte Reload
                                        # xmm2 = mem[0],zero,zero,zero
	movl	%eax, %esi
	xorps	%xmm3, %xmm3
	movss	%xmm3, -19168(%rbp)     # 4-byte Spill
	movss	-19168(%rbp), %xmm4     # 4-byte Reload
                                        # xmm4 = mem[0],zero,zero,zero
	movss	-19140(%rbp), %xmm5     # 4-byte Reload
                                        # xmm5 = mem[0],zero,zero,zero
	movl	-19144(%rbp), %edx      # 4-byte Reload
	movl	$4, %ecx
	callq	fb_GfxEllipse@PLT
	jmp	.LBB11_5342
.Ltmp1520:                              # Block address taken
.LBB11_5334:
	xorl	%edx, %edx
	movq	FGIMAGE$(%rip), %rdi
	movq	-2216(%rbp), %rax
	movsd	394936(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	394952(%rax), %xmm0
	movl	%edx, -19172(%rbp)      # 4-byte Spill
	movq	%rdi, -19184(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	sarq	$1, %rax
	cvtsi2ss	%rax, %xmm2
	movq	-2216(%rbp), %rax
	movsd	394944(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	394960(%rax), %xmm0
	movss	%xmm2, -19188(%rbp)     # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	sarq	$1, %rax
	cvtsi2ss	%rax, %xmm3
	movq	-2216(%rbp), %rax
	movsd	394824(%rax), %xmm0     # xmm0 = mem[0],zero
	movss	%xmm3, -19192(%rbp)     # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
                                        # kill: def $eax killed $eax killed $rax
	movq	-19184(%rbp), %rdi      # 8-byte Reload
	xorps	%xmm0, %xmm0
	movss	%xmm0, -19196(%rbp)     # 4-byte Spill
	movss	-19196(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movss	-19188(%rbp), %xmm2     # 4-byte Reload
                                        # xmm2 = mem[0],zero,zero,zero
	movss	-19192(%rbp), %xmm3     # 4-byte Reload
                                        # xmm3 = mem[0],zero,zero,zero
	movl	%eax, %esi
	movl	-19172(%rbp), %edx      # 4-byte Reload
	movl	$65535, %ecx            # imm = 0xFFFF
	movl	$2, %r8d
	callq	fb_GfxLine@PLT
	jmp	.LBB11_5342
.Ltmp1521:                              # Block address taken
.LBB11_5335:
	movq	FGIMAGE$(%rip), %rdi
	movq	-2216(%rbp), %rax
	movsd	394936(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	394952(%rax), %xmm0
	movq	%rdi, -19208(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	sarq	$1, %rax
	cvtsi2ss	%rax, %xmm2
	movq	-2216(%rbp), %rax
	movsd	394944(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	394960(%rax), %xmm0
	movss	%xmm2, -19212(%rbp)     # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	sarq	$1, %rax
	cvtsi2ss	%rax, %xmm3
	movq	-2216(%rbp), %rax
	movsd	394824(%rax), %xmm0     # xmm0 = mem[0],zero
	movss	%xmm3, -19216(%rbp)     # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
                                        # kill: def $eax killed $eax killed $rax
	movq	-19208(%rbp), %rdi      # 8-byte Reload
	xorps	%xmm0, %xmm0
	movss	%xmm0, -19220(%rbp)     # 4-byte Spill
	movss	-19220(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movss	-19212(%rbp), %xmm2     # 4-byte Reload
                                        # xmm2 = mem[0],zero,zero,zero
	movss	-19216(%rbp), %xmm3     # 4-byte Reload
                                        # xmm3 = mem[0],zero,zero,zero
	movl	%eax, %esi
	movl	$1, %edx
	movl	$65535, %ecx            # imm = 0xFFFF
	movl	$2, %r8d
	callq	fb_GfxLine@PLT
	jmp	.LBB11_5342
.Ltmp1522:                              # Block address taken
.LBB11_5336:
	movq	FGIMAGE$(%rip), %rdi
	movq	-2216(%rbp), %rax
	movsd	394936(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	394952(%rax), %xmm0
	movq	%rdi, -19232(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	sarq	$1, %rax
	cvtsi2ss	%rax, %xmm2
	movq	-2216(%rbp), %rax
	movsd	394944(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	394960(%rax), %xmm0
	movss	%xmm2, -19236(%rbp)     # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	sarq	$1, %rax
	cvtsi2ss	%rax, %xmm3
	movq	-2216(%rbp), %rax
	movsd	394824(%rax), %xmm0     # xmm0 = mem[0],zero
	movss	%xmm3, -19240(%rbp)     # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
                                        # kill: def $eax killed $eax killed $rax
	movq	-19232(%rbp), %rdi      # 8-byte Reload
	xorps	%xmm0, %xmm0
	movss	%xmm0, -19244(%rbp)     # 4-byte Spill
	movss	-19244(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movss	-19236(%rbp), %xmm2     # 4-byte Reload
                                        # xmm2 = mem[0],zero,zero,zero
	movss	-19240(%rbp), %xmm3     # 4-byte Reload
                                        # xmm3 = mem[0],zero,zero,zero
	movl	%eax, %esi
	movl	$2, %eax
	movl	%eax, %edx
	movl	$65535, %ecx            # imm = 0xFFFF
	movl	%eax, %r8d
	callq	fb_GfxLine@PLT
	jmp	.LBB11_5342
.Ltmp1523:                              # Block address taken
.LBB11_5337:
	xorl	%edx, %edx
	movq	FGIMAGE$(%rip), %rdi
	movq	-2216(%rbp), %rax
	movsd	394936(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	394952(%rax), %xmm0
	movl	%edx, -19248(%rbp)      # 4-byte Spill
	movq	%rdi, -19256(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	sarq	$1, %rax
	cvtsi2ss	%rax, %xmm2
	movq	-2216(%rbp), %rax
	movsd	394944(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	394960(%rax), %xmm0
	movss	%xmm2, -19260(%rbp)     # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	sarq	$1, %rax
	cvtsi2ss	%rax, %xmm3
	movq	-2216(%rbp), %rax
	movsd	394824(%rax), %xmm0     # xmm0 = mem[0],zero
	movss	%xmm3, -19264(%rbp)     # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
                                        # kill: def $eax killed $eax killed $rax
	movq	-2216(%rbp), %rcx
	movsd	394968(%rcx), %xmm0     # xmm0 = mem[0],zero
	movl	%eax, -19268(%rbp)      # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$8, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rcx
	addsd	394976(%rcx), %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	movq	-19256(%rbp), %rdi      # 8-byte Reload
	xorps	%xmm0, %xmm0
	movss	%xmm0, -19272(%rbp)     # 4-byte Spill
	movss	-19272(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movss	-19260(%rbp), %xmm2     # 4-byte Reload
                                        # xmm2 = mem[0],zero,zero,zero
	movss	-19264(%rbp), %xmm3     # 4-byte Reload
                                        # xmm3 = mem[0],zero,zero,zero
	movl	-19268(%rbp), %esi      # 4-byte Reload
	movl	-19248(%rbp), %edx      # 4-byte Reload
	movl	$2, %r8d
	callq	fb_GfxLine@PLT
	jmp	.LBB11_5342
.Ltmp1524:                              # Block address taken
.LBB11_5338:
	xorl	%eax, %eax
	movl	%eax, %esi
	leaq	.L.str.1(%rip), %rdi
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%ecx, %ecx
	movq	%rax, -15688(%rbp)
	movq	FGIMAGE$(%rip), %rdi
	movq	-2216(%rbp), %rax
	movsd	394936(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	394952(%rax), %xmm0
	movl	%ecx, -19276(%rbp)      # 4-byte Spill
	movq	%rdi, -19288(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	sarq	$1, %rax
	cvtsi2ss	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	394944(%rax), %xmm1     # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	394960(%rax), %xmm1
	movss	%xmm0, -19292(%rbp)     # 4-byte Spill
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	sarq	$1, %rax
	cvtsi2ss	%rax, %xmm1
	movq	-2216(%rbp), %rax
	movsd	394824(%rax), %xmm0     # xmm0 = mem[0],zero
	movss	%xmm1, -19296(%rbp)     # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
                                        # kill: def $eax killed $eax killed $rax
	movq	-15688(%rbp), %rcx
	movq	-19288(%rbp), %rdi      # 8-byte Reload
	movss	-19292(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movss	-19296(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movl	%eax, %esi
	movl	-19276(%rbp), %edx      # 4-byte Reload
	movl	-19276(%rbp), %r8d      # 4-byte Reload
	movl	$1073741828, %r9d       # imm = 0x40000004
	callq	fb_GfxPaint@PLT
	jmp	.LBB11_5342
.LBB11_5339:
	cmpq	$6, -15680(%rbp)
	jbe	.LBB11_5341
# %bb.5340:
	jmp	.LBB11_5342
.LBB11_5341:
	movq	-15680(%rbp), %rax
	subq	$0, %rax
	leaq	_ZN8MEMORY_T6POKE64Edd.tmp$2490(%rip), %rcx
	movq	(%rcx,%rax,8), %rax
	movq	%rax, -15848(%rbp)      # 8-byte Spill
	jmp	.LBB11_6020
.LBB11_5342:
	jmp	.LBB11_6016
.LBB11_5343:
	movsd	.LCPI11_332(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5344
	jp	.LBB11_5344
	jmp	.LBB11_5345
.LBB11_5344:
	jmp	.LBB11_5347
.LBB11_5345:
	jmp	.LBB11_5346
.LBB11_5346:
	callq	fb_GfxLock@PLT
	jmp	.LBB11_6016
.LBB11_5347:
	movsd	.LCPI11_333(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5348
	jp	.LBB11_5348
	jmp	.LBB11_5349
.LBB11_5348:
	jmp	.LBB11_5351
.LBB11_5349:
	jmp	.LBB11_5350
.LBB11_5350:
	movsd	.LCPI11_16(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	394848(%rax), %xmm1     # xmm1 = mem[0],zero
	movsd	%xmm0, -19304(%rbp)     # 8-byte Spill
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %edi
	movq	-2216(%rbp), %rax
	movsd	-19304(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	394848(%rax), %xmm0
	movl	%edi, -19308(%rbp)      # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %esi
	movl	-19308(%rbp), %edi      # 4-byte Reload
	callq	fb_GfxUnlock@PLT
	jmp	.LBB11_6016
.LBB11_5351:
	movsd	.LCPI11_334(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5352
	jp	.LBB11_5352
	jmp	.LBB11_5353
.LBB11_5352:
	jmp	.LBB11_5355
.LBB11_5353:
	jmp	.LBB11_5354
.LBB11_5354:
	movsd	.LCPI11_16(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	YS$(%rip), %xmm1        # xmm1 = mem[0],zero
	movsd	%xmm0, -19320(%rbp)     # 8-byte Spill
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %edi
	movsd	-19320(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	YS$(%rip), %xmm0
	movl	%edi, -19324(%rbp)      # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %esi
	movl	-19324(%rbp), %edi      # 4-byte Reload
	callq	fb_GfxUnlock@PLT
	jmp	.LBB11_6016
.LBB11_5355:
	movsd	.LCPI11_335(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5356
	jp	.LBB11_5356
	jmp	.LBB11_5357
.LBB11_5356:
	jmp	.LBB11_5369
.LBB11_5357:
	jmp	.LBB11_5358
.LBB11_5358:
	movsd	-2232(%rbp), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
	movq	%rax, -15696(%rbp)
	jmp	.LBB11_5365
.Ltmp1525:                              # Block address taken
.LBB11_5359:
	xorl	%ecx, %ecx
	movq	RASTER$(%rip), %rdi
	movq	-2216(%rbp), %rax
	movsd	394840(%rax), %xmm0     # xmm0 = mem[0],zero
	cvtsd2ss	%xmm0, %xmm0
	movq	-2216(%rbp), %rax
	movsd	394824(%rax), %xmm1     # xmm1 = mem[0],zero
	movss	%xmm0, -19328(%rbp)     # 4-byte Spill
	movaps	%xmm1, %xmm0
	movl	%ecx, -19332(%rbp)      # 4-byte Spill
	movq	%rdi, -19344(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
                                        # kill: def $eax killed $eax killed $rax
	movq	-19344(%rbp), %rdi      # 8-byte Reload
	movss	-19328(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	xorps	%xmm1, %xmm1
	movl	%eax, %esi
	movl	$4, %edx
	movl	-19332(%rbp), %ecx      # 4-byte Reload
	callq	fb_GfxPset@PLT
	jmp	.LBB11_5368
.Ltmp1526:                              # Block address taken
.LBB11_5360:
	xorl	%ecx, %ecx
	movq	RASTER$(%rip), %rdi
	movq	-2216(%rbp), %rax
	movsd	394840(%rax), %xmm0     # xmm0 = mem[0],zero
	cvtsd2ss	%xmm0, %xmm0
	movq	-2216(%rbp), %rax
	movsd	394832(%rax), %xmm1     # xmm1 = mem[0],zero
	movss	%xmm0, -19348(%rbp)     # 4-byte Spill
	movaps	%xmm1, %xmm0
	movl	%ecx, -19352(%rbp)      # 4-byte Spill
	movq	%rdi, -19360(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
                                        # kill: def $eax killed $eax killed $rax
	movq	-19360(%rbp), %rdi      # 8-byte Reload
	movss	-19348(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	xorps	%xmm1, %xmm1
	movl	%eax, %esi
	movl	$4, %edx
	movl	-19352(%rbp), %ecx      # 4-byte Reload
	callq	fb_GfxPset@PLT
	jmp	.LBB11_5368
.Ltmp1527:                              # Block address taken
.LBB11_5361:
	xorl	%eax, %eax
	movq	RASTER$(%rip), %rdi
	movq	-2216(%rbp), %rcx
	movsd	394840(%rcx), %xmm0     # xmm0 = mem[0],zero
	cvtsd2ss	%xmm0, %xmm0
	movq	-2216(%rbp), %rcx
	movsd	394864(%rcx), %xmm1     # xmm1 = mem[0],zero
	cvtsd2ss	%xmm1, %xmm2
	movq	-2216(%rbp), %rcx
	movsd	394824(%rcx), %xmm1     # xmm1 = mem[0],zero
	movss	%xmm0, -19364(%rbp)     # 4-byte Spill
	movaps	%xmm1, %xmm0
	movl	%eax, -19368(%rbp)      # 4-byte Spill
	movq	%rdi, -19376(%rbp)      # 8-byte Spill
	movss	%xmm2, -19380(%rbp)     # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	movq	-19376(%rbp), %rdi      # 8-byte Reload
	movss	-19364(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	xorps	%xmm1, %xmm1
	movss	%xmm1, -19384(%rbp)     # 4-byte Spill
	movss	-19380(%rbp), %xmm2     # 4-byte Reload
                                        # xmm2 = mem[0],zero,zero,zero
	movss	-19384(%rbp), %xmm3     # 4-byte Reload
                                        # xmm3 = mem[0],zero,zero,zero
	movl	%ecx, %esi
	movl	-19368(%rbp), %edx      # 4-byte Reload
	movl	$65535, %ecx            # imm = 0xFFFF
	movl	-19368(%rbp), %r8d      # 4-byte Reload
	callq	fb_GfxLine@PLT
	jmp	.LBB11_5368
.Ltmp1528:                              # Block address taken
.LBB11_5362:
	xorl	%eax, %eax
	movq	RASTER$(%rip), %rdi
	movq	-2216(%rbp), %rcx
	movsd	394840(%rcx), %xmm0     # xmm0 = mem[0],zero
	cvtsd2ss	%xmm0, %xmm0
	movq	-2216(%rbp), %rcx
	movsd	394864(%rcx), %xmm1     # xmm1 = mem[0],zero
	cvtsd2ss	%xmm1, %xmm2
	movq	-2216(%rbp), %rcx
	movsd	394832(%rcx), %xmm1     # xmm1 = mem[0],zero
	movss	%xmm0, -19388(%rbp)     # 4-byte Spill
	movaps	%xmm1, %xmm0
	movl	%eax, -19392(%rbp)      # 4-byte Spill
	movq	%rdi, -19400(%rbp)      # 8-byte Spill
	movss	%xmm2, -19404(%rbp)     # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	movq	-19400(%rbp), %rdi      # 8-byte Reload
	movss	-19388(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	xorps	%xmm1, %xmm1
	movss	%xmm1, -19408(%rbp)     # 4-byte Spill
	movss	-19404(%rbp), %xmm2     # 4-byte Reload
                                        # xmm2 = mem[0],zero,zero,zero
	movss	-19408(%rbp), %xmm3     # 4-byte Reload
                                        # xmm3 = mem[0],zero,zero,zero
	movl	%ecx, %esi
	movl	-19392(%rbp), %edx      # 4-byte Reload
	movl	$65535, %ecx            # imm = 0xFFFF
	movl	-19392(%rbp), %r8d      # 4-byte Reload
	callq	fb_GfxLine@PLT
	jmp	.LBB11_5368
.Ltmp1529:                              # Block address taken
.LBB11_5363:
	xorl	%eax, %eax
	movq	RASTER$(%rip), %rdi
	movq	-2216(%rbp), %rcx
	movsd	394840(%rcx), %xmm0     # xmm0 = mem[0],zero
	cvtsd2ss	%xmm0, %xmm0
	movq	-2216(%rbp), %rcx
	movsd	394864(%rcx), %xmm1     # xmm1 = mem[0],zero
	cvtsd2ss	%xmm1, %xmm2
	movq	-2216(%rbp), %rcx
	movsd	394824(%rcx), %xmm1     # xmm1 = mem[0],zero
	movss	%xmm0, -19412(%rbp)     # 4-byte Spill
	movaps	%xmm1, %xmm0
	movl	%eax, -19416(%rbp)      # 4-byte Spill
	movq	%rdi, -19424(%rbp)      # 8-byte Spill
	movss	%xmm2, -19428(%rbp)     # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	movq	-2216(%rbp), %rdx
	movsd	393584(%rdx), %xmm0     # xmm0 = mem[0],zero
	movl	%ecx, -19432(%rbp)      # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rdx
                                        # kill: def $edx killed $edx killed $rdx
	movq	-19424(%rbp), %rdi      # 8-byte Reload
	movss	-19412(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	xorps	%xmm1, %xmm1
	movss	%xmm1, -19436(%rbp)     # 4-byte Spill
	movss	-19428(%rbp), %xmm2     # 4-byte Reload
                                        # xmm2 = mem[0],zero,zero,zero
	movss	-19436(%rbp), %xmm3     # 4-byte Reload
                                        # xmm3 = mem[0],zero,zero,zero
	movl	-19432(%rbp), %esi      # 4-byte Reload
	movl	-19416(%rbp), %eax      # 4-byte Reload
	movl	%edx, -19440(%rbp)      # 4-byte Spill
	movl	%eax, %edx
	movl	-19440(%rbp), %ecx      # 4-byte Reload
	movl	%eax, %r8d
	callq	fb_GfxLine@PLT
	jmp	.LBB11_5368
.Ltmp1530:                              # Block address taken
.LBB11_5364:
	xorl	%eax, %eax
	movq	RASTER$(%rip), %rdi
	movq	-2216(%rbp), %rcx
	movsd	394840(%rcx), %xmm0     # xmm0 = mem[0],zero
	cvtsd2ss	%xmm0, %xmm0
	movq	-2216(%rbp), %rcx
	movsd	394864(%rcx), %xmm1     # xmm1 = mem[0],zero
	cvtsd2ss	%xmm1, %xmm2
	movq	-2216(%rbp), %rcx
	movsd	394832(%rcx), %xmm1     # xmm1 = mem[0],zero
	movss	%xmm0, -19444(%rbp)     # 4-byte Spill
	movaps	%xmm1, %xmm0
	movl	%eax, -19448(%rbp)      # 4-byte Spill
	movq	%rdi, -19456(%rbp)      # 8-byte Spill
	movss	%xmm2, -19460(%rbp)     # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	movq	-2216(%rbp), %rdx
	movsd	393584(%rdx), %xmm0     # xmm0 = mem[0],zero
	movl	%ecx, -19464(%rbp)      # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rdx
                                        # kill: def $edx killed $edx killed $rdx
	movq	-19456(%rbp), %rdi      # 8-byte Reload
	movss	-19444(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	xorps	%xmm1, %xmm1
	movss	%xmm1, -19468(%rbp)     # 4-byte Spill
	movss	-19460(%rbp), %xmm2     # 4-byte Reload
                                        # xmm2 = mem[0],zero,zero,zero
	movss	-19468(%rbp), %xmm3     # 4-byte Reload
                                        # xmm3 = mem[0],zero,zero,zero
	movl	-19464(%rbp), %esi      # 4-byte Reload
	movl	-19448(%rbp), %eax      # 4-byte Reload
	movl	%edx, -19472(%rbp)      # 4-byte Spill
	movl	%eax, %edx
	movl	-19472(%rbp), %ecx      # 4-byte Reload
	movl	%eax, %r8d
	callq	fb_GfxLine@PLT
	jmp	.LBB11_5368
.LBB11_5365:
	cmpq	$5, -15696(%rbp)
	jbe	.LBB11_5367
# %bb.5366:
	jmp	.LBB11_5368
.LBB11_5367:
	movq	-15696(%rbp), %rax
	subq	$0, %rax
	leaq	_ZN8MEMORY_T6POKE64Edd.tmp$2491(%rip), %rcx
	movq	(%rcx,%rax,8), %rax
	movq	%rax, -15848(%rbp)      # 8-byte Spill
	jmp	.LBB11_6020
.LBB11_5368:
	jmp	.LBB11_6016
.LBB11_5369:
	movsd	.LCPI11_348(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5370
	jp	.LBB11_5370
	jmp	.LBB11_5371
.LBB11_5370:
	jmp	.LBB11_5422
.LBB11_5371:
	jmp	.LBB11_5372
.LBB11_5372:
	movsd	-2232(%rbp), %xmm0      # xmm0 = mem[0],zero
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB11_5373
	jp	.LBB11_5373
	jmp	.LBB11_5374
.LBB11_5373:
	jmp	.LBB11_5376
.LBB11_5374:
	jmp	.LBB11_5375
.LBB11_5375:
	xorl	%ecx, %ecx
	movq	FGIMAGE$(%rip), %rdi
	movq	-2216(%rbp), %rax
	movsd	394840(%rax), %xmm0     # xmm0 = mem[0],zero
	cvtsd2ss	%xmm0, %xmm0
	movq	-2216(%rbp), %rax
	movsd	394848(%rax), %xmm1     # xmm1 = mem[0],zero
	cvtsd2ss	%xmm1, %xmm1
	movq	-2216(%rbp), %rax
	movsd	394824(%rax), %xmm2     # xmm2 = mem[0],zero
	movss	%xmm0, -19476(%rbp)     # 4-byte Spill
	movaps	%xmm2, %xmm0
	movl	%ecx, -19480(%rbp)      # 4-byte Spill
	movq	%rdi, -19488(%rbp)      # 8-byte Spill
	movss	%xmm1, -19492(%rbp)     # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
                                        # kill: def $eax killed $eax killed $rax
	movq	-19488(%rbp), %rdi      # 8-byte Reload
	movss	-19476(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movss	-19492(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movl	%eax, %esi
	movl	$4, %edx
	movl	-19480(%rbp), %ecx      # 4-byte Reload
	callq	fb_GfxPset@PLT
	jmp	.LBB11_5421
.LBB11_5376:
	movsd	.LCPI11_7(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5377
	jp	.LBB11_5377
	jmp	.LBB11_5378
.LBB11_5377:
	jmp	.LBB11_5380
.LBB11_5378:
	jmp	.LBB11_5379
.LBB11_5379:
	xorl	%ecx, %ecx
	movq	BGIMAGE$(%rip), %rdi
	movq	-2216(%rbp), %rax
	movsd	394840(%rax), %xmm0     # xmm0 = mem[0],zero
	cvtsd2ss	%xmm0, %xmm0
	movq	-2216(%rbp), %rax
	movsd	394848(%rax), %xmm1     # xmm1 = mem[0],zero
	cvtsd2ss	%xmm1, %xmm1
	movq	-2216(%rbp), %rax
	movsd	394832(%rax), %xmm2     # xmm2 = mem[0],zero
	movss	%xmm0, -19496(%rbp)     # 4-byte Spill
	movaps	%xmm2, %xmm0
	movl	%ecx, -19500(%rbp)      # 4-byte Spill
	movq	%rdi, -19512(%rbp)      # 8-byte Spill
	movss	%xmm1, -19516(%rbp)     # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
                                        # kill: def $eax killed $eax killed $rax
	movq	-19512(%rbp), %rdi      # 8-byte Reload
	movss	-19496(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movss	-19516(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movl	%eax, %esi
	movl	$4, %edx
	movl	-19500(%rbp), %ecx      # 4-byte Reload
	callq	fb_GfxPset@PLT
	jmp	.LBB11_5421
.LBB11_5380:
	movsd	.LCPI11_9(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5381
	jp	.LBB11_5381
	jmp	.LBB11_5382
.LBB11_5381:
	jmp	.LBB11_5384
.LBB11_5382:
	jmp	.LBB11_5383
.LBB11_5383:
	xorl	%eax, %eax
	movq	FGIMAGE$(%rip), %rdi
	movq	-2216(%rbp), %rcx
	movsd	394840(%rcx), %xmm0     # xmm0 = mem[0],zero
	cvtsd2ss	%xmm0, %xmm0
	movq	-2216(%rbp), %rcx
	movsd	394848(%rcx), %xmm1     # xmm1 = mem[0],zero
	cvtsd2ss	%xmm1, %xmm1
	movq	-2216(%rbp), %rcx
	movsd	394864(%rcx), %xmm2     # xmm2 = mem[0],zero
	cvtsd2ss	%xmm2, %xmm2
	movq	-2216(%rbp), %rcx
	movsd	394872(%rcx), %xmm3     # xmm3 = mem[0],zero
	cvtsd2ss	%xmm3, %xmm3
	movq	-2216(%rbp), %rcx
	movsd	394824(%rcx), %xmm4     # xmm4 = mem[0],zero
	movss	%xmm0, -19520(%rbp)     # 4-byte Spill
	movaps	%xmm4, %xmm0
	movl	%eax, -19524(%rbp)      # 4-byte Spill
	movq	%rdi, -19536(%rbp)      # 8-byte Spill
	movss	%xmm1, -19540(%rbp)     # 4-byte Spill
	movss	%xmm2, -19544(%rbp)     # 4-byte Spill
	movss	%xmm3, -19548(%rbp)     # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	movq	-19536(%rbp), %rdi      # 8-byte Reload
	movss	-19520(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movss	-19540(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movss	-19544(%rbp), %xmm2     # 4-byte Reload
                                        # xmm2 = mem[0],zero,zero,zero
	movss	-19548(%rbp), %xmm3     # 4-byte Reload
                                        # xmm3 = mem[0],zero,zero,zero
	movl	%ecx, %esi
	movl	-19524(%rbp), %edx      # 4-byte Reload
	movl	$65535, %ecx            # imm = 0xFFFF
	movl	-19524(%rbp), %r8d      # 4-byte Reload
	callq	fb_GfxLine@PLT
	jmp	.LBB11_5421
.LBB11_5384:
	movsd	.LCPI11_10(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5385
	jp	.LBB11_5385
	jmp	.LBB11_5386
.LBB11_5385:
	jmp	.LBB11_5388
.LBB11_5386:
	jmp	.LBB11_5387
.LBB11_5387:
	xorl	%eax, %eax
	movq	BGIMAGE$(%rip), %rdi
	movq	-2216(%rbp), %rcx
	movsd	394840(%rcx), %xmm0     # xmm0 = mem[0],zero
	cvtsd2ss	%xmm0, %xmm0
	movq	-2216(%rbp), %rcx
	movsd	394848(%rcx), %xmm1     # xmm1 = mem[0],zero
	cvtsd2ss	%xmm1, %xmm1
	movq	-2216(%rbp), %rcx
	movsd	394864(%rcx), %xmm2     # xmm2 = mem[0],zero
	cvtsd2ss	%xmm2, %xmm2
	movq	-2216(%rbp), %rcx
	movsd	394872(%rcx), %xmm3     # xmm3 = mem[0],zero
	cvtsd2ss	%xmm3, %xmm3
	movq	-2216(%rbp), %rcx
	movsd	394832(%rcx), %xmm4     # xmm4 = mem[0],zero
	movss	%xmm0, -19552(%rbp)     # 4-byte Spill
	movaps	%xmm4, %xmm0
	movl	%eax, -19556(%rbp)      # 4-byte Spill
	movq	%rdi, -19568(%rbp)      # 8-byte Spill
	movss	%xmm1, -19572(%rbp)     # 4-byte Spill
	movss	%xmm2, -19576(%rbp)     # 4-byte Spill
	movss	%xmm3, -19580(%rbp)     # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	movq	-19568(%rbp), %rdi      # 8-byte Reload
	movss	-19552(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movss	-19572(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movss	-19576(%rbp), %xmm2     # 4-byte Reload
                                        # xmm2 = mem[0],zero,zero,zero
	movss	-19580(%rbp), %xmm3     # 4-byte Reload
                                        # xmm3 = mem[0],zero,zero,zero
	movl	%ecx, %esi
	movl	-19556(%rbp), %edx      # 4-byte Reload
	movl	$65535, %ecx            # imm = 0xFFFF
	movl	-19556(%rbp), %r8d      # 4-byte Reload
	callq	fb_GfxLine@PLT
	jmp	.LBB11_5421
.LBB11_5388:
	movsd	.LCPI11_11(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5389
	jp	.LBB11_5389
	jmp	.LBB11_5390
.LBB11_5389:
	jmp	.LBB11_5392
.LBB11_5390:
	jmp	.LBB11_5391
.LBB11_5391:
	xorl	%r8d, %r8d
	movq	FGIMAGE$(%rip), %rdi
	movq	-2216(%rbp), %rax
	movsd	394840(%rax), %xmm0     # xmm0 = mem[0],zero
	cvtsd2ss	%xmm0, %xmm0
	movq	-2216(%rbp), %rax
	movsd	394848(%rax), %xmm1     # xmm1 = mem[0],zero
	cvtsd2ss	%xmm1, %xmm1
	movq	-2216(%rbp), %rax
	movsd	394864(%rax), %xmm2     # xmm2 = mem[0],zero
	cvtsd2ss	%xmm2, %xmm2
	movq	-2216(%rbp), %rax
	movsd	394872(%rax), %xmm3     # xmm3 = mem[0],zero
	cvtsd2ss	%xmm3, %xmm3
	movq	-2216(%rbp), %rax
	movsd	394824(%rax), %xmm4     # xmm4 = mem[0],zero
	movss	%xmm0, -19584(%rbp)     # 4-byte Spill
	movaps	%xmm4, %xmm0
	movl	%r8d, -19588(%rbp)      # 4-byte Spill
	movq	%rdi, -19600(%rbp)      # 8-byte Spill
	movss	%xmm1, -19604(%rbp)     # 4-byte Spill
	movss	%xmm2, -19608(%rbp)     # 4-byte Spill
	movss	%xmm3, -19612(%rbp)     # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
                                        # kill: def $eax killed $eax killed $rax
	movq	-19600(%rbp), %rdi      # 8-byte Reload
	movss	-19584(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movss	-19604(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movss	-19608(%rbp), %xmm2     # 4-byte Reload
                                        # xmm2 = mem[0],zero,zero,zero
	movss	-19612(%rbp), %xmm3     # 4-byte Reload
                                        # xmm3 = mem[0],zero,zero,zero
	movl	%eax, %esi
	movl	$1, %edx
	movl	$65535, %ecx            # imm = 0xFFFF
	movl	-19588(%rbp), %r8d      # 4-byte Reload
	callq	fb_GfxLine@PLT
	jmp	.LBB11_5421
.LBB11_5392:
	movsd	.LCPI11_12(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5393
	jp	.LBB11_5393
	jmp	.LBB11_5394
.LBB11_5393:
	jmp	.LBB11_5396
.LBB11_5394:
	jmp	.LBB11_5395
.LBB11_5395:
	xorl	%r8d, %r8d
	movq	BGIMAGE$(%rip), %rdi
	movq	-2216(%rbp), %rax
	movsd	394840(%rax), %xmm0     # xmm0 = mem[0],zero
	cvtsd2ss	%xmm0, %xmm0
	movq	-2216(%rbp), %rax
	movsd	394848(%rax), %xmm1     # xmm1 = mem[0],zero
	cvtsd2ss	%xmm1, %xmm1
	movq	-2216(%rbp), %rax
	movsd	394864(%rax), %xmm2     # xmm2 = mem[0],zero
	cvtsd2ss	%xmm2, %xmm2
	movq	-2216(%rbp), %rax
	movsd	394872(%rax), %xmm3     # xmm3 = mem[0],zero
	cvtsd2ss	%xmm3, %xmm3
	movq	-2216(%rbp), %rax
	movsd	394832(%rax), %xmm4     # xmm4 = mem[0],zero
	movss	%xmm0, -19616(%rbp)     # 4-byte Spill
	movaps	%xmm4, %xmm0
	movl	%r8d, -19620(%rbp)      # 4-byte Spill
	movq	%rdi, -19632(%rbp)      # 8-byte Spill
	movss	%xmm1, -19636(%rbp)     # 4-byte Spill
	movss	%xmm2, -19640(%rbp)     # 4-byte Spill
	movss	%xmm3, -19644(%rbp)     # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
                                        # kill: def $eax killed $eax killed $rax
	movq	-19632(%rbp), %rdi      # 8-byte Reload
	movss	-19616(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movss	-19636(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movss	-19640(%rbp), %xmm2     # 4-byte Reload
                                        # xmm2 = mem[0],zero,zero,zero
	movss	-19644(%rbp), %xmm3     # 4-byte Reload
                                        # xmm3 = mem[0],zero,zero,zero
	movl	%eax, %esi
	movl	$1, %edx
	movl	$65535, %ecx            # imm = 0xFFFF
	movl	-19620(%rbp), %r8d      # 4-byte Reload
	callq	fb_GfxLine@PLT
	jmp	.LBB11_5421
.LBB11_5396:
	movsd	.LCPI11_13(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5397
	jp	.LBB11_5397
	jmp	.LBB11_5398
.LBB11_5397:
	jmp	.LBB11_5400
.LBB11_5398:
	jmp	.LBB11_5399
.LBB11_5399:
	xorl	%r8d, %r8d
	movq	FGIMAGE$(%rip), %rdi
	movq	-2216(%rbp), %rax
	movsd	394840(%rax), %xmm0     # xmm0 = mem[0],zero
	cvtsd2ss	%xmm0, %xmm0
	movq	-2216(%rbp), %rax
	movsd	394848(%rax), %xmm1     # xmm1 = mem[0],zero
	cvtsd2ss	%xmm1, %xmm1
	movq	-2216(%rbp), %rax
	movsd	394864(%rax), %xmm2     # xmm2 = mem[0],zero
	cvtsd2ss	%xmm2, %xmm2
	movq	-2216(%rbp), %rax
	movsd	394872(%rax), %xmm3     # xmm3 = mem[0],zero
	cvtsd2ss	%xmm3, %xmm3
	movq	-2216(%rbp), %rax
	movsd	394824(%rax), %xmm4     # xmm4 = mem[0],zero
	movss	%xmm0, -19648(%rbp)     # 4-byte Spill
	movaps	%xmm4, %xmm0
	movl	%r8d, -19652(%rbp)      # 4-byte Spill
	movq	%rdi, -19664(%rbp)      # 8-byte Spill
	movss	%xmm1, -19668(%rbp)     # 4-byte Spill
	movss	%xmm2, -19672(%rbp)     # 4-byte Spill
	movss	%xmm3, -19676(%rbp)     # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
                                        # kill: def $eax killed $eax killed $rax
	movq	-19664(%rbp), %rdi      # 8-byte Reload
	movss	-19648(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movss	-19668(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movss	-19672(%rbp), %xmm2     # 4-byte Reload
                                        # xmm2 = mem[0],zero,zero,zero
	movss	-19676(%rbp), %xmm3     # 4-byte Reload
                                        # xmm3 = mem[0],zero,zero,zero
	movl	%eax, %esi
	movl	$2, %edx
	movl	$65535, %ecx            # imm = 0xFFFF
	movl	-19652(%rbp), %r8d      # 4-byte Reload
	callq	fb_GfxLine@PLT
	jmp	.LBB11_5421
.LBB11_5400:
	movsd	.LCPI11_15(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5401
	jp	.LBB11_5401
	jmp	.LBB11_5402
.LBB11_5401:
	jmp	.LBB11_5404
.LBB11_5402:
	jmp	.LBB11_5403
.LBB11_5403:
	xorl	%r8d, %r8d
	movq	BGIMAGE$(%rip), %rdi
	movq	-2216(%rbp), %rax
	movsd	394840(%rax), %xmm0     # xmm0 = mem[0],zero
	cvtsd2ss	%xmm0, %xmm0
	movq	-2216(%rbp), %rax
	movsd	394848(%rax), %xmm1     # xmm1 = mem[0],zero
	cvtsd2ss	%xmm1, %xmm1
	movq	-2216(%rbp), %rax
	movsd	394864(%rax), %xmm2     # xmm2 = mem[0],zero
	cvtsd2ss	%xmm2, %xmm2
	movq	-2216(%rbp), %rax
	movsd	394872(%rax), %xmm3     # xmm3 = mem[0],zero
	cvtsd2ss	%xmm3, %xmm3
	movq	-2216(%rbp), %rax
	movsd	394832(%rax), %xmm4     # xmm4 = mem[0],zero
	movss	%xmm0, -19680(%rbp)     # 4-byte Spill
	movaps	%xmm4, %xmm0
	movl	%r8d, -19684(%rbp)      # 4-byte Spill
	movq	%rdi, -19696(%rbp)      # 8-byte Spill
	movss	%xmm1, -19700(%rbp)     # 4-byte Spill
	movss	%xmm2, -19704(%rbp)     # 4-byte Spill
	movss	%xmm3, -19708(%rbp)     # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
                                        # kill: def $eax killed $eax killed $rax
	movq	-19696(%rbp), %rdi      # 8-byte Reload
	movss	-19680(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movss	-19700(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movss	-19704(%rbp), %xmm2     # 4-byte Reload
                                        # xmm2 = mem[0],zero,zero,zero
	movss	-19708(%rbp), %xmm3     # 4-byte Reload
                                        # xmm3 = mem[0],zero,zero,zero
	movl	%eax, %esi
	movl	$2, %edx
	movl	$65535, %ecx            # imm = 0xFFFF
	movl	-19684(%rbp), %r8d      # 4-byte Reload
	callq	fb_GfxLine@PLT
	jmp	.LBB11_5421
.LBB11_5404:
	movsd	.LCPI11_15(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5405
	jp	.LBB11_5405
	jmp	.LBB11_5406
.LBB11_5405:
	jmp	.LBB11_5408
.LBB11_5406:
	jmp	.LBB11_5407
.LBB11_5407:
	movss	.LCPI11_336(%rip), %xmm5 # xmm5 = mem[0],zero,zero,zero
	xorl	%edx, %edx
	movq	FGIMAGE$(%rip), %rdi
	movq	-2216(%rbp), %rax
	movsd	394840(%rax), %xmm0     # xmm0 = mem[0],zero
	cvtsd2ss	%xmm0, %xmm0
	movq	-2216(%rbp), %rax
	movsd	394848(%rax), %xmm1     # xmm1 = mem[0],zero
	cvtsd2ss	%xmm1, %xmm1
	movq	-2216(%rbp), %rax
	movsd	393584(%rax), %xmm2     # xmm2 = mem[0],zero
	cvtsd2ss	%xmm2, %xmm2
	movq	-2216(%rbp), %rax
	movsd	394824(%rax), %xmm3     # xmm3 = mem[0],zero
	movss	%xmm0, -19712(%rbp)     # 4-byte Spill
	movaps	%xmm3, %xmm0
	movss	%xmm5, -19716(%rbp)     # 4-byte Spill
	movl	%edx, -19720(%rbp)      # 4-byte Spill
	movq	%rdi, -19728(%rbp)      # 8-byte Spill
	movss	%xmm1, -19732(%rbp)     # 4-byte Spill
	movss	%xmm2, -19736(%rbp)     # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
                                        # kill: def $eax killed $eax killed $rax
	movq	-19728(%rbp), %rdi      # 8-byte Reload
	movss	-19712(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movss	-19732(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movss	-19736(%rbp), %xmm2     # 4-byte Reload
                                        # xmm2 = mem[0],zero,zero,zero
	movl	%eax, %esi
	xorps	%xmm3, %xmm3
	movss	%xmm3, -19740(%rbp)     # 4-byte Spill
	movss	-19740(%rbp), %xmm4     # 4-byte Reload
                                        # xmm4 = mem[0],zero,zero,zero
	movss	-19716(%rbp), %xmm5     # 4-byte Reload
                                        # xmm5 = mem[0],zero,zero,zero
	movl	-19720(%rbp), %edx      # 4-byte Reload
	movl	$4, %ecx
	callq	fb_GfxEllipse@PLT
	jmp	.LBB11_5421
.LBB11_5408:
	movsd	.LCPI11_16(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5409
	jp	.LBB11_5409
	jmp	.LBB11_5410
.LBB11_5409:
	jmp	.LBB11_5412
.LBB11_5410:
	jmp	.LBB11_5411
.LBB11_5411:
	movss	.LCPI11_336(%rip), %xmm5 # xmm5 = mem[0],zero,zero,zero
	xorl	%edx, %edx
	movq	BGIMAGE$(%rip), %rdi
	movq	-2216(%rbp), %rax
	movsd	394840(%rax), %xmm0     # xmm0 = mem[0],zero
	cvtsd2ss	%xmm0, %xmm0
	movq	-2216(%rbp), %rax
	movsd	394848(%rax), %xmm1     # xmm1 = mem[0],zero
	cvtsd2ss	%xmm1, %xmm1
	movq	-2216(%rbp), %rax
	movsd	393584(%rax), %xmm2     # xmm2 = mem[0],zero
	cvtsd2ss	%xmm2, %xmm2
	movq	-2216(%rbp), %rax
	movsd	394832(%rax), %xmm3     # xmm3 = mem[0],zero
	movss	%xmm0, -19744(%rbp)     # 4-byte Spill
	movaps	%xmm3, %xmm0
	movss	%xmm5, -19748(%rbp)     # 4-byte Spill
	movl	%edx, -19752(%rbp)      # 4-byte Spill
	movq	%rdi, -19760(%rbp)      # 8-byte Spill
	movss	%xmm1, -19764(%rbp)     # 4-byte Spill
	movss	%xmm2, -19768(%rbp)     # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
                                        # kill: def $eax killed $eax killed $rax
	movq	-19760(%rbp), %rdi      # 8-byte Reload
	movss	-19744(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movss	-19764(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movss	-19768(%rbp), %xmm2     # 4-byte Reload
                                        # xmm2 = mem[0],zero,zero,zero
	movl	%eax, %esi
	xorps	%xmm3, %xmm3
	movss	%xmm3, -19772(%rbp)     # 4-byte Spill
	movss	-19772(%rbp), %xmm4     # 4-byte Reload
                                        # xmm4 = mem[0],zero,zero,zero
	movss	-19748(%rbp), %xmm5     # 4-byte Reload
                                        # xmm5 = mem[0],zero,zero,zero
	movl	-19752(%rbp), %edx      # 4-byte Reload
	movl	$4, %ecx
	callq	fb_GfxEllipse@PLT
	jmp	.LBB11_5421
.LBB11_5412:
	movsd	.LCPI11_17(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5413
	jp	.LBB11_5413
	jmp	.LBB11_5414
.LBB11_5413:
	jmp	.LBB11_5416
.LBB11_5414:
	jmp	.LBB11_5415
.LBB11_5415:
	xorl	%eax, %eax
	movq	FGIMAGE$(%rip), %rdi
	movq	-2216(%rbp), %rcx
	movsd	394840(%rcx), %xmm0     # xmm0 = mem[0],zero
	cvtsd2ss	%xmm0, %xmm0
	movq	-2216(%rbp), %rcx
	movsd	394848(%rcx), %xmm1     # xmm1 = mem[0],zero
	cvtsd2ss	%xmm1, %xmm1
	movq	-2216(%rbp), %rcx
	movsd	394864(%rcx), %xmm2     # xmm2 = mem[0],zero
	cvtsd2ss	%xmm2, %xmm2
	movq	-2216(%rbp), %rcx
	movsd	394872(%rcx), %xmm3     # xmm3 = mem[0],zero
	cvtsd2ss	%xmm3, %xmm3
	movq	-2216(%rbp), %rcx
	movsd	394824(%rcx), %xmm4     # xmm4 = mem[0],zero
	movss	%xmm0, -19776(%rbp)     # 4-byte Spill
	movaps	%xmm4, %xmm0
	movl	%eax, -19780(%rbp)      # 4-byte Spill
	movq	%rdi, -19792(%rbp)      # 8-byte Spill
	movss	%xmm1, -19796(%rbp)     # 4-byte Spill
	movss	%xmm2, -19800(%rbp)     # 4-byte Spill
	movss	%xmm3, -19804(%rbp)     # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	movq	-2216(%rbp), %rdx
	movsd	393584(%rdx), %xmm0     # xmm0 = mem[0],zero
	movl	%ecx, -19808(%rbp)      # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rdx
                                        # kill: def $edx killed $edx killed $rdx
	movq	-19792(%rbp), %rdi      # 8-byte Reload
	movss	-19776(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movss	-19796(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movss	-19800(%rbp), %xmm2     # 4-byte Reload
                                        # xmm2 = mem[0],zero,zero,zero
	movss	-19804(%rbp), %xmm3     # 4-byte Reload
                                        # xmm3 = mem[0],zero,zero,zero
	movl	-19808(%rbp), %esi      # 4-byte Reload
	movl	-19780(%rbp), %eax      # 4-byte Reload
	movl	%edx, -19812(%rbp)      # 4-byte Spill
	movl	%eax, %edx
	movl	-19812(%rbp), %ecx      # 4-byte Reload
	movl	%eax, %r8d
	callq	fb_GfxLine@PLT
	jmp	.LBB11_5421
.LBB11_5416:
	movsd	.LCPI11_19(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5417
	jp	.LBB11_5417
	jmp	.LBB11_5418
.LBB11_5417:
	jmp	.LBB11_5420
.LBB11_5418:
	jmp	.LBB11_5419
.LBB11_5419:
	xorl	%eax, %eax
	movq	BGIMAGE$(%rip), %rdi
	movq	-2216(%rbp), %rcx
	movsd	394840(%rcx), %xmm0     # xmm0 = mem[0],zero
	cvtsd2ss	%xmm0, %xmm0
	movq	-2216(%rbp), %rcx
	movsd	394848(%rcx), %xmm1     # xmm1 = mem[0],zero
	cvtsd2ss	%xmm1, %xmm1
	movq	-2216(%rbp), %rcx
	movsd	394864(%rcx), %xmm2     # xmm2 = mem[0],zero
	cvtsd2ss	%xmm2, %xmm2
	movq	-2216(%rbp), %rcx
	movsd	394872(%rcx), %xmm3     # xmm3 = mem[0],zero
	cvtsd2ss	%xmm3, %xmm3
	movq	-2216(%rbp), %rcx
	movsd	394832(%rcx), %xmm4     # xmm4 = mem[0],zero
	movss	%xmm0, -19816(%rbp)     # 4-byte Spill
	movaps	%xmm4, %xmm0
	movl	%eax, -19820(%rbp)      # 4-byte Spill
	movq	%rdi, -19832(%rbp)      # 8-byte Spill
	movss	%xmm1, -19836(%rbp)     # 4-byte Spill
	movss	%xmm2, -19840(%rbp)     # 4-byte Spill
	movss	%xmm3, -19844(%rbp)     # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	movq	-2216(%rbp), %rdx
	movsd	393584(%rdx), %xmm0     # xmm0 = mem[0],zero
	movl	%ecx, -19848(%rbp)      # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rdx
                                        # kill: def $edx killed $edx killed $rdx
	movq	-19832(%rbp), %rdi      # 8-byte Reload
	movss	-19816(%rbp), %xmm0     # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movss	-19836(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movss	-19840(%rbp), %xmm2     # 4-byte Reload
                                        # xmm2 = mem[0],zero,zero,zero
	movss	-19844(%rbp), %xmm3     # 4-byte Reload
                                        # xmm3 = mem[0],zero,zero,zero
	movl	-19848(%rbp), %esi      # 4-byte Reload
	movl	-19820(%rbp), %eax      # 4-byte Reload
	movl	%edx, -19852(%rbp)      # 4-byte Spill
	movl	%eax, %edx
	movl	-19852(%rbp), %ecx      # 4-byte Reload
	movl	%eax, %r8d
	callq	fb_GfxLine@PLT
.LBB11_5420:
	jmp	.LBB11_5421
.LBB11_5421:
	jmp	.LBB11_6016
.LBB11_5422:
	movsd	.LCPI11_349(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5423
	jp	.LBB11_5423
	jmp	.LBB11_5424
.LBB11_5423:
	jmp	.LBB11_5426
.LBB11_5424:
	jmp	.LBB11_5425
.LBB11_5425:
	xorl	%edx, %edx
	movl	$1, %edi
	leaq	STRCODE$(%rip), %rsi
	callq	fb_PrintString@PLT
	xorl	%eax, %eax
	xorl	%ecx, %ecx
	movl	%ecx, %r8d
	movq	FGIMAGE$(%rip), %rdi
	xorps	%xmm0, %xmm0
	movss	%xmm0, -19856(%rbp)     # 4-byte Spill
	movss	-19856(%rbp), %xmm1     # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movl	$2147483652, %esi       # imm = 0x80000004
	leaq	STRCODE$(%rip), %rdx
	movl	%eax, %ecx
	movl	%eax, %r9d
	movq	$0, (%rsp)
	movq	$0, 8(%rsp)
	movq	$0, 16(%rsp)
	callq	fb_GfxDrawString@PLT
	leaq	STRCODE$(%rip), %rdx
	xorl	%r8d, %r8d
	movq	%rdx, %rdi
	movq	$-1, %rsi
	leaq	.L.str.1(%rip), %rdx
	movl	$1, %ecx
	movq	%rax, -19864(%rbp)      # 8-byte Spill
	callq	fb_StrAssign@PLT
	jmp	.LBB11_6016
.LBB11_5426:
	movsd	.LCPI11_350(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5427
	jp	.LBB11_5427
	jmp	.LBB11_5428
.LBB11_5427:
	jmp	.LBB11_5468
.LBB11_5428:
	jmp	.LBB11_5429
.LBB11_5429:
	movsd	.LCPI11_7(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movq	-2216(%rbp), %rcx
	movsd	395344(%rcx), %xmm1     # xmm1 = mem[0],zero
	movsd	%xmm0, -19872(%rbp)     # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rax, -19880(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-19880(%rbp), %rcx      # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	movsd	%xmm0, -15704(%rbp)
	movsd	-19872(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	ucomisd	-15704(%rbp), %xmm0
	jbe	.LBB11_5431
# %bb.5430:
	jmp	.LBB11_5435
.LBB11_5431:
	movsd	.LCPI11_139(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-15704(%rbp), %xmm1     # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jbe	.LBB11_5433
# %bb.5432:
	jmp	.LBB11_5435
.LBB11_5433:
	jmp	.LBB11_5434
.LBB11_5434:
	movsd	.LCPI11_12(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_11(%rip), %xmm1 # xmm1 = mem[0],zero
	movsd	.LCPI11_10(%rip), %xmm2 # xmm2 = mem[0],zero
	movsd	.LCPI11_9(%rip), %xmm3  # xmm3 = mem[0],zero
	movsd	.LCPI11_7(%rip), %xmm4  # xmm4 = mem[0],zero
	movq	-2216(%rbp), %rax
	movq	-2216(%rbp), %rcx
	addsd	395344(%rcx), %xmm4
	movsd	%xmm0, -19888(%rbp)     # 8-byte Spill
	movaps	%xmm4, %xmm0
	movsd	%xmm1, -19896(%rbp)     # 8-byte Spill
	movsd	%xmm2, -19904(%rbp)     # 8-byte Spill
	movsd	%xmm3, -19912(%rbp)     # 8-byte Spill
	movq	%rax, -19920(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-19920(%rbp), %rcx      # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-2216(%rbp), %rcx
	movq	-2216(%rbp), %rdx
	movsd	-19912(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rax, -19928(%rbp)      # 8-byte Spill
	movq	%rcx, -19936(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-19936(%rbp), %rcx      # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-19928(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movq	-2216(%rbp), %rdx
	movsd	-19904(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rcx, -19944(%rbp)      # 8-byte Spill
	movq	%rax, -19952(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-19952(%rbp), %rcx      # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-19944(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movq	-2216(%rbp), %rdx
	movsd	-19896(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rcx, -19960(%rbp)      # 8-byte Spill
	movq	%rax, -19968(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-19968(%rbp), %rcx      # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-19960(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	movq	-2216(%rbp), %rcx
	movsd	-19888(%rbp), %xmm1     # 8-byte Reload
                                        # xmm1 = mem[0],zero
	addsd	395344(%rcx), %xmm1
	movsd	%xmm0, -19976(%rbp)     # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rax, -19984(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movsd	-19976(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movq	-19984(%rbp), %rcx      # 8-byte Reload
	addsd	(%rcx,%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394912(%rax)
	movq	-2216(%rbp), %rdi
	movq	-2216(%rbp), %rax
	movq	-2216(%rbp), %rdx
	movsd	395344(%rdx), %xmm0     # xmm0 = mem[0],zero
	movq	%rdi, -19992(%rbp)      # 8-byte Spill
	movq	%rax, -20000(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-20000(%rbp), %rcx      # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	394912(%rax), %xmm1     # xmm1 = mem[0],zero
	movq	-19992(%rbp), %rdi      # 8-byte Reload
	callq	_ZN8MEMORY_T5POKEBEdd
	movsd	.LCPI11_13(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	395344(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395344(%rax)
	jmp	.LBB11_5454
.LBB11_5435:
	movsd	.LCPI11_140(%rip), %xmm0 # xmm0 = mem[0],zero
	ucomisd	-15704(%rbp), %xmm0
	jbe	.LBB11_5437
# %bb.5436:
	jmp	.LBB11_5441
.LBB11_5437:
	movsd	.LCPI11_147(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-15704(%rbp), %xmm1     # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jbe	.LBB11_5439
# %bb.5438:
	jmp	.LBB11_5441
.LBB11_5439:
	jmp	.LBB11_5440
.LBB11_5440:
	movq	-2216(%rbp), %rdi
	movq	-2216(%rbp), %rax
	movq	-2216(%rbp), %rcx
	movsd	395344(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rdi, -20008(%rbp)      # 8-byte Spill
	movq	%rax, -20016(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-20016(%rbp), %rcx      # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	movq	-20008(%rbp), %rdi      # 8-byte Reload
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T5POKEBEdd
	movsd	.LCPI11_11(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	395344(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395344(%rax)
	jmp	.LBB11_5454
.LBB11_5441:
	movsd	.LCPI11_148(%rip), %xmm0 # xmm0 = mem[0],zero
	ucomisd	-15704(%rbp), %xmm0
	jbe	.LBB11_5443
# %bb.5442:
	jmp	.LBB11_5447
.LBB11_5443:
	movsd	.LCPI11_153(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-15704(%rbp), %xmm1     # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jbe	.LBB11_5445
# %bb.5444:
	jmp	.LBB11_5447
.LBB11_5445:
	jmp	.LBB11_5446
.LBB11_5446:
	movq	-2216(%rbp), %rdi
	movq	-2216(%rbp), %rax
	movq	-2216(%rbp), %rcx
	movsd	395344(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rdi, -20024(%rbp)      # 8-byte Spill
	movq	%rax, -20032(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-20032(%rbp), %rcx      # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	movq	-20024(%rbp), %rdi      # 8-byte Reload
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T5POKEBEdd
	movsd	.LCPI11_11(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	395344(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395344(%rax)
	jmp	.LBB11_5454
.LBB11_5447:
	movsd	.LCPI11_154(%rip), %xmm0 # xmm0 = mem[0],zero
	ucomisd	-15704(%rbp), %xmm0
	jbe	.LBB11_5449
# %bb.5448:
	jmp	.LBB11_5453
.LBB11_5449:
	movsd	.LCPI11_46(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-15704(%rbp), %xmm1     # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jbe	.LBB11_5451
# %bb.5450:
	jmp	.LBB11_5453
.LBB11_5451:
	jmp	.LBB11_5452
.LBB11_5452:
	movq	-2216(%rbp), %rdi
	movq	-2216(%rbp), %rax
	movq	-2216(%rbp), %rcx
	movsd	395344(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rdi, -20040(%rbp)      # 8-byte Spill
	movq	%rax, -20048(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-20048(%rbp), %rcx      # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	movq	-20040(%rbp), %rdi      # 8-byte Reload
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T5POKEBEdd
	movsd	.LCPI11_11(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	395344(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395344(%rax)
.LBB11_5453:
	jmp	.LBB11_5454
.LBB11_5454:
	movsd	.LCPI11_351(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_12(%rip), %xmm1 # xmm1 = mem[0],zero
	movsd	.LCPI11_11(%rip), %xmm2 # xmm2 = mem[0],zero
	movsd	.LCPI11_10(%rip), %xmm3 # xmm3 = mem[0],zero
	movsd	.LCPI11_9(%rip), %xmm4  # xmm4 = mem[0],zero
	movsd	.LCPI11_7(%rip), %xmm5  # xmm5 = mem[0],zero
	movq	-2216(%rbp), %rax
	movq	-2216(%rbp), %rcx
	addsd	395344(%rcx), %xmm5
	movsd	%xmm0, -20056(%rbp)     # 8-byte Spill
	movaps	%xmm5, %xmm0
	movsd	%xmm1, -20064(%rbp)     # 8-byte Spill
	movsd	%xmm2, -20072(%rbp)     # 8-byte Spill
	movsd	%xmm3, -20080(%rbp)     # 8-byte Spill
	movsd	%xmm4, -20088(%rbp)     # 8-byte Spill
	movq	%rax, -20096(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-20096(%rbp), %rcx      # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-2216(%rbp), %rcx
	movq	-2216(%rbp), %rdx
	movsd	-20088(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rax, -20104(%rbp)      # 8-byte Spill
	movq	%rcx, -20112(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-20112(%rbp), %rcx      # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-20104(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movq	-2216(%rbp), %rdx
	movsd	-20080(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rcx, -20120(%rbp)      # 8-byte Spill
	movq	%rax, -20128(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-20128(%rbp), %rcx      # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-20120(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movq	-2216(%rbp), %rdx
	movsd	-20072(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rcx, -20136(%rbp)      # 8-byte Spill
	movq	%rax, -20144(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-20144(%rbp), %rcx      # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-20136(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	movq	-2216(%rbp), %rcx
	movsd	-20064(%rbp), %xmm1     # 8-byte Reload
                                        # xmm1 = mem[0],zero
	addsd	395344(%rcx), %xmm1
	movsd	%xmm0, -20152(%rbp)     # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rax, -20160(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movsd	-20152(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movq	-20160(%rbp), %rcx      # 8-byte Reload
	addsd	(%rcx,%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395400(%rax)
	movq	-2216(%rbp), %rax
	movsd	395400(%rax), %xmm0     # xmm0 = mem[0],zero
	movsd	%xmm0, -15712(%rbp)
	movsd	-20056(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	ucomisd	-15712(%rbp), %xmm0
	jbe	.LBB11_5456
# %bb.5455:
	jmp	.LBB11_5460
.LBB11_5456:
	movsd	.LCPI11_352(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-15712(%rbp), %xmm1     # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jbe	.LBB11_5458
# %bb.5457:
	jmp	.LBB11_5460
.LBB11_5458:
	jmp	.LBB11_5459
.LBB11_5459:
	movq	-2216(%rbp), %rax
	movq	ADR0$(%rip), %rcx
	movsd	8(%rax,%rcx,8), %xmm0   # xmm0 = mem[0],zero
	movsd	%xmm0, 394912(%rax)
	movq	-2216(%rbp), %rdi
	movaps	.LCPI11_297(%rip), %xmm0 # xmm0 = [1127219200,1160773632,0,0]
	movq	ADR0$(%rip), %xmm1      # xmm1 = mem[0],zero
	punpckldq	%xmm0, %xmm1    # xmm1 = xmm1[0],xmm0[0],xmm1[1],xmm0[1]
	movapd	.LCPI11_298(%rip), %xmm0 # xmm0 = [4.503599627370496E+15,1.9342813113834067E+25]
	subpd	%xmm0, %xmm1
	movaps	%xmm1, %xmm0
	unpckhpd	%xmm1, %xmm1    # xmm1 = xmm1[1,1]
	addsd	%xmm0, %xmm1
	movq	-2216(%rbp), %rax
	movsd	394912(%rax), %xmm0     # xmm0 = mem[0],zero
	movsd	%xmm0, -20168(%rbp)     # 8-byte Spill
	movaps	%xmm1, %xmm0
	movsd	-20168(%rbp), %xmm1     # 8-byte Reload
                                        # xmm1 = mem[0],zero
	callq	_ZN8MEMORY_T5POKEBEdd
	movsd	.LCPI11_10(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	395344(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395344(%rax)
	jmp	.LBB11_5467
.LBB11_5460:
	movsd	.LCPI11_353(%rip), %xmm0 # xmm0 = mem[0],zero
	ucomisd	-15712(%rbp), %xmm0
	jbe	.LBB11_5462
# %bb.5461:
	jmp	.LBB11_5466
.LBB11_5462:
	movsd	.LCPI11_354(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-15712(%rbp), %xmm1     # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jbe	.LBB11_5464
# %bb.5463:
	jmp	.LBB11_5466
.LBB11_5464:
	jmp	.LBB11_5465
.LBB11_5465:
	movq	-2216(%rbp), %rdi
	movq	-2216(%rbp), %rax
	movsd	395400(%rax), %xmm0     # xmm0 = mem[0],zero
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T5POKEBEdd
	movsd	.LCPI11_11(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	395344(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395344(%rax)
.LBB11_5466:
	jmp	.LBB11_5467
.LBB11_5467:
	jmp	.LBB11_6016
.LBB11_5468:
	movsd	.LCPI11_350(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5469
	jp	.LBB11_5469
	jmp	.LBB11_5470
.LBB11_5469:
	jmp	.LBB11_5472
.LBB11_5470:
	jmp	.LBB11_5471
.LBB11_5471:
	movq	-2216(%rbp), %rax
	xorps	%xmm0, %xmm0
	movsd	%xmm0, 395344(%rax)
	jmp	.LBB11_6016
.LBB11_5472:
	movsd	.LCPI11_355(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5473
	jp	.LBB11_5473
	jmp	.LBB11_5474
.LBB11_5473:
	jmp	.LBB11_5476
.LBB11_5474:
	jmp	.LBB11_5475
.LBB11_5475:
	movq	-2216(%rbp), %rax
	movsd	395352(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-2216(%rbp), %rcx
	movsd	395360(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -20176(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-20176(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395368(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20184(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-20184(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395376(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20192(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-20192(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	395384(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395344(%rax)
	jmp	.LBB11_6016
.LBB11_5476:
	movsd	.LCPI11_356(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5477
	jp	.LBB11_5477
	jmp	.LBB11_5478
.LBB11_5477:
	jmp	.LBB11_5480
.LBB11_5478:
	jmp	.LBB11_5479
.LBB11_5479:
	movq	-2216(%rbp), %rax
	movsd	395408(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-2216(%rbp), %rcx
	movsd	395416(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -20200(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-20200(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395424(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20208(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-20208(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395432(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20216(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-20216(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	395440(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395400(%rax)
	jmp	.LBB11_6016
.LBB11_5480:
	movsd	.LCPI11_357(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5481
	jp	.LBB11_5481
	jmp	.LBB11_5482
.LBB11_5481:
	jmp	.LBB11_5484
.LBB11_5482:
	jmp	.LBB11_5483
.LBB11_5483:
	movq	-2216(%rbp), %rax
	movsd	395464(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-2216(%rbp), %rcx
	movsd	395472(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -20224(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-20224(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395480(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20232(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-20232(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395488(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20240(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-20240(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	395496(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395456(%rax)
	jmp	.LBB11_6016
.LBB11_5484:
	movsd	.LCPI11_358(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5485
	jp	.LBB11_5485
	jmp	.LBB11_5486
.LBB11_5485:
	jmp	.LBB11_5488
.LBB11_5486:
	jmp	.LBB11_5487
.LBB11_5487:
	movq	-2216(%rbp), %rax
	movsd	395520(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-2216(%rbp), %rcx
	movsd	395528(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -20248(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-20248(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395536(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20256(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-20256(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395544(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20264(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-20264(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	395552(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395512(%rax)
	jmp	.LBB11_6016
.LBB11_5488:
	movsd	.LCPI11_359(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5489
	jp	.LBB11_5489
	jmp	.LBB11_5490
.LBB11_5489:
	jmp	.LBB11_5492
.LBB11_5490:
	jmp	.LBB11_5491
.LBB11_5491:
	movq	-2216(%rbp), %rax
	movsd	395576(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-2216(%rbp), %rcx
	movsd	395584(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -20272(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-20272(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395592(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20280(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-20280(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395600(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20288(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-20288(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	395608(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395568(%rax)
	jmp	.LBB11_6016
.LBB11_5492:
	movsd	.LCPI11_360(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5493
	jp	.LBB11_5493
	jmp	.LBB11_5494
.LBB11_5493:
	jmp	.LBB11_5496
.LBB11_5494:
	jmp	.LBB11_5495
.LBB11_5495:
	movq	-2216(%rbp), %rax
	movsd	395632(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-2216(%rbp), %rcx
	movsd	395640(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -20296(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-20296(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20304(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-20304(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395656(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20312(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-20312(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	395664(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395624(%rax)
	jmp	.LBB11_6016
.LBB11_5496:
	movsd	.LCPI11_361(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5497
	jp	.LBB11_5497
	jmp	.LBB11_5498
.LBB11_5497:
	jmp	.LBB11_5500
.LBB11_5498:
	jmp	.LBB11_5499
.LBB11_5499:
	movq	-2216(%rbp), %rax
	movsd	395688(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$56, %rax
	movq	-2216(%rbp), %rcx
	movsd	395696(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -20320(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$48, %rax
	movq	-20320(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395704(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20328(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$40, %rax
	movq	-20328(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395712(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20336(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-20336(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395720(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20344(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-20344(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395728(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20352(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-20352(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395736(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20360(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-20360(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	395744(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395680(%rax)
	jmp	.LBB11_6016
.LBB11_5500:
	movsd	.LCPI11_362(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5501
	jp	.LBB11_5501
	jmp	.LBB11_5502
.LBB11_5501:
	jmp	.LBB11_5504
.LBB11_5502:
	jmp	.LBB11_5503
.LBB11_5503:
	movq	-2216(%rbp), %rax
	movsd	395768(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$56, %rax
	movq	-2216(%rbp), %rcx
	movsd	395776(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -20368(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$48, %rax
	movq	-20368(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395784(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20376(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$40, %rax
	movq	-20376(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395792(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20384(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-20384(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395800(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20392(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-20392(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395808(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20400(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-20400(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395816(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20408(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-20408(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	395824(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395760(%rax)
	jmp	.LBB11_6016
.LBB11_5504:
	movsd	.LCPI11_363(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5505
	jp	.LBB11_5505
	jmp	.LBB11_5506
.LBB11_5505:
	jmp	.LBB11_5508
.LBB11_5506:
	jmp	.LBB11_5507
.LBB11_5507:
	movq	-2216(%rbp), %rax
	movsd	395848(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$56, %rax
	movq	-2216(%rbp), %rcx
	movsd	395856(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -20416(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$48, %rax
	movq	-20416(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395864(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20424(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$40, %rax
	movq	-20424(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395872(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20432(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-20432(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395880(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20440(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-20440(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20448(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-20448(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395896(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20456(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-20456(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	395904(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395840(%rax)
	jmp	.LBB11_6016
.LBB11_5508:
	movsd	.LCPI11_364(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5509
	jp	.LBB11_5509
	jmp	.LBB11_5510
.LBB11_5509:
	jmp	.LBB11_5512
.LBB11_5510:
	jmp	.LBB11_5511
.LBB11_5511:
	movq	-2216(%rbp), %rax
	movsd	395928(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$56, %rax
	movq	-2216(%rbp), %rcx
	movsd	395936(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -20464(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$48, %rax
	movq	-20464(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395944(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20472(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$40, %rax
	movq	-20472(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395952(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20480(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-20480(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395960(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20488(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-20488(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395968(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20496(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-20496(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395976(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20504(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-20504(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	395984(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395920(%rax)
	jmp	.LBB11_6016
.LBB11_5512:
	movsd	.LCPI11_365(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5513
	jp	.LBB11_5513
	jmp	.LBB11_5514
.LBB11_5513:
	jmp	.LBB11_5516
.LBB11_5514:
	jmp	.LBB11_5515
.LBB11_5515:
	movq	-2216(%rbp), %rax
	movsd	396008(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$56, %rax
	movq	-2216(%rbp), %rcx
	movsd	396016(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -20512(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$48, %rax
	movq	-20512(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	396024(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20520(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$40, %rax
	movq	-20520(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	396032(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20528(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-20528(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	396040(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20536(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-20536(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	396048(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20544(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-20544(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	396056(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20552(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-20552(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	396064(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 396000(%rax)
	jmp	.LBB11_6016
.LBB11_5516:
	movsd	.LCPI11_366(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5517
	jp	.LBB11_5517
	jmp	.LBB11_5518
.LBB11_5517:
	jmp	.LBB11_5520
.LBB11_5518:
	jmp	.LBB11_5519
.LBB11_5519:
	movq	-2216(%rbp), %rax
	movsd	396088(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$56, %rax
	movq	-2216(%rbp), %rcx
	movsd	396096(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -20560(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$48, %rax
	movq	-20560(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	396104(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20568(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$40, %rax
	movq	-20568(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	396112(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20576(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-20576(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	396120(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20584(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-20584(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	396128(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20592(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-20592(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	396136(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -20600(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-20600(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	396144(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 396080(%rax)
	jmp	.LBB11_6016
.LBB11_5520:
	movsd	.LCPI11_367(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5521
	jp	.LBB11_5521
	jmp	.LBB11_5522
.LBB11_5521:
	jmp	.LBB11_5524
.LBB11_5522:
	jmp	.LBB11_5523
.LBB11_5523:
	movq	-2216(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 396000(%rax)
	jmp	.LBB11_6016
.LBB11_5524:
	movsd	.LCPI11_368(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5525
	jp	.LBB11_5525
	jmp	.LBB11_5526
.LBB11_5525:
	jmp	.LBB11_5528
.LBB11_5526:
	jmp	.LBB11_5527
.LBB11_5527:
	movq	-2216(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 396000(%rax)
	jmp	.LBB11_6016
.LBB11_5528:
	movsd	.LCPI11_369(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5529
	jp	.LBB11_5529
	jmp	.LBB11_5530
.LBB11_5529:
	jmp	.LBB11_5532
.LBB11_5530:
	jmp	.LBB11_5531
.LBB11_5531:
	movq	-2216(%rbp), %rax
	movsd	394904(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 396000(%rax)
	jmp	.LBB11_6016
.LBB11_5532:
	movsd	.LCPI11_370(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5533
	jp	.LBB11_5533
	jmp	.LBB11_5534
.LBB11_5533:
	jmp	.LBB11_5536
.LBB11_5534:
	jmp	.LBB11_5535
.LBB11_5535:
	movq	-2216(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395680(%rax)
	jmp	.LBB11_6016
.LBB11_5536:
	movsd	.LCPI11_371(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5537
	jp	.LBB11_5537
	jmp	.LBB11_5538
.LBB11_5537:
	jmp	.LBB11_5540
.LBB11_5538:
	jmp	.LBB11_5539
.LBB11_5539:
	movq	-2216(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395680(%rax)
	jmp	.LBB11_6016
.LBB11_5540:
	movsd	.LCPI11_372(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5541
	jp	.LBB11_5541
	jmp	.LBB11_5542
.LBB11_5541:
	jmp	.LBB11_5544
.LBB11_5542:
	jmp	.LBB11_5543
.LBB11_5543:
	movq	-2216(%rbp), %rax
	movsd	394904(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395680(%rax)
	jmp	.LBB11_6016
.LBB11_5544:
	movsd	.LCPI11_373(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5545
	jp	.LBB11_5545
	jmp	.LBB11_5546
.LBB11_5545:
	jmp	.LBB11_5548
.LBB11_5546:
	jmp	.LBB11_5547
.LBB11_5547:
	movq	-2216(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395760(%rax)
	jmp	.LBB11_6016
.LBB11_5548:
	movsd	.LCPI11_374(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5549
	jp	.LBB11_5549
	jmp	.LBB11_5550
.LBB11_5549:
	jmp	.LBB11_5552
.LBB11_5550:
	jmp	.LBB11_5551
.LBB11_5551:
	movq	-2216(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395760(%rax)
	jmp	.LBB11_6016
.LBB11_5552:
	movsd	.LCPI11_375(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5553
	jp	.LBB11_5553
	jmp	.LBB11_5554
.LBB11_5553:
	jmp	.LBB11_5556
.LBB11_5554:
	jmp	.LBB11_5555
.LBB11_5555:
	movq	-2216(%rbp), %rax
	movsd	394904(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395760(%rax)
	jmp	.LBB11_6016
.LBB11_5556:
	movsd	.LCPI11_376(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5557
	jp	.LBB11_5557
	jmp	.LBB11_5558
.LBB11_5557:
	jmp	.LBB11_5560
.LBB11_5558:
	jmp	.LBB11_5559
.LBB11_5559:
	movq	-2216(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395920(%rax)
	jmp	.LBB11_6016
.LBB11_5560:
	movsd	.LCPI11_377(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5561
	jp	.LBB11_5561
	jmp	.LBB11_5562
.LBB11_5561:
	jmp	.LBB11_5564
.LBB11_5562:
	jmp	.LBB11_5563
.LBB11_5563:
	movq	-2216(%rbp), %rax
	movsd	395120(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395920(%rax)
	jmp	.LBB11_6016
.LBB11_5564:
	movsd	.LCPI11_377(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5565
	jp	.LBB11_5565
	jmp	.LBB11_5566
.LBB11_5565:
	jmp	.LBB11_5568
.LBB11_5566:
	jmp	.LBB11_5567
.LBB11_5567:
	movq	-2216(%rbp), %rax
	movsd	394904(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395920(%rax)
	jmp	.LBB11_6016
.LBB11_5568:
	movsd	.LCPI11_378(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5569
	jp	.LBB11_5569
	jmp	.LBB11_5570
.LBB11_5569:
	jmp	.LBB11_5572
.LBB11_5570:
	jmp	.LBB11_5571
.LBB11_5571:
	movq	-2216(%rbp), %rax
	movsd	395680(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 393232(%rax)
	jmp	.LBB11_6016
.LBB11_5572:
	movsd	.LCPI11_379(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5573
	jp	.LBB11_5573
	jmp	.LBB11_5574
.LBB11_5573:
	jmp	.LBB11_5576
.LBB11_5574:
	jmp	.LBB11_5575
.LBB11_5575:
	movq	-2216(%rbp), %rax
	movsd	395680(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 393232(%rax)
	jmp	.LBB11_6016
.LBB11_5576:
	movsd	.LCPI11_380(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5577
	jp	.LBB11_5577
	jmp	.LBB11_5578
.LBB11_5577:
	jmp	.LBB11_5580
.LBB11_5578:
	jmp	.LBB11_5579
.LBB11_5579:
	movq	-2216(%rbp), %rax
	movsd	395680(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 393232(%rax)
	jmp	.LBB11_6016
.LBB11_5580:
	movsd	.LCPI11_381(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5581
	jp	.LBB11_5581
	jmp	.LBB11_5582
.LBB11_5581:
	jmp	.LBB11_5584
.LBB11_5582:
	jmp	.LBB11_5583
.LBB11_5583:
	movq	-2216(%rbp), %rax
	movsd	395680(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 393240(%rax)
	jmp	.LBB11_6016
.LBB11_5584:
	movsd	.LCPI11_382(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5585
	jp	.LBB11_5585
	jmp	.LBB11_5586
.LBB11_5585:
	jmp	.LBB11_5588
.LBB11_5586:
	jmp	.LBB11_5587
.LBB11_5587:
	movq	-2216(%rbp), %rax
	movsd	395680(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 393240(%rax)
	jmp	.LBB11_6016
.LBB11_5588:
	movsd	.LCPI11_383(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5589
	jp	.LBB11_5589
	jmp	.LBB11_5590
.LBB11_5589:
	jmp	.LBB11_5592
.LBB11_5590:
	jmp	.LBB11_5591
.LBB11_5591:
	movq	-2216(%rbp), %rax
	movsd	395680(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 393240(%rax)
	jmp	.LBB11_6016
.LBB11_5592:
	movsd	.LCPI11_384(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5593
	jp	.LBB11_5593
	jmp	.LBB11_5594
.LBB11_5593:
	jmp	.LBB11_5596
.LBB11_5594:
	jmp	.LBB11_5595
.LBB11_5595:
	movq	-2216(%rbp), %rax
	movsd	395680(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 393248(%rax)
	jmp	.LBB11_6016
.LBB11_5596:
	movsd	.LCPI11_385(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5597
	jp	.LBB11_5597
	jmp	.LBB11_5598
.LBB11_5597:
	jmp	.LBB11_5600
.LBB11_5598:
	jmp	.LBB11_5599
.LBB11_5599:
	movq	-2216(%rbp), %rax
	movsd	395680(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 393248(%rax)
	jmp	.LBB11_6016
.LBB11_5600:
	movsd	.LCPI11_386(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5601
	jp	.LBB11_5601
	jmp	.LBB11_5602
.LBB11_5601:
	jmp	.LBB11_5604
.LBB11_5602:
	jmp	.LBB11_5603
.LBB11_5603:
	movq	-2216(%rbp), %rax
	movsd	395680(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 393248(%rax)
	jmp	.LBB11_6016
.LBB11_5604:
	movsd	.LCPI11_387(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5605
	jp	.LBB11_5605
	jmp	.LBB11_5606
.LBB11_5605:
	jmp	.LBB11_5608
.LBB11_5606:
	jmp	.LBB11_5607
.LBB11_5607:
	movq	-2216(%rbp), %rax
	movsd	395680(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 393256(%rax)
	jmp	.LBB11_6016
.LBB11_5608:
	movsd	.LCPI11_388(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5609
	jp	.LBB11_5609
	jmp	.LBB11_5610
.LBB11_5609:
	jmp	.LBB11_5612
.LBB11_5610:
	jmp	.LBB11_5611
.LBB11_5611:
	movq	-2216(%rbp), %rax
	movsd	395680(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 393256(%rax)
	jmp	.LBB11_6016
.LBB11_5612:
	movsd	.LCPI11_389(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5613
	jp	.LBB11_5613
	jmp	.LBB11_5614
.LBB11_5613:
	jmp	.LBB11_5616
.LBB11_5614:
	jmp	.LBB11_5615
.LBB11_5615:
	movq	-2216(%rbp), %rax
	movsd	395680(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 393256(%rax)
	jmp	.LBB11_6016
.LBB11_5616:
	movsd	.LCPI11_390(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5617
	jp	.LBB11_5617
	jmp	.LBB11_5618
.LBB11_5617:
	jmp	.LBB11_5620
.LBB11_5618:
	jmp	.LBB11_5619
.LBB11_5619:
	movq	-2216(%rbp), %rax
	movsd	395680(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394840(%rax)
	jmp	.LBB11_6016
.LBB11_5620:
	movsd	.LCPI11_391(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5621
	jp	.LBB11_5621
	jmp	.LBB11_5622
.LBB11_5621:
	jmp	.LBB11_5624
.LBB11_5622:
	jmp	.LBB11_5623
.LBB11_5623:
	movq	-2216(%rbp), %rax
	movsd	395680(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394864(%rax)
	jmp	.LBB11_6016
.LBB11_5624:
	movsd	.LCPI11_392(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5625
	jp	.LBB11_5625
	jmp	.LBB11_5626
.LBB11_5625:
	jmp	.LBB11_5628
.LBB11_5626:
	jmp	.LBB11_5627
.LBB11_5627:
	movq	-2216(%rbp), %rax
	movsd	395680(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394848(%rax)
	jmp	.LBB11_6016
.LBB11_5628:
	movsd	.LCPI11_393(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5629
	jp	.LBB11_5629
	jmp	.LBB11_5630
.LBB11_5629:
	jmp	.LBB11_5632
.LBB11_5630:
	jmp	.LBB11_5631
.LBB11_5631:
	movq	-2216(%rbp), %rax
	movsd	395680(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394872(%rax)
	jmp	.LBB11_6016
.LBB11_5632:
	movsd	.LCPI11_394(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5633
	jp	.LBB11_5633
	jmp	.LBB11_5634
.LBB11_5633:
	jmp	.LBB11_5636
.LBB11_5634:
	jmp	.LBB11_5635
.LBB11_5635:
	movq	-2216(%rbp), %rax
	movsd	395680(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394856(%rax)
	jmp	.LBB11_6016
.LBB11_5636:
	movsd	.LCPI11_395(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5637
	jp	.LBB11_5637
	jmp	.LBB11_5638
.LBB11_5637:
	jmp	.LBB11_5640
.LBB11_5638:
	jmp	.LBB11_5639
.LBB11_5639:
	movq	-2216(%rbp), %rax
	movsd	395680(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394880(%rax)
	jmp	.LBB11_6016
.LBB11_5640:
	movsd	.LCPI11_396(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5641
	jp	.LBB11_5641
	jmp	.LBB11_5642
.LBB11_5641:
	jmp	.LBB11_5644
.LBB11_5642:
	jmp	.LBB11_5643
.LBB11_5643:
	movq	-2216(%rbp), %rax
	movsd	395680(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394824(%rax)
	jmp	.LBB11_6016
.LBB11_5644:
	movsd	.LCPI11_397(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5645
	jp	.LBB11_5645
	jmp	.LBB11_5646
.LBB11_5645:
	jmp	.LBB11_5648
.LBB11_5646:
	jmp	.LBB11_5647
.LBB11_5647:
	movq	-2216(%rbp), %rax
	movsd	395680(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394832(%rax)
	jmp	.LBB11_6016
.LBB11_5648:
	movsd	.LCPI11_398(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5649
	jp	.LBB11_5649
	jmp	.LBB11_5650
.LBB11_5649:
	jmp	.LBB11_5652
.LBB11_5650:
	jmp	.LBB11_5651
.LBB11_5651:
	movq	-2216(%rbp), %rax
	movsd	394840(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395680(%rax)
	jmp	.LBB11_6016
.LBB11_5652:
	movsd	.LCPI11_399(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5653
	jp	.LBB11_5653
	jmp	.LBB11_5654
.LBB11_5653:
	jmp	.LBB11_5656
.LBB11_5654:
	jmp	.LBB11_5655
.LBB11_5655:
	movq	-2216(%rbp), %rax
	movsd	395680(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394840(%rax)
	jmp	.LBB11_6016
.LBB11_5656:
	movsd	.LCPI11_400(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5657
	jp	.LBB11_5657
	jmp	.LBB11_5658
.LBB11_5657:
	jmp	.LBB11_5660
.LBB11_5658:
	jmp	.LBB11_5659
.LBB11_5659:
	movq	-2216(%rbp), %rax
	movsd	394848(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395680(%rax)
	jmp	.LBB11_6016
.LBB11_5660:
	movsd	.LCPI11_401(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5661
	jp	.LBB11_5661
	jmp	.LBB11_5662
.LBB11_5661:
	jmp	.LBB11_5664
.LBB11_5662:
	jmp	.LBB11_5663
.LBB11_5663:
	movq	-2216(%rbp), %rax
	movsd	395680(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394848(%rax)
	jmp	.LBB11_6016
.LBB11_5664:
	movsd	.LCPI11_402(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5665
	jp	.LBB11_5665
	jmp	.LBB11_5666
.LBB11_5665:
	jmp	.LBB11_5668
.LBB11_5666:
	jmp	.LBB11_5667
.LBB11_5667:
	movq	-2216(%rbp), %rax
	movsd	394856(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395680(%rax)
	jmp	.LBB11_6016
.LBB11_5668:
	movsd	.LCPI11_403(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5669
	jp	.LBB11_5669
	jmp	.LBB11_5670
.LBB11_5669:
	jmp	.LBB11_5672
.LBB11_5670:
	jmp	.LBB11_5671
.LBB11_5671:
	movq	-2216(%rbp), %rax
	movsd	394864(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395680(%rax)
	jmp	.LBB11_6016
.LBB11_5672:
	movsd	.LCPI11_404(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5673
	jp	.LBB11_5673
	jmp	.LBB11_5674
.LBB11_5673:
	jmp	.LBB11_5676
.LBB11_5674:
	jmp	.LBB11_5675
.LBB11_5675:
	movq	-2216(%rbp), %rax
	movsd	394872(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395680(%rax)
	jmp	.LBB11_6016
.LBB11_5676:
	movsd	.LCPI11_405(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5677
	jp	.LBB11_5677
	jmp	.LBB11_5678
.LBB11_5677:
	jmp	.LBB11_5680
.LBB11_5678:
	jmp	.LBB11_5679
.LBB11_5679:
	movq	-2216(%rbp), %rax
	movsd	394880(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395680(%rax)
	jmp	.LBB11_6016
.LBB11_5680:
	movsd	.LCPI11_406(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5681
	jp	.LBB11_5681
	jmp	.LBB11_5682
.LBB11_5681:
	jmp	.LBB11_5684
.LBB11_5682:
	jmp	.LBB11_5683
.LBB11_5683:
	movq	-2216(%rbp), %rax
	movsd	395680(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394880(%rax)
	jmp	.LBB11_6016
.LBB11_5684:
	movsd	.LCPI11_407(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5685
	jp	.LBB11_5685
	jmp	.LBB11_5686
.LBB11_5685:
	jmp	.LBB11_5688
.LBB11_5686:
	jmp	.LBB11_5687
.LBB11_5687:
	movq	-2216(%rbp), %rax
	movsd	394872(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395680(%rax)
	jmp	.LBB11_6016
.LBB11_5688:
	movsd	.LCPI11_408(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5689
	jp	.LBB11_5689
	jmp	.LBB11_5690
.LBB11_5689:
	jmp	.LBB11_5692
.LBB11_5690:
	jmp	.LBB11_5691
.LBB11_5691:
	movq	-2216(%rbp), %rax
	movsd	394880(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395680(%rax)
	jmp	.LBB11_6016
.LBB11_5692:
	movsd	.LCPI11_409(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5693
	jp	.LBB11_5693
	jmp	.LBB11_5694
.LBB11_5693:
	jmp	.LBB11_5696
.LBB11_5694:
	jmp	.LBB11_5695
.LBB11_5695:
	movq	-2216(%rbp), %rax
	movsd	394880(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395680(%rax)
	jmp	.LBB11_6016
.LBB11_5696:
	movsd	.LCPI11_410(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5697
	jp	.LBB11_5697
	jmp	.LBB11_5698
.LBB11_5697:
	jmp	.LBB11_5700
.LBB11_5698:
	jmp	.LBB11_5699
.LBB11_5699:
	movq	-2216(%rbp), %rax
	movsd	395760(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	395840(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395680(%rax)
	jmp	.LBB11_6016
.LBB11_5700:
	movsd	.LCPI11_411(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5701
	jp	.LBB11_5701
	jmp	.LBB11_5702
.LBB11_5701:
	jmp	.LBB11_5704
.LBB11_5702:
	jmp	.LBB11_5703
.LBB11_5703:
	movq	-2216(%rbp), %rax
	movsd	395760(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	subsd	395840(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395680(%rax)
	jmp	.LBB11_6016
.LBB11_5704:
	movsd	.LCPI11_412(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5705
	jp	.LBB11_5705
	jmp	.LBB11_5706
.LBB11_5705:
	jmp	.LBB11_5708
.LBB11_5706:
	jmp	.LBB11_5707
.LBB11_5707:
	movq	-2216(%rbp), %rax
	movsd	395760(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	mulsd	395840(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395680(%rax)
	jmp	.LBB11_6016
.LBB11_5708:
	movsd	.LCPI11_413(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5709
	jp	.LBB11_5709
	jmp	.LBB11_5710
.LBB11_5709:
	jmp	.LBB11_5712
.LBB11_5710:
	jmp	.LBB11_5711
.LBB11_5711:
	movq	-2216(%rbp), %rax
	movsd	395760(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	divsd	395840(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395680(%rax)
	jmp	.LBB11_6016
.LBB11_5712:
	movsd	.LCPI11_414(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5713
	jp	.LBB11_5713
	jmp	.LBB11_5714
.LBB11_5713:
	jmp	.LBB11_5716
.LBB11_5714:
	jmp	.LBB11_5715
.LBB11_5715:
	movq	-2216(%rbp), %rax
	movsd	395760(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-2216(%rbp), %rcx
	movsd	395840(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -20608(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-20608(%rbp), %rcx      # 8-byte Reload
	movq	%rax, -20616(%rbp)      # 8-byte Spill
	movq	%rcx, %rax
	cqto
	movq	-20616(%rbp), %rsi      # 8-byte Reload
	idivq	%rsi
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395680(%rax)
	jmp	.LBB11_6016
.LBB11_5716:
	movsd	.LCPI11_415(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5717
	jp	.LBB11_5717
	jmp	.LBB11_5718
.LBB11_5717:
	jmp	.LBB11_5720
.LBB11_5718:
	jmp	.LBB11_5719
.LBB11_5719:
	movq	-2216(%rbp), %rax
	movsd	395760(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	395840(%rax), %xmm1     # xmm1 = mem[0],zero
	callq	pow@PLT
	movsd	%xmm0, -15720(%rbp)
	movsd	-15720(%rbp), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395680(%rax)
	jmp	.LBB11_6016
.LBB11_5720:
	movsd	.LCPI11_416(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5721
	jp	.LBB11_5721
	jmp	.LBB11_5722
.LBB11_5721:
	jmp	.LBB11_5724
.LBB11_5722:
	jmp	.LBB11_5723
.LBB11_5723:
	movq	-2216(%rbp), %rax
	movsd	395760(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-2216(%rbp), %rcx
	movsd	395840(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -20624(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-20624(%rbp), %rcx      # 8-byte Reload
	movq	%rax, -20632(%rbp)      # 8-byte Spill
	movq	%rcx, %rax
	cqto
	movq	-20632(%rbp), %rsi      # 8-byte Reload
	idivq	%rsi
	cvtsi2sd	%rdx, %xmm0
	movq	-2216(%rbp), %rdx
	movsd	%xmm0, 395680(%rdx)
	jmp	.LBB11_6016
.LBB11_5724:
	movsd	.LCPI11_417(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5725
	jp	.LBB11_5725
	jmp	.LBB11_5726
.LBB11_5725:
	jmp	.LBB11_5728
.LBB11_5726:
	jmp	.LBB11_5727
.LBB11_5727:
	movq	-2216(%rbp), %rax
	movsd	395680(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%xmm0, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	movq	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395680(%rax)
	jmp	.LBB11_6016
.LBB11_5728:
	movsd	.LCPI11_418(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5729
	jp	.LBB11_5729
	jmp	.LBB11_5730
.LBB11_5729:
	jmp	.LBB11_5732
.LBB11_5730:
	jmp	.LBB11_5731
.LBB11_5731:
	movq	-2216(%rbp), %rax
	movsd	395760(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-2216(%rbp), %rcx
	movsd	395840(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -20640(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	andq	$63, %rax
	movq	%rax, %rcx
                                        # kill: def $cl killed $rcx
	movq	-20640(%rbp), %rax      # 8-byte Reload
	shlq	%cl, %rax
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395680(%rax)
	jmp	.LBB11_6016
.LBB11_5732:
	movsd	.LCPI11_419(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5733
	jp	.LBB11_5733
	jmp	.LBB11_5734
.LBB11_5733:
	jmp	.LBB11_5736
.LBB11_5734:
	jmp	.LBB11_5735
.LBB11_5735:
	movq	-2216(%rbp), %rax
	movsd	395760(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-2216(%rbp), %rcx
	movsd	395840(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -20648(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	andq	$63, %rax
	movq	%rax, %rcx
                                        # kill: def $cl killed $rcx
	movq	-20648(%rbp), %rax      # 8-byte Reload
	sarq	%cl, %rax
	cvtsi2sd	%rax, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395680(%rax)
	jmp	.LBB11_6016
.LBB11_5736:
	movsd	.LCPI11_420(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5737
	jp	.LBB11_5737
	jmp	.LBB11_5738
.LBB11_5737:
	jmp	.LBB11_5740
.LBB11_5738:
	jmp	.LBB11_5739
.LBB11_5739:
	xorl	%eax, %eax
	movq	-2216(%rbp), %rcx
	movsd	395760(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rcx
	ucomisd	395840(%rcx), %xmm0
	sete	%dl
	setnp	%sil
	andb	%sil, %dl
	andb	$1, %dl
	movzbl	%dl, %edi
	subl	%edi, %eax
	movslq	%eax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rcx
	movsd	%xmm0, 395680(%rcx)
	jmp	.LBB11_6016
.LBB11_5740:
	movsd	.LCPI11_421(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5741
	jp	.LBB11_5741
	jmp	.LBB11_5742
.LBB11_5741:
	jmp	.LBB11_5744
.LBB11_5742:
	jmp	.LBB11_5743
.LBB11_5743:
	xorl	%eax, %eax
	movq	-2216(%rbp), %rcx
	movsd	395760(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rcx
	ucomisd	395840(%rcx), %xmm0
	setne	%dl
	setp	%sil
	orb	%sil, %dl
	andb	$1, %dl
	movzbl	%dl, %edi
	subl	%edi, %eax
	movslq	%eax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rcx
	movsd	%xmm0, 395680(%rcx)
	jmp	.LBB11_6016
.LBB11_5744:
	movsd	.LCPI11_422(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5745
	jp	.LBB11_5745
	jmp	.LBB11_5746
.LBB11_5745:
	jmp	.LBB11_5748
.LBB11_5746:
	jmp	.LBB11_5747
.LBB11_5747:
	xorl	%eax, %eax
	movq	-2216(%rbp), %rcx
	movsd	395760(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rcx
	movsd	395840(%rcx), %xmm1     # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	seta	%dl
	andb	$1, %dl
	movzbl	%dl, %esi
	subl	%esi, %eax
	movslq	%eax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rcx
	movsd	%xmm0, 395680(%rcx)
	jmp	.LBB11_6016
.LBB11_5748:
	movsd	.LCPI11_423(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5749
	jp	.LBB11_5749
	jmp	.LBB11_5750
.LBB11_5749:
	jmp	.LBB11_5752
.LBB11_5750:
	jmp	.LBB11_5751
.LBB11_5751:
	xorl	%eax, %eax
	movq	-2216(%rbp), %rcx
	movsd	395760(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rcx
	movsd	395840(%rcx), %xmm1     # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	setae	%dl
	andb	$1, %dl
	movzbl	%dl, %esi
	subl	%esi, %eax
	movslq	%eax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rcx
	movsd	%xmm0, 395680(%rcx)
	jmp	.LBB11_6016
.LBB11_5752:
	movsd	.LCPI11_424(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5753
	jp	.LBB11_5753
	jmp	.LBB11_5754
.LBB11_5753:
	jmp	.LBB11_5756
.LBB11_5754:
	jmp	.LBB11_5755
.LBB11_5755:
	xorl	%eax, %eax
	movq	-2216(%rbp), %rcx
	movsd	395760(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rcx
	ucomisd	395840(%rcx), %xmm0
	setae	%dl
	andb	$1, %dl
	movzbl	%dl, %esi
	subl	%esi, %eax
	movslq	%eax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rcx
	movsd	%xmm0, 395680(%rcx)
	jmp	.LBB11_6016
.LBB11_5756:
	movsd	.LCPI11_425(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5757
	jp	.LBB11_5757
	jmp	.LBB11_5758
.LBB11_5757:
	jmp	.LBB11_5760
.LBB11_5758:
	jmp	.LBB11_5759
.LBB11_5759:
	xorl	%eax, %eax
	movq	-2216(%rbp), %rcx
	movsd	395760(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rcx
	ucomisd	395840(%rcx), %xmm0
	seta	%dl
	andb	$1, %dl
	movzbl	%dl, %esi
	subl	%esi, %eax
	movslq	%eax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rcx
	movsd	%xmm0, 395680(%rcx)
	jmp	.LBB11_6016
.LBB11_5760:
	movsd	.LCPI11_426(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5761
	jp	.LBB11_5761
	jmp	.LBB11_5762
.LBB11_5761:
	jmp	.LBB11_5764
.LBB11_5762:
	jmp	.LBB11_5763
.LBB11_5763:
	movq	-2216(%rbp), %rax
	movsd	395760(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-2216(%rbp), %rcx
	movsd	395840(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -20656(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-20656(%rbp), %rcx      # 8-byte Reload
	andq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395680(%rax)
	jmp	.LBB11_6016
.LBB11_5764:
	movsd	.LCPI11_427(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5765
	jp	.LBB11_5765
	jmp	.LBB11_5766
.LBB11_5765:
	jmp	.LBB11_5768
.LBB11_5766:
	jmp	.LBB11_5767
.LBB11_5767:
	movq	-2216(%rbp), %rax
	movsd	394960(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-2216(%rbp), %rcx
	movsd	395040(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -20664(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-20664(%rbp), %rcx      # 8-byte Reload
	xorq	%rax, %rcx
	xorq	$-1, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395680(%rax)
	jmp	.LBB11_6016
.LBB11_5768:
	movsd	.LCPI11_428(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5769
	jp	.LBB11_5769
	jmp	.LBB11_5770
.LBB11_5769:
	jmp	.LBB11_5772
.LBB11_5770:
	jmp	.LBB11_5771
.LBB11_5771:
	movq	-2216(%rbp), %rax
	movsd	394960(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	xorq	$-1, %rax
	movq	-2216(%rbp), %rcx
	movsd	395040(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -20672(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-20672(%rbp), %rcx      # 8-byte Reload
	orq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395680(%rax)
	jmp	.LBB11_6016
.LBB11_5772:
	movsd	.LCPI11_429(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5773
	jp	.LBB11_5773
	jmp	.LBB11_5774
.LBB11_5773:
	jmp	.LBB11_5776
.LBB11_5774:
	jmp	.LBB11_5775
.LBB11_5775:
	movq	-2216(%rbp), %rax
	movsd	395760(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-2216(%rbp), %rcx
	movsd	395840(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -20680(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-20680(%rbp), %rcx      # 8-byte Reload
	orq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395680(%rax)
	jmp	.LBB11_6016
.LBB11_5776:
	movsd	.LCPI11_430(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5777
	jp	.LBB11_5777
	jmp	.LBB11_5778
.LBB11_5777:
	jmp	.LBB11_5780
.LBB11_5778:
	jmp	.LBB11_5779
.LBB11_5779:
	movq	-2216(%rbp), %rax
	movsd	395760(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-2216(%rbp), %rcx
	movsd	395840(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -20688(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-20688(%rbp), %rcx      # 8-byte Reload
	xorq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395680(%rax)
	jmp	.LBB11_6016
.LBB11_5780:
	movsd	.LCPI11_431(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5781
	jp	.LBB11_5781
	jmp	.LBB11_5782
.LBB11_5781:
	jmp	.LBB11_5784
.LBB11_5782:
	jmp	.LBB11_5783
.LBB11_5783:
	movq	-2216(%rbp), %rax
	movsd	395680(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395760(%rax)
	jmp	.LBB11_6016
.LBB11_5784:
	movsd	.LCPI11_432(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5785
	jp	.LBB11_5785
	jmp	.LBB11_5786
.LBB11_5785:
	jmp	.LBB11_5788
.LBB11_5786:
	jmp	.LBB11_5787
.LBB11_5787:
	movq	-2216(%rbp), %rax
	movsd	395680(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395840(%rax)
	jmp	.LBB11_6016
.LBB11_5788:
	movsd	.LCPI11_433(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5789
	jp	.LBB11_5789
	jmp	.LBB11_5790
.LBB11_5789:
	jmp	.LBB11_5792
.LBB11_5790:
	jmp	.LBB11_5791
.LBB11_5791:
	movsd	.LCPI11_7(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	395680(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395680(%rax)
	jmp	.LBB11_6016
.LBB11_5792:
	movsd	.LCPI11_434(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5793
	jp	.LBB11_5793
	jmp	.LBB11_5794
.LBB11_5793:
	jmp	.LBB11_5796
.LBB11_5794:
	jmp	.LBB11_5795
.LBB11_5795:
	movsd	.LCPI11_7(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	395760(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395760(%rax)
	jmp	.LBB11_6016
.LBB11_5796:
	movsd	.LCPI11_435(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5797
	jp	.LBB11_5797
	jmp	.LBB11_5798
.LBB11_5797:
	jmp	.LBB11_5800
.LBB11_5798:
	jmp	.LBB11_5799
.LBB11_5799:
	movsd	.LCPI11_7(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	395840(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395840(%rax)
	jmp	.LBB11_6016
.LBB11_5800:
	movsd	.LCPI11_436(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5801
	jp	.LBB11_5801
	jmp	.LBB11_5802
.LBB11_5801:
	jmp	.LBB11_5804
.LBB11_5802:
	jmp	.LBB11_5803
.LBB11_5803:
	movsd	.LCPI11_437(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	395680(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395680(%rax)
	jmp	.LBB11_6016
.LBB11_5804:
	movsd	.LCPI11_438(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5805
	jp	.LBB11_5805
	jmp	.LBB11_5806
.LBB11_5805:
	jmp	.LBB11_5808
.LBB11_5806:
	jmp	.LBB11_5807
.LBB11_5807:
	movsd	.LCPI11_437(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	395760(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395760(%rax)
	jmp	.LBB11_6016
.LBB11_5808:
	movsd	.LCPI11_439(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5809
	jp	.LBB11_5809
	jmp	.LBB11_5810
.LBB11_5809:
	jmp	.LBB11_5812
.LBB11_5810:
	jmp	.LBB11_5811
.LBB11_5811:
	movsd	.LCPI11_437(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	395840(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395840(%rax)
	jmp	.LBB11_6016
.LBB11_5812:
	movsd	.LCPI11_440(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5813
	jp	.LBB11_5813
	jmp	.LBB11_5814
.LBB11_5813:
	jmp	.LBB11_5819
.LBB11_5814:
	jmp	.LBB11_5815
.LBB11_5815:
	movq	-2216(%rbp), %rax
	movsd	395760(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	ucomisd	395840(%rax), %xmm0
	jne	.LBB11_5816
	jp	.LBB11_5816
	jmp	.LBB11_5817
.LBB11_5816:
	jmp	.LBB11_5818
.LBB11_5817:
	movsd	-2232(%rbp), %xmm0      # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 396000(%rax)
.LBB11_5818:
	jmp	.LBB11_6016
.LBB11_5819:
	movsd	.LCPI11_440(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5820
	jp	.LBB11_5820
	jmp	.LBB11_5821
.LBB11_5820:
	jmp	.LBB11_5826
.LBB11_5821:
	jmp	.LBB11_5822
.LBB11_5822:
	movq	-2216(%rbp), %rax
	movsd	395760(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	ucomisd	395840(%rax), %xmm0
	jne	.LBB11_5824
	jp	.LBB11_5824
# %bb.5823:
	jmp	.LBB11_5825
.LBB11_5824:
	movsd	-2232(%rbp), %xmm0      # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 396000(%rax)
.LBB11_5825:
	jmp	.LBB11_6016
.LBB11_5826:
	movsd	.LCPI11_441(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5827
	jp	.LBB11_5827
	jmp	.LBB11_5828
.LBB11_5827:
	jmp	.LBB11_5833
.LBB11_5828:
	jmp	.LBB11_5829
.LBB11_5829:
	movq	-2216(%rbp), %rax
	movsd	395760(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	395840(%rax), %xmm1     # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jb	.LBB11_5831
# %bb.5830:
	jmp	.LBB11_5832
.LBB11_5831:
	movsd	-2232(%rbp), %xmm0      # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 396000(%rax)
.LBB11_5832:
	jmp	.LBB11_6016
.LBB11_5833:
	movsd	.LCPI11_442(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5834
	jp	.LBB11_5834
	jmp	.LBB11_5835
.LBB11_5834:
	jmp	.LBB11_5840
.LBB11_5835:
	jmp	.LBB11_5836
.LBB11_5836:
	movq	-2216(%rbp), %rax
	movsd	395760(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	395840(%rax), %xmm1     # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jbe	.LBB11_5838
# %bb.5837:
	jmp	.LBB11_5839
.LBB11_5838:
	movsd	-2232(%rbp), %xmm0      # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 396000(%rax)
.LBB11_5839:
	jmp	.LBB11_6016
.LBB11_5840:
	movsd	.LCPI11_443(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5841
	jp	.LBB11_5841
	jmp	.LBB11_5842
.LBB11_5841:
	jmp	.LBB11_5847
.LBB11_5842:
	jmp	.LBB11_5843
.LBB11_5843:
	movq	-2216(%rbp), %rax
	movsd	395760(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	ucomisd	395840(%rax), %xmm0
	jbe	.LBB11_5845
# %bb.5844:
	jmp	.LBB11_5846
.LBB11_5845:
	movsd	-2232(%rbp), %xmm0      # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 396000(%rax)
.LBB11_5846:
	jmp	.LBB11_6016
.LBB11_5847:
	movsd	.LCPI11_444(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5848
	jp	.LBB11_5848
	jmp	.LBB11_5849
.LBB11_5848:
	jmp	.LBB11_5854
.LBB11_5849:
	jmp	.LBB11_5850
.LBB11_5850:
	movq	-2216(%rbp), %rax
	movsd	395760(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	395840(%rax), %xmm1     # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jb	.LBB11_5852
# %bb.5851:
	jmp	.LBB11_5853
.LBB11_5852:
	movsd	-2232(%rbp), %xmm0      # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 396000(%rax)
.LBB11_5853:
	jmp	.LBB11_6016
.LBB11_5854:
	movsd	.LCPI11_445(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5855
	jp	.LBB11_5855
	jmp	.LBB11_5856
.LBB11_5855:
	jmp	.LBB11_5858
.LBB11_5856:
	jmp	.LBB11_5857
.LBB11_5857:
	movsd	-2232(%rbp), %xmm0      # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 396000(%rax)
	jmp	.LBB11_6016
.LBB11_5858:
	movsd	.LCPI11_446(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5859
	jp	.LBB11_5859
	jmp	.LBB11_5860
.LBB11_5859:
	jmp	.LBB11_5862
.LBB11_5860:
	jmp	.LBB11_5861
.LBB11_5861:
	movq	-2216(%rbp), %rdi
	movsd	-2232(%rbp), %xmm0      # xmm0 = mem[0],zero
	callq	_ZN8MEMORY_T5PEEKBEd
	movsd	%xmm0, -15728(%rbp)
	movsd	-15728(%rbp), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395680(%rax)
	jmp	.LBB11_6016
.LBB11_5862:
	movsd	.LCPI11_447(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5863
	jp	.LBB11_5863
	jmp	.LBB11_5864
.LBB11_5863:
	jmp	.LBB11_5866
.LBB11_5864:
	jmp	.LBB11_5865
.LBB11_5865:
	movq	-2216(%rbp), %rdi
	movsd	-2232(%rbp), %xmm0      # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	395680(%rax), %xmm1     # xmm1 = mem[0],zero
	callq	_ZN8MEMORY_T5POKEBEdd
	jmp	.LBB11_6016
.LBB11_5866:
	movsd	.LCPI11_448(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5867
	jp	.LBB11_5867
	jmp	.LBB11_5868
.LBB11_5867:
	jmp	.LBB11_5880
.LBB11_5868:
	jmp	.LBB11_5869
.LBB11_5869:
	movsd	.LCPI11_24(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_23(%rip), %xmm1 # xmm1 = mem[0],zero
	movsd	.LCPI11_22(%rip), %xmm2 # xmm2 = mem[0],zero
	movsd	.LCPI11_21(%rip), %xmm3 # xmm3 = mem[0],zero
	movsd	.LCPI11_20(%rip), %xmm4 # xmm4 = mem[0],zero
	movsd	.LCPI11_19(%rip), %xmm5 # xmm5 = mem[0],zero
	movsd	.LCPI11_17(%rip), %xmm6 # xmm6 = mem[0],zero
	movsd	.LCPI11_16(%rip), %xmm7 # xmm7 = mem[0],zero
	movsd	.LCPI11_15(%rip), %xmm8 # xmm8 = mem[0],zero
	movsd	.LCPI11_13(%rip), %xmm9 # xmm9 = mem[0],zero
	movsd	.LCPI11_12(%rip), %xmm10 # xmm10 = mem[0],zero
	movsd	.LCPI11_11(%rip), %xmm11 # xmm11 = mem[0],zero
	movsd	.LCPI11_10(%rip), %xmm12 # xmm12 = mem[0],zero
	movsd	.LCPI11_9(%rip), %xmm13 # xmm13 = mem[0],zero
	movsd	.LCPI11_7(%rip), %xmm14 # xmm14 = mem[0],zero
	xorl	%eax, %eax
	leaq	-2200(%rbp), %rcx
	movq	%rcx, %rdi
	movl	%eax, %esi
	movl	$8, %ecx
	movq	%rcx, %rdx
	movsd	%xmm0, -20696(%rbp)     # 8-byte Spill
	movsd	%xmm1, -20704(%rbp)     # 8-byte Spill
	movsd	%xmm2, -20712(%rbp)     # 8-byte Spill
	movsd	%xmm3, -20720(%rbp)     # 8-byte Spill
	movsd	%xmm4, -20728(%rbp)     # 8-byte Spill
	movsd	%xmm5, -20736(%rbp)     # 8-byte Spill
	movsd	%xmm6, -20744(%rbp)     # 8-byte Spill
	movsd	%xmm7, -20752(%rbp)     # 8-byte Spill
	movsd	%xmm8, -20760(%rbp)     # 8-byte Spill
	movsd	%xmm9, -20768(%rbp)     # 8-byte Spill
	movsd	%xmm10, -20776(%rbp)    # 8-byte Spill
	movsd	%xmm11, -20784(%rbp)    # 8-byte Spill
	movsd	%xmm12, -20792(%rbp)    # 8-byte Spill
	movsd	%xmm13, -20800(%rbp)    # 8-byte Spill
	movsd	%xmm14, -20808(%rbp)    # 8-byte Spill
	movl	%eax, -20812(%rbp)      # 4-byte Spill
	movq	%rcx, -20824(%rbp)      # 8-byte Spill
	callq	memset@PLT
	leaq	-2208(%rbp), %rcx
	movq	%rcx, %rdi
	movl	-20812(%rbp), %esi      # 4-byte Reload
	movq	-20824(%rbp), %rdx      # 8-byte Reload
	callq	memset@PLT
	movq	-2216(%rbp), %rcx
	movsd	396000(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rcx
	movsd	%xmm0, 397040(%rcx)
	movq	-2216(%rbp), %rcx
	movq	-2216(%rbp), %rdx
	movsd	-20808(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	396000(%rdx), %xmm0
	movq	%rcx, -20832(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movq	-20832(%rbp), %rdx      # 8-byte Reload
	movsd	(%rdx,%rcx), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$32, %rcx
	movq	-2216(%rbp), %rdx
	movq	-2216(%rbp), %rdi
	movsd	-20800(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	396000(%rdi), %xmm0
	movq	%rcx, -20840(%rbp)      # 8-byte Spill
	movq	%rdx, -20848(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movq	-20848(%rbp), %rdx      # 8-byte Reload
	movsd	(%rdx,%rcx), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$24, %rcx
	movq	-20840(%rbp), %rdx      # 8-byte Reload
	addq	%rcx, %rdx
	movq	-2216(%rbp), %rcx
	movq	-2216(%rbp), %rdi
	movsd	-20792(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	396000(%rdi), %xmm0
	movq	%rdx, -20856(%rbp)      # 8-byte Spill
	movq	%rcx, -20864(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movq	-20864(%rbp), %rdx      # 8-byte Reload
	movsd	(%rdx,%rcx), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$16, %rcx
	movq	-20856(%rbp), %rdx      # 8-byte Reload
	addq	%rcx, %rdx
	movq	-2216(%rbp), %rcx
	movq	-2216(%rbp), %rdi
	movsd	-20784(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	396000(%rdi), %xmm0
	movq	%rdx, -20872(%rbp)      # 8-byte Spill
	movq	%rcx, -20880(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movq	-20880(%rbp), %rdx      # 8-byte Reload
	movsd	(%rdx,%rcx), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$8, %rcx
	movq	-20872(%rbp), %rdx      # 8-byte Reload
	addq	%rcx, %rdx
	cvtsi2sd	%rdx, %xmm0
	movq	-2216(%rbp), %rcx
	movq	-2216(%rbp), %rdx
	movsd	-20776(%rbp), %xmm1     # 8-byte Reload
                                        # xmm1 = mem[0],zero
	addsd	396000(%rdx), %xmm1
	movsd	%xmm0, -20888(%rbp)     # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rcx, -20896(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movsd	-20888(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movq	-20896(%rbp), %rdx      # 8-byte Reload
	addsd	(%rdx,%rcx), %xmm0
	movq	-2216(%rbp), %rcx
	movsd	%xmm0, 395680(%rcx)
	movq	-2216(%rbp), %rcx
	movq	-2216(%rbp), %rdi
	movsd	-20768(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	396000(%rdi), %xmm0
	movq	%rcx, -20904(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movq	-20904(%rbp), %rdx      # 8-byte Reload
	movsd	(%rdx,%rcx), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$32, %rcx
	movq	-2216(%rbp), %rdx
	movq	-2216(%rbp), %rdi
	movsd	-20760(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	396000(%rdi), %xmm0
	movq	%rcx, -20912(%rbp)      # 8-byte Spill
	movq	%rdx, -20920(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movq	-20920(%rbp), %rdx      # 8-byte Reload
	movsd	(%rdx,%rcx), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$24, %rcx
	movq	-20912(%rbp), %rdx      # 8-byte Reload
	addq	%rcx, %rdx
	movq	-2216(%rbp), %rcx
	movq	-2216(%rbp), %rdi
	movsd	-20752(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	396000(%rdi), %xmm0
	movq	%rdx, -20928(%rbp)      # 8-byte Spill
	movq	%rcx, -20936(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movq	-20936(%rbp), %rdx      # 8-byte Reload
	movsd	(%rdx,%rcx), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$16, %rcx
	movq	-20928(%rbp), %rdx      # 8-byte Reload
	addq	%rcx, %rdx
	movq	-2216(%rbp), %rcx
	movq	-2216(%rbp), %rdi
	movsd	-20744(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	396000(%rdi), %xmm0
	movq	%rdx, -20944(%rbp)      # 8-byte Spill
	movq	%rcx, -20952(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movq	-20952(%rbp), %rdx      # 8-byte Reload
	movsd	(%rdx,%rcx), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$8, %rcx
	movq	-20944(%rbp), %rdx      # 8-byte Reload
	addq	%rcx, %rdx
	cvtsi2sd	%rdx, %xmm0
	movq	-2216(%rbp), %rcx
	movq	-2216(%rbp), %rdx
	movsd	-20736(%rbp), %xmm1     # 8-byte Reload
                                        # xmm1 = mem[0],zero
	addsd	396000(%rdx), %xmm1
	movsd	%xmm0, -20960(%rbp)     # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rcx, -20968(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movsd	-20960(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movq	-20968(%rbp), %rdx      # 8-byte Reload
	addsd	(%rdx,%rcx), %xmm0
	movq	-2216(%rbp), %rcx
	movsd	%xmm0, 395760(%rcx)
	movq	-2216(%rbp), %rcx
	movq	-2216(%rbp), %rdi
	movsd	-20728(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	396000(%rdi), %xmm0
	movq	%rcx, -20976(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movq	-20976(%rbp), %rdx      # 8-byte Reload
	movsd	(%rdx,%rcx), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$32, %rcx
	movq	-2216(%rbp), %rdx
	movq	-2216(%rbp), %rdi
	movsd	-20720(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	396000(%rdi), %xmm0
	movq	%rcx, -20984(%rbp)      # 8-byte Spill
	movq	%rdx, -20992(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movq	-20992(%rbp), %rdx      # 8-byte Reload
	movsd	(%rdx,%rcx), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$24, %rcx
	movq	-20984(%rbp), %rdx      # 8-byte Reload
	addq	%rcx, %rdx
	movq	-2216(%rbp), %rcx
	movq	-2216(%rbp), %rdi
	movsd	-20712(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	396000(%rdi), %xmm0
	movq	%rdx, -21000(%rbp)      # 8-byte Spill
	movq	%rcx, -21008(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movq	-21008(%rbp), %rdx      # 8-byte Reload
	movsd	(%rdx,%rcx), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$16, %rcx
	movq	-21000(%rbp), %rdx      # 8-byte Reload
	addq	%rcx, %rdx
	movq	-2216(%rbp), %rcx
	movq	-2216(%rbp), %rdi
	movsd	-20704(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	396000(%rdi), %xmm0
	movq	%rdx, -21016(%rbp)      # 8-byte Spill
	movq	%rcx, -21024(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movq	-21024(%rbp), %rdx      # 8-byte Reload
	movsd	(%rdx,%rcx), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$8, %rcx
	movq	-21016(%rbp), %rdx      # 8-byte Reload
	addq	%rcx, %rdx
	cvtsi2sd	%rdx, %xmm0
	movq	-2216(%rbp), %rcx
	movq	-2216(%rbp), %rdx
	movsd	-20696(%rbp), %xmm1     # 8-byte Reload
                                        # xmm1 = mem[0],zero
	addsd	395344(%rdx), %xmm1
	movsd	%xmm0, -21032(%rbp)     # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rcx, -21040(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movsd	-21032(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movq	-21040(%rbp), %rdx      # 8-byte Reload
	addsd	(%rdx,%rcx), %xmm0
	movq	-2216(%rbp), %rcx
	movsd	%xmm0, 396968(%rcx)
.LBB11_5870:                            # =>This Loop Header: Depth=1
                                        #     Child Loop BB11_5875 Depth 2
	movaps	.LCPI11_297(%rip), %xmm0 # xmm0 = [1127219200,1160773632,0,0]
	movq	-2200(%rbp), %xmm1      # xmm1 = mem[0],zero
	punpckldq	%xmm0, %xmm1    # xmm1 = xmm1[0],xmm0[0],xmm1[1],xmm0[1]
	movapd	.LCPI11_298(%rip), %xmm0 # xmm0 = [4.503599627370496E+15,1.9342813113834067E+25]
	subpd	%xmm0, %xmm1
	movaps	%xmm1, %xmm0
	unpckhpd	%xmm1, %xmm1    # xmm1 = xmm1[1,1]
	addsd	%xmm0, %xmm1
	movq	-2216(%rbp), %rax
	ucomisd	396968(%rax), %xmm1
	jne	.LBB11_5872
	jp	.LBB11_5872
# %bb.5871:
	jmp	.LBB11_5879
.LBB11_5872:                            #   in Loop: Header=BB11_5870 Depth=1
	movq	-2216(%rbp), %rax
	movsd	395680(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rdx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rdx, %rax
	movq	%rax, PC$(%rip)
	movq	-2216(%rbp), %rax
	movsd	395760(%rax), %xmm0     # xmm0 = mem[0],zero
	movsd	%xmm1, -21048(%rbp)     # 8-byte Spill
	movq	%rcx, -21056(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	movaps	%xmm0, %xmm1
	movsd	-21048(%rbp), %xmm2     # 8-byte Reload
                                        # xmm2 = mem[0],zero
	subsd	%xmm2, %xmm1
	cvttsd2si	%xmm1, %rax
	movq	-21056(%rbp), %rcx      # 8-byte Reload
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rdx
	ucomisd	%xmm2, %xmm0
	cmovbq	%rdx, %rax
	movq	%rax, -15736(%rbp)
	jmp	.LBB11_5875
.LBB11_5873:                            #   in Loop: Header=BB11_5875 Depth=2
	movq	-2216(%rbp), %rdi
	movq	-2216(%rbp), %rax
	movq	PC$(%rip), %rcx
	shlq	$3, %rcx
	movsd	(%rax,%rcx), %xmm0      # xmm0 = mem[0],zero
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
# %bb.5874:                             #   in Loop: Header=BB11_5875 Depth=2
	movq	PC$(%rip), %rax
	addq	$1, %rax
	movq	%rax, PC$(%rip)
.LBB11_5875:                            #   Parent Loop BB11_5870 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	PC$(%rip), %rax
	cmpq	-15736(%rbp), %rax
	ja	.LBB11_5877
# %bb.5876:                             #   in Loop: Header=BB11_5875 Depth=2
	jmp	.LBB11_5873
.LBB11_5877:                            #   in Loop: Header=BB11_5870 Depth=1
	jmp	.LBB11_5878
.LBB11_5878:                            #   in Loop: Header=BB11_5870 Depth=1
	movq	-2200(%rbp), %rax
	addq	$1, %rax
	movq	-2216(%rbp), %rcx
	movsd	396968(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -21064(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI11_261(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
	movq	-21064(%rbp), %rcx      # 8-byte Reload
	movq	%rax, -21072(%rbp)      # 8-byte Spill
	movq	%rcx, %rax
	xorl	%edx, %edx
                                        # kill: def $rdx killed $edx
	movq	-21072(%rbp), %rsi      # 8-byte Reload
	divq	%rsi
	movq	%rdx, -2200(%rbp)
	jmp	.LBB11_5870
.LBB11_5879:
	jmp	.LBB11_6016
.LBB11_5880:
	movsd	.LCPI11_449(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5881
	jp	.LBB11_5881
	jmp	.LBB11_5882
.LBB11_5881:
	jmp	.LBB11_5884
.LBB11_5882:
	jmp	.LBB11_5883
.LBB11_5883:
	movq	-2216(%rbp), %rax
	movsd	396976(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$56, %rax
	movq	-2216(%rbp), %rcx
	movsd	396984(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -21080(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$48, %rax
	movq	-21080(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	396992(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -21088(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$40, %rax
	movq	-21088(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	397000(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -21096(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-21096(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	397008(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -21104(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-21104(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	397016(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -21112(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-21112(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	397024(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -21120(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-21120(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	397032(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 396968(%rax)
	jmp	.LBB11_6016
.LBB11_5884:
	movsd	.LCPI11_450(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5885
	jp	.LBB11_5885
	jmp	.LBB11_5886
.LBB11_5885:
	jmp	.LBB11_5888
.LBB11_5886:
	jmp	.LBB11_5887
.LBB11_5887:
	movq	-2216(%rbp), %rax
	movsd	397048(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$56, %rax
	movq	-2216(%rbp), %rcx
	movsd	397048(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -21128(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$48, %rax
	movq	-21128(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	397064(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -21136(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$40, %rax
	movq	-21136(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	397072(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -21144(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-21144(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	397080(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -21152(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-21152(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	397088(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -21160(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-21160(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	397096(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -21168(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-21168(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	397104(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 397040(%rax)
	jmp	.LBB11_6016
.LBB11_5888:
	movsd	.LCPI11_350(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5889
	jp	.LBB11_5889
	jmp	.LBB11_5890
.LBB11_5889:
	jmp	.LBB11_5892
.LBB11_5890:
	jmp	.LBB11_5891
.LBB11_5891:
	movq	-2216(%rbp), %rax
	xorps	%xmm0, %xmm0
	movsd	%xmm0, 396000(%rax)
	jmp	.LBB11_6016
.LBB11_5892:
	movsd	.LCPI11_451(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5893
	jp	.LBB11_5893
	jmp	.LBB11_5894
.LBB11_5893:
	jmp	.LBB11_5896
.LBB11_5894:
	jmp	.LBB11_5895
.LBB11_5895:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-2216(%rbp), %rcx
	movsd	395624(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -21176(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-21176(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395632(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -21184(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-21184(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	395640(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_6016
.LBB11_5896:
	movsd	.LCPI11_452(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5897
	jp	.LBB11_5897
	jmp	.LBB11_5898
.LBB11_5897:
	jmp	.LBB11_5900
.LBB11_5898:
	jmp	.LBB11_5899
.LBB11_5899:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-2216(%rbp), %rcx
	movsd	395624(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -21192(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-21192(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395632(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -21200(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-21200(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	395640(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_6016
.LBB11_5900:
	movsd	.LCPI11_453(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5901
	jp	.LBB11_5901
	jmp	.LBB11_5902
.LBB11_5901:
	jmp	.LBB11_5904
.LBB11_5902:
	jmp	.LBB11_5903
.LBB11_5903:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-2216(%rbp), %rcx
	movsd	395624(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -21208(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-21208(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395632(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -21216(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-21216(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	395640(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_6016
.LBB11_5904:
	movsd	.LCPI11_454(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5905
	jp	.LBB11_5905
	jmp	.LBB11_5906
.LBB11_5905:
	jmp	.LBB11_5908
.LBB11_5906:
	jmp	.LBB11_5907
.LBB11_5907:
	movq	-2216(%rbp), %rax
	movsd	395648(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-2216(%rbp), %rcx
	movsd	395624(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -21224(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-21224(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	movq	-2216(%rbp), %rax
	movsd	395632(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%rcx, -21232(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-21232(%rbp), %rcx      # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-2216(%rbp), %rax
	addsd	395640(%rax), %xmm0
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 395656(%rax)
	jmp	.LBB11_6016
.LBB11_5908:
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	395608(%rax), %xmm1     # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jbe	.LBB11_5910
# %bb.5909:
	jmp	.LBB11_5966
.LBB11_5910:
	movsd	.LCPI11_455(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	395608(%rax), %xmm0
	ucomisd	%xmm0, %xmm1
	jbe	.LBB11_5912
# %bb.5911:
	jmp	.LBB11_5966
.LBB11_5912:
	jmp	.LBB11_5913
.LBB11_5913:
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	subsd	395608(%rax), %xmm0
	movsd	%xmm0, -2224(%rbp)
	movsd	-2232(%rbp), %xmm0      # xmm0 = mem[0],zero
	movsd	%xmm0, C$(%rip)
	movsd	C$(%rip), %xmm0         # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	cvtsi2sd	%rax, %xmm0
	movsd	%xmm0, C$(%rip)
	movsd	C$(%rip), %xmm0         # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	395072(%rax), %xmm0
	movsd	%xmm0, C$(%rip)
	movq	-2216(%rbp), %rax
	movzwl	RVS$(%rip), %ecx
	movl	%ecx, %edx
	shlq	$3, %rdx
	movsd	(%rax,%rdx), %xmm0      # xmm0 = mem[0],zero
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB11_5915
	jp	.LBB11_5915
# %bb.5914:
	jmp	.LBB11_5916
.LBB11_5915:
	movsd	C$(%rip), %xmm0         # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	andq	$255, %rax
	cvtsi2sd	%rax, %xmm0
	movsd	%xmm0, C$(%rip)
.LBB11_5916:
	movsd	.LCPI11_7(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	394856(%rax), %xmm1     # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jb	.LBB11_5918
# %bb.5917:
	jmp	.LBB11_5919
.LBB11_5918:
	movsd	.LCPI11_7(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	%xmm0, 394856(%rax)
.LBB11_5919:
	movsd	.LCPI11_332(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movq	-2216(%rbp), %rax
	movsd	395064(%rax), %xmm0     # xmm0 = mem[0],zero
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB11_5920
	jp	.LBB11_5920
	jmp	.LBB11_5921
.LBB11_5920:
	jmp	.LBB11_5929
.LBB11_5921:
	movsd	.LCPI11_456(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	movsd	%xmm0, -21240(%rbp)     # 8-byte Spill
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	cqto
	movl	$40, %ecx
	idivq	%rcx
	cvtsi2sd	%rdx, %xmm0
	movsd	%xmm0, XS$(%rip)
	movsd	XS$(%rip), %xmm0        # xmm0 = mem[0],zero
	movq	%rcx, -21248(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	cvtsi2sd	%rcx, %xmm0
	movsd	%xmm0, XS$(%rip)
	movsd	-21240(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	XS$(%rip), %xmm0
	movsd	%xmm0, XS$(%rip)
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	movq	%rcx, %rax
	cqto
	movq	-21248(%rbp), %rcx      # 8-byte Reload
	idivq	%rcx
	cvtsi2sd	%rax, %xmm0
	movsd	%xmm0, YS$(%rip)
	movsd	YS$(%rip), %xmm0        # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	cvtsi2sd	%rax, %xmm0
	movsd	%xmm0, YS$(%rip)
	movsd	-21240(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	YS$(%rip), %xmm0
	movsd	%xmm0, YS$(%rip)
	xorps	%xmm0, %xmm0
	movsd	%xmm0, Y$(%rip)
	movsd	%xmm0, X$(%rip)
.LBB11_5922:                            # =>This Inner Loop Header: Depth=1
	xorl	%eax, %eax
	movsd	Y$(%rip), %xmm0         # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rcx
	ucomisd	395088(%rcx), %xmm0
	sete	%dl
	setnp	%sil
	andb	%sil, %dl
	andb	$1, %dl
	movzbl	%dl, %edi
	movl	%eax, %r8d
	subl	%edi, %r8d
	movslq	%r8d, %rcx
	movsd	X$(%rip), %xmm0         # xmm0 = mem[0],zero
	movq	-2216(%rbp), %r9
	ucomisd	395080(%r9), %xmm0
	sete	%dl
	setnp	%sil
	andb	%sil, %dl
	andb	$1, %dl
	movzbl	%dl, %edi
	subl	%edi, %eax
	movslq	%eax, %r9
	andq	%r9, %rcx
	cmpq	$0, %rcx
	je	.LBB11_5924
# %bb.5923:
	jmp	.LBB11_5928
.LBB11_5924:                            #   in Loop: Header=BB11_5922 Depth=1
	movsd	.LCPI11_326(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_11(%rip), %xmm1 # xmm1 = mem[0],zero
	movsd	.LCPI11_15(%rip), %xmm2 # xmm2 = mem[0],zero
	movsd	.LCPI11_12(%rip), %xmm3 # xmm3 = mem[0],zero
	movsd	XS$(%rip), %xmm4        # xmm4 = mem[0],zero
	addsd	X$(%rip), %xmm4
	mulsd	%xmm3, %xmm4
	movq	-2216(%rbp), %rax
	addsd	395032(%rax), %xmm4
	movq	-2216(%rbp), %rax
	movsd	%xmm4, 394840(%rax)
	movsd	YS$(%rip), %xmm4        # xmm4 = mem[0],zero
	addsd	Y$(%rip), %xmm4
	mulsd	%xmm1, %xmm4
	movq	-2216(%rbp), %rax
	addsd	395040(%rax), %xmm4
	movq	-2216(%rbp), %rax
	movsd	%xmm4, 394848(%rax)
	movsd	XS$(%rip), %xmm4        # xmm4 = mem[0],zero
	addsd	X$(%rip), %xmm4
	mulsd	%xmm3, %xmm4
	movq	-2216(%rbp), %rax
	addsd	395032(%rax), %xmm4
	addsd	%xmm2, %xmm4
	movq	-2216(%rbp), %rax
	movsd	%xmm4, 394864(%rax)
	movsd	YS$(%rip), %xmm2        # xmm2 = mem[0],zero
	addsd	Y$(%rip), %xmm2
	mulsd	%xmm1, %xmm2
	movq	-2216(%rbp), %rax
	addsd	395040(%rax), %xmm2
	addsd	%xmm1, %xmm2
	movq	-2216(%rbp), %rax
	movsd	%xmm2, 394872(%rax)
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6PEEK64Ed
	movsd	.LCPI11_326(%rip), %xmm1 # xmm1 = mem[0],zero
	movsd	%xmm0, -15744(%rbp)
	movq	-2216(%rbp), %rdi
	movsd	-15744(%rbp), %xmm0     # xmm0 = mem[0],zero
	movsd	%xmm0, -21256(%rbp)     # 8-byte Spill
	movaps	%xmm1, %xmm0
	movsd	-21256(%rbp), %xmm1     # 8-byte Reload
                                        # xmm1 = mem[0],zero
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_7(%rip), %xmm0  # xmm0 = mem[0],zero
	addsd	X$(%rip), %xmm0
	movsd	%xmm0, X$(%rip)
	movsd	X$(%rip), %xmm0         # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	395080(%rax), %xmm1     # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jb	.LBB11_5926
# %bb.5925:                             #   in Loop: Header=BB11_5922 Depth=1
	jmp	.LBB11_5927
.LBB11_5926:                            #   in Loop: Header=BB11_5922 Depth=1
	movsd	.LCPI11_7(%rip), %xmm0  # xmm0 = mem[0],zero
	xorps	%xmm1, %xmm1
	movsd	%xmm1, X$(%rip)
	movaps	%xmm0, %xmm1
	addsd	Y$(%rip), %xmm1
	movsd	%xmm1, Y$(%rip)
	addsd	C$(%rip), %xmm0
	movsd	%xmm0, C$(%rip)
.LBB11_5927:                            #   in Loop: Header=BB11_5922 Depth=1
	jmp	.LBB11_5922
.LBB11_5928:
	movsd	.LCPI11_334(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	jmp	.LBB11_5965
.LBB11_5929:
	movsd	.LCPI11_7(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	395064(%rax), %xmm1     # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5930
	jp	.LBB11_5930
	jmp	.LBB11_5931
.LBB11_5930:
	jmp	.LBB11_5939
.LBB11_5931:
	movsd	.LCPI11_29(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	movsd	%xmm0, -21264(%rbp)     # 8-byte Spill
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	cqto
	movl	$40, %ecx
	idivq	%rcx
	cvtsi2sd	%rdx, %xmm0
	movsd	%xmm0, XS$(%rip)
	movsd	XS$(%rip), %xmm0        # xmm0 = mem[0],zero
	movq	%rcx, -21272(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	cvtsi2sd	%rcx, %xmm0
	movsd	%xmm0, XS$(%rip)
	movsd	-21264(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	XS$(%rip), %xmm0
	movsd	%xmm0, XS$(%rip)
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	movq	%rcx, %rax
	cqto
	movq	-21272(%rbp), %rcx      # 8-byte Reload
	idivq	%rcx
	cvtsi2sd	%rax, %xmm0
	movsd	%xmm0, YS$(%rip)
	movsd	YS$(%rip), %xmm0        # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	cvtsi2sd	%rax, %xmm0
	movsd	%xmm0, YS$(%rip)
	movsd	-21264(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	YS$(%rip), %xmm0
	movsd	%xmm0, YS$(%rip)
	movq	-2216(%rbp), %rax
	movsd	395088(%rax), %xmm0     # xmm0 = mem[0],zero
	movsd	%xmm0, Y$(%rip)
	movq	-2216(%rbp), %rax
	movsd	395080(%rax), %xmm0     # xmm0 = mem[0],zero
	movsd	%xmm0, X$(%rip)
.LBB11_5932:                            # =>This Inner Loop Header: Depth=1
	xorl	%eax, %eax
	movsd	Y$(%rip), %xmm0         # xmm0 = mem[0],zero
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	sete	%cl
	setnp	%dl
	andb	%dl, %cl
	andb	$1, %cl
	movzbl	%cl, %esi
	movl	%eax, %edi
	subl	%esi, %edi
	movslq	%edi, %r8
	movsd	X$(%rip), %xmm0         # xmm0 = mem[0],zero
	ucomisd	%xmm1, %xmm0
	sete	%cl
	setnp	%dl
	andb	%dl, %cl
	andb	$1, %cl
	movzbl	%cl, %esi
	subl	%esi, %eax
	movslq	%eax, %r9
	andq	%r9, %r8
	cmpq	$0, %r8
	je	.LBB11_5934
# %bb.5933:
	jmp	.LBB11_5938
.LBB11_5934:                            #   in Loop: Header=BB11_5932 Depth=1
	movsd	.LCPI11_326(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_457(%rip), %xmm1 # xmm1 = mem[0],zero
	movsd	.LCPI11_11(%rip), %xmm2 # xmm2 = mem[0],zero
	movsd	.LCPI11_12(%rip), %xmm3 # xmm3 = mem[0],zero
	movsd	.LCPI11_9(%rip), %xmm4  # xmm4 = mem[0],zero
	movsd	XS$(%rip), %xmm5        # xmm5 = mem[0],zero
	subsd	X$(%rip), %xmm5
	mulsd	%xmm3, %xmm5
	movq	-2216(%rbp), %rax
	addsd	395032(%rax), %xmm5
	addsd	%xmm4, %xmm5
	movq	-2216(%rbp), %rax
	movsd	%xmm5, 394864(%rax)
	movsd	YS$(%rip), %xmm5        # xmm5 = mem[0],zero
	subsd	Y$(%rip), %xmm5
	mulsd	%xmm2, %xmm5
	movq	-2216(%rbp), %rax
	addsd	395040(%rax), %xmm5
	addsd	%xmm4, %xmm5
	movq	-2216(%rbp), %rax
	movsd	%xmm5, 394872(%rax)
	movsd	XS$(%rip), %xmm4        # xmm4 = mem[0],zero
	subsd	X$(%rip), %xmm4
	mulsd	%xmm3, %xmm4
	movq	-2216(%rbp), %rax
	addsd	395032(%rax), %xmm4
	addsd	%xmm1, %xmm4
	movq	-2216(%rbp), %rax
	movsd	%xmm4, 394840(%rax)
	movsd	YS$(%rip), %xmm3        # xmm3 = mem[0],zero
	subsd	Y$(%rip), %xmm3
	mulsd	%xmm2, %xmm3
	movq	-2216(%rbp), %rax
	addsd	395040(%rax), %xmm3
	addsd	%xmm1, %xmm3
	movq	-2216(%rbp), %rax
	movsd	%xmm3, 394848(%rax)
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6PEEK64Ed
	movsd	.LCPI11_326(%rip), %xmm1 # xmm1 = mem[0],zero
	movsd	%xmm0, -15752(%rbp)
	movq	-2216(%rbp), %rdi
	movsd	-15752(%rbp), %xmm0     # xmm0 = mem[0],zero
	movsd	%xmm0, -21280(%rbp)     # 8-byte Spill
	movaps	%xmm1, %xmm0
	movsd	-21280(%rbp), %xmm1     # 8-byte Reload
                                        # xmm1 = mem[0],zero
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_437(%rip), %xmm0 # xmm0 = mem[0],zero
	addsd	X$(%rip), %xmm0
	movsd	%xmm0, X$(%rip)
	movsd	X$(%rip), %xmm0         # xmm0 = mem[0],zero
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jb	.LBB11_5936
# %bb.5935:                             #   in Loop: Header=BB11_5932 Depth=1
	jmp	.LBB11_5937
.LBB11_5936:                            #   in Loop: Header=BB11_5932 Depth=1
	movsd	.LCPI11_7(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI11_437(%rip), %xmm1 # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	395080(%rax), %xmm2     # xmm2 = mem[0],zero
	movsd	%xmm2, X$(%rip)
	addsd	Y$(%rip), %xmm1
	movsd	%xmm1, Y$(%rip)
	addsd	C$(%rip), %xmm0
	movsd	%xmm0, C$(%rip)
.LBB11_5937:                            #   in Loop: Header=BB11_5932 Depth=1
	jmp	.LBB11_5932
.LBB11_5938:
	movsd	.LCPI11_16(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	YS$(%rip), %xmm1        # xmm1 = mem[0],zero
	movsd	%xmm0, -21288(%rbp)     # 8-byte Spill
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %edi
	movsd	-21288(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	YS$(%rip), %xmm0
	movl	%edi, -21292(%rbp)      # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %esi
	movl	-21292(%rbp), %edi      # 4-byte Reload
	callq	fb_GfxUnlock@PLT
	jmp	.LBB11_5965
.LBB11_5939:
	movsd	.LCPI11_9(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	395064(%rax), %xmm1     # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5940
	jp	.LBB11_5940
	jmp	.LBB11_5941
.LBB11_5940:
	jmp	.LBB11_5949
.LBB11_5941:
	movsd	.LCPI11_456(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	movsd	%xmm0, -21304(%rbp)     # 8-byte Spill
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	cqto
	movl	$40, %ecx
	idivq	%rcx
	cvtsi2sd	%rdx, %xmm0
	movsd	%xmm0, XS$(%rip)
	movsd	XS$(%rip), %xmm0        # xmm0 = mem[0],zero
	movq	%rcx, -21312(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	cvtsi2sd	%rcx, %xmm0
	movsd	%xmm0, XS$(%rip)
	movsd	-21304(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	XS$(%rip), %xmm0
	movsd	%xmm0, XS$(%rip)
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	movq	%rcx, %rax
	cqto
	movq	-21312(%rbp), %rcx      # 8-byte Reload
	idivq	%rcx
	cvtsi2sd	%rax, %xmm0
	movsd	%xmm0, YS$(%rip)
	movsd	YS$(%rip), %xmm0        # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	cvtsi2sd	%rax, %xmm0
	movsd	%xmm0, YS$(%rip)
	movsd	-21304(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	YS$(%rip), %xmm0
	movsd	%xmm0, YS$(%rip)
	xorps	%xmm0, %xmm0
	movsd	%xmm0, Y$(%rip)
	movsd	%xmm0, X$(%rip)
.LBB11_5942:                            # =>This Inner Loop Header: Depth=1
	xorl	%eax, %eax
	movsd	Y$(%rip), %xmm0         # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rcx
	ucomisd	395088(%rcx), %xmm0
	sete	%dl
	setnp	%sil
	andb	%sil, %dl
	andb	$1, %dl
	movzbl	%dl, %edi
	movl	%eax, %r8d
	subl	%edi, %r8d
	movslq	%r8d, %rcx
	movsd	X$(%rip), %xmm0         # xmm0 = mem[0],zero
	movq	-2216(%rbp), %r9
	ucomisd	395080(%r9), %xmm0
	sete	%dl
	setnp	%sil
	andb	%sil, %dl
	andb	$1, %dl
	movzbl	%dl, %edi
	subl	%edi, %eax
	movslq	%eax, %r9
	andq	%r9, %rcx
	cmpq	$0, %rcx
	je	.LBB11_5944
# %bb.5943:
	jmp	.LBB11_5948
.LBB11_5944:                            #   in Loop: Header=BB11_5942 Depth=1
	movsd	.LCPI11_326(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_9(%rip), %xmm1  # xmm1 = mem[0],zero
	movsd	.LCPI11_11(%rip), %xmm2 # xmm2 = mem[0],zero
	movsd	.LCPI11_15(%rip), %xmm3 # xmm3 = mem[0],zero
	movsd	.LCPI11_12(%rip), %xmm4 # xmm4 = mem[0],zero
	movsd	XS$(%rip), %xmm5        # xmm5 = mem[0],zero
	addsd	X$(%rip), %xmm5
	mulsd	%xmm4, %xmm5
	divsd	%xmm1, %xmm5
	movq	-2216(%rbp), %rax
	addsd	395032(%rax), %xmm5
	movq	-2216(%rbp), %rax
	movsd	%xmm5, 394840(%rax)
	movsd	YS$(%rip), %xmm5        # xmm5 = mem[0],zero
	addsd	Y$(%rip), %xmm5
	mulsd	%xmm2, %xmm5
	divsd	%xmm1, %xmm5
	movq	-2216(%rbp), %rax
	addsd	395040(%rax), %xmm5
	movq	-2216(%rbp), %rax
	movsd	%xmm5, 394848(%rax)
	movsd	XS$(%rip), %xmm5        # xmm5 = mem[0],zero
	addsd	X$(%rip), %xmm5
	mulsd	%xmm4, %xmm5
	addsd	%xmm3, %xmm5
	divsd	%xmm1, %xmm5
	movq	-2216(%rbp), %rax
	addsd	395032(%rax), %xmm5
	movq	-2216(%rbp), %rax
	movsd	%xmm5, 394864(%rax)
	movsd	YS$(%rip), %xmm3        # xmm3 = mem[0],zero
	addsd	Y$(%rip), %xmm3
	mulsd	%xmm2, %xmm3
	addsd	%xmm2, %xmm3
	divsd	%xmm1, %xmm3
	movq	-2216(%rbp), %rax
	addsd	395040(%rax), %xmm3
	movq	-2216(%rbp), %rax
	movsd	%xmm3, 394872(%rax)
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6PEEK64Ed
	movsd	.LCPI11_326(%rip), %xmm1 # xmm1 = mem[0],zero
	movsd	%xmm0, -15760(%rbp)
	movq	-2216(%rbp), %rdi
	movsd	-15760(%rbp), %xmm0     # xmm0 = mem[0],zero
	movsd	%xmm0, -21320(%rbp)     # 8-byte Spill
	movaps	%xmm1, %xmm0
	movsd	-21320(%rbp), %xmm1     # 8-byte Reload
                                        # xmm1 = mem[0],zero
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI11_7(%rip), %xmm0  # xmm0 = mem[0],zero
	addsd	X$(%rip), %xmm0
	movsd	%xmm0, X$(%rip)
	movsd	X$(%rip), %xmm0         # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	395080(%rax), %xmm1     # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jb	.LBB11_5946
# %bb.5945:                             #   in Loop: Header=BB11_5942 Depth=1
	jmp	.LBB11_5947
.LBB11_5946:                            #   in Loop: Header=BB11_5942 Depth=1
	movsd	.LCPI11_7(%rip), %xmm0  # xmm0 = mem[0],zero
	xorps	%xmm1, %xmm1
	movsd	%xmm1, X$(%rip)
	movaps	%xmm0, %xmm1
	addsd	Y$(%rip), %xmm1
	movsd	%xmm1, Y$(%rip)
	addsd	C$(%rip), %xmm0
	movsd	%xmm0, C$(%rip)
.LBB11_5947:                            #   in Loop: Header=BB11_5942 Depth=1
	jmp	.LBB11_5942
.LBB11_5948:
	movsd	.LCPI11_16(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	YS$(%rip), %xmm1        # xmm1 = mem[0],zero
	movsd	%xmm0, -21328(%rbp)     # 8-byte Spill
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %edi
	movsd	-21328(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	YS$(%rip), %xmm0
	movl	%edi, -21332(%rbp)      # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %esi
	movl	-21332(%rbp), %edi      # 4-byte Reload
	callq	fb_GfxUnlock@PLT
	jmp	.LBB11_5965
.LBB11_5949:
	movsd	.LCPI11_10(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	395064(%rax), %xmm1     # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5950
	jp	.LBB11_5950
	jmp	.LBB11_5951
.LBB11_5950:
	jmp	.LBB11_5964
.LBB11_5951:
	movsd	.LCPI11_29(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	movsd	%xmm0, -21344(%rbp)     # 8-byte Spill
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	cqto
	movl	$80, %ecx
	idivq	%rcx
	cvtsi2sd	%rdx, %xmm0
	movsd	%xmm0, XS$(%rip)
	movsd	XS$(%rip), %xmm0        # xmm0 = mem[0],zero
	movq	%rcx, -21352(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	cvtsi2sd	%rcx, %xmm0
	movsd	%xmm0, XS$(%rip)
	movsd	-21344(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	XS$(%rip), %xmm0
	movsd	%xmm0, XS$(%rip)
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	movq	%rcx, %rax
	cqto
	movq	-21352(%rbp), %rcx      # 8-byte Reload
	idivq	%rcx
	cvtsi2sd	%rax, %xmm0
	movsd	%xmm0, YS$(%rip)
	movsd	YS$(%rip), %xmm0        # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	cvtsi2sd	%rax, %xmm0
	movsd	%xmm0, YS$(%rip)
	movsd	-21344(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	YS$(%rip), %xmm0
	movsd	%xmm0, YS$(%rip)
	movq	-2216(%rbp), %rax
	movsd	395088(%rax), %xmm0     # xmm0 = mem[0],zero
	movsd	%xmm0, Y$(%rip)
	jmp	.LBB11_5960
.LBB11_5952:                            #   in Loop: Header=BB11_5960 Depth=1
	xorps	%xmm0, %xmm0
	movsd	%xmm0, X$(%rip)
	movq	-2216(%rbp), %rax
	movsd	395080(%rax), %xmm0     # xmm0 = mem[0],zero
	movsd	%xmm0, -15768(%rbp)
	jmp	.LBB11_5955
.LBB11_5953:                            #   in Loop: Header=BB11_5955 Depth=2
	movsd	.LCPI11_326(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI11_9(%rip), %xmm1  # xmm1 = mem[0],zero
	movsd	.LCPI11_457(%rip), %xmm2 # xmm2 = mem[0],zero
	movsd	.LCPI11_11(%rip), %xmm3 # xmm3 = mem[0],zero
	movsd	.LCPI11_12(%rip), %xmm4 # xmm4 = mem[0],zero
	movsd	XS$(%rip), %xmm5        # xmm5 = mem[0],zero
	subsd	X$(%rip), %xmm5
	mulsd	%xmm4, %xmm5
	addsd	%xmm1, %xmm5
	divsd	%xmm1, %xmm5
	movq	-2216(%rbp), %rax
	addsd	395032(%rax), %xmm5
	movq	-2216(%rbp), %rax
	movsd	%xmm5, 394864(%rax)
	movsd	YS$(%rip), %xmm5        # xmm5 = mem[0],zero
	subsd	Y$(%rip), %xmm5
	mulsd	%xmm3, %xmm5
	addsd	%xmm1, %xmm5
	divsd	%xmm1, %xmm5
	movq	-2216(%rbp), %rax
	addsd	395040(%rax), %xmm5
	movq	-2216(%rbp), %rax
	movsd	%xmm5, 394872(%rax)
	movsd	XS$(%rip), %xmm5        # xmm5 = mem[0],zero
	subsd	X$(%rip), %xmm5
	mulsd	%xmm4, %xmm5
	addsd	%xmm2, %xmm5
	divsd	%xmm1, %xmm5
	movq	-2216(%rbp), %rax
	addsd	395032(%rax), %xmm5
	movq	-2216(%rbp), %rax
	movsd	%xmm5, 394840(%rax)
	movsd	YS$(%rip), %xmm4        # xmm4 = mem[0],zero
	subsd	Y$(%rip), %xmm4
	mulsd	%xmm3, %xmm4
	addsd	%xmm2, %xmm4
	divsd	%xmm1, %xmm4
	movq	-2216(%rbp), %rax
	addsd	395040(%rax), %xmm4
	movq	-2216(%rbp), %rax
	movsd	%xmm4, 394848(%rax)
	movq	-2216(%rbp), %rdi
	callq	_ZN8MEMORY_T6PEEK64Ed
	movsd	.LCPI11_326(%rip), %xmm1 # xmm1 = mem[0],zero
	movsd	%xmm0, -15776(%rbp)
	movq	-2216(%rbp), %rdi
	movsd	-15776(%rbp), %xmm0     # xmm0 = mem[0],zero
	movsd	%xmm0, -21360(%rbp)     # 8-byte Spill
	movaps	%xmm1, %xmm0
	movsd	-21360(%rbp), %xmm1     # 8-byte Reload
                                        # xmm1 = mem[0],zero
	callq	_ZN8MEMORY_T6POKE64Edd
# %bb.5954:                             #   in Loop: Header=BB11_5955 Depth=2
	movsd	.LCPI11_7(%rip), %xmm0  # xmm0 = mem[0],zero
	addsd	X$(%rip), %xmm0
	movsd	%xmm0, X$(%rip)
.LBB11_5955:                            #   Parent Loop BB11_5960 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movsd	X$(%rip), %xmm0         # xmm0 = mem[0],zero
	movsd	-15768(%rbp), %xmm1     # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jb	.LBB11_5957
# %bb.5956:                             #   in Loop: Header=BB11_5955 Depth=2
	jmp	.LBB11_5953
.LBB11_5957:                            #   in Loop: Header=BB11_5960 Depth=1
	jmp	.LBB11_5958
.LBB11_5958:                            #   in Loop: Header=BB11_5960 Depth=1
	movsd	.LCPI11_7(%rip), %xmm0  # xmm0 = mem[0],zero
	addsd	C$(%rip), %xmm0
	movsd	%xmm0, C$(%rip)
# %bb.5959:                             #   in Loop: Header=BB11_5960 Depth=1
	movsd	.LCPI11_437(%rip), %xmm0 # xmm0 = mem[0],zero
	addsd	Y$(%rip), %xmm0
	movsd	%xmm0, Y$(%rip)
.LBB11_5960:                            # =>This Loop Header: Depth=1
                                        #     Child Loop BB11_5955 Depth 2
	movsd	Y$(%rip), %xmm0         # xmm0 = mem[0],zero
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jb	.LBB11_5962
# %bb.5961:                             #   in Loop: Header=BB11_5960 Depth=1
	jmp	.LBB11_5952
.LBB11_5962:
	jmp	.LBB11_5963
.LBB11_5963:
	movsd	.LCPI11_16(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	YS$(%rip), %xmm1        # xmm1 = mem[0],zero
	movsd	%xmm0, -21368(%rbp)     # 8-byte Spill
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %edi
	movsd	-21368(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	YS$(%rip), %xmm0
	movl	%edi, -21372(%rbp)      # 4-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %esi
	movl	-21372(%rbp), %edi      # 4-byte Reload
	callq	fb_GfxUnlock@PLT
.LBB11_5964:
	jmp	.LBB11_5965
.LBB11_5965:
	jmp	.LBB11_6016
.LBB11_5966:
	movsd	.LCPI11_313(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	395608(%rax), %xmm0
	ucomisd	%xmm1, %xmm0
	jbe	.LBB11_5968
# %bb.5967:
	jmp	.LBB11_5993
.LBB11_5968:
	movsd	.LCPI11_458(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	395608(%rax), %xmm0
	ucomisd	%xmm0, %xmm1
	jbe	.LBB11_5970
# %bb.5969:
	jmp	.LBB11_5993
.LBB11_5970:
	jmp	.LBB11_5971
.LBB11_5971:
	movsd	.LCPI11_313(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	395608(%rax), %xmm0
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5972
	jp	.LBB11_5972
	jmp	.LBB11_5973
.LBB11_5972:
	jmp	.LBB11_5975
.LBB11_5973:
	jmp	.LBB11_5974
.LBB11_5974:
	jmp	.LBB11_5992
.LBB11_5975:
	movsd	.LCPI11_459(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	395608(%rax), %xmm0
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5976
	jp	.LBB11_5976
	jmp	.LBB11_5977
.LBB11_5976:
	jmp	.LBB11_5979
.LBB11_5977:
	jmp	.LBB11_5978
.LBB11_5978:
	jmp	.LBB11_5992
.LBB11_5979:
	movsd	.LCPI11_460(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	395608(%rax), %xmm0
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5980
	jp	.LBB11_5980
	jmp	.LBB11_5981
.LBB11_5980:
	jmp	.LBB11_5983
.LBB11_5981:
	jmp	.LBB11_5982
.LBB11_5982:
	jmp	.LBB11_5992
.LBB11_5983:
	movsd	.LCPI11_461(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	395608(%rax), %xmm0
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5984
	jp	.LBB11_5984
	jmp	.LBB11_5985
.LBB11_5984:
	jmp	.LBB11_5987
.LBB11_5985:
	jmp	.LBB11_5986
.LBB11_5986:
	jmp	.LBB11_5992
.LBB11_5987:
	movsd	.LCPI11_458(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	movq	-2216(%rbp), %rax
	addsd	395608(%rax), %xmm0
	ucomisd	%xmm0, %xmm1
	jne	.LBB11_5988
	jp	.LBB11_5988
	jmp	.LBB11_5989
.LBB11_5988:
	jmp	.LBB11_5991
.LBB11_5989:
	jmp	.LBB11_5990
.LBB11_5990:
	jmp	.LBB11_5991
.LBB11_5991:
	jmp	.LBB11_5992
.LBB11_5992:
	jmp	.LBB11_6016
.LBB11_5993:
	movsd	.LCPI11_351(%rip), %xmm0 # xmm0 = mem[0],zero
	ucomisd	-2224(%rbp), %xmm0
	jbe	.LBB11_5995
# %bb.5994:
	jmp	.LBB11_5999
.LBB11_5995:
	movsd	.LCPI11_352(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jbe	.LBB11_5997
# %bb.5996:
	jmp	.LBB11_5999
.LBB11_5997:
	jmp	.LBB11_5998
.LBB11_5998:
	movq	-2216(%rbp), %rdi
	movsd	-2224(%rbp), %xmm0      # xmm0 = mem[0],zero
	movsd	-2232(%rbp), %xmm1      # xmm1 = mem[0],zero
	callq	_ZN8MEMORY_T5POKEBEdd
	jmp	.LBB11_6016
.LBB11_5999:
	movsd	.LCPI11_462(%rip), %xmm0 # xmm0 = mem[0],zero
	ucomisd	-2224(%rbp), %xmm0
	jbe	.LBB11_6001
# %bb.6000:
	jmp	.LBB11_6004
.LBB11_6001:
	movsd	.LCPI11_463(%rip), %xmm0 # xmm0 = mem[0],zero
	ucomisd	-2224(%rbp), %xmm0
	jb	.LBB11_6003
# %bb.6002:
	jmp	.LBB11_6014
.LBB11_6003:
	jmp	.LBB11_6004
.LBB11_6004:
	movsd	.LCPI11_464(%rip), %xmm0 # xmm0 = mem[0],zero
	ucomisd	-2224(%rbp), %xmm0
	jbe	.LBB11_6006
# %bb.6005:
	jmp	.LBB11_6009
.LBB11_6006:
	movsd	.LCPI11_465(%rip), %xmm0 # xmm0 = mem[0],zero
	ucomisd	-2224(%rbp), %xmm0
	jb	.LBB11_6008
# %bb.6007:
	jmp	.LBB11_6014
.LBB11_6008:
	jmp	.LBB11_6009
.LBB11_6009:
	movsd	.LCPI11_1(%rip), %xmm0  # xmm0 = mem[0],zero
	ucomisd	-2224(%rbp), %xmm0
	jbe	.LBB11_6011
# %bb.6010:
	jmp	.LBB11_6015
.LBB11_6011:
	movsd	.LCPI11_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jbe	.LBB11_6013
# %bb.6012:
	jmp	.LBB11_6015
.LBB11_6013:
	jmp	.LBB11_6014
.LBB11_6014:
	movsd	-2232(%rbp), %xmm0      # xmm0 = mem[0],zero
	movq	-2216(%rbp), %rax
	movsd	-2224(%rbp), %xmm1      # xmm1 = mem[0],zero
	movsd	%xmm0, -21384(%rbp)     # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rax, -21392(%rbp)      # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-21392(%rbp), %rcx      # 8-byte Reload
	movsd	-21384(%rbp), %xmm0     # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	%xmm0, (%rcx,%rax)
.LBB11_6015:
	jmp	.LBB11_6016
.LBB11_6016:
	jmp	.LBB11_6017
.LBB11_6017:
	jmp	.LBB11_6018
.LBB11_6018:
	movq	%fs:40, %rax
	movq	-16(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB11_6021
# %bb.6019:                             # %SP_return
	addq	$21432, %rsp            # imm = 0x53B8
	popq	%rbx
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB11_6020:                            # =>This Inner Loop Header: Depth=1
	.cfi_def_cfa %rbp, 16
	movq	-15848(%rbp), %rax      # 8-byte Reload
	jmpq	*%rax
.LBB11_6021:                            # %CallStackCheckFailBlk
	callq	__stack_chk_fail@PLT
.Lfunc_end11:
	.size	_ZN8MEMORY_T6POKE64Edd, .Lfunc_end11-_ZN8MEMORY_T6POKE64Edd
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function _ZN8MEMORY_T10SCREENCODEEd
.LCPI12_0:
	.quad	4629700416936869888     # double 32
.LCPI12_1:
	.quad	4629841154425225216     # double 33
.LCPI12_2:
	.quad	4629981891913580544     # double 34
.LCPI12_3:
	.quad	4630122629401935872     # double 35
.LCPI12_4:
	.quad	4630263366890291200     # double 36
.LCPI12_5:
	.quad	4630404104378646528     # double 37
.LCPI12_6:
	.quad	4630544841867001856     # double 38
.LCPI12_7:
	.quad	4630685579355357184     # double 39
.LCPI12_8:
	.quad	4630826316843712512     # double 40
.LCPI12_9:
	.quad	4630967054332067840     # double 41
.LCPI12_10:
	.quad	4631107791820423168     # double 42
.LCPI12_11:
	.quad	4631248529308778496     # double 43
.LCPI12_12:
	.quad	4631389266797133824     # double 44
.LCPI12_13:
	.quad	4631530004285489152     # double 45
.LCPI12_14:
	.quad	4631670741773844480     # double 46
.LCPI12_15:
	.quad	4631811479262199808     # double 47
.LCPI12_16:
	.quad	4631952216750555136     # double 48
.LCPI12_17:
	.quad	4632092954238910464     # double 49
.LCPI12_18:
	.quad	4632233691727265792     # double 50
.LCPI12_19:
	.quad	4632374429215621120     # double 51
.LCPI12_20:
	.quad	4632515166703976448     # double 52
.LCPI12_21:
	.quad	4632655904192331776     # double 53
.LCPI12_22:
	.quad	4632796641680687104     # double 54
.LCPI12_23:
	.quad	4632937379169042432     # double 55
.LCPI12_24:
	.quad	4633078116657397760     # double 56
.LCPI12_25:
	.quad	4633218854145753088     # double 57
.LCPI12_26:
	.quad	4633359591634108416     # double 58
.LCPI12_27:
	.quad	4633500329122463744     # double 59
.LCPI12_28:
	.quad	4633641066610819072     # double 60
.LCPI12_29:
	.quad	4633781804099174400     # double 61
.LCPI12_30:
	.quad	4633922541587529728     # double 62
.LCPI12_31:
	.quad	4634063279075885056     # double 63
.LCPI12_32:
	.quad	4607182418800017408     # double 1
.LCPI12_33:
	.quad	4611686018427387904     # double 2
.LCPI12_34:
	.quad	4613937818241073152     # double 3
.LCPI12_35:
	.quad	4616189618054758400     # double 4
.LCPI12_36:
	.quad	4617315517961601024     # double 5
.LCPI12_37:
	.quad	4618441417868443648     # double 6
.LCPI12_38:
	.quad	4619567317775286272     # double 7
.LCPI12_39:
	.quad	4620693217682128896     # double 8
.LCPI12_40:
	.quad	4621256167635550208     # double 9
.LCPI12_41:
	.quad	4621819117588971520     # double 10
.LCPI12_42:
	.quad	4622382067542392832     # double 11
.LCPI12_43:
	.quad	4622945017495814144     # double 12
.LCPI12_44:
	.quad	4623507967449235456     # double 13
.LCPI12_45:
	.quad	4624070917402656768     # double 14
.LCPI12_46:
	.quad	4624633867356078080     # double 15
.LCPI12_47:
	.quad	4625196817309499392     # double 16
.LCPI12_48:
	.quad	4625478292286210048     # double 17
.LCPI12_49:
	.quad	4625759767262920704     # double 18
.LCPI12_50:
	.quad	4626041242239631360     # double 19
.LCPI12_51:
	.quad	4626322717216342016     # double 20
.LCPI12_52:
	.quad	4626604192193052672     # double 21
.LCPI12_53:
	.quad	4626885667169763328     # double 22
.LCPI12_54:
	.quad	4627167142146473984     # double 23
.LCPI12_55:
	.quad	4627448617123184640     # double 24
.LCPI12_56:
	.quad	4627730092099895296     # double 25
.LCPI12_57:
	.quad	4628011567076605952     # double 26
.LCPI12_58:
	.quad	4628293042053316608     # double 27
.LCPI12_59:
	.quad	4628574517030027264     # double 28
.LCPI12_60:
	.quad	4628855992006737920     # double 29
.LCPI12_61:
	.quad	4629137466983448576     # double 30
.LCPI12_62:
	.quad	4629418941960159232     # double 31
.LCPI12_63:
	.quad	4638707616191610880     # double 128
.LCPI12_64:
	.quad	4638742800563699712     # double 129
.LCPI12_65:
	.quad	4638777984935788544     # double 130
.LCPI12_66:
	.quad	4638813169307877376     # double 131
.LCPI12_67:
	.quad	4638848353679966208     # double 132
.LCPI12_68:
	.quad	4638883538052055040     # double 133
.LCPI12_69:
	.quad	4638918722424143872     # double 134
.LCPI12_70:
	.quad	4638953906796232704     # double 135
.LCPI12_71:
	.quad	4638989091168321536     # double 136
.LCPI12_72:
	.quad	4639024275540410368     # double 137
.LCPI12_73:
	.quad	4639059459912499200     # double 138
.LCPI12_74:
	.quad	4639094644284588032     # double 139
.LCPI12_75:
	.quad	4639129828656676864     # double 140
.LCPI12_76:
	.quad	4639165013028765696     # double 141
.LCPI12_77:
	.quad	4639200197400854528     # double 142
.LCPI12_78:
	.quad	4639235381772943360     # double 143
.LCPI12_79:
	.quad	4639270566145032192     # double 144
.LCPI12_80:
	.quad	4639305750517121024     # double 145
.LCPI12_81:
	.quad	4639340934889209856     # double 146
.LCPI12_82:
	.quad	4639376119261298688     # double 147
.LCPI12_83:
	.quad	4639411303633387520     # double 148
.LCPI12_84:
	.quad	4639446488005476352     # double 149
.LCPI12_85:
	.quad	4639481672377565184     # double 150
.LCPI12_86:
	.quad	4639516856749654016     # double 151
.LCPI12_87:
	.quad	4639552041121742848     # double 152
.LCPI12_88:
	.quad	4639587225493831680     # double 153
.LCPI12_89:
	.quad	4639622409865920512     # double 154
.LCPI12_90:
	.quad	4639657594238009344     # double 155
.LCPI12_91:
	.quad	4639692778610098176     # double 156
.LCPI12_92:
	.quad	4639727962982187008     # double 157
.LCPI12_93:
	.quad	4639763147354275840     # double 158
	.text
	.globl	_ZN8MEMORY_T10SCREENCODEEd
	.p2align	4, 0x90
	.type	_ZN8MEMORY_T10SCREENCODEEd,@function
_ZN8MEMORY_T10SCREENCODEEd:             # @_ZN8MEMORY_T10SCREENCODEEd
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$464, %rsp              # imm = 0x1D0
	xorl	%esi, %esi
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -48(%rbp)
	movsd	%xmm0, -56(%rbp)
	leaq	-16(%rbp), %rax
	movq	%rax, %rdi
	movl	$8, %edx
	callq	memset@PLT
# %bb.1:
	movsd	-56(%rbp), %xmm0        # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rsi
	movl	$1, %edi
	movb	$0, %al
	callq	fb_CHR@PLT
	xorl	%r8d, %r8d
	movq	%rax, -64(%rbp)
	leaq	-40(%rbp), %rax
	movq	-64(%rbp), %rcx
	movq	%rax, %rdi
	movq	$-1, %rax
	movq	%rax, %rsi
	movq	%rcx, %rdx
	movq	%rax, %rcx
	callq	fb_StrInit@PLT
	movq	%rax, -72(%rbp)
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.72(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -76(%rbp)
	movslq	-76(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_3
# %bb.2:
	jmp	.LBB12_5
.LBB12_3:
	jmp	.LBB12_4
.LBB12_4:
	movsd	.LCPI12_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_5:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.73(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -80(%rbp)
	movslq	-80(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_7
# %bb.6:
	jmp	.LBB12_9
.LBB12_7:
	jmp	.LBB12_8
.LBB12_8:
	movsd	.LCPI12_1(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_9:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.74(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -84(%rbp)
	movslq	-84(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_11
# %bb.10:
	jmp	.LBB12_13
.LBB12_11:
	jmp	.LBB12_12
.LBB12_12:
	movsd	.LCPI12_2(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_13:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.75(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -88(%rbp)
	movslq	-88(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_15
# %bb.14:
	jmp	.LBB12_17
.LBB12_15:
	jmp	.LBB12_16
.LBB12_16:
	movsd	.LCPI12_3(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_17:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.76(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -92(%rbp)
	movslq	-92(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_19
# %bb.18:
	jmp	.LBB12_21
.LBB12_19:
	jmp	.LBB12_20
.LBB12_20:
	movsd	.LCPI12_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_21:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.77(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -96(%rbp)
	movslq	-96(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_23
# %bb.22:
	jmp	.LBB12_25
.LBB12_23:
	jmp	.LBB12_24
.LBB12_24:
	movsd	.LCPI12_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_25:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.78(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -100(%rbp)
	movslq	-100(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_27
# %bb.26:
	jmp	.LBB12_29
.LBB12_27:
	jmp	.LBB12_28
.LBB12_28:
	movsd	.LCPI12_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_29:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.79(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -104(%rbp)
	movslq	-104(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_31
# %bb.30:
	jmp	.LBB12_33
.LBB12_31:
	jmp	.LBB12_32
.LBB12_32:
	movsd	.LCPI12_7(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_33:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.80(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -108(%rbp)
	movslq	-108(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_35
# %bb.34:
	jmp	.LBB12_37
.LBB12_35:
	jmp	.LBB12_36
.LBB12_36:
	movsd	.LCPI12_8(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_37:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.81(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -112(%rbp)
	movslq	-112(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_39
# %bb.38:
	jmp	.LBB12_41
.LBB12_39:
	jmp	.LBB12_40
.LBB12_40:
	movsd	.LCPI12_9(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_41:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.82(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -116(%rbp)
	movslq	-116(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_43
# %bb.42:
	jmp	.LBB12_45
.LBB12_43:
	jmp	.LBB12_44
.LBB12_44:
	movsd	.LCPI12_10(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_45:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.83(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -120(%rbp)
	movslq	-120(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_47
# %bb.46:
	jmp	.LBB12_49
.LBB12_47:
	jmp	.LBB12_48
.LBB12_48:
	movsd	.LCPI12_11(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_49:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.3(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -124(%rbp)
	movslq	-124(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_51
# %bb.50:
	jmp	.LBB12_53
.LBB12_51:
	jmp	.LBB12_52
.LBB12_52:
	movsd	.LCPI12_12(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_53:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.84(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -128(%rbp)
	movslq	-128(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_55
# %bb.54:
	jmp	.LBB12_57
.LBB12_55:
	jmp	.LBB12_56
.LBB12_56:
	movsd	.LCPI12_13(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_57:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.85(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -132(%rbp)
	movslq	-132(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_59
# %bb.58:
	jmp	.LBB12_61
.LBB12_59:
	jmp	.LBB12_60
.LBB12_60:
	movsd	.LCPI12_14(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_61:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.86(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -136(%rbp)
	movslq	-136(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_63
# %bb.62:
	jmp	.LBB12_65
.LBB12_63:
	jmp	.LBB12_64
.LBB12_64:
	movsd	.LCPI12_15(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_65:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.87(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -140(%rbp)
	movslq	-140(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_67
# %bb.66:
	jmp	.LBB12_69
.LBB12_67:
	jmp	.LBB12_68
.LBB12_68:
	movsd	.LCPI12_16(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_69:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.88(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -144(%rbp)
	movslq	-144(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_71
# %bb.70:
	jmp	.LBB12_73
.LBB12_71:
	jmp	.LBB12_72
.LBB12_72:
	movsd	.LCPI12_17(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_73:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.89(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -148(%rbp)
	movslq	-148(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_75
# %bb.74:
	jmp	.LBB12_77
.LBB12_75:
	jmp	.LBB12_76
.LBB12_76:
	movsd	.LCPI12_18(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_77:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.90(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -152(%rbp)
	movslq	-152(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_79
# %bb.78:
	jmp	.LBB12_81
.LBB12_79:
	jmp	.LBB12_80
.LBB12_80:
	movsd	.LCPI12_19(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_81:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.91(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -156(%rbp)
	movslq	-156(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_83
# %bb.82:
	jmp	.LBB12_85
.LBB12_83:
	jmp	.LBB12_84
.LBB12_84:
	movsd	.LCPI12_20(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_85:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.92(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -160(%rbp)
	movslq	-160(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_87
# %bb.86:
	jmp	.LBB12_89
.LBB12_87:
	jmp	.LBB12_88
.LBB12_88:
	movsd	.LCPI12_21(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_89:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.93(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -164(%rbp)
	movslq	-164(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_91
# %bb.90:
	jmp	.LBB12_93
.LBB12_91:
	jmp	.LBB12_92
.LBB12_92:
	movsd	.LCPI12_22(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_93:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.94(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -168(%rbp)
	movslq	-168(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_95
# %bb.94:
	jmp	.LBB12_97
.LBB12_95:
	jmp	.LBB12_96
.LBB12_96:
	movsd	.LCPI12_23(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_97:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.95(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -172(%rbp)
	movslq	-172(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_99
# %bb.98:
	jmp	.LBB12_101
.LBB12_99:
	jmp	.LBB12_100
.LBB12_100:
	movsd	.LCPI12_24(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_101:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.96(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -176(%rbp)
	movslq	-176(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_103
# %bb.102:
	jmp	.LBB12_105
.LBB12_103:
	jmp	.LBB12_104
.LBB12_104:
	movsd	.LCPI12_25(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_105:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.97(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -180(%rbp)
	movslq	-180(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_107
# %bb.106:
	jmp	.LBB12_109
.LBB12_107:
	jmp	.LBB12_108
.LBB12_108:
	movsd	.LCPI12_26(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_109:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.98(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -184(%rbp)
	movslq	-184(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_111
# %bb.110:
	jmp	.LBB12_113
.LBB12_111:
	jmp	.LBB12_112
.LBB12_112:
	movsd	.LCPI12_27(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_113:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.99(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -188(%rbp)
	movslq	-188(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_115
# %bb.114:
	jmp	.LBB12_117
.LBB12_115:
	jmp	.LBB12_116
.LBB12_116:
	movsd	.LCPI12_28(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_117:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.100(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -192(%rbp)
	movslq	-192(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_119
# %bb.118:
	jmp	.LBB12_121
.LBB12_119:
	jmp	.LBB12_120
.LBB12_120:
	movsd	.LCPI12_29(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_121:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.101(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -196(%rbp)
	movslq	-196(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_123
# %bb.122:
	jmp	.LBB12_125
.LBB12_123:
	jmp	.LBB12_124
.LBB12_124:
	movsd	.LCPI12_30(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_125:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.102(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -200(%rbp)
	movslq	-200(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_127
# %bb.126:
	jmp	.LBB12_129
.LBB12_127:
	jmp	.LBB12_128
.LBB12_128:
	movsd	.LCPI12_31(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_129:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.103(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -204(%rbp)
	movslq	-204(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_131
# %bb.130:
	jmp	.LBB12_133
.LBB12_131:
	jmp	.LBB12_132
.LBB12_132:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_133:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.104(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -208(%rbp)
	movslq	-208(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_135
# %bb.134:
	jmp	.LBB12_137
.LBB12_135:
	jmp	.LBB12_136
.LBB12_136:
	movsd	.LCPI12_32(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_137:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.105(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -212(%rbp)
	movslq	-212(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_139
# %bb.138:
	jmp	.LBB12_141
.LBB12_139:
	jmp	.LBB12_140
.LBB12_140:
	movsd	.LCPI12_33(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_141:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.106(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -216(%rbp)
	movslq	-216(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_143
# %bb.142:
	jmp	.LBB12_145
.LBB12_143:
	jmp	.LBB12_144
.LBB12_144:
	movsd	.LCPI12_34(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_145:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.107(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -220(%rbp)
	movslq	-220(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_147
# %bb.146:
	jmp	.LBB12_149
.LBB12_147:
	jmp	.LBB12_148
.LBB12_148:
	movsd	.LCPI12_35(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_149:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.108(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -224(%rbp)
	movslq	-224(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_151
# %bb.150:
	jmp	.LBB12_153
.LBB12_151:
	jmp	.LBB12_152
.LBB12_152:
	movsd	.LCPI12_36(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_153:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.109(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -228(%rbp)
	movslq	-228(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_155
# %bb.154:
	jmp	.LBB12_157
.LBB12_155:
	jmp	.LBB12_156
.LBB12_156:
	movsd	.LCPI12_37(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_157:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.110(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -232(%rbp)
	movslq	-232(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_159
# %bb.158:
	jmp	.LBB12_161
.LBB12_159:
	jmp	.LBB12_160
.LBB12_160:
	movsd	.LCPI12_38(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_161:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.111(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -236(%rbp)
	movslq	-236(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_163
# %bb.162:
	jmp	.LBB12_165
.LBB12_163:
	jmp	.LBB12_164
.LBB12_164:
	movsd	.LCPI12_39(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_165:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.112(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -240(%rbp)
	movslq	-240(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_167
# %bb.166:
	jmp	.LBB12_169
.LBB12_167:
	jmp	.LBB12_168
.LBB12_168:
	movsd	.LCPI12_40(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_169:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.113(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -244(%rbp)
	movslq	-244(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_171
# %bb.170:
	jmp	.LBB12_173
.LBB12_171:
	jmp	.LBB12_172
.LBB12_172:
	movsd	.LCPI12_41(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_173:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.114(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -248(%rbp)
	movslq	-248(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_175
# %bb.174:
	jmp	.LBB12_177
.LBB12_175:
	jmp	.LBB12_176
.LBB12_176:
	movsd	.LCPI12_42(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_177:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.115(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -252(%rbp)
	movslq	-252(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_179
# %bb.178:
	jmp	.LBB12_181
.LBB12_179:
	jmp	.LBB12_180
.LBB12_180:
	movsd	.LCPI12_43(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_181:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.116(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -256(%rbp)
	movslq	-256(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_183
# %bb.182:
	jmp	.LBB12_185
.LBB12_183:
	jmp	.LBB12_184
.LBB12_184:
	movsd	.LCPI12_44(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_185:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.117(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -260(%rbp)
	movslq	-260(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_187
# %bb.186:
	jmp	.LBB12_189
.LBB12_187:
	jmp	.LBB12_188
.LBB12_188:
	movsd	.LCPI12_45(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_189:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.118(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -264(%rbp)
	movslq	-264(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_191
# %bb.190:
	jmp	.LBB12_193
.LBB12_191:
	jmp	.LBB12_192
.LBB12_192:
	movsd	.LCPI12_46(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_193:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.119(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -268(%rbp)
	movslq	-268(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_195
# %bb.194:
	jmp	.LBB12_197
.LBB12_195:
	jmp	.LBB12_196
.LBB12_196:
	movsd	.LCPI12_47(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_197:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.120(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -272(%rbp)
	movslq	-272(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_199
# %bb.198:
	jmp	.LBB12_201
.LBB12_199:
	jmp	.LBB12_200
.LBB12_200:
	movsd	.LCPI12_48(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_201:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.121(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -276(%rbp)
	movslq	-276(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_203
# %bb.202:
	jmp	.LBB12_205
.LBB12_203:
	jmp	.LBB12_204
.LBB12_204:
	movsd	.LCPI12_49(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_205:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.122(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -280(%rbp)
	movslq	-280(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_207
# %bb.206:
	jmp	.LBB12_209
.LBB12_207:
	jmp	.LBB12_208
.LBB12_208:
	movsd	.LCPI12_50(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_209:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.123(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -284(%rbp)
	movslq	-284(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_211
# %bb.210:
	jmp	.LBB12_213
.LBB12_211:
	jmp	.LBB12_212
.LBB12_212:
	movsd	.LCPI12_51(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_213:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.124(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -288(%rbp)
	movslq	-288(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_215
# %bb.214:
	jmp	.LBB12_217
.LBB12_215:
	jmp	.LBB12_216
.LBB12_216:
	movsd	.LCPI12_52(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_217:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.125(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -292(%rbp)
	movslq	-292(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_219
# %bb.218:
	jmp	.LBB12_221
.LBB12_219:
	jmp	.LBB12_220
.LBB12_220:
	movsd	.LCPI12_53(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_221:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.126(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -296(%rbp)
	movslq	-296(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_223
# %bb.222:
	jmp	.LBB12_225
.LBB12_223:
	jmp	.LBB12_224
.LBB12_224:
	movsd	.LCPI12_54(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_225:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.127(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -300(%rbp)
	movslq	-300(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_227
# %bb.226:
	jmp	.LBB12_229
.LBB12_227:
	jmp	.LBB12_228
.LBB12_228:
	movsd	.LCPI12_55(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_229:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.128(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -304(%rbp)
	movslq	-304(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_231
# %bb.230:
	jmp	.LBB12_233
.LBB12_231:
	jmp	.LBB12_232
.LBB12_232:
	movsd	.LCPI12_56(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_233:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.129(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -308(%rbp)
	movslq	-308(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_235
# %bb.234:
	jmp	.LBB12_237
.LBB12_235:
	jmp	.LBB12_236
.LBB12_236:
	movsd	.LCPI12_57(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_237:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.130(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -312(%rbp)
	movslq	-312(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_239
# %bb.238:
	jmp	.LBB12_241
.LBB12_239:
	jmp	.LBB12_240
.LBB12_240:
	movsd	.LCPI12_58(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_241:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.131(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -316(%rbp)
	movslq	-316(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_243
# %bb.242:
	jmp	.LBB12_245
.LBB12_243:
	jmp	.LBB12_244
.LBB12_244:
	movsd	.LCPI12_59(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_245:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.132(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -320(%rbp)
	movslq	-320(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_247
# %bb.246:
	jmp	.LBB12_249
.LBB12_247:
	jmp	.LBB12_248
.LBB12_248:
	movsd	.LCPI12_60(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_249:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.133(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -324(%rbp)
	movslq	-324(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_251
# %bb.250:
	jmp	.LBB12_253
.LBB12_251:
	jmp	.LBB12_252
.LBB12_252:
	movsd	.LCPI12_61(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_253:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.134(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -328(%rbp)
	movslq	-328(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_255
# %bb.254:
	jmp	.LBB12_257
.LBB12_255:
	jmp	.LBB12_256
.LBB12_256:
	movsd	.LCPI12_62(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_257:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.135(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -332(%rbp)
	movslq	-332(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_259
# %bb.258:
	jmp	.LBB12_261
.LBB12_259:
	jmp	.LBB12_260
.LBB12_260:
	movsd	.LCPI12_63(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_261:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.136(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -336(%rbp)
	movslq	-336(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_263
# %bb.262:
	jmp	.LBB12_265
.LBB12_263:
	jmp	.LBB12_264
.LBB12_264:
	movsd	.LCPI12_64(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_265:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.137(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -340(%rbp)
	movslq	-340(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_267
# %bb.266:
	jmp	.LBB12_269
.LBB12_267:
	jmp	.LBB12_268
.LBB12_268:
	movsd	.LCPI12_65(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_269:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.138(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -344(%rbp)
	movslq	-344(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_271
# %bb.270:
	jmp	.LBB12_273
.LBB12_271:
	jmp	.LBB12_272
.LBB12_272:
	movsd	.LCPI12_66(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_273:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.139(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -348(%rbp)
	movslq	-348(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_275
# %bb.274:
	jmp	.LBB12_277
.LBB12_275:
	jmp	.LBB12_276
.LBB12_276:
	movsd	.LCPI12_67(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_277:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.140(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -352(%rbp)
	movslq	-352(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_279
# %bb.278:
	jmp	.LBB12_281
.LBB12_279:
	jmp	.LBB12_280
.LBB12_280:
	movsd	.LCPI12_68(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_281:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.141(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -356(%rbp)
	movslq	-356(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_283
# %bb.282:
	jmp	.LBB12_285
.LBB12_283:
	jmp	.LBB12_284
.LBB12_284:
	movsd	.LCPI12_69(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_285:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.142(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -360(%rbp)
	movslq	-360(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_287
# %bb.286:
	jmp	.LBB12_289
.LBB12_287:
	jmp	.LBB12_288
.LBB12_288:
	movsd	.LCPI12_70(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_289:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.143(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -364(%rbp)
	movslq	-364(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_291
# %bb.290:
	jmp	.LBB12_293
.LBB12_291:
	jmp	.LBB12_292
.LBB12_292:
	movsd	.LCPI12_71(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_293:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.144(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -368(%rbp)
	movslq	-368(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_295
# %bb.294:
	jmp	.LBB12_297
.LBB12_295:
	jmp	.LBB12_296
.LBB12_296:
	movsd	.LCPI12_72(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_297:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.145(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -372(%rbp)
	movslq	-372(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_299
# %bb.298:
	jmp	.LBB12_301
.LBB12_299:
	jmp	.LBB12_300
.LBB12_300:
	movsd	.LCPI12_73(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_301:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.146(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -376(%rbp)
	movslq	-376(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_303
# %bb.302:
	jmp	.LBB12_305
.LBB12_303:
	jmp	.LBB12_304
.LBB12_304:
	movsd	.LCPI12_74(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_305:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.147(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -380(%rbp)
	movslq	-380(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_307
# %bb.306:
	jmp	.LBB12_309
.LBB12_307:
	jmp	.LBB12_308
.LBB12_308:
	movsd	.LCPI12_75(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_309:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.148(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -384(%rbp)
	movslq	-384(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_311
# %bb.310:
	jmp	.LBB12_313
.LBB12_311:
	jmp	.LBB12_312
.LBB12_312:
	movsd	.LCPI12_76(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_313:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.149(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -388(%rbp)
	movslq	-388(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_315
# %bb.314:
	jmp	.LBB12_317
.LBB12_315:
	jmp	.LBB12_316
.LBB12_316:
	movsd	.LCPI12_77(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_317:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.150(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -392(%rbp)
	movslq	-392(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_319
# %bb.318:
	jmp	.LBB12_321
.LBB12_319:
	jmp	.LBB12_320
.LBB12_320:
	movsd	.LCPI12_78(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_321:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.151(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -396(%rbp)
	movslq	-396(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_323
# %bb.322:
	jmp	.LBB12_325
.LBB12_323:
	jmp	.LBB12_324
.LBB12_324:
	movsd	.LCPI12_79(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_325:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.152(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -400(%rbp)
	movslq	-400(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_327
# %bb.326:
	jmp	.LBB12_329
.LBB12_327:
	jmp	.LBB12_328
.LBB12_328:
	movsd	.LCPI12_80(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_329:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.153(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -404(%rbp)
	movslq	-404(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_331
# %bb.330:
	jmp	.LBB12_333
.LBB12_331:
	jmp	.LBB12_332
.LBB12_332:
	movsd	.LCPI12_81(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_333:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.154(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -408(%rbp)
	movslq	-408(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_335
# %bb.334:
	jmp	.LBB12_337
.LBB12_335:
	jmp	.LBB12_336
.LBB12_336:
	movsd	.LCPI12_82(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_337:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.155(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -412(%rbp)
	movslq	-412(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_339
# %bb.338:
	jmp	.LBB12_341
.LBB12_339:
	jmp	.LBB12_340
.LBB12_340:
	movsd	.LCPI12_83(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_341:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.156(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -416(%rbp)
	movslq	-416(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_343
# %bb.342:
	jmp	.LBB12_345
.LBB12_343:
	jmp	.LBB12_344
.LBB12_344:
	movsd	.LCPI12_84(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_345:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.157(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -420(%rbp)
	movslq	-420(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_347
# %bb.346:
	jmp	.LBB12_349
.LBB12_347:
	jmp	.LBB12_348
.LBB12_348:
	movsd	.LCPI12_85(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_349:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.158(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -424(%rbp)
	movslq	-424(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_351
# %bb.350:
	jmp	.LBB12_353
.LBB12_351:
	jmp	.LBB12_352
.LBB12_352:
	movsd	.LCPI12_86(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_353:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.159(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -428(%rbp)
	movslq	-428(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_355
# %bb.354:
	jmp	.LBB12_357
.LBB12_355:
	jmp	.LBB12_356
.LBB12_356:
	movsd	.LCPI12_87(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_357:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.160(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -432(%rbp)
	movslq	-432(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_359
# %bb.358:
	jmp	.LBB12_361
.LBB12_359:
	jmp	.LBB12_360
.LBB12_360:
	movsd	.LCPI12_88(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_361:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.161(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -436(%rbp)
	movslq	-436(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_363
# %bb.362:
	jmp	.LBB12_365
.LBB12_363:
	jmp	.LBB12_364
.LBB12_364:
	movsd	.LCPI12_89(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_365:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.162(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -440(%rbp)
	movslq	-440(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_367
# %bb.366:
	jmp	.LBB12_369
.LBB12_367:
	jmp	.LBB12_368
.LBB12_368:
	movsd	.LCPI12_90(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_369:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.163(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -444(%rbp)
	movslq	-444(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_371
# %bb.370:
	jmp	.LBB12_373
.LBB12_371:
	jmp	.LBB12_372
.LBB12_372:
	movsd	.LCPI12_91(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_373:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.164(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -448(%rbp)
	movslq	-448(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_375
# %bb.374:
	jmp	.LBB12_377
.LBB12_375:
	jmp	.LBB12_376
.LBB12_376:
	movsd	.LCPI12_92(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB12_382
.LBB12_377:
	leaq	-40(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.165(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -452(%rbp)
	movslq	-452(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB12_379
# %bb.378:
	jmp	.LBB12_381
.LBB12_379:
	jmp	.LBB12_380
.LBB12_380:
	movsd	.LCPI12_93(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
.LBB12_381:
	jmp	.LBB12_382
.LBB12_382:
	leaq	-40(%rbp), %rdi
	callq	fb_StrDelete@PLT
# %bb.383:
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	movsd	%xmm0, -464(%rbp)       # 8-byte Spill
	jne	.LBB12_385
# %bb.384:                              # %SP_return
	movsd	-464(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addq	$464, %rsp              # imm = 0x1D0
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB12_385:                             # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end12:
	.size	_ZN8MEMORY_T10SCREENCODEEd, .Lfunc_end12-_ZN8MEMORY_T10SCREENCODEEd
	.cfi_endproc
                                        # -- End function
	.globl	_ZN8MEMORY_T5PEEKBEd    # -- Begin function _ZN8MEMORY_T5PEEKBEd
	.p2align	4, 0x90
	.type	_ZN8MEMORY_T5PEEKBEd,@function
_ZN8MEMORY_T5PEEKBEd:                   # @_ZN8MEMORY_T5PEEKBEd
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	xorl	%esi, %esi
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movsd	%xmm0, -32(%rbp)
	leaq	-16(%rbp), %rax
	movq	%rax, %rdi
	movl	$8, %edx
	callq	memset@PLT
# %bb.1:
	movq	-24(%rbp), %rax
	movsd	-32(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-40(%rbp), %rcx         # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
# %bb.2:
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	movsd	%xmm0, -48(%rbp)        # 8-byte Spill
	jne	.LBB13_4
# %bb.3:                                # %SP_return
	movsd	-48(%rbp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB13_4:                               # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end13:
	.size	_ZN8MEMORY_T5PEEKBEd, .Lfunc_end13-_ZN8MEMORY_T5PEEKBEd
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function _ZN8MEMORY_T5PEEKWEd
.LCPI14_0:
	.quad	4607182418800017408     # double 1
	.text
	.globl	_ZN8MEMORY_T5PEEKWEd
	.p2align	4, 0x90
	.type	_ZN8MEMORY_T5PEEKWEd,@function
_ZN8MEMORY_T5PEEKWEd:                   # @_ZN8MEMORY_T5PEEKWEd
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	xorl	%esi, %esi
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movsd	%xmm0, -32(%rbp)
	leaq	-16(%rbp), %rax
	movq	%rax, %rdi
	movl	$8, %edx
	callq	memset@PLT
# %bb.1:
	movq	-24(%rbp), %rdi
	movsd	-32(%rbp), %xmm0        # xmm0 = mem[0],zero
	callq	_ZN8MEMORY_T5PEEKBEd
	movsd	.LCPI14_0(%rip), %xmm1  # xmm1 = mem[0],zero
	movsd	%xmm0, -40(%rbp)
	movq	-24(%rbp), %rdi
	addsd	-32(%rbp), %xmm1
	movaps	%xmm1, %xmm0
	callq	_ZN8MEMORY_T5PEEKBEd
	movsd	%xmm0, -48(%rbp)
	movsd	-40(%rbp), %xmm0        # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movsd	-48(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	orq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movsd	%xmm0, -16(%rbp)
# %bb.2:
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	movsd	%xmm0, -64(%rbp)        # 8-byte Spill
	jne	.LBB14_4
# %bb.3:                                # %SP_return
	movsd	-64(%rbp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB14_4:                               # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end14:
	.size	_ZN8MEMORY_T5PEEKWEd, .Lfunc_end14-_ZN8MEMORY_T5PEEKWEd
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function _ZN8MEMORY_T5POKEBEdd
.LCPI15_0:
	.quad	4607182418800017408     # double 1
.LCPI15_1:
	.quad	4611686018427387904     # double 2
.LCPI15_2:
	.quad	4613937818241073152     # double 3
.LCPI15_3:
	.quad	4616189618054758400     # double 4
.LCPI15_4:
	.quad	4617315517961601024     # double 5
.LCPI15_5:
	.quad	4618441417868443648     # double 6
.LCPI15_6:
	.quad	4619567317775286272     # double 7
.LCPI15_7:
	.quad	4620693217682128896     # double 8
.LCPI15_8:
	.quad	4621256167635550208     # double 9
.LCPI15_9:
	.quad	4621819117588971520     # double 10
.LCPI15_10:
	.quad	4622382067542392832     # double 11
.LCPI15_11:
	.quad	4622945017495814144     # double 12
.LCPI15_12:
	.quad	4623507967449235456     # double 13
.LCPI15_13:
	.quad	4624070917402656768     # double 14
.LCPI15_14:
	.quad	4624633867356078080     # double 15
.LCPI15_15:
	.quad	4625196817309499392     # double 16
.LCPI15_16:
	.quad	4625478292286210048     # double 17
.LCPI15_17:
	.quad	4625759767262920704     # double 18
.LCPI15_18:
	.quad	4626041242239631360     # double 19
.LCPI15_19:
	.quad	4626322717216342016     # double 20
.LCPI15_20:
	.quad	4626604192193052672     # double 21
.LCPI15_21:
	.quad	4626885667169763328     # double 22
.LCPI15_22:
	.quad	4627167142146473984     # double 23
.LCPI15_23:
	.quad	4627448617123184640     # double 24
.LCPI15_24:
	.quad	4627730092099895296     # double 25
.LCPI15_25:
	.quad	4628011567076605952     # double 26
.LCPI15_26:
	.quad	4628293042053316608     # double 27
.LCPI15_27:
	.quad	4628574517030027264     # double 28
.LCPI15_28:
	.quad	4628855992006737920     # double 29
.LCPI15_29:
	.quad	4629137466983448576     # double 30
.LCPI15_30:
	.quad	4629418941960159232     # double 31
.LCPI15_31:
	.quad	4629700416936869888     # double 32
.LCPI15_32:
	.quad	4629841154425225216     # double 33
.LCPI15_33:
	.quad	4629981891913580544     # double 34
.LCPI15_34:
	.quad	4630122629401935872     # double 35
.LCPI15_35:
	.quad	4630263366890291200     # double 36
.LCPI15_36:
	.quad	4630404104378646528     # double 37
.LCPI15_37:
	.quad	4630544841867001856     # double 38
.LCPI15_38:
	.quad	4630685579355357184     # double 39
.LCPI15_39:
	.quad	4630826316843712512     # double 40
.LCPI15_40:
	.quad	4630967054332067840     # double 41
.LCPI15_41:
	.quad	4631107791820423168     # double 42
.LCPI15_42:
	.quad	4631248529308778496     # double 43
.LCPI15_43:
	.quad	4631389266797133824     # double 44
.LCPI15_44:
	.quad	4631530004285489152     # double 45
.LCPI15_45:
	.quad	4631670741773844480     # double 46
.LCPI15_46:
	.quad	4631811479262199808     # double 47
.LCPI15_47:
	.quad	4631952216750555136     # double 48
.LCPI15_48:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
.LCPI15_49:
	.quad	4632092954238910464     # double 49
.LCPI15_50:
	.quad	4632233691727265792     # double 50
.LCPI15_51:
	.quad	4632374429215621120     # double 51
.LCPI15_52:
	.quad	4632515166703976448     # double 52
.LCPI15_53:
	.quad	4632655904192331776     # double 53
.LCPI15_54:
	.quad	4632796641680687104     # double 54
.LCPI15_55:
	.quad	4632937379169042432     # double 55
.LCPI15_56:
	.quad	4633078116657397760     # double 56
.LCPI15_57:
	.quad	4633218854145753088     # double 57
.LCPI15_58:
	.quad	4633359591634108416     # double 58
.LCPI15_59:
	.quad	4633500329122463744     # double 59
.LCPI15_60:
	.quad	4633641066610819072     # double 60
.LCPI15_61:
	.quad	4633781804099174400     # double 61
.LCPI15_62:
	.quad	4633922541587529728     # double 62
.LCPI15_63:
	.quad	4634063279075885056     # double 63
.LCPI15_64:
	.quad	4634204016564240384     # double 64
.LCPI15_65:
	.quad	4634274385308418048     # double 65
.LCPI15_66:
	.quad	4634344754052595712     # double 66
.LCPI15_67:
	.quad	4634415122796773376     # double 67
.LCPI15_68:
	.quad	4634485491540951040     # double 68
.LCPI15_69:
	.quad	4634555860285128704     # double 69
.LCPI15_70:
	.quad	4634626229029306368     # double 70
.LCPI15_71:
	.quad	4634696597773484032     # double 71
.LCPI15_72:
	.quad	4634766966517661696     # double 72
.LCPI15_73:
	.quad	4634837335261839360     # double 73
.LCPI15_74:
	.quad	4634907704006017024     # double 74
.LCPI15_75:
	.quad	4634978072750194688     # double 75
.LCPI15_76:
	.quad	4635048441494372352     # double 76
.LCPI15_77:
	.quad	4635118810238550016     # double 77
.LCPI15_78:
	.quad	4635189178982727680     # double 78
.LCPI15_79:
	.quad	4635259547726905344     # double 79
.LCPI15_80:
	.quad	4635329916471083008     # double 80
.LCPI15_81:
	.quad	4635400285215260672     # double 81
.LCPI15_82:
	.quad	4635470653959438336     # double 82
.LCPI15_83:
	.quad	4635541022703616000     # double 83
.LCPI15_84:
	.quad	4635611391447793664     # double 84
.LCPI15_85:
	.quad	4635681760191971328     # double 85
.LCPI15_86:
	.quad	4635752128936148992     # double 86
.LCPI15_87:
	.quad	4635822497680326656     # double 87
.LCPI15_88:
	.quad	4635892866424504320     # double 88
.LCPI15_89:
	.quad	4635963235168681984     # double 89
.LCPI15_90:
	.quad	4636033603912859648     # double 90
.LCPI15_91:
	.quad	4636103972657037312     # double 91
.LCPI15_92:
	.quad	4636174341401214976     # double 92
.LCPI15_93:
	.quad	4636244710145392640     # double 93
.LCPI15_94:
	.quad	4636315078889570304     # double 94
.LCPI15_95:
	.quad	4636385447633747968     # double 95
.LCPI15_96:
	.quad	4636455816377925632     # double 96
.LCPI15_97:
	.quad	4636526185122103296     # double 97
.LCPI15_98:
	.quad	-4616189618054758400    # double -1
.LCPI15_99:
	.quad	4636596553866280960     # double 98
.LCPI15_100:
	.quad	4636666922610458624     # double 99
.LCPI15_101:
	.quad	4636737291354636288     # double 100
.LCPI15_102:
	.quad	4636807660098813952     # double 101
.LCPI15_103:
	.quad	4636878028842991616     # double 102
.LCPI15_104:
	.quad	4636948397587169280     # double 103
.LCPI15_105:
	.quad	4637018766331346944     # double 104
.LCPI15_106:
	.quad	4637089135075524608     # double 105
.LCPI15_107:
	.quad	4637159503819702272     # double 106
.LCPI15_108:
	.quad	4637229872563879936     # double 107
.LCPI15_109:
	.quad	4637300241308057600     # double 108
.LCPI15_110:
	.quad	4637370610052235264     # double 109
.LCPI15_113:
	.quad	4637440978796412928     # double 110
.LCPI15_114:
	.quad	4637511347540590592     # double 111
.LCPI15_115:
	.quad	4637581716284768256     # double 112
.LCPI15_116:
	.quad	4637652085028945920     # double 113
.LCPI15_117:
	.quad	4637722453773123584     # double 114
.LCPI15_118:
	.quad	4637792822517301248     # double 115
.LCPI15_119:
	.quad	4637863191261478912     # double 116
.LCPI15_120:
	.quad	4637933560005656576     # double 117
.LCPI15_121:
	.quad	4638003928749834240     # double 118
.LCPI15_122:
	.quad	4670232813583204352     # double 16384
.LCPI15_123:
	.quad	4674626462047797248     # double 32368
.LCPI15_124:
	.quad	4627589354611539968     # double 24.5
.LCPI15_125:
	.quad	-4553139223271571456    # double -16384
.LCPI15_126:
	.quad	4677023672274255872     # double 49410
.LCPI15_127:
	.quad	4677022847640535040     # double 49404
.LCPI15_128:
	.quad	4677023947152162816     # double 49412
.LCPI15_129:
	.quad	4693876711626899456     # double 655360
.LCPI15_130:
	.quad	4693876720216834048     # double 655361
.LCPI15_131:
	.quad	4693876728806768640     # double 655362
.LCPI15_133:
	.quad	4695002611533742080     # double 786432
.LCPI15_134:
	.quad	4695283949071499264     # double 819184
.LCPI15_135:
	.quad	-4528369425321033728    # double -786432
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI15_111:
	.long	1127219200              # 0x43300000
	.long	1160773632              # 0x45300000
	.long	0                       # 0x0
	.long	0                       # 0x0
.LCPI15_112:
	.quad	4841369599423283200     # double 4503599627370496
	.quad	4985484787499139072     # double 1.9342813113834067E+25
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2
.LCPI15_132:
	.long	1086918620              # float 6.28318596
	.text
	.globl	_ZN8MEMORY_T5POKEBEdd
	.p2align	4, 0x90
	.type	_ZN8MEMORY_T5POKEBEdd,@function
_ZN8MEMORY_T5POKEBEdd:                  # @_ZN8MEMORY_T5POKEBEdd
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$2304, %rsp             # imm = 0x900
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -56(%rbp)
	movsd	%xmm0, -64(%rbp)
	movsd	%xmm1, -72(%rbp)
# %bb.1:
	movsd	.LCPI15_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	-72(%rbp), %xmm1        # xmm1 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	-64(%rbp), %xmm2        # xmm2 = mem[0],zero
	movsd	%xmm0, -256(%rbp)       # 8-byte Spill
	movaps	%xmm2, %xmm0
	movsd	%xmm1, -264(%rbp)       # 8-byte Spill
	movq	%rax, -272(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-272(%rbp), %rcx        # 8-byte Reload
	movsd	-264(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	%xmm0, (%rcx,%rax)
	movsd	-64(%rbp), %xmm0        # xmm0 = mem[0],zero
	movsd	-256(%rbp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	ucomisd	%xmm1, %xmm0
	jne	.LBB15_2
	jp	.LBB15_2
	jmp	.LBB15_3
.LBB15_2:
	jmp	.LBB15_5
.LBB15_3:
	jmp	.LBB15_4
.LBB15_4:
	movsd	-72(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_5:
	movsd	.LCPI15_1(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_6
	jp	.LBB15_6
	jmp	.LBB15_7
.LBB15_6:
	jmp	.LBB15_9
.LBB15_7:
	jmp	.LBB15_8
.LBB15_8:
	movsd	-72(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394896(%rax)
	jmp	.LBB15_555
.LBB15_9:
	movsd	.LCPI15_2(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_10
	jp	.LBB15_10
	jmp	.LBB15_11
.LBB15_10:
	jmp	.LBB15_13
.LBB15_11:
	jmp	.LBB15_12
.LBB15_12:
	movsd	-72(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394904(%rax)
	jmp	.LBB15_555
.LBB15_13:
	movsd	.LCPI15_3(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_14
	jp	.LBB15_14
	jmp	.LBB15_15
.LBB15_14:
	jmp	.LBB15_17
.LBB15_15:
	jmp	.LBB15_16
.LBB15_16:
	movq	-56(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_17:
	movsd	.LCPI15_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_18
	jp	.LBB15_18
	jmp	.LBB15_19
.LBB15_18:
	jmp	.LBB15_21
.LBB15_19:
	jmp	.LBB15_20
.LBB15_20:
	movq	-56(%rbp), %rax
	movsd	394904(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_21:
	movsd	.LCPI15_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_22
	jp	.LBB15_22
	jmp	.LBB15_23
.LBB15_22:
	jmp	.LBB15_25
.LBB15_23:
	jmp	.LBB15_24
.LBB15_24:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394896(%rax)
	jmp	.LBB15_555
.LBB15_25:
	movsd	.LCPI15_6(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_26
	jp	.LBB15_26
	jmp	.LBB15_27
.LBB15_26:
	jmp	.LBB15_29
.LBB15_27:
	jmp	.LBB15_28
.LBB15_28:
	movq	-56(%rbp), %rax
	movsd	394904(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394896(%rax)
	jmp	.LBB15_555
.LBB15_29:
	movsd	.LCPI15_7(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_30
	jp	.LBB15_30
	jmp	.LBB15_31
.LBB15_30:
	jmp	.LBB15_33
.LBB15_31:
	jmp	.LBB15_32
.LBB15_32:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394904(%rax)
	jmp	.LBB15_555
.LBB15_33:
	movsd	.LCPI15_8(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_34
	jp	.LBB15_34
	jmp	.LBB15_35
.LBB15_34:
	jmp	.LBB15_37
.LBB15_35:
	jmp	.LBB15_36
.LBB15_36:
	movq	-56(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394904(%rax)
	jmp	.LBB15_555
.LBB15_37:
	movsd	.LCPI15_9(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_38
	jp	.LBB15_38
	jmp	.LBB15_39
.LBB15_38:
	jmp	.LBB15_41
.LBB15_39:
	jmp	.LBB15_40
.LBB15_40:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 395344(%rax)
	jmp	.LBB15_555
.LBB15_41:
	movsd	.LCPI15_10(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_42
	jp	.LBB15_42
	jmp	.LBB15_43
.LBB15_42:
	jmp	.LBB15_45
.LBB15_43:
	jmp	.LBB15_44
.LBB15_44:
	movq	-56(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 395344(%rax)
	jmp	.LBB15_555
.LBB15_45:
	movsd	.LCPI15_11(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_46
	jp	.LBB15_46
	jmp	.LBB15_47
.LBB15_46:
	jmp	.LBB15_49
.LBB15_47:
	jmp	.LBB15_48
.LBB15_48:
	movq	-56(%rbp), %rax
	movsd	394904(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 395344(%rax)
	jmp	.LBB15_555
.LBB15_49:
	movsd	.LCPI15_12(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_50
	jp	.LBB15_50
	jmp	.LBB15_51
.LBB15_50:
	jmp	.LBB15_53
.LBB15_51:
	jmp	.LBB15_52
.LBB15_52:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 395400(%rax)
	jmp	.LBB15_555
.LBB15_53:
	movsd	.LCPI15_13(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_54
	jp	.LBB15_54
	jmp	.LBB15_55
.LBB15_54:
	jmp	.LBB15_57
.LBB15_55:
	jmp	.LBB15_56
.LBB15_56:
	movq	-56(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 395400(%rax)
	jmp	.LBB15_555
.LBB15_57:
	movsd	.LCPI15_14(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_58
	jp	.LBB15_58
	jmp	.LBB15_59
.LBB15_58:
	jmp	.LBB15_61
.LBB15_59:
	jmp	.LBB15_60
.LBB15_60:
	movq	-56(%rbp), %rax
	movsd	394904(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 395400(%rax)
	jmp	.LBB15_555
.LBB15_61:
	movsd	.LCPI15_15(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_62
	jp	.LBB15_62
	jmp	.LBB15_63
.LBB15_62:
	jmp	.LBB15_65
.LBB15_63:
	jmp	.LBB15_64
.LBB15_64:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 395456(%rax)
	jmp	.LBB15_555
.LBB15_65:
	movsd	.LCPI15_16(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_66
	jp	.LBB15_66
	jmp	.LBB15_67
.LBB15_66:
	jmp	.LBB15_69
.LBB15_67:
	jmp	.LBB15_68
.LBB15_68:
	movq	-56(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 395456(%rax)
	jmp	.LBB15_555
.LBB15_69:
	movsd	.LCPI15_17(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_70
	jp	.LBB15_70
	jmp	.LBB15_71
.LBB15_70:
	jmp	.LBB15_73
.LBB15_71:
	jmp	.LBB15_72
.LBB15_72:
	movq	-56(%rbp), %rax
	movsd	394904(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 395456(%rax)
	jmp	.LBB15_555
.LBB15_73:
	movsd	.LCPI15_18(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_74
	jp	.LBB15_74
	jmp	.LBB15_75
.LBB15_74:
	jmp	.LBB15_77
.LBB15_75:
	jmp	.LBB15_76
.LBB15_76:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 395568(%rax)
	jmp	.LBB15_555
.LBB15_77:
	movsd	.LCPI15_19(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_78
	jp	.LBB15_78
	jmp	.LBB15_79
.LBB15_78:
	jmp	.LBB15_81
.LBB15_79:
	jmp	.LBB15_80
.LBB15_80:
	movq	-56(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 395568(%rax)
	jmp	.LBB15_555
.LBB15_81:
	movsd	.LCPI15_20(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_82
	jp	.LBB15_82
	jmp	.LBB15_83
.LBB15_82:
	jmp	.LBB15_85
.LBB15_83:
	jmp	.LBB15_84
.LBB15_84:
	movq	-56(%rbp), %rax
	movsd	394904(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 395568(%rax)
	jmp	.LBB15_555
.LBB15_85:
	movsd	.LCPI15_21(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_86
	jp	.LBB15_86
	jmp	.LBB15_87
.LBB15_86:
	jmp	.LBB15_89
.LBB15_87:
	jmp	.LBB15_88
.LBB15_88:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 393232(%rax)
	jmp	.LBB15_555
.LBB15_89:
	movsd	.LCPI15_22(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_90
	jp	.LBB15_90
	jmp	.LBB15_91
.LBB15_90:
	jmp	.LBB15_93
.LBB15_91:
	jmp	.LBB15_92
.LBB15_92:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 393232(%rax)
	jmp	.LBB15_555
.LBB15_93:
	movsd	.LCPI15_23(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_94
	jp	.LBB15_94
	jmp	.LBB15_95
.LBB15_94:
	jmp	.LBB15_97
.LBB15_95:
	jmp	.LBB15_96
.LBB15_96:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 393232(%rax)
	jmp	.LBB15_555
.LBB15_97:
	movsd	.LCPI15_24(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_98
	jp	.LBB15_98
	jmp	.LBB15_99
.LBB15_98:
	jmp	.LBB15_101
.LBB15_99:
	jmp	.LBB15_100
.LBB15_100:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 393240(%rax)
	jmp	.LBB15_555
.LBB15_101:
	movsd	.LCPI15_25(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_102
	jp	.LBB15_102
	jmp	.LBB15_103
.LBB15_102:
	jmp	.LBB15_105
.LBB15_103:
	jmp	.LBB15_104
.LBB15_104:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 393240(%rax)
	jmp	.LBB15_555
.LBB15_105:
	movsd	.LCPI15_26(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_106
	jp	.LBB15_106
	jmp	.LBB15_107
.LBB15_106:
	jmp	.LBB15_109
.LBB15_107:
	jmp	.LBB15_108
.LBB15_108:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 393240(%rax)
	jmp	.LBB15_555
.LBB15_109:
	movsd	.LCPI15_27(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_110
	jp	.LBB15_110
	jmp	.LBB15_111
.LBB15_110:
	jmp	.LBB15_113
.LBB15_111:
	jmp	.LBB15_112
.LBB15_112:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 393248(%rax)
	jmp	.LBB15_555
.LBB15_113:
	movsd	.LCPI15_28(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_114
	jp	.LBB15_114
	jmp	.LBB15_115
.LBB15_114:
	jmp	.LBB15_117
.LBB15_115:
	jmp	.LBB15_116
.LBB15_116:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 393248(%rax)
	jmp	.LBB15_555
.LBB15_117:
	movsd	.LCPI15_29(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_118
	jp	.LBB15_118
	jmp	.LBB15_119
.LBB15_118:
	jmp	.LBB15_121
.LBB15_119:
	jmp	.LBB15_120
.LBB15_120:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 393248(%rax)
	jmp	.LBB15_555
.LBB15_121:
	movsd	.LCPI15_30(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_122
	jp	.LBB15_122
	jmp	.LBB15_123
.LBB15_122:
	jmp	.LBB15_125
.LBB15_123:
	jmp	.LBB15_124
.LBB15_124:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 393256(%rax)
	jmp	.LBB15_555
.LBB15_125:
	movsd	.LCPI15_31(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_126
	jp	.LBB15_126
	jmp	.LBB15_127
.LBB15_126:
	jmp	.LBB15_129
.LBB15_127:
	jmp	.LBB15_128
.LBB15_128:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 393256(%rax)
	jmp	.LBB15_555
.LBB15_129:
	movsd	.LCPI15_32(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_130
	jp	.LBB15_130
	jmp	.LBB15_131
.LBB15_130:
	jmp	.LBB15_133
.LBB15_131:
	jmp	.LBB15_132
.LBB15_132:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 393256(%rax)
	jmp	.LBB15_555
.LBB15_133:
	movsd	.LCPI15_33(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_134
	jp	.LBB15_134
	jmp	.LBB15_135
.LBB15_134:
	jmp	.LBB15_137
.LBB15_135:
	jmp	.LBB15_136
.LBB15_136:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394840(%rax)
	jmp	.LBB15_555
.LBB15_137:
	movsd	.LCPI15_34(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_138
	jp	.LBB15_138
	jmp	.LBB15_139
.LBB15_138:
	jmp	.LBB15_141
.LBB15_139:
	jmp	.LBB15_140
.LBB15_140:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394864(%rax)
	jmp	.LBB15_555
.LBB15_141:
	movsd	.LCPI15_35(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_142
	jp	.LBB15_142
	jmp	.LBB15_143
.LBB15_142:
	jmp	.LBB15_145
.LBB15_143:
	jmp	.LBB15_144
.LBB15_144:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394848(%rax)
	jmp	.LBB15_555
.LBB15_145:
	movsd	.LCPI15_36(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_146
	jp	.LBB15_146
	jmp	.LBB15_147
.LBB15_146:
	jmp	.LBB15_149
.LBB15_147:
	jmp	.LBB15_148
.LBB15_148:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394872(%rax)
	jmp	.LBB15_555
.LBB15_149:
	movsd	.LCPI15_37(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_150
	jp	.LBB15_150
	jmp	.LBB15_151
.LBB15_150:
	jmp	.LBB15_153
.LBB15_151:
	jmp	.LBB15_152
.LBB15_152:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394856(%rax)
	jmp	.LBB15_555
.LBB15_153:
	movsd	.LCPI15_38(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_154
	jp	.LBB15_154
	jmp	.LBB15_155
.LBB15_154:
	jmp	.LBB15_157
.LBB15_155:
	jmp	.LBB15_156
.LBB15_156:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394880(%rax)
	jmp	.LBB15_555
.LBB15_157:
	movsd	.LCPI15_39(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_158
	jp	.LBB15_158
	jmp	.LBB15_159
.LBB15_158:
	jmp	.LBB15_161
.LBB15_159:
	jmp	.LBB15_160
.LBB15_160:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394824(%rax)
	jmp	.LBB15_555
.LBB15_161:
	movsd	.LCPI15_40(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_162
	jp	.LBB15_162
	jmp	.LBB15_163
.LBB15_162:
	jmp	.LBB15_165
.LBB15_163:
	jmp	.LBB15_164
.LBB15_164:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394832(%rax)
	jmp	.LBB15_555
.LBB15_165:
	movsd	.LCPI15_41(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_166
	jp	.LBB15_166
	jmp	.LBB15_167
.LBB15_166:
	jmp	.LBB15_169
.LBB15_167:
	jmp	.LBB15_168
.LBB15_168:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	cvtsd2ss	%xmm0, %xmm0
	movss	%xmm0, CHAR_H$(%rip)
	jmp	.LBB15_555
.LBB15_169:
	movsd	.LCPI15_42(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_170
	jp	.LBB15_170
	jmp	.LBB15_171
.LBB15_170:
	jmp	.LBB15_173
.LBB15_171:
	jmp	.LBB15_172
.LBB15_172:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	cvtsd2ss	%xmm0, %xmm0
	movss	%xmm0, CHAR_W$(%rip)
	jmp	.LBB15_555
.LBB15_173:
	movsd	.LCPI15_43(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_174
	jp	.LBB15_174
	jmp	.LBB15_175
.LBB15_174:
	jmp	.LBB15_177
.LBB15_175:
	jmp	.LBB15_176
.LBB15_176:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	cvtsd2ss	%xmm0, %xmm0
	movss	%xmm0, CHAR_PTR$(%rip)
	jmp	.LBB15_555
.LBB15_177:
	movsd	.LCPI15_44(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_178
	jp	.LBB15_178
	jmp	.LBB15_179
.LBB15_178:
	jmp	.LBB15_181
.LBB15_179:
	jmp	.LBB15_180
.LBB15_180:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
                                        # kill: def $eax killed $eax killed $rax
	movl	%eax, CHAR_BUFFER$(%rip)
	jmp	.LBB15_555
.LBB15_181:
	movsd	.LCPI15_45(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_182
	jp	.LBB15_182
	jmp	.LBB15_183
.LBB15_182:
	jmp	.LBB15_185
.LBB15_183:
	jmp	.LBB15_184
.LBB15_184:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
                                        # kill: def $eax killed $eax killed $rax
	movl	%eax, BITMASK$(%rip)
	jmp	.LBB15_555
.LBB15_185:
	movsd	.LCPI15_46(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_186
	jp	.LBB15_186
	jmp	.LBB15_187
.LBB15_186:
	jmp	.LBB15_189
.LBB15_187:
	jmp	.LBB15_188
.LBB15_188:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
                                        # kill: def $eax killed $eax killed $rax
	movl	%eax, PIXEL_SIZE$(%rip)
	jmp	.LBB15_555
.LBB15_189:
	movsd	.LCPI15_47(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_190
	jp	.LBB15_190
	jmp	.LBB15_191
.LBB15_190:
	jmp	.LBB15_193
.LBB15_191:
	jmp	.LBB15_192
.LBB15_192:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI15_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
	movq	%rax, RADIUS$(%rip)
	jmp	.LBB15_555
.LBB15_193:
	movsd	.LCPI15_49(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_194
	jp	.LBB15_194
	jmp	.LBB15_195
.LBB15_194:
	jmp	.LBB15_197
.LBB15_195:
	jmp	.LBB15_196
.LBB15_196:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
                                        # kill: def $eax killed $eax killed $rax
	movl	%eax, STRING_ADR$(%rip)
	jmp	.LBB15_555
.LBB15_197:
	movsd	.LCPI15_50(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_198
	jp	.LBB15_198
	jmp	.LBB15_199
.LBB15_198:
	jmp	.LBB15_201
.LBB15_199:
	jmp	.LBB15_200
.LBB15_200:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
                                        # kill: def $eax killed $eax killed $rax
	movl	%eax, STRING_LEN$(%rip)
	jmp	.LBB15_555
.LBB15_201:
	movsd	.LCPI15_51(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_202
	jp	.LBB15_202
	jmp	.LBB15_203
.LBB15_202:
	jmp	.LBB15_205
.LBB15_203:
	jmp	.LBB15_204
.LBB15_204:
	movq	-56(%rbp), %rax
	movsd	394840(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_205:
	movsd	.LCPI15_52(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_206
	jp	.LBB15_206
	jmp	.LBB15_207
.LBB15_206:
	jmp	.LBB15_209
.LBB15_207:
	jmp	.LBB15_208
.LBB15_208:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394840(%rax)
	jmp	.LBB15_555
.LBB15_209:
	movsd	.LCPI15_53(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_210
	jp	.LBB15_210
	jmp	.LBB15_211
.LBB15_210:
	jmp	.LBB15_213
.LBB15_211:
	jmp	.LBB15_212
.LBB15_212:
	movq	-56(%rbp), %rax
	movsd	394848(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_213:
	movsd	.LCPI15_54(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_214
	jp	.LBB15_214
	jmp	.LBB15_215
.LBB15_214:
	jmp	.LBB15_217
.LBB15_215:
	jmp	.LBB15_216
.LBB15_216:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394848(%rax)
	jmp	.LBB15_555
.LBB15_217:
	movsd	.LCPI15_55(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_218
	jp	.LBB15_218
	jmp	.LBB15_219
.LBB15_218:
	jmp	.LBB15_221
.LBB15_219:
	jmp	.LBB15_220
.LBB15_220:
	movq	-56(%rbp), %rax
	movsd	394856(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_221:
	movsd	.LCPI15_56(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_222
	jp	.LBB15_222
	jmp	.LBB15_223
.LBB15_222:
	jmp	.LBB15_225
.LBB15_223:
	jmp	.LBB15_224
.LBB15_224:
	movq	-56(%rbp), %rax
	movsd	394864(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_225:
	movsd	.LCPI15_57(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_226
	jp	.LBB15_226
	jmp	.LBB15_227
.LBB15_226:
	jmp	.LBB15_229
.LBB15_227:
	jmp	.LBB15_228
.LBB15_228:
	movq	-56(%rbp), %rax
	movsd	394872(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_229:
	movsd	.LCPI15_58(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_230
	jp	.LBB15_230
	jmp	.LBB15_231
.LBB15_230:
	jmp	.LBB15_233
.LBB15_231:
	jmp	.LBB15_232
.LBB15_232:
	movq	-56(%rbp), %rax
	movsd	394880(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_233:
	movsd	.LCPI15_59(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_234
	jp	.LBB15_234
	jmp	.LBB15_235
.LBB15_234:
	jmp	.LBB15_237
.LBB15_235:
	jmp	.LBB15_236
.LBB15_236:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394880(%rax)
	jmp	.LBB15_555
.LBB15_237:
	movsd	.LCPI15_60(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_238
	jp	.LBB15_238
	jmp	.LBB15_239
.LBB15_238:
	jmp	.LBB15_241
.LBB15_239:
	jmp	.LBB15_240
.LBB15_240:
	movq	-56(%rbp), %rax
	movsd	394872(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_241:
	movsd	.LCPI15_61(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_242
	jp	.LBB15_242
	jmp	.LBB15_243
.LBB15_242:
	jmp	.LBB15_245
.LBB15_243:
	jmp	.LBB15_244
.LBB15_244:
	movq	-56(%rbp), %rax
	movsd	394880(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_245:
	movsd	.LCPI15_62(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_246
	jp	.LBB15_246
	jmp	.LBB15_247
.LBB15_246:
	jmp	.LBB15_249
.LBB15_247:
	jmp	.LBB15_248
.LBB15_248:
	movss	A1$(%rip), %xmm0        # xmm0 = mem[0],zero,zero,zero
	cvtss2sd	%xmm0, %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_249:
	movsd	.LCPI15_63(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_250
	jp	.LBB15_250
	jmp	.LBB15_251
.LBB15_250:
	jmp	.LBB15_253
.LBB15_251:
	jmp	.LBB15_252
.LBB15_252:
	movss	A2$(%rip), %xmm0        # xmm0 = mem[0],zero,zero,zero
	cvtss2sd	%xmm0, %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_253:
	movsd	.LCPI15_64(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_254
	jp	.LBB15_254
	jmp	.LBB15_255
.LBB15_254:
	jmp	.LBB15_257
.LBB15_255:
	jmp	.LBB15_256
.LBB15_256:
	movss	A3$(%rip), %xmm0        # xmm0 = mem[0],zero,zero,zero
	cvtss2sd	%xmm0, %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_257:
	movsd	.LCPI15_65(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_258
	jp	.LBB15_258
	jmp	.LBB15_259
.LBB15_258:
	jmp	.LBB15_261
.LBB15_259:
	jmp	.LBB15_260
.LBB15_260:
	movss	A4$(%rip), %xmm0        # xmm0 = mem[0],zero,zero,zero
	cvtss2sd	%xmm0, %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_261:
	movsd	.LCPI15_66(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_262
	jp	.LBB15_262
	jmp	.LBB15_263
.LBB15_262:
	jmp	.LBB15_265
.LBB15_263:
	jmp	.LBB15_264
.LBB15_264:
	movss	A5$(%rip), %xmm0        # xmm0 = mem[0],zero,zero,zero
	cvtss2sd	%xmm0, %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_265:
	movsd	.LCPI15_67(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_266
	jp	.LBB15_266
	jmp	.LBB15_267
.LBB15_266:
	jmp	.LBB15_269
.LBB15_267:
	jmp	.LBB15_268
.LBB15_268:
	movss	A6$(%rip), %xmm0        # xmm0 = mem[0],zero,zero,zero
	cvtss2sd	%xmm0, %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_269:
	movsd	.LCPI15_68(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_270
	jp	.LBB15_270
	jmp	.LBB15_271
.LBB15_270:
	jmp	.LBB15_273
.LBB15_271:
	jmp	.LBB15_272
.LBB15_272:
	movss	A7$(%rip), %xmm0        # xmm0 = mem[0],zero,zero,zero
	cvtss2sd	%xmm0, %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_273:
	movsd	.LCPI15_69(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_274
	jp	.LBB15_274
	jmp	.LBB15_275
.LBB15_274:
	jmp	.LBB15_277
.LBB15_275:
	jmp	.LBB15_276
.LBB15_276:
	movss	A8$(%rip), %xmm0        # xmm0 = mem[0],zero,zero,zero
	cvtss2sd	%xmm0, %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_277:
	movsd	.LCPI15_70(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_278
	jp	.LBB15_278
	jmp	.LBB15_279
.LBB15_278:
	jmp	.LBB15_281
.LBB15_279:
	jmp	.LBB15_280
.LBB15_280:
	movq	-56(%rbp), %rax
	movsd	394880(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_281:
	movsd	.LCPI15_71(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_282
	jp	.LBB15_282
	jmp	.LBB15_283
.LBB15_282:
	jmp	.LBB15_285
.LBB15_283:
	jmp	.LBB15_284
.LBB15_284:
	movq	-56(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	addsd	394904(%rax), %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_285:
	movsd	.LCPI15_72(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_286
	jp	.LBB15_286
	jmp	.LBB15_287
.LBB15_286:
	jmp	.LBB15_289
.LBB15_287:
	jmp	.LBB15_288
.LBB15_288:
	movq	-56(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	subsd	394904(%rax), %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_289:
	movsd	.LCPI15_73(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_290
	jp	.LBB15_290
	jmp	.LBB15_291
.LBB15_290:
	jmp	.LBB15_293
.LBB15_291:
	jmp	.LBB15_292
.LBB15_292:
	movq	-56(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	mulsd	394904(%rax), %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_293:
	movsd	.LCPI15_74(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_294
	jp	.LBB15_294
	jmp	.LBB15_295
.LBB15_294:
	jmp	.LBB15_297
.LBB15_295:
	jmp	.LBB15_296
.LBB15_296:
	movq	-56(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	divsd	394904(%rax), %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_297:
	movsd	.LCPI15_75(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_298
	jp	.LBB15_298
	jmp	.LBB15_299
.LBB15_298:
	jmp	.LBB15_301
.LBB15_299:
	jmp	.LBB15_300
.LBB15_300:
	movq	-56(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-56(%rbp), %rcx
	movsd	394904(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -280(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-280(%rbp), %rcx        # 8-byte Reload
	movq	%rax, -288(%rbp)        # 8-byte Spill
	movq	%rcx, %rax
	cqto
	movq	-288(%rbp), %rsi        # 8-byte Reload
	idivq	%rsi
	cvtsi2sd	%rax, %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_301:
	movsd	.LCPI15_76(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_302
	jp	.LBB15_302
	jmp	.LBB15_303
.LBB15_302:
	jmp	.LBB15_305
.LBB15_303:
	jmp	.LBB15_304
.LBB15_304:
	movq	-56(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	394904(%rax), %xmm1     # xmm1 = mem[0],zero
	callq	pow@PLT
	movsd	%xmm0, -80(%rbp)
	movsd	-80(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_305:
	movsd	.LCPI15_77(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_306
	jp	.LBB15_306
	jmp	.LBB15_307
.LBB15_306:
	jmp	.LBB15_309
.LBB15_307:
	jmp	.LBB15_308
.LBB15_308:
	movq	-56(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-56(%rbp), %rcx
	movsd	394904(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -296(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-296(%rbp), %rcx        # 8-byte Reload
	movq	%rax, -304(%rbp)        # 8-byte Spill
	movq	%rcx, %rax
	cqto
	movq	-304(%rbp), %rsi        # 8-byte Reload
	idivq	%rsi
	cvtsi2sd	%rdx, %xmm0
	movq	-56(%rbp), %rdx
	movsd	%xmm0, 394888(%rdx)
	jmp	.LBB15_555
.LBB15_309:
	movsd	.LCPI15_78(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_310
	jp	.LBB15_310
	jmp	.LBB15_311
.LBB15_310:
	jmp	.LBB15_313
.LBB15_311:
	jmp	.LBB15_312
.LBB15_312:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	%xmm0, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	movq	%rax, %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_313:
	movsd	.LCPI15_79(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_314
	jp	.LBB15_314
	jmp	.LBB15_315
.LBB15_314:
	jmp	.LBB15_317
.LBB15_315:
	jmp	.LBB15_316
.LBB15_316:
	movq	-56(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-56(%rbp), %rcx
	movsd	394904(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -312(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	andq	$63, %rax
	movq	%rax, %rcx
                                        # kill: def $cl killed $rcx
	movq	-312(%rbp), %rax        # 8-byte Reload
	shlq	%cl, %rax
	cvtsi2sd	%rax, %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_317:
	movsd	.LCPI15_80(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_318
	jp	.LBB15_318
	jmp	.LBB15_319
.LBB15_318:
	jmp	.LBB15_321
.LBB15_319:
	jmp	.LBB15_320
.LBB15_320:
	movq	-56(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-56(%rbp), %rcx
	movsd	394904(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -320(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	andq	$63, %rax
	movq	%rax, %rcx
                                        # kill: def $cl killed $rcx
	movq	-320(%rbp), %rax        # 8-byte Reload
	sarq	%cl, %rax
	cvtsi2sd	%rax, %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_321:
	movsd	.LCPI15_81(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_322
	jp	.LBB15_322
	jmp	.LBB15_323
.LBB15_322:
	jmp	.LBB15_325
.LBB15_323:
	jmp	.LBB15_324
.LBB15_324:
	xorl	%eax, %eax
	movq	-56(%rbp), %rcx
	movsd	394896(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rcx
	ucomisd	394904(%rcx), %xmm0
	sete	%dl
	setnp	%sil
	andb	%sil, %dl
	andb	$1, %dl
	movzbl	%dl, %edi
	subl	%edi, %eax
	movslq	%eax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-56(%rbp), %rcx
	movsd	%xmm0, 394888(%rcx)
	jmp	.LBB15_555
.LBB15_325:
	movsd	.LCPI15_82(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_326
	jp	.LBB15_326
	jmp	.LBB15_327
.LBB15_326:
	jmp	.LBB15_329
.LBB15_327:
	jmp	.LBB15_328
.LBB15_328:
	xorl	%eax, %eax
	movq	-56(%rbp), %rcx
	movsd	394896(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rcx
	ucomisd	394904(%rcx), %xmm0
	setne	%dl
	setp	%sil
	orb	%sil, %dl
	andb	$1, %dl
	movzbl	%dl, %edi
	subl	%edi, %eax
	movslq	%eax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-56(%rbp), %rcx
	movsd	%xmm0, 394888(%rcx)
	jmp	.LBB15_555
.LBB15_329:
	movsd	.LCPI15_83(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_330
	jp	.LBB15_330
	jmp	.LBB15_331
.LBB15_330:
	jmp	.LBB15_333
.LBB15_331:
	jmp	.LBB15_332
.LBB15_332:
	xorl	%eax, %eax
	movq	-56(%rbp), %rcx
	movsd	394896(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rcx
	movsd	394904(%rcx), %xmm1     # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	seta	%dl
	andb	$1, %dl
	movzbl	%dl, %esi
	subl	%esi, %eax
	movslq	%eax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-56(%rbp), %rcx
	movsd	%xmm0, 394888(%rcx)
	jmp	.LBB15_555
.LBB15_333:
	movsd	.LCPI15_84(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_334
	jp	.LBB15_334
	jmp	.LBB15_335
.LBB15_334:
	jmp	.LBB15_337
.LBB15_335:
	jmp	.LBB15_336
.LBB15_336:
	xorl	%eax, %eax
	movq	-56(%rbp), %rcx
	movsd	394896(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rcx
	movsd	394904(%rcx), %xmm1     # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	setae	%dl
	andb	$1, %dl
	movzbl	%dl, %esi
	subl	%esi, %eax
	movslq	%eax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-56(%rbp), %rcx
	movsd	%xmm0, 394888(%rcx)
	jmp	.LBB15_555
.LBB15_337:
	movsd	.LCPI15_85(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_338
	jp	.LBB15_338
	jmp	.LBB15_339
.LBB15_338:
	jmp	.LBB15_341
.LBB15_339:
	jmp	.LBB15_340
.LBB15_340:
	xorl	%eax, %eax
	movq	-56(%rbp), %rcx
	movsd	394896(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rcx
	ucomisd	394904(%rcx), %xmm0
	setae	%dl
	andb	$1, %dl
	movzbl	%dl, %esi
	subl	%esi, %eax
	movslq	%eax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-56(%rbp), %rcx
	movsd	%xmm0, 394888(%rcx)
	jmp	.LBB15_555
.LBB15_341:
	movsd	.LCPI15_86(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_342
	jp	.LBB15_342
	jmp	.LBB15_343
.LBB15_342:
	jmp	.LBB15_345
.LBB15_343:
	jmp	.LBB15_344
.LBB15_344:
	xorl	%eax, %eax
	movq	-56(%rbp), %rcx
	movsd	394896(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rcx
	ucomisd	394904(%rcx), %xmm0
	seta	%dl
	andb	$1, %dl
	movzbl	%dl, %esi
	subl	%esi, %eax
	movslq	%eax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-56(%rbp), %rcx
	movsd	%xmm0, 394888(%rcx)
	jmp	.LBB15_555
.LBB15_345:
	movsd	.LCPI15_87(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_346
	jp	.LBB15_346
	jmp	.LBB15_347
.LBB15_346:
	jmp	.LBB15_349
.LBB15_347:
	jmp	.LBB15_348
.LBB15_348:
	movq	-56(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-56(%rbp), %rcx
	movsd	394904(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -328(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-328(%rbp), %rcx        # 8-byte Reload
	andq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_349:
	movsd	.LCPI15_88(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_350
	jp	.LBB15_350
	jmp	.LBB15_351
.LBB15_350:
	jmp	.LBB15_353
.LBB15_351:
	jmp	.LBB15_352
.LBB15_352:
	movq	-56(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-56(%rbp), %rcx
	movsd	394904(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -336(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-336(%rbp), %rcx        # 8-byte Reload
	xorq	%rax, %rcx
	xorq	$-1, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_353:
	movsd	.LCPI15_89(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_354
	jp	.LBB15_354
	jmp	.LBB15_355
.LBB15_354:
	jmp	.LBB15_357
.LBB15_355:
	jmp	.LBB15_356
.LBB15_356:
	movq	-56(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	xorq	$-1, %rax
	movq	-56(%rbp), %rcx
	movsd	394904(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -344(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-344(%rbp), %rcx        # 8-byte Reload
	orq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_357:
	movsd	.LCPI15_90(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_358
	jp	.LBB15_358
	jmp	.LBB15_359
.LBB15_358:
	jmp	.LBB15_361
.LBB15_359:
	jmp	.LBB15_360
.LBB15_360:
	movq	-56(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-56(%rbp), %rcx
	movsd	394904(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -352(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-352(%rbp), %rcx        # 8-byte Reload
	orq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_361:
	movsd	.LCPI15_91(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_362
	jp	.LBB15_362
	jmp	.LBB15_363
.LBB15_362:
	jmp	.LBB15_365
.LBB15_363:
	jmp	.LBB15_364
.LBB15_364:
	movq	-56(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-56(%rbp), %rcx
	movsd	394904(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -360(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	-360(%rbp), %rcx        # 8-byte Reload
	xorq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_365:
	movsd	.LCPI15_92(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_366
	jp	.LBB15_366
	jmp	.LBB15_367
.LBB15_366:
	jmp	.LBB15_369
.LBB15_367:
	jmp	.LBB15_368
.LBB15_368:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394896(%rax)
	jmp	.LBB15_555
.LBB15_369:
	movsd	.LCPI15_93(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_370
	jp	.LBB15_370
	jmp	.LBB15_371
.LBB15_370:
	jmp	.LBB15_373
.LBB15_371:
	jmp	.LBB15_372
.LBB15_372:
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394904(%rax)
	jmp	.LBB15_555
.LBB15_373:
	movsd	.LCPI15_94(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_374
	jp	.LBB15_374
	jmp	.LBB15_375
.LBB15_374:
	jmp	.LBB15_377
.LBB15_375:
	jmp	.LBB15_376
.LBB15_376:
	movsd	.LCPI15_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	addsd	394888(%rax), %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_377:
	movsd	.LCPI15_95(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_378
	jp	.LBB15_378
	jmp	.LBB15_379
.LBB15_378:
	jmp	.LBB15_381
.LBB15_379:
	jmp	.LBB15_380
.LBB15_380:
	movsd	.LCPI15_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	addsd	394896(%rax), %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394896(%rax)
	jmp	.LBB15_555
.LBB15_381:
	movsd	.LCPI15_96(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_382
	jp	.LBB15_382
	jmp	.LBB15_383
.LBB15_382:
	jmp	.LBB15_385
.LBB15_383:
	jmp	.LBB15_384
.LBB15_384:
	movsd	.LCPI15_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	addsd	394904(%rax), %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394904(%rax)
	jmp	.LBB15_555
.LBB15_385:
	movsd	.LCPI15_97(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_386
	jp	.LBB15_386
	jmp	.LBB15_387
.LBB15_386:
	jmp	.LBB15_389
.LBB15_387:
	jmp	.LBB15_388
.LBB15_388:
	movsd	.LCPI15_98(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	addsd	394888(%rax), %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_389:
	movsd	.LCPI15_99(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_390
	jp	.LBB15_390
	jmp	.LBB15_391
.LBB15_390:
	jmp	.LBB15_393
.LBB15_391:
	jmp	.LBB15_392
.LBB15_392:
	movsd	.LCPI15_98(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	addsd	394896(%rax), %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394896(%rax)
	jmp	.LBB15_555
.LBB15_393:
	movsd	.LCPI15_100(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_394
	jp	.LBB15_394
	jmp	.LBB15_395
.LBB15_394:
	jmp	.LBB15_397
.LBB15_395:
	jmp	.LBB15_396
.LBB15_396:
	movsd	.LCPI15_98(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	addsd	394904(%rax), %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394904(%rax)
	jmp	.LBB15_555
.LBB15_397:
	movsd	.LCPI15_101(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_398
	jp	.LBB15_398
	jmp	.LBB15_399
.LBB15_398:
	jmp	.LBB15_404
.LBB15_399:
	jmp	.LBB15_400
.LBB15_400:
	movq	-56(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	ucomisd	394904(%rax), %xmm0
	jne	.LBB15_401
	jp	.LBB15_401
	jmp	.LBB15_402
.LBB15_401:
	jmp	.LBB15_403
.LBB15_402:
	movsd	-72(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 395344(%rax)
.LBB15_403:
	jmp	.LBB15_555
.LBB15_404:
	movsd	.LCPI15_102(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_405
	jp	.LBB15_405
	jmp	.LBB15_406
.LBB15_405:
	jmp	.LBB15_411
.LBB15_406:
	jmp	.LBB15_407
.LBB15_407:
	movq	-56(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	ucomisd	394904(%rax), %xmm0
	jne	.LBB15_409
	jp	.LBB15_409
# %bb.408:
	jmp	.LBB15_410
.LBB15_409:
	movsd	-72(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 395344(%rax)
.LBB15_410:
	jmp	.LBB15_555
.LBB15_411:
	movsd	.LCPI15_103(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_412
	jp	.LBB15_412
	jmp	.LBB15_413
.LBB15_412:
	jmp	.LBB15_418
.LBB15_413:
	jmp	.LBB15_414
.LBB15_414:
	movq	-56(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	394904(%rax), %xmm1     # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jb	.LBB15_416
# %bb.415:
	jmp	.LBB15_417
.LBB15_416:
	movsd	-72(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 395344(%rax)
.LBB15_417:
	jmp	.LBB15_555
.LBB15_418:
	movsd	.LCPI15_104(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_419
	jp	.LBB15_419
	jmp	.LBB15_420
.LBB15_419:
	jmp	.LBB15_425
.LBB15_420:
	jmp	.LBB15_421
.LBB15_421:
	movq	-56(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	394904(%rax), %xmm1     # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jbe	.LBB15_423
# %bb.422:
	jmp	.LBB15_424
.LBB15_423:
	movsd	-72(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 395344(%rax)
.LBB15_424:
	jmp	.LBB15_555
.LBB15_425:
	movsd	.LCPI15_105(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_426
	jp	.LBB15_426
	jmp	.LBB15_427
.LBB15_426:
	jmp	.LBB15_432
.LBB15_427:
	jmp	.LBB15_428
.LBB15_428:
	movq	-56(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	ucomisd	394904(%rax), %xmm0
	jbe	.LBB15_430
# %bb.429:
	jmp	.LBB15_431
.LBB15_430:
	movsd	-72(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 395344(%rax)
.LBB15_431:
	jmp	.LBB15_555
.LBB15_432:
	movsd	.LCPI15_106(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_433
	jp	.LBB15_433
	jmp	.LBB15_434
.LBB15_433:
	jmp	.LBB15_439
.LBB15_434:
	jmp	.LBB15_435
.LBB15_435:
	movq	-56(%rbp), %rax
	movsd	394896(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	ucomisd	394904(%rax), %xmm0
	jb	.LBB15_437
# %bb.436:
	jmp	.LBB15_438
.LBB15_437:
	movsd	-72(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 395344(%rax)
.LBB15_438:
	jmp	.LBB15_555
.LBB15_439:
	movsd	.LCPI15_107(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_440
	jp	.LBB15_440
	jmp	.LBB15_441
.LBB15_440:
	jmp	.LBB15_443
.LBB15_441:
	jmp	.LBB15_442
.LBB15_442:
	movsd	-72(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 395344(%rax)
	jmp	.LBB15_555
.LBB15_443:
	movsd	.LCPI15_108(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_444
	jp	.LBB15_444
	jmp	.LBB15_445
.LBB15_444:
	jmp	.LBB15_447
.LBB15_445:
	jmp	.LBB15_446
.LBB15_446:
	movq	-56(%rbp), %rdi
	movsd	-72(%rbp), %xmm0        # xmm0 = mem[0],zero
	callq	_ZN8MEMORY_T5PEEKBEd
	movsd	%xmm0, -88(%rbp)
	movsd	-88(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394888(%rax)
	jmp	.LBB15_555
.LBB15_447:
	movsd	.LCPI15_109(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_448
	jp	.LBB15_448
	jmp	.LBB15_449
.LBB15_448:
	jmp	.LBB15_451
.LBB15_449:
	jmp	.LBB15_450
.LBB15_450:
	movq	-56(%rbp), %rdi
	movsd	-72(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm1     # xmm1 = mem[0],zero
	callq	_ZN8MEMORY_T5POKEBEdd
	jmp	.LBB15_555
.LBB15_451:
	movsd	.LCPI15_110(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_452
	jp	.LBB15_452
	jmp	.LBB15_453
.LBB15_452:
	jmp	.LBB15_465
.LBB15_453:
	jmp	.LBB15_454
.LBB15_454:
	movsd	.LCPI15_14(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI15_13(%rip), %xmm1 # xmm1 = mem[0],zero
	movsd	.LCPI15_12(%rip), %xmm2 # xmm2 = mem[0],zero
	movsd	.LCPI15_11(%rip), %xmm3 # xmm3 = mem[0],zero
	movsd	.LCPI15_10(%rip), %xmm4 # xmm4 = mem[0],zero
	movsd	.LCPI15_9(%rip), %xmm5  # xmm5 = mem[0],zero
	movsd	.LCPI15_8(%rip), %xmm6  # xmm6 = mem[0],zero
	movsd	.LCPI15_7(%rip), %xmm7  # xmm7 = mem[0],zero
	movsd	.LCPI15_6(%rip), %xmm8  # xmm8 = mem[0],zero
	movsd	.LCPI15_5(%rip), %xmm9  # xmm9 = mem[0],zero
	movsd	.LCPI15_4(%rip), %xmm10 # xmm10 = mem[0],zero
	movsd	.LCPI15_3(%rip), %xmm11 # xmm11 = mem[0],zero
	movsd	.LCPI15_2(%rip), %xmm12 # xmm12 = mem[0],zero
	movsd	.LCPI15_1(%rip), %xmm13 # xmm13 = mem[0],zero
	movsd	.LCPI15_0(%rip), %xmm14 # xmm14 = mem[0],zero
	xorl	%eax, %eax
	leaq	-16(%rbp), %rcx
	movq	%rcx, %rdi
	movl	%eax, %esi
	movl	$8, %ecx
	movq	%rcx, %rdx
	movsd	%xmm0, -368(%rbp)       # 8-byte Spill
	movsd	%xmm1, -376(%rbp)       # 8-byte Spill
	movsd	%xmm2, -384(%rbp)       # 8-byte Spill
	movsd	%xmm3, -392(%rbp)       # 8-byte Spill
	movsd	%xmm4, -400(%rbp)       # 8-byte Spill
	movsd	%xmm5, -408(%rbp)       # 8-byte Spill
	movsd	%xmm6, -416(%rbp)       # 8-byte Spill
	movsd	%xmm7, -424(%rbp)       # 8-byte Spill
	movsd	%xmm8, -432(%rbp)       # 8-byte Spill
	movsd	%xmm9, -440(%rbp)       # 8-byte Spill
	movsd	%xmm10, -448(%rbp)      # 8-byte Spill
	movsd	%xmm11, -456(%rbp)      # 8-byte Spill
	movsd	%xmm12, -464(%rbp)      # 8-byte Spill
	movsd	%xmm13, -472(%rbp)      # 8-byte Spill
	movsd	%xmm14, -480(%rbp)      # 8-byte Spill
	movl	%eax, -484(%rbp)        # 4-byte Spill
	movq	%rcx, -496(%rbp)        # 8-byte Spill
	callq	memset@PLT
	leaq	-24(%rbp), %rcx
	movq	%rcx, %rdi
	movl	-484(%rbp), %esi        # 4-byte Reload
	movq	-496(%rbp), %rdx        # 8-byte Reload
	callq	memset@PLT
	movq	-56(%rbp), %rcx
	movsd	395344(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rcx
	movsd	%xmm0, 397040(%rcx)
	movq	-56(%rbp), %rcx
	movq	-56(%rbp), %rdx
	movsd	-480(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rcx, -504(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movq	-504(%rbp), %rdx        # 8-byte Reload
	movsd	(%rdx,%rcx), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$32, %rcx
	movq	-56(%rbp), %rdx
	movq	-56(%rbp), %rdi
	movsd	-472(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdi), %xmm0
	movq	%rcx, -512(%rbp)        # 8-byte Spill
	movq	%rdx, -520(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movq	-520(%rbp), %rdx        # 8-byte Reload
	movsd	(%rdx,%rcx), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$24, %rcx
	movq	-512(%rbp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	-56(%rbp), %rcx
	movq	-56(%rbp), %rdi
	movsd	-464(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdi), %xmm0
	movq	%rdx, -528(%rbp)        # 8-byte Spill
	movq	%rcx, -536(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movq	-536(%rbp), %rdx        # 8-byte Reload
	movsd	(%rdx,%rcx), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$16, %rcx
	movq	-528(%rbp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	-56(%rbp), %rcx
	movq	-56(%rbp), %rdi
	movsd	-456(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdi), %xmm0
	movq	%rdx, -544(%rbp)        # 8-byte Spill
	movq	%rcx, -552(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movq	-552(%rbp), %rdx        # 8-byte Reload
	movsd	(%rdx,%rcx), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$8, %rcx
	movq	-544(%rbp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	cvtsi2sd	%rdx, %xmm0
	movq	-56(%rbp), %rcx
	movq	-56(%rbp), %rdx
	movsd	-448(%rbp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	addsd	395344(%rdx), %xmm1
	movsd	%xmm0, -560(%rbp)       # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rcx, -568(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movsd	-560(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movq	-568(%rbp), %rdx        # 8-byte Reload
	addsd	(%rdx,%rcx), %xmm0
	movq	-56(%rbp), %rcx
	movsd	%xmm0, 395400(%rcx)
	movq	-56(%rbp), %rcx
	movq	-56(%rbp), %rdi
	movsd	-440(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdi), %xmm0
	movq	%rcx, -576(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movq	-576(%rbp), %rdx        # 8-byte Reload
	movsd	(%rdx,%rcx), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$32, %rcx
	movq	-56(%rbp), %rdx
	movq	-56(%rbp), %rdi
	movsd	-432(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdi), %xmm0
	movq	%rcx, -584(%rbp)        # 8-byte Spill
	movq	%rdx, -592(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movq	-592(%rbp), %rdx        # 8-byte Reload
	movsd	(%rdx,%rcx), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$24, %rcx
	movq	-584(%rbp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	-56(%rbp), %rcx
	movq	-56(%rbp), %rdi
	movsd	-424(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdi), %xmm0
	movq	%rdx, -600(%rbp)        # 8-byte Spill
	movq	%rcx, -608(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movq	-608(%rbp), %rdx        # 8-byte Reload
	movsd	(%rdx,%rcx), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$16, %rcx
	movq	-600(%rbp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	-56(%rbp), %rcx
	movq	-56(%rbp), %rdi
	movsd	-416(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdi), %xmm0
	movq	%rdx, -616(%rbp)        # 8-byte Spill
	movq	%rcx, -624(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movq	-624(%rbp), %rdx        # 8-byte Reload
	movsd	(%rdx,%rcx), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$8, %rcx
	movq	-616(%rbp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	cvtsi2sd	%rdx, %xmm0
	movq	-56(%rbp), %rcx
	movq	-56(%rbp), %rdx
	movsd	-408(%rbp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	addsd	395344(%rdx), %xmm1
	movsd	%xmm0, -632(%rbp)       # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rcx, -640(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movsd	-632(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movq	-640(%rbp), %rdx        # 8-byte Reload
	addsd	(%rdx,%rcx), %xmm0
	movq	-56(%rbp), %rcx
	movsd	%xmm0, 395456(%rcx)
	movq	-56(%rbp), %rcx
	movq	-56(%rbp), %rdi
	movsd	-400(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdi), %xmm0
	movq	%rcx, -648(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movq	-648(%rbp), %rdx        # 8-byte Reload
	movsd	(%rdx,%rcx), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$32, %rcx
	movq	-56(%rbp), %rdx
	movq	-56(%rbp), %rdi
	movsd	-392(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdi), %xmm0
	movq	%rcx, -656(%rbp)        # 8-byte Spill
	movq	%rdx, -664(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movq	-664(%rbp), %rdx        # 8-byte Reload
	movsd	(%rdx,%rcx), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$24, %rcx
	movq	-656(%rbp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	-56(%rbp), %rcx
	movq	-56(%rbp), %rdi
	movsd	-384(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdi), %xmm0
	movq	%rdx, -672(%rbp)        # 8-byte Spill
	movq	%rcx, -680(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movq	-680(%rbp), %rdx        # 8-byte Reload
	movsd	(%rdx,%rcx), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$16, %rcx
	movq	-672(%rbp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	-56(%rbp), %rcx
	movq	-56(%rbp), %rdi
	movsd	-376(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdi), %xmm0
	movq	%rdx, -688(%rbp)        # 8-byte Spill
	movq	%rcx, -696(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movq	-696(%rbp), %rdx        # 8-byte Reload
	movsd	(%rdx,%rcx), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$8, %rcx
	movq	-688(%rbp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	cvtsi2sd	%rdx, %xmm0
	movq	-56(%rbp), %rcx
	movq	-56(%rbp), %rdx
	movsd	-368(%rbp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	addsd	395344(%rdx), %xmm1
	movsd	%xmm0, -704(%rbp)       # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rcx, -712(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movsd	-704(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movq	-712(%rbp), %rdx        # 8-byte Reload
	addsd	(%rdx,%rcx), %xmm0
	movq	-56(%rbp), %rcx
	movsd	%xmm0, 396968(%rcx)
.LBB15_455:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB15_460 Depth 2
	movaps	.LCPI15_111(%rip), %xmm0 # xmm0 = [1127219200,1160773632,0,0]
	movq	-16(%rbp), %xmm1        # xmm1 = mem[0],zero
	punpckldq	%xmm0, %xmm1    # xmm1 = xmm1[0],xmm0[0],xmm1[1],xmm0[1]
	movapd	.LCPI15_112(%rip), %xmm0 # xmm0 = [4.503599627370496E+15,1.9342813113834067E+25]
	subpd	%xmm0, %xmm1
	movaps	%xmm1, %xmm0
	unpckhpd	%xmm1, %xmm1    # xmm1 = xmm1[1,1]
	addsd	%xmm0, %xmm1
	movq	-56(%rbp), %rax
	ucomisd	396968(%rax), %xmm1
	jne	.LBB15_457
	jp	.LBB15_457
# %bb.456:
	jmp	.LBB15_464
.LBB15_457:                             #   in Loop: Header=BB15_455 Depth=1
	movq	$49425, PC$(%rip)       # imm = 0xC111
	movq	-56(%rbp), %rax
	movsd	395456(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	movsd	.LCPI15_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
	movq	%rax, -96(%rbp)
	jmp	.LBB15_460
.LBB15_458:                             #   in Loop: Header=BB15_460 Depth=2
	movq	-56(%rbp), %rdi
	movq	-56(%rbp), %rax
	movq	PC$(%rip), %rcx
	shlq	$3, %rcx
	movsd	(%rax,%rcx), %xmm0      # xmm0 = mem[0],zero
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T5POKEBEdd
# %bb.459:                              #   in Loop: Header=BB15_460 Depth=2
	movq	PC$(%rip), %rax
	addq	$1, %rax
	movq	%rax, PC$(%rip)
.LBB15_460:                             #   Parent Loop BB15_455 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	PC$(%rip), %rax
	cmpq	-96(%rbp), %rax
	ja	.LBB15_462
# %bb.461:                              #   in Loop: Header=BB15_460 Depth=2
	jmp	.LBB15_458
.LBB15_462:                             #   in Loop: Header=BB15_455 Depth=1
	jmp	.LBB15_463
.LBB15_463:                             #   in Loop: Header=BB15_455 Depth=1
	movq	-16(%rbp), %rax
	addq	$1, %rax
	movq	-56(%rbp), %rcx
	movsd	396968(%rcx), %xmm0     # xmm0 = mem[0],zero
	movq	%rax, -720(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI15_48(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rcx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rcx, %rax
	movq	-720(%rbp), %rcx        # 8-byte Reload
	movq	%rax, -728(%rbp)        # 8-byte Spill
	movq	%rcx, %rax
	xorl	%edx, %edx
                                        # kill: def $rdx killed $edx
	movq	-728(%rbp), %rsi        # 8-byte Reload
	divq	%rsi
	movq	%rdx, -16(%rbp)
	jmp	.LBB15_455
.LBB15_464:
	jmp	.LBB15_555
.LBB15_465:
	movsd	.LCPI15_113(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_466
	jp	.LBB15_466
	jmp	.LBB15_467
.LBB15_466:
	jmp	.LBB15_473
.LBB15_467:
	jmp	.LBB15_468
.LBB15_468:
	movl	$4294901760, %edi       # imm = 0xFFFF0000
	callq	fb_Cls@PLT
	xorl	%esi, %esi
	leaq	-48(%rbp), %rax
	movq	%rax, %rdi
	movl	$24, %edx
	callq	memset@PLT
	leaq	.L.str.166(%rip), %rdi
	movl	$21, %esi
	callq	fb_StrAllocTempDescZEx@PLT
	movq	%rax, -104(%rbp)
	movq	-104(%rbp), %rdi
	callq	fb_Shell@PLT
	leaq	.L.str.167(%rip), %rdi
	movl	$15, %esi
	movl	%eax, -732(%rbp)        # 4-byte Spill
	callq	fb_StrAllocTempDescZEx@PLT
	movq	%rax, -112(%rbp)
	movq	-112(%rbp), %rdi
	callq	fb_Shell@PLT
	leaq	.L.str.168(%rip), %rdi
	movl	$7, %esi
	movl	%eax, -736(%rbp)        # 4-byte Spill
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%ecx, %ecx
	movq	%rax, -120(%rbp)
	movq	-120(%rbp), %rdi
	movl	$2, %esi
	movl	%ecx, %edx
	movl	%ecx, -740(%rbp)        # 4-byte Spill
	movl	$1, %r8d
	movl	-740(%rbp), %r9d        # 4-byte Reload
	callq	fb_FileOpen@PLT
.LBB15_469:                             # =>This Inner Loop Header: Depth=1
	movl	$1, %edi
	callq	fb_FileEof@PLT
	movl	%eax, -124(%rbp)
	movslq	-124(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB15_471
# %bb.470:
	jmp	.LBB15_472
.LBB15_471:                             #   in Loop: Header=BB15_469 Depth=1
	movl	$1, %edi
	callq	fb_FileInput@PLT
	xorl	%edx, %edx
	leaq	-48(%rbp), %rcx
	movq	%rcx, %rdi
	movq	$-1, %rsi
	movl	%eax, -744(%rbp)        # 4-byte Spill
	callq	fb_InputString@PLT
	xorl	%edi, %edi
	leaq	-48(%rbp), %rsi
	movl	$1, %edx
	movl	%eax, -748(%rbp)        # 4-byte Spill
	callq	fb_PrintString@PLT
	jmp	.LBB15_469
.LBB15_472:
	movl	$1, %edi
	callq	fb_FileClose@PLT
	leaq	.L.str.169(%rip), %rdi
	movl	$26, %esi
	movl	%eax, -752(%rbp)        # 4-byte Spill
	callq	fb_StrAllocTempDescZEx@PLT
	xorl	%edi, %edi
	movq	%rax, -136(%rbp)
	movq	-136(%rbp), %rsi
	movl	$1, %edx
	callq	fb_PrintString@PLT
	movl	$4294967295, %edi       # imm = 0xFFFFFFFF
	callq	fb_Sleep@PLT
	leaq	-48(%rbp), %rdi
	callq	fb_StrDelete@PLT
	jmp	.LBB15_555
.LBB15_473:
	movsd	.LCPI15_114(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_474
	jp	.LBB15_474
	jmp	.LBB15_475
.LBB15_474:
	jmp	.LBB15_477
.LBB15_475:
	jmp	.LBB15_476
.LBB15_476:
	movsd	.LCPI15_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI15_3(%rip), %xmm1  # xmm1 = mem[0],zero
	movsd	.LCPI15_2(%rip), %xmm2  # xmm2 = mem[0],zero
	movsd	.LCPI15_1(%rip), %xmm3  # xmm3 = mem[0],zero
	movsd	.LCPI15_0(%rip), %xmm4  # xmm4 = mem[0],zero
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rcx
	addsd	395344(%rcx), %xmm4
	movsd	%xmm0, -760(%rbp)       # 8-byte Spill
	movaps	%xmm4, %xmm0
	movsd	%xmm1, -768(%rbp)       # 8-byte Spill
	movsd	%xmm2, -776(%rbp)       # 8-byte Spill
	movsd	%xmm3, -784(%rbp)       # 8-byte Spill
	movq	%rax, -792(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-792(%rbp), %rcx        # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-56(%rbp), %rcx
	movq	-56(%rbp), %rdx
	movsd	-784(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rax, -800(%rbp)        # 8-byte Spill
	movq	%rcx, -808(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-808(%rbp), %rcx        # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-800(%rbp), %rcx        # 8-byte Reload
	addq	%rax, %rcx
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rdx
	movsd	-776(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rcx, -816(%rbp)        # 8-byte Spill
	movq	%rax, -824(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-824(%rbp), %rcx        # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-816(%rbp), %rcx        # 8-byte Reload
	addq	%rax, %rcx
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rdx
	movsd	-768(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rcx, -832(%rbp)        # 8-byte Spill
	movq	%rax, -840(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-840(%rbp), %rcx        # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-832(%rbp), %rcx        # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rcx
	movsd	-760(%rbp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	addsd	395344(%rcx), %xmm1
	movsd	%xmm0, -848(%rbp)       # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rax, -856(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movsd	-848(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movq	-856(%rbp), %rcx        # 8-byte Reload
	addsd	(%rcx,%rax), %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 395400(%rax)
	movq	-56(%rbp), %rdi
	movq	-56(%rbp), %rax
	movsd	395400(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	_ZN8MEMORY_T5PEEKBEd
	movsd	%xmm0, -144(%rbp)
	movsd	-144(%rbp), %xmm0       # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394912(%rax)
	jmp	.LBB15_555
.LBB15_477:
	movsd	.LCPI15_115(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_478
	jp	.LBB15_478
	jmp	.LBB15_479
.LBB15_478:
	jmp	.LBB15_481
.LBB15_479:
	jmp	.LBB15_480
.LBB15_480:
	movsd	.LCPI15_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI15_4(%rip), %xmm1  # xmm1 = mem[0],zero
	movsd	.LCPI15_3(%rip), %xmm2  # xmm2 = mem[0],zero
	movsd	.LCPI15_2(%rip), %xmm3  # xmm3 = mem[0],zero
	movsd	.LCPI15_1(%rip), %xmm4  # xmm4 = mem[0],zero
	movsd	.LCPI15_0(%rip), %xmm5  # xmm5 = mem[0],zero
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rcx
	addsd	395344(%rcx), %xmm5
	movsd	%xmm0, -864(%rbp)       # 8-byte Spill
	movaps	%xmm5, %xmm0
	movsd	%xmm1, -872(%rbp)       # 8-byte Spill
	movsd	%xmm2, -880(%rbp)       # 8-byte Spill
	movsd	%xmm3, -888(%rbp)       # 8-byte Spill
	movsd	%xmm4, -896(%rbp)       # 8-byte Spill
	movq	%rax, -904(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-904(%rbp), %rcx        # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-56(%rbp), %rcx
	movq	-56(%rbp), %rdx
	movsd	-896(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rax, -912(%rbp)        # 8-byte Spill
	movq	%rcx, -920(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-920(%rbp), %rcx        # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-912(%rbp), %rcx        # 8-byte Reload
	addq	%rax, %rcx
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rdx
	movsd	-888(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rcx, -928(%rbp)        # 8-byte Spill
	movq	%rax, -936(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-936(%rbp), %rcx        # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-928(%rbp), %rcx        # 8-byte Reload
	addq	%rax, %rcx
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rdx
	movsd	-880(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rcx, -944(%rbp)        # 8-byte Spill
	movq	%rax, -952(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-952(%rbp), %rcx        # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-944(%rbp), %rcx        # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rcx
	movsd	-872(%rbp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	addsd	395344(%rcx), %xmm1
	movsd	%xmm0, -960(%rbp)       # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rax, -968(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movsd	-960(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movq	-968(%rbp), %rcx        # 8-byte Reload
	addsd	(%rcx,%rax), %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 395400(%rax)
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rdx
	movsd	-864(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rax, -976(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-976(%rbp), %rcx        # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394912(%rax)
	movq	-56(%rbp), %rdi
	movq	-56(%rbp), %rax
	movsd	395400(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	394912(%rax), %xmm1     # xmm1 = mem[0],zero
	callq	_ZN8MEMORY_T5POKEBEdd
	jmp	.LBB15_555
.LBB15_481:
	movsd	.LCPI15_116(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_482
	jp	.LBB15_482
	jmp	.LBB15_483
.LBB15_482:
	jmp	.LBB15_485
.LBB15_483:
	jmp	.LBB15_484
.LBB15_484:
	movsd	.LCPI15_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI15_3(%rip), %xmm1  # xmm1 = mem[0],zero
	movsd	.LCPI15_2(%rip), %xmm2  # xmm2 = mem[0],zero
	movsd	.LCPI15_1(%rip), %xmm3  # xmm3 = mem[0],zero
	movsd	.LCPI15_0(%rip), %xmm4  # xmm4 = mem[0],zero
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rcx
	addsd	395344(%rcx), %xmm4
	movsd	%xmm0, -984(%rbp)       # 8-byte Spill
	movaps	%xmm4, %xmm0
	movsd	%xmm1, -992(%rbp)       # 8-byte Spill
	movsd	%xmm2, -1000(%rbp)      # 8-byte Spill
	movsd	%xmm3, -1008(%rbp)      # 8-byte Spill
	movq	%rax, -1016(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-1016(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-56(%rbp), %rcx
	movq	-56(%rbp), %rdx
	movsd	-1008(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rax, -1024(%rbp)       # 8-byte Spill
	movq	%rcx, -1032(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-1032(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-1024(%rbp), %rcx       # 8-byte Reload
	addq	%rax, %rcx
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rdx
	movsd	-1000(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rcx, -1040(%rbp)       # 8-byte Spill
	movq	%rax, -1048(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-1048(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-1040(%rbp), %rcx       # 8-byte Reload
	addq	%rax, %rcx
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rdx
	movsd	-992(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rcx, -1056(%rbp)       # 8-byte Spill
	movq	%rax, -1064(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-1064(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-1056(%rbp), %rcx       # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rcx
	movsd	-984(%rbp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	addsd	395344(%rcx), %xmm1
	movsd	%xmm0, -1072(%rbp)      # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rax, -1080(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movsd	-1072(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movq	-1080(%rbp), %rcx       # 8-byte Reload
	addsd	(%rcx,%rax), %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 395400(%rax)
	movq	-56(%rbp), %rdi
	movq	-56(%rbp), %rax
	movsd	395400(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	_ZN8MEMORY_T5PEEKWEd
	movsd	%xmm0, -152(%rbp)
	movsd	-152(%rbp), %xmm0       # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394912(%rax)
	jmp	.LBB15_555
.LBB15_485:
	movsd	.LCPI15_117(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_486
	jp	.LBB15_486
	jmp	.LBB15_487
.LBB15_486:
	jmp	.LBB15_489
.LBB15_487:
	jmp	.LBB15_488
.LBB15_488:
	movsd	.LCPI15_9(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI15_8(%rip), %xmm1  # xmm1 = mem[0],zero
	movsd	.LCPI15_7(%rip), %xmm2  # xmm2 = mem[0],zero
	movsd	.LCPI15_6(%rip), %xmm3  # xmm3 = mem[0],zero
	movsd	.LCPI15_5(%rip), %xmm4  # xmm4 = mem[0],zero
	movsd	.LCPI15_4(%rip), %xmm5  # xmm5 = mem[0],zero
	movsd	.LCPI15_3(%rip), %xmm6  # xmm6 = mem[0],zero
	movsd	.LCPI15_2(%rip), %xmm7  # xmm7 = mem[0],zero
	movsd	.LCPI15_1(%rip), %xmm8  # xmm8 = mem[0],zero
	movsd	.LCPI15_0(%rip), %xmm9  # xmm9 = mem[0],zero
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rcx
	addsd	395344(%rcx), %xmm9
	movsd	%xmm0, -1088(%rbp)      # 8-byte Spill
	movaps	%xmm9, %xmm0
	movsd	%xmm1, -1096(%rbp)      # 8-byte Spill
	movsd	%xmm2, -1104(%rbp)      # 8-byte Spill
	movsd	%xmm3, -1112(%rbp)      # 8-byte Spill
	movsd	%xmm4, -1120(%rbp)      # 8-byte Spill
	movsd	%xmm5, -1128(%rbp)      # 8-byte Spill
	movsd	%xmm6, -1136(%rbp)      # 8-byte Spill
	movsd	%xmm7, -1144(%rbp)      # 8-byte Spill
	movsd	%xmm8, -1152(%rbp)      # 8-byte Spill
	movq	%rax, -1160(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-1160(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-56(%rbp), %rcx
	movq	-56(%rbp), %rdx
	movsd	-1152(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rax, -1168(%rbp)       # 8-byte Spill
	movq	%rcx, -1176(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-1176(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-1168(%rbp), %rcx       # 8-byte Reload
	addq	%rax, %rcx
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rdx
	movsd	-1144(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rcx, -1184(%rbp)       # 8-byte Spill
	movq	%rax, -1192(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-1192(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-1184(%rbp), %rcx       # 8-byte Reload
	addq	%rax, %rcx
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rdx
	movsd	-1136(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rcx, -1200(%rbp)       # 8-byte Spill
	movq	%rax, -1208(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-1208(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-1200(%rbp), %rcx       # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rcx
	movsd	-1128(%rbp), %xmm1      # 8-byte Reload
                                        # xmm1 = mem[0],zero
	addsd	395344(%rcx), %xmm1
	movsd	%xmm0, -1216(%rbp)      # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rax, -1224(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movsd	-1216(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movq	-1224(%rbp), %rcx       # 8-byte Reload
	addsd	(%rcx,%rax), %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 395400(%rax)
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rdx
	movsd	-1120(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rax, -1232(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-1232(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-56(%rbp), %rcx
	movq	-56(%rbp), %rdx
	movsd	-1112(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rax, -1240(%rbp)       # 8-byte Spill
	movq	%rcx, -1248(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-1248(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-1240(%rbp), %rcx       # 8-byte Reload
	addq	%rax, %rcx
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rdx
	movsd	-1104(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rcx, -1256(%rbp)       # 8-byte Spill
	movq	%rax, -1264(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-1264(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-1256(%rbp), %rcx       # 8-byte Reload
	addq	%rax, %rcx
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rdx
	movsd	-1096(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rcx, -1272(%rbp)       # 8-byte Spill
	movq	%rax, -1280(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-1280(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-1272(%rbp), %rcx       # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rcx
	movsd	-1088(%rbp), %xmm1      # 8-byte Reload
                                        # xmm1 = mem[0],zero
	addsd	395344(%rcx), %xmm1
	movsd	%xmm0, -1288(%rbp)      # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rax, -1296(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movsd	-1288(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movq	-1296(%rbp), %rcx       # 8-byte Reload
	addsd	(%rcx,%rax), %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394912(%rax)
	movq	-56(%rbp), %rdi
	movq	-56(%rbp), %rax
	movsd	395400(%rax), %xmm0     # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	394912(%rax), %xmm1     # xmm1 = mem[0],zero
	callq	_ZN8MEMORY_T5POKEWEdd
	jmp	.LBB15_555
.LBB15_489:
	movsd	.LCPI15_118(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_490
	jp	.LBB15_490
	jmp	.LBB15_491
.LBB15_490:
	jmp	.LBB15_493
.LBB15_491:
	jmp	.LBB15_492
.LBB15_492:
	movsd	.LCPI15_9(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI15_8(%rip), %xmm1  # xmm1 = mem[0],zero
	movsd	.LCPI15_7(%rip), %xmm2  # xmm2 = mem[0],zero
	movsd	.LCPI15_6(%rip), %xmm3  # xmm3 = mem[0],zero
	movsd	.LCPI15_5(%rip), %xmm4  # xmm4 = mem[0],zero
	movsd	.LCPI15_4(%rip), %xmm5  # xmm5 = mem[0],zero
	movsd	.LCPI15_3(%rip), %xmm6  # xmm6 = mem[0],zero
	movsd	.LCPI15_2(%rip), %xmm7  # xmm7 = mem[0],zero
	movsd	.LCPI15_1(%rip), %xmm8  # xmm8 = mem[0],zero
	movsd	.LCPI15_0(%rip), %xmm9  # xmm9 = mem[0],zero
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rcx
	addsd	395344(%rcx), %xmm9
	movsd	%xmm0, -1304(%rbp)      # 8-byte Spill
	movaps	%xmm9, %xmm0
	movsd	%xmm1, -1312(%rbp)      # 8-byte Spill
	movsd	%xmm2, -1320(%rbp)      # 8-byte Spill
	movsd	%xmm3, -1328(%rbp)      # 8-byte Spill
	movsd	%xmm4, -1336(%rbp)      # 8-byte Spill
	movsd	%xmm5, -1344(%rbp)      # 8-byte Spill
	movsd	%xmm6, -1352(%rbp)      # 8-byte Spill
	movsd	%xmm7, -1360(%rbp)      # 8-byte Spill
	movsd	%xmm8, -1368(%rbp)      # 8-byte Spill
	movq	%rax, -1376(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-1376(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-56(%rbp), %rcx
	movq	-56(%rbp), %rdx
	movsd	-1368(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rax, -1384(%rbp)       # 8-byte Spill
	movq	%rcx, -1392(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-1392(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-1384(%rbp), %rcx       # 8-byte Reload
	addq	%rax, %rcx
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rdx
	movsd	-1360(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rcx, -1400(%rbp)       # 8-byte Spill
	movq	%rax, -1408(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-1408(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-1400(%rbp), %rcx       # 8-byte Reload
	addq	%rax, %rcx
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rdx
	movsd	-1352(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rcx, -1416(%rbp)       # 8-byte Spill
	movq	%rax, -1424(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-1424(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-1416(%rbp), %rcx       # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rcx
	movsd	-1344(%rbp), %xmm1      # 8-byte Reload
                                        # xmm1 = mem[0],zero
	addsd	395344(%rcx), %xmm1
	movsd	%xmm0, -1432(%rbp)      # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rax, -1440(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movsd	-1432(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movq	-1440(%rbp), %rcx       # 8-byte Reload
	addsd	(%rcx,%rax), %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 395400(%rax)
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rdx
	movsd	-1336(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rax, -1448(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-1448(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-56(%rbp), %rcx
	movq	-56(%rbp), %rdx
	movsd	-1328(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rax, -1456(%rbp)       # 8-byte Spill
	movq	%rcx, -1464(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-1464(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-1456(%rbp), %rcx       # 8-byte Reload
	addq	%rax, %rcx
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rdx
	movsd	-1320(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rcx, -1472(%rbp)       # 8-byte Spill
	movq	%rax, -1480(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-1480(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-1472(%rbp), %rcx       # 8-byte Reload
	addq	%rax, %rcx
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rdx
	movsd	-1312(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rcx, -1488(%rbp)       # 8-byte Spill
	movq	%rax, -1496(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-1496(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-1488(%rbp), %rcx       # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rcx
	movsd	-1304(%rbp), %xmm1      # 8-byte Reload
                                        # xmm1 = mem[0],zero
	addsd	395344(%rcx), %xmm1
	movsd	%xmm0, -1504(%rbp)      # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rax, -1512(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movsd	-1504(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movq	-1512(%rbp), %rcx       # 8-byte Reload
	addsd	(%rcx,%rax), %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 395456(%rax)
	movq	-56(%rbp), %rdi
	movq	-56(%rbp), %rax
	movsd	395456(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	_ZN8MEMORY_T5PEEKBEd
	movsd	%xmm0, -160(%rbp)
	movq	-56(%rbp), %rdi
	movq	-56(%rbp), %rax
	movsd	395400(%rax), %xmm0     # xmm0 = mem[0],zero
	movsd	-160(%rbp), %xmm1       # xmm1 = mem[0],zero
	callq	_ZN8MEMORY_T5POKEBEdd
	jmp	.LBB15_555
.LBB15_493:
	movsd	.LCPI15_119(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_494
	jp	.LBB15_494
	jmp	.LBB15_495
.LBB15_494:
	jmp	.LBB15_497
.LBB15_495:
	jmp	.LBB15_496
.LBB15_496:
	movsd	.LCPI15_10(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI15_9(%rip), %xmm1  # xmm1 = mem[0],zero
	movsd	.LCPI15_8(%rip), %xmm2  # xmm2 = mem[0],zero
	movsd	.LCPI15_7(%rip), %xmm3  # xmm3 = mem[0],zero
	movsd	.LCPI15_6(%rip), %xmm4  # xmm4 = mem[0],zero
	movsd	.LCPI15_5(%rip), %xmm5  # xmm5 = mem[0],zero
	movsd	.LCPI15_4(%rip), %xmm6  # xmm6 = mem[0],zero
	movsd	.LCPI15_3(%rip), %xmm7  # xmm7 = mem[0],zero
	movsd	.LCPI15_2(%rip), %xmm8  # xmm8 = mem[0],zero
	movsd	.LCPI15_1(%rip), %xmm9  # xmm9 = mem[0],zero
	movsd	.LCPI15_0(%rip), %xmm10 # xmm10 = mem[0],zero
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rcx
	addsd	395344(%rcx), %xmm10
	movsd	%xmm0, -1520(%rbp)      # 8-byte Spill
	movaps	%xmm10, %xmm0
	movsd	%xmm1, -1528(%rbp)      # 8-byte Spill
	movsd	%xmm2, -1536(%rbp)      # 8-byte Spill
	movsd	%xmm3, -1544(%rbp)      # 8-byte Spill
	movsd	%xmm4, -1552(%rbp)      # 8-byte Spill
	movsd	%xmm5, -1560(%rbp)      # 8-byte Spill
	movsd	%xmm6, -1568(%rbp)      # 8-byte Spill
	movsd	%xmm7, -1576(%rbp)      # 8-byte Spill
	movsd	%xmm8, -1584(%rbp)      # 8-byte Spill
	movsd	%xmm9, -1592(%rbp)      # 8-byte Spill
	movq	%rax, -1600(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-1600(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-56(%rbp), %rcx
	movq	-56(%rbp), %rdx
	movsd	-1592(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rax, -1608(%rbp)       # 8-byte Spill
	movq	%rcx, -1616(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-1616(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-1608(%rbp), %rcx       # 8-byte Reload
	addq	%rax, %rcx
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rdx
	movsd	-1584(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rcx, -1624(%rbp)       # 8-byte Spill
	movq	%rax, -1632(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-1632(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-1624(%rbp), %rcx       # 8-byte Reload
	addq	%rax, %rcx
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rdx
	movsd	-1576(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rcx, -1640(%rbp)       # 8-byte Spill
	movq	%rax, -1648(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-1648(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-1640(%rbp), %rcx       # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rcx
	movsd	-1568(%rbp), %xmm1      # 8-byte Reload
                                        # xmm1 = mem[0],zero
	addsd	395344(%rcx), %xmm1
	movsd	%xmm0, -1656(%rbp)      # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rax, -1664(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movsd	-1656(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movq	-1664(%rbp), %rcx       # 8-byte Reload
	addsd	(%rcx,%rax), %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 395400(%rax)
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rdx
	movsd	-1560(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rax, -1672(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-1672(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-56(%rbp), %rcx
	movq	-56(%rbp), %rdx
	movsd	-1552(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rax, -1680(%rbp)       # 8-byte Spill
	movq	%rcx, -1688(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-1688(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-1680(%rbp), %rcx       # 8-byte Reload
	addq	%rax, %rcx
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rdx
	movsd	-1544(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rcx, -1696(%rbp)       # 8-byte Spill
	movq	%rax, -1704(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-1704(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-1696(%rbp), %rcx       # 8-byte Reload
	addq	%rax, %rcx
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rdx
	movsd	-1536(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rcx, -1712(%rbp)       # 8-byte Spill
	movq	%rax, -1720(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-1720(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-1712(%rbp), %rcx       # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rcx
	movsd	-1528(%rbp), %xmm1      # 8-byte Reload
                                        # xmm1 = mem[0],zero
	addsd	395344(%rcx), %xmm1
	movsd	%xmm0, -1728(%rbp)      # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rax, -1736(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movsd	-1728(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movq	-1736(%rbp), %rcx       # 8-byte Reload
	addsd	(%rcx,%rax), %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 395456(%rax)
	movq	-56(%rbp), %rax
	movsd	-1520(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rax), %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 395344(%rax)
	movq	-56(%rbp), %rdi
	movq	-56(%rbp), %rax
	movsd	395456(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	_ZN8MEMORY_T5PEEKWEd
	movsd	%xmm0, -168(%rbp)
	movq	-56(%rbp), %rdi
	movq	-56(%rbp), %rax
	movsd	395400(%rax), %xmm0     # xmm0 = mem[0],zero
	movsd	-168(%rbp), %xmm1       # xmm1 = mem[0],zero
	callq	_ZN8MEMORY_T5POKEWEdd
	jmp	.LBB15_555
.LBB15_497:
	movsd	.LCPI15_120(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_498
	jp	.LBB15_498
	jmp	.LBB15_499
.LBB15_498:
	jmp	.LBB15_507
.LBB15_499:
	jmp	.LBB15_500
.LBB15_500:
	movsd	.LCPI15_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI15_3(%rip), %xmm1  # xmm1 = mem[0],zero
	movsd	.LCPI15_2(%rip), %xmm2  # xmm2 = mem[0],zero
	movsd	.LCPI15_1(%rip), %xmm3  # xmm3 = mem[0],zero
	movsd	.LCPI15_0(%rip), %xmm4  # xmm4 = mem[0],zero
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rcx
	addsd	395344(%rcx), %xmm4
	movsd	%xmm0, -1744(%rbp)      # 8-byte Spill
	movaps	%xmm4, %xmm0
	movsd	%xmm1, -1752(%rbp)      # 8-byte Spill
	movsd	%xmm2, -1760(%rbp)      # 8-byte Spill
	movsd	%xmm3, -1768(%rbp)      # 8-byte Spill
	movq	%rax, -1776(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-1776(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-56(%rbp), %rcx
	movq	-56(%rbp), %rdx
	movsd	-1768(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rax, -1784(%rbp)       # 8-byte Spill
	movq	%rcx, -1792(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-1792(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-1784(%rbp), %rcx       # 8-byte Reload
	addq	%rax, %rcx
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rdx
	movsd	-1760(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rcx, -1800(%rbp)       # 8-byte Spill
	movq	%rax, -1808(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-1808(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-1800(%rbp), %rcx       # 8-byte Reload
	addq	%rax, %rcx
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rdx
	movsd	-1752(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rcx, -1816(%rbp)       # 8-byte Spill
	movq	%rax, -1824(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-1824(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-1816(%rbp), %rcx       # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rcx
	movsd	-1744(%rbp), %xmm1      # 8-byte Reload
                                        # xmm1 = mem[0],zero
	addsd	395344(%rcx), %xmm1
	movsd	%xmm0, -1832(%rbp)      # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rax, -1840(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movsd	-1832(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movq	-1840(%rbp), %rcx       # 8-byte Reload
	addsd	(%rcx,%rax), %xmm0
	movq	-56(%rbp), %rax
	movsd	%xmm0, 395400(%rax)
	movq	-56(%rbp), %rax
	movsd	394888(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	fb_DoubleToStr@PLT
	leaq	STRING_DATA$(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rax, -176(%rbp)
	movq	-176(%rbp), %rax
	movq	%rcx, %rdi
	movq	$-1, %rcx
	movq	%rcx, %rsi
	movq	%rax, %rdx
	callq	fb_StrAssign@PLT
	leaq	STRING_DATA$(%rip), %rcx
	movq	%rax, -184(%rbp)
	movl	$1, R3$(%rip)
	movq	%rcx, %rdi
	movq	$-1, %rsi
	callq	fb_StrLen@PLT
	movq	%rax, -200(%rbp)
	movq	-200(%rbp), %rax
                                        # kill: def $eax killed $eax killed $rax
	movl	%eax, -188(%rbp)
	jmp	.LBB15_503
.LBB15_501:                             #   in Loop: Header=BB15_503 Depth=1
	movl	R3$(%rip), %eax
	movl	%eax, %esi
	leaq	STRING_DATA$(%rip), %rdi
	movl	$1, %ecx
	movq	%rcx, %rdx
	movq	%rcx, -1848(%rbp)       # 8-byte Spill
	callq	fb_StrMid@PLT
	movq	%rax, -208(%rbp)
	movq	-208(%rbp), %rdi
	movq	-1848(%rbp), %rsi       # 8-byte Reload
	callq	fb_ASC@PLT
	movl	%eax, -212(%rbp)
	movq	-56(%rbp), %rdi
	movl	-212(%rbp), %eax
	movl	%eax, %ecx
	cvtsi2sd	%rcx, %xmm0
	callq	_ZN8MEMORY_T10SCREENCODEEd
	movsd	%xmm0, -224(%rbp)
	movq	-56(%rbp), %rdi
	movl	CHAR_BUFFER$(%rip), %eax
	movl	%eax, %ecx
	movq	ADR0$(%rip), %rdx
	addq	%rdx, %rcx
	movl	R3$(%rip), %eax
	movl	%eax, %edx
	leaq	-1(%rdx,%rcx), %rcx
	movq	%rcx, %xmm0
	movaps	.LCPI15_111(%rip), %xmm1 # xmm1 = [1127219200,1160773632,0,0]
	punpckldq	%xmm1, %xmm0    # xmm0 = xmm0[0],xmm1[0],xmm0[1],xmm1[1]
	movapd	.LCPI15_112(%rip), %xmm1 # xmm1 = [4.503599627370496E+15,1.9342813113834067E+25]
	subpd	%xmm1, %xmm0
	movaps	%xmm0, %xmm1
	unpckhpd	%xmm0, %xmm0    # xmm0 = xmm0[1,1]
	addsd	%xmm1, %xmm0
	movsd	-224(%rbp), %xmm1       # xmm1 = mem[0],zero
	callq	_ZN8MEMORY_T5POKEBEdd
# %bb.502:                              #   in Loop: Header=BB15_503 Depth=1
	movl	R3$(%rip), %eax
	movl	%eax, %ecx
	addq	$1, %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	movl	%ecx, R3$(%rip)
.LBB15_503:                             # =>This Inner Loop Header: Depth=1
	movl	R3$(%rip), %eax
	movl	%eax, %ecx
	movl	-188(%rbp), %eax
	movl	%eax, %edx
	cmpq	%rdx, %rcx
	jg	.LBB15_505
# %bb.504:                              #   in Loop: Header=BB15_503 Depth=1
	jmp	.LBB15_501
.LBB15_505:
	jmp	.LBB15_506
.LBB15_506:
	jmp	.LBB15_555
.LBB15_507:
	movsd	.LCPI15_121(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_508
	jp	.LBB15_508
	jmp	.LBB15_509
.LBB15_508:
	jmp	.LBB15_517
.LBB15_509:
	jmp	.LBB15_510
.LBB15_510:
	movsd	.LCPI15_15(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI15_14(%rip), %xmm1 # xmm1 = mem[0],zero
	movsd	.LCPI15_13(%rip), %xmm2 # xmm2 = mem[0],zero
	movsd	.LCPI15_12(%rip), %xmm3 # xmm3 = mem[0],zero
	movsd	.LCPI15_11(%rip), %xmm4 # xmm4 = mem[0],zero
	movsd	.LCPI15_10(%rip), %xmm5 # xmm5 = mem[0],zero
	movsd	.LCPI15_9(%rip), %xmm6  # xmm6 = mem[0],zero
	movsd	.LCPI15_8(%rip), %xmm7  # xmm7 = mem[0],zero
	movsd	.LCPI15_7(%rip), %xmm8  # xmm8 = mem[0],zero
	movsd	.LCPI15_6(%rip), %xmm9  # xmm9 = mem[0],zero
	movsd	.LCPI15_5(%rip), %xmm10 # xmm10 = mem[0],zero
	movsd	.LCPI15_4(%rip), %xmm11 # xmm11 = mem[0],zero
	movsd	.LCPI15_3(%rip), %xmm12 # xmm12 = mem[0],zero
	movsd	.LCPI15_2(%rip), %xmm13 # xmm13 = mem[0],zero
	movsd	.LCPI15_1(%rip), %xmm14 # xmm14 = mem[0],zero
	movsd	.LCPI15_0(%rip), %xmm15 # xmm15 = mem[0],zero
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rcx
	addsd	395344(%rcx), %xmm15
	movsd	%xmm0, -1856(%rbp)      # 8-byte Spill
	movaps	%xmm15, %xmm0
	movsd	%xmm1, -1864(%rbp)      # 8-byte Spill
	movsd	%xmm2, -1872(%rbp)      # 8-byte Spill
	movsd	%xmm3, -1880(%rbp)      # 8-byte Spill
	movsd	%xmm4, -1888(%rbp)      # 8-byte Spill
	movsd	%xmm5, -1896(%rbp)      # 8-byte Spill
	movsd	%xmm6, -1904(%rbp)      # 8-byte Spill
	movsd	%xmm7, -1912(%rbp)      # 8-byte Spill
	movsd	%xmm8, -1920(%rbp)      # 8-byte Spill
	movsd	%xmm9, -1928(%rbp)      # 8-byte Spill
	movsd	%xmm10, -1936(%rbp)     # 8-byte Spill
	movsd	%xmm11, -1944(%rbp)     # 8-byte Spill
	movsd	%xmm12, -1952(%rbp)     # 8-byte Spill
	movsd	%xmm13, -1960(%rbp)     # 8-byte Spill
	movsd	%xmm14, -1968(%rbp)     # 8-byte Spill
	movq	%rax, -1976(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-1976(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$32, %rax
	movq	-56(%rbp), %rcx
	movq	-56(%rbp), %rdx
	movsd	-1968(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rax, -1984(%rbp)       # 8-byte Spill
	movq	%rcx, -1992(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-1992(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$24, %rax
	movq	-1984(%rbp), %rcx       # 8-byte Reload
	addq	%rax, %rcx
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rdx
	movsd	-1960(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rcx, -2000(%rbp)       # 8-byte Spill
	movq	%rax, -2008(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-2008(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$16, %rax
	movq	-2000(%rbp), %rcx       # 8-byte Reload
	addq	%rax, %rcx
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rdx
	movsd	-1952(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rcx, -2016(%rbp)       # 8-byte Spill
	movq	%rax, -2024(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-2024(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-2016(%rbp), %rcx       # 8-byte Reload
	addq	%rax, %rcx
	cvtsi2sd	%rcx, %xmm0
	movq	-56(%rbp), %rax
	movq	-56(%rbp), %rcx
	movsd	-1944(%rbp), %xmm1      # 8-byte Reload
                                        # xmm1 = mem[0],zero
	addsd	395344(%rcx), %xmm1
	movsd	%xmm0, -2032(%rbp)      # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rax, -2040(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movsd	-2032(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movq	-2040(%rbp), %rcx       # 8-byte Reload
	addsd	(%rcx,%rax), %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
                                        # kill: def $eax killed $eax killed $rax
	movl	%eax, STRING_ADR$(%rip)
	movq	-56(%rbp), %rcx
	movq	-56(%rbp), %rdx
	movsd	-1936(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	%rcx, -2048(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movq	-2048(%rbp), %rdx       # 8-byte Reload
	movsd	(%rdx,%rcx), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$32, %rcx
	movq	-56(%rbp), %rdx
	movq	-56(%rbp), %rsi
	movsd	-1928(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rsi), %xmm0
	movq	%rcx, -2056(%rbp)       # 8-byte Spill
	movq	%rdx, -2064(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movq	-2064(%rbp), %rdx       # 8-byte Reload
	movsd	(%rdx,%rcx), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$24, %rcx
	movq	-2056(%rbp), %rdx       # 8-byte Reload
	addq	%rcx, %rdx
	movq	-56(%rbp), %rcx
	movq	-56(%rbp), %rsi
	movsd	-1920(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rsi), %xmm0
	movq	%rdx, -2072(%rbp)       # 8-byte Spill
	movq	%rcx, -2080(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movq	-2080(%rbp), %rdx       # 8-byte Reload
	movsd	(%rdx,%rcx), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$16, %rcx
	movq	-2072(%rbp), %rdx       # 8-byte Reload
	addq	%rcx, %rdx
	movq	-56(%rbp), %rcx
	movq	-56(%rbp), %rsi
	movsd	-1912(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rsi), %xmm0
	movq	%rdx, -2088(%rbp)       # 8-byte Spill
	movq	%rcx, -2096(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movq	-2096(%rbp), %rdx       # 8-byte Reload
	movsd	(%rdx,%rcx), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$8, %rcx
	movq	-2088(%rbp), %rdx       # 8-byte Reload
	addq	%rcx, %rdx
	cvtsi2sd	%rdx, %xmm0
	movq	-56(%rbp), %rcx
	movq	-56(%rbp), %rdx
	movsd	-1904(%rbp), %xmm1      # 8-byte Reload
                                        # xmm1 = mem[0],zero
	addsd	395344(%rdx), %xmm1
	movsd	%xmm0, -2104(%rbp)      # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rcx, -2112(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	movsd	-2104(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movq	-2112(%rbp), %rdx       # 8-byte Reload
	addsd	(%rdx,%rcx), %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	movl	%ecx, STRING_LEN$(%rip)
	movq	-56(%rbp), %rdx
	movq	-56(%rbp), %rsi
	movsd	-1896(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rsi), %xmm0
	movq	%rdx, -2120(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rdx
	shlq	$3, %rdx
	movq	-2120(%rbp), %rsi       # 8-byte Reload
	movsd	(%rsi,%rdx), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rdx
	shlq	$32, %rdx
	movq	-56(%rbp), %rsi
	movq	-56(%rbp), %rdi
	movsd	-1888(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdi), %xmm0
	movq	%rdx, -2128(%rbp)       # 8-byte Spill
	movq	%rsi, -2136(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rdx
	shlq	$3, %rdx
	movq	-2136(%rbp), %rsi       # 8-byte Reload
	movsd	(%rsi,%rdx), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rdx
	shlq	$24, %rdx
	movq	-2128(%rbp), %rsi       # 8-byte Reload
	addq	%rdx, %rsi
	movq	-56(%rbp), %rdx
	movq	-56(%rbp), %rdi
	movsd	-1880(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdi), %xmm0
	movq	%rsi, -2144(%rbp)       # 8-byte Spill
	movq	%rdx, -2152(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rdx
	shlq	$3, %rdx
	movq	-2152(%rbp), %rsi       # 8-byte Reload
	movsd	(%rsi,%rdx), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rdx
	shlq	$16, %rdx
	movq	-2144(%rbp), %rsi       # 8-byte Reload
	addq	%rdx, %rsi
	movq	-56(%rbp), %rdx
	movq	-56(%rbp), %rdi
	movsd	-1872(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdi), %xmm0
	movq	%rsi, -2160(%rbp)       # 8-byte Spill
	movq	%rdx, -2168(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rdx
	shlq	$3, %rdx
	movq	-2168(%rbp), %rsi       # 8-byte Reload
	movsd	(%rsi,%rdx), %xmm0      # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rdx
	shlq	$8, %rdx
	movq	-2160(%rbp), %rsi       # 8-byte Reload
	addq	%rdx, %rsi
	cvtsi2sd	%rsi, %xmm0
	movq	-56(%rbp), %rdx
	movq	-56(%rbp), %rsi
	movsd	-1864(%rbp), %xmm1      # 8-byte Reload
                                        # xmm1 = mem[0],zero
	addsd	395344(%rsi), %xmm1
	movsd	%xmm0, -2176(%rbp)      # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rdx, -2184(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rdx
	shlq	$3, %rdx
	movsd	-2176(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movq	-2184(%rbp), %rsi       # 8-byte Reload
	addsd	(%rsi,%rdx), %xmm0
	movq	-56(%rbp), %rdx
	movsd	%xmm0, 395400(%rdx)
	movq	-56(%rbp), %rdx
	movsd	-1856(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	395344(%rdx), %xmm0
	movq	-56(%rbp), %rdx
	movsd	%xmm0, 395344(%rdx)
	movl	$0, R3$(%rip)
	movl	STRING_LEN$(%rip), %eax
	movl	%eax, -228(%rbp)
	jmp	.LBB15_513
.LBB15_511:                             #   in Loop: Header=BB15_513 Depth=1
	movq	-56(%rbp), %rdi
	movq	-56(%rbp), %rax
	movl	STRING_ADR$(%rip), %ecx
	movl	%ecx, %edx
	movl	R3$(%rip), %ecx
	movl	%ecx, %esi
	addq	%rsi, %rdx
	shlq	$3, %rdx
	movsd	(%rax,%rdx), %xmm0      # xmm0 = mem[0],zero
	callq	_ZN8MEMORY_T10SCREENCODEEd
	movsd	%xmm0, -240(%rbp)
	movq	-56(%rbp), %rdi
	movl	CHAR_BUFFER$(%rip), %ecx
	movl	%ecx, %eax
	cvtsi2sd	%rax, %xmm0
	movq	-56(%rbp), %rax
	addsd	395400(%rax), %xmm0
	movl	R3$(%rip), %ecx
	movl	%ecx, %eax
	cvtsi2sd	%rax, %xmm1
	addsd	%xmm1, %xmm0
	movsd	-240(%rbp), %xmm1       # xmm1 = mem[0],zero
	callq	_ZN8MEMORY_T5POKEBEdd
# %bb.512:                              #   in Loop: Header=BB15_513 Depth=1
	movl	R3$(%rip), %eax
	movl	%eax, %ecx
	addq	$1, %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	movl	%ecx, R3$(%rip)
.LBB15_513:                             # =>This Inner Loop Header: Depth=1
	movl	R3$(%rip), %eax
	movl	%eax, %ecx
	movl	-228(%rbp), %eax
	movl	%eax, %edx
	cmpq	%rdx, %rcx
	jg	.LBB15_515
# %bb.514:                              #   in Loop: Header=BB15_513 Depth=1
	jmp	.LBB15_511
.LBB15_515:
	jmp	.LBB15_516
.LBB15_516:
	jmp	.LBB15_555
.LBB15_517:
	movsd	.LCPI15_122(%rip), %xmm0 # xmm0 = mem[0],zero
	ucomisd	-64(%rbp), %xmm0
	jbe	.LBB15_519
# %bb.518:
	jmp	.LBB15_536
.LBB15_519:
	movsd	.LCPI15_123(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jbe	.LBB15_521
# %bb.520:
	jmp	.LBB15_536
.LBB15_521:
	jmp	.LBB15_522
.LBB15_522:
	movsd	.LCPI15_124(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI15_125(%rip), %xmm1 # xmm1 = mem[0],zero
	addsd	-64(%rbp), %xmm1
	movsd	%xmm1, -64(%rbp)
	movsd	-72(%rbp), %xmm1        # xmm1 = mem[0],zero
	movsd	%xmm1, C$(%rip)
	movsd	C$(%rip), %xmm1         # xmm1 = mem[0],zero
	movsd	%xmm0, -2192(%rbp)      # 8-byte Spill
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	cvtsi2sd	%rax, %xmm0
	movsd	%xmm0, C$(%rip)
	movsd	C$(%rip), %xmm0         # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	addsd	395072(%rax), %xmm0
	movsd	%xmm0, C$(%rip)
	movsd	-64(%rbp), %xmm0        # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movss	CHAR_W$(%rip), %xmm0    # xmm0 = mem[0],zero,zero,zero
	movq	%rax, -2200(%rbp)       # 8-byte Spill
	callq	nearbyintf@PLT
	cvttss2si	%xmm0, %rax
	movq	-2200(%rbp), %rcx       # 8-byte Reload
	movq	%rax, -2208(%rbp)       # 8-byte Spill
	movq	%rcx, %rax
	cqto
	movq	-2208(%rbp), %rsi       # 8-byte Reload
	idivq	%rsi
	cvtsi2sd	%rdx, %xmm0
	movsd	%xmm0, XS$(%rip)
	movsd	XS$(%rip), %xmm0        # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	shlq	$3, %rcx
	cvtsi2sd	%rcx, %xmm0
	movsd	%xmm0, XS$(%rip)
	movsd	-2192(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	XS$(%rip), %xmm0
	movsd	%xmm0, XS$(%rip)
	movsd	-64(%rbp), %xmm0        # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	movss	CHAR_H$(%rip), %xmm0    # xmm0 = mem[0],zero,zero,zero
	movq	%rcx, -2216(%rbp)       # 8-byte Spill
	callq	nearbyintf@PLT
	cvttss2si	%xmm0, %rcx
	movq	-2216(%rbp), %rdx       # 8-byte Reload
	movq	%rdx, %rax
	cqto
	idivq	%rcx
	cvtsi2sd	%rax, %xmm0
	movsd	%xmm0, YS$(%rip)
	movsd	YS$(%rip), %xmm0        # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	cvtsi2sd	%rax, %xmm0
	movsd	%xmm0, YS$(%rip)
	movsd	-2192(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	YS$(%rip), %xmm0
	movsd	%xmm0, YS$(%rip)
	movq	-56(%rbp), %rax
	movzwl	RVS$(%rip), %edi
	movl	%edi, %ecx
	shlq	$3, %rcx
	movsd	(%rax,%rcx), %xmm0      # xmm0 = mem[0],zero
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB15_524
	jp	.LBB15_524
# %bb.523:
	jmp	.LBB15_525
.LBB15_524:
	movsd	C$(%rip), %xmm0         # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	andq	$255, %rax
	cvtsi2sd	%rax, %xmm0
	movsd	%xmm0, C$(%rip)
.LBB15_525:
	movsd	.LCPI15_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	394856(%rax), %xmm1     # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jb	.LBB15_527
# %bb.526:
	jmp	.LBB15_528
.LBB15_527:
	movsd	.LCPI15_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	%xmm0, 394856(%rax)
.LBB15_528:
	movsd	.LCPI15_126(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-56(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	xorps	%xmm0, %xmm0
	movsd	%xmm0, Y$(%rip)
	movsd	%xmm0, X$(%rip)
.LBB15_529:                             # =>This Inner Loop Header: Depth=1
	xorl	%eax, %eax
	movsd	Y$(%rip), %xmm0         # xmm0 = mem[0],zero
	movq	-56(%rbp), %rcx
	ucomisd	395088(%rcx), %xmm0
	sete	%dl
	setnp	%sil
	andb	%sil, %dl
	andb	$1, %dl
	movzbl	%dl, %edi
	movl	%eax, %r8d
	subl	%edi, %r8d
	movslq	%r8d, %rcx
	movsd	X$(%rip), %xmm0         # xmm0 = mem[0],zero
	movq	-56(%rbp), %r9
	ucomisd	395080(%r9), %xmm0
	sete	%dl
	setnp	%sil
	andb	%sil, %dl
	andb	$1, %dl
	movzbl	%dl, %edi
	subl	%edi, %eax
	movslq	%eax, %r9
	andq	%r9, %rcx
	cmpq	$0, %rcx
	je	.LBB15_531
# %bb.530:
	jmp	.LBB15_535
.LBB15_531:                             #   in Loop: Header=BB15_529 Depth=1
	movsd	.LCPI15_127(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI15_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movsd	.LCPI15_3(%rip), %xmm2  # xmm2 = mem[0],zero
	movsd	.LCPI15_6(%rip), %xmm3  # xmm3 = mem[0],zero
	movsd	.LCPI15_4(%rip), %xmm4  # xmm4 = mem[0],zero
	movsd	XS$(%rip), %xmm5        # xmm5 = mem[0],zero
	addsd	X$(%rip), %xmm5
	mulsd	%xmm4, %xmm5
	divsd	%xmm1, %xmm5
	movq	-56(%rbp), %rax
	addsd	395032(%rax), %xmm5
	movq	-56(%rbp), %rax
	movsd	%xmm5, 394840(%rax)
	movsd	YS$(%rip), %xmm5        # xmm5 = mem[0],zero
	addsd	Y$(%rip), %xmm5
	mulsd	%xmm2, %xmm5
	divsd	%xmm1, %xmm5
	movq	-56(%rbp), %rax
	addsd	395040(%rax), %xmm5
	movq	-56(%rbp), %rax
	movsd	%xmm5, 394848(%rax)
	movsd	XS$(%rip), %xmm5        # xmm5 = mem[0],zero
	addsd	X$(%rip), %xmm5
	mulsd	%xmm4, %xmm5
	addsd	%xmm3, %xmm5
	divsd	%xmm1, %xmm5
	movq	-56(%rbp), %rax
	addsd	395032(%rax), %xmm5
	movq	-56(%rbp), %rax
	movsd	%xmm5, 394864(%rax)
	movsd	YS$(%rip), %xmm3        # xmm3 = mem[0],zero
	addsd	Y$(%rip), %xmm3
	mulsd	%xmm2, %xmm3
	addsd	%xmm2, %xmm3
	divsd	%xmm1, %xmm3
	movq	-56(%rbp), %rax
	addsd	395040(%rax), %xmm3
	movq	-56(%rbp), %rax
	movsd	%xmm3, 394872(%rax)
	movq	-56(%rbp), %rdi
	callq	_ZN8MEMORY_T6PEEK64Ed
	movsd	.LCPI15_127(%rip), %xmm1 # xmm1 = mem[0],zero
	movsd	%xmm0, -248(%rbp)
	movq	-56(%rbp), %rdi
	movsd	-248(%rbp), %xmm0       # xmm0 = mem[0],zero
	movsd	%xmm0, -2224(%rbp)      # 8-byte Spill
	movaps	%xmm1, %xmm0
	movsd	-2224(%rbp), %xmm1      # 8-byte Reload
                                        # xmm1 = mem[0],zero
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI15_0(%rip), %xmm0  # xmm0 = mem[0],zero
	addsd	X$(%rip), %xmm0
	movsd	%xmm0, X$(%rip)
	movsd	X$(%rip), %xmm0         # xmm0 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	395080(%rax), %xmm1     # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jb	.LBB15_533
# %bb.532:                              #   in Loop: Header=BB15_529 Depth=1
	jmp	.LBB15_534
.LBB15_533:                             #   in Loop: Header=BB15_529 Depth=1
	movsd	.LCPI15_0(%rip), %xmm0  # xmm0 = mem[0],zero
	xorps	%xmm1, %xmm1
	movsd	%xmm1, X$(%rip)
	movaps	%xmm0, %xmm1
	addsd	Y$(%rip), %xmm1
	movsd	%xmm1, Y$(%rip)
	addsd	C$(%rip), %xmm0
	movsd	%xmm0, C$(%rip)
.LBB15_534:                             #   in Loop: Header=BB15_529 Depth=1
	jmp	.LBB15_529
.LBB15_535:
	movsd	.LCPI15_128(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-56(%rbp), %rdi
	xorps	%xmm1, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
	movsd	.LCPI15_122(%rip), %xmm0 # xmm0 = mem[0],zero
	addsd	-64(%rbp), %xmm0
	movsd	%xmm0, -64(%rbp)
	movq	-56(%rbp), %rax
	movsd	-64(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rax, -2232(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-2232(%rbp), %rcx       # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	movsd	%xmm0, -72(%rbp)
	jmp	.LBB15_555
.LBB15_536:
	movsd	.LCPI15_129(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_537
	jp	.LBB15_537
	jmp	.LBB15_538
.LBB15_537:
	jmp	.LBB15_540
.LBB15_538:
	jmp	.LBB15_539
.LBB15_539:
	xorl	%eax, %eax
	movl	%eax, %edi
	xorl	%r8d, %r8d
	movss	X_AXIS0$(%rip), %xmm0   # xmm0 = mem[0],zero,zero,zero
	movss	Y_AXIS0$(%rip), %xmm1   # xmm1 = mem[0],zero,zero,zero
	movss	X_AXIS0$(%rip), %xmm2   # xmm2 = mem[0],zero,zero,zero
	movl	PIXEL_SIZE$(%rip), %eax
	movl	%eax, %ecx
	cvtsi2ss	%rcx, %xmm3
	addss	%xmm3, %xmm2
	movss	Y_AXIS0$(%rip), %xmm3   # xmm3 = mem[0],zero,zero,zero
	movl	PIXEL_SIZE$(%rip), %eax
	movl	%eax, %ecx
	cvtsi2ss	%rcx, %xmm4
	addss	%xmm4, %xmm3
	movl	RED2$(%rip), %eax
	movl	%eax, %ecx
	shlq	$16, %rcx
	movl	GREEN2$(%rip), %eax
	movl	%eax, %edx
	shlq	$8, %rdx
	orq	%rdx, %rcx
	movl	BLUE2$(%rip), %eax
	movl	%eax, %edx
	orq	%rdx, %rcx
	movl	XALPHA2$(%rip), %eax
	movl	%eax, %edx
	shlq	$24, %rdx
	orq	%rdx, %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	movl	%ecx, %esi
	movl	$2, %edx
	movl	$65535, %ecx            # imm = 0xFFFF
	callq	fb_GfxLine@PLT
	jmp	.LBB15_555
.LBB15_540:
	movsd	.LCPI15_130(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_541
	jp	.LBB15_541
	jmp	.LBB15_542
.LBB15_541:
	jmp	.LBB15_544
.LBB15_542:
	jmp	.LBB15_543
.LBB15_543:
	xorl	%eax, %eax
	movl	%eax, %edi
	xorl	%eax, %eax
	movss	X_AXIS0$(%rip), %xmm0   # xmm0 = mem[0],zero,zero,zero
	movss	Y_AXIS0$(%rip), %xmm1   # xmm1 = mem[0],zero,zero,zero
	movss	X_AXIS1$(%rip), %xmm2   # xmm2 = mem[0],zero,zero,zero
	movss	Y_AXIS1$(%rip), %xmm3   # xmm3 = mem[0],zero,zero,zero
	movl	RED2$(%rip), %ecx
	movl	%ecx, %edx
	shlq	$16, %rdx
	movl	GREEN2$(%rip), %ecx
	movl	%ecx, %esi
	shlq	$8, %rsi
	orq	%rsi, %rdx
	movl	BLUE2$(%rip), %ecx
	movl	%ecx, %esi
	orq	%rsi, %rdx
	movl	XALPHA2$(%rip), %ecx
	movl	%ecx, %esi
	shlq	$24, %rsi
	orq	%rsi, %rdx
                                        # kill: def $edx killed $edx killed $rdx
	movl	BITMASK$(%rip), %ecx
	movl	%edx, %esi
	movl	%eax, %edx
	movl	%eax, %r8d
	callq	fb_GfxLine@PLT
	jmp	.LBB15_555
.LBB15_544:
	movsd	.LCPI15_131(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jne	.LBB15_545
	jp	.LBB15_545
	jmp	.LBB15_546
.LBB15_545:
	jmp	.LBB15_548
.LBB15_546:
	jmp	.LBB15_547
.LBB15_547:
	xorl	%eax, %eax
	movl	%eax, %edi
	movss	.LCPI15_132(%rip), %xmm5 # xmm5 = mem[0],zero,zero,zero
	xorl	%edx, %edx
	movss	X_AXIS0$(%rip), %xmm0   # xmm0 = mem[0],zero,zero,zero
	movss	Y_AXIS1$(%rip), %xmm1   # xmm1 = mem[0],zero,zero,zero
	movq	RADIUS$(%rip), %rcx
	movq	%rcx, %rsi
	shrq	%rsi
	movl	%ecx, %eax
	andl	$1, %eax
	movl	%eax, %r8d
	orq	%rsi, %r8
	cvtsi2ss	%r8, %xmm2
	addss	%xmm2, %xmm2
	cvtsi2ss	%rcx, %xmm3
	testq	%rcx, %rcx
	movq	%rdi, -2240(%rbp)       # 8-byte Spill
	movss	%xmm5, -2244(%rbp)      # 4-byte Spill
	movl	%edx, -2248(%rbp)       # 4-byte Spill
	movss	%xmm0, -2252(%rbp)      # 4-byte Spill
	movss	%xmm1, -2256(%rbp)      # 4-byte Spill
	movss	%xmm3, -2260(%rbp)      # 4-byte Spill
	movss	%xmm2, -2264(%rbp)      # 4-byte Spill
	js	.LBB15_560
# %bb.559:
	movss	-2260(%rbp), %xmm0      # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movss	%xmm0, -2264(%rbp)      # 4-byte Spill
.LBB15_560:
	movss	-2264(%rbp), %xmm0      # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movl	RED2$(%rip), %eax
	movl	%eax, %ecx
	shlq	$16, %rcx
	movl	GREEN2$(%rip), %eax
	movl	%eax, %edx
	shlq	$8, %rdx
	orq	%rdx, %rcx
	movl	BLUE2$(%rip), %eax
	movl	%eax, %edx
	orq	%rdx, %rcx
	movl	XALPHA2$(%rip), %eax
	movl	%eax, %edx
	shlq	$24, %rdx
	orq	%rdx, %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	movq	-2240(%rbp), %rdi       # 8-byte Reload
	movss	-2252(%rbp), %xmm1      # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movss	%xmm0, -2268(%rbp)      # 4-byte Spill
	movaps	%xmm1, %xmm0
	movss	-2256(%rbp), %xmm1      # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movss	-2268(%rbp), %xmm2      # 4-byte Reload
                                        # xmm2 = mem[0],zero,zero,zero
	movl	%ecx, %esi
	xorps	%xmm3, %xmm3
	movss	%xmm3, -2272(%rbp)      # 4-byte Spill
	movss	-2272(%rbp), %xmm4      # 4-byte Reload
                                        # xmm4 = mem[0],zero,zero,zero
	movss	-2244(%rbp), %xmm5      # 4-byte Reload
                                        # xmm5 = mem[0],zero,zero,zero
	movl	-2248(%rbp), %edx       # 4-byte Reload
	movl	$4, %ecx
	callq	fb_GfxEllipse@PLT
	jmp	.LBB15_555
.LBB15_548:
	movsd	.LCPI15_133(%rip), %xmm0 # xmm0 = mem[0],zero
	ucomisd	-64(%rbp), %xmm0
	jbe	.LBB15_550
# %bb.549:
	jmp	.LBB15_554
.LBB15_550:
	movsd	.LCPI15_134(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-64(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jbe	.LBB15_552
# %bb.551:
	jmp	.LBB15_554
.LBB15_552:
	jmp	.LBB15_553
.LBB15_553:
	movsd	.LCPI15_133(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI15_135(%rip), %xmm1 # xmm1 = mem[0],zero
	addsd	-64(%rbp), %xmm1
	movsd	%xmm1, -64(%rbp)
	movsd	-72(%rbp), %xmm1        # xmm1 = mem[0],zero
	movq	-56(%rbp), %rax
	movsd	-64(%rbp), %xmm2        # xmm2 = mem[0],zero
	movsd	%xmm0, -2280(%rbp)      # 8-byte Spill
	movaps	%xmm2, %xmm0
	movsd	%xmm1, -2288(%rbp)      # 8-byte Spill
	movq	%rax, -2296(%rbp)       # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-2296(%rbp), %rcx       # 8-byte Reload
	movsd	-2288(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	%xmm0, 134479872(%rcx,%rax)
	movsd	-2280(%rbp), %xmm0      # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	-64(%rbp), %xmm0
	movsd	%xmm0, -64(%rbp)
.LBB15_554:
	jmp	.LBB15_555
.LBB15_555:
	jmp	.LBB15_556
.LBB15_556:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB15_558
# %bb.557:                              # %SP_return
	addq	$2304, %rsp             # imm = 0x900
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB15_558:                             # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end15:
	.size	_ZN8MEMORY_T5POKEBEdd, .Lfunc_end15-_ZN8MEMORY_T5POKEBEdd
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function _ZN8MEMORY_T5POKEWEdd
.LCPI16_0:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
.LCPI16_1:
	.quad	4607182418800017408     # double 1
	.text
	.globl	_ZN8MEMORY_T5POKEWEdd
	.p2align	4, 0x90
	.type	_ZN8MEMORY_T5POKEWEdd,@function
_ZN8MEMORY_T5POKEWEdd:                  # @_ZN8MEMORY_T5POKEWEdd
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -8(%rbp)
	movsd	%xmm0, -16(%rbp)
	movsd	%xmm1, -24(%rbp)
# %bb.1:
	movq	-8(%rbp), %rdi
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movsd	-24(%rbp), %xmm1        # xmm1 = mem[0],zero
	movsd	%xmm0, -32(%rbp)        # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rdi, -40(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI16_0(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rdx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rdx, %rax
                                        # kill: def $eax killed $eax killed $rax
                                        # kill: def $al killed $al killed $eax
	movzbl	%al, %esi
	cvtsi2sd	%esi, %xmm0
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movsd	-32(%rbp), %xmm2        # 8-byte Reload
                                        # xmm2 = mem[0],zero
	movsd	%xmm0, -48(%rbp)        # 8-byte Spill
	movaps	%xmm2, %xmm0
	movsd	-48(%rbp), %xmm3        # 8-byte Reload
                                        # xmm3 = mem[0],zero
	movsd	%xmm1, -56(%rbp)        # 8-byte Spill
	movaps	%xmm3, %xmm1
	movq	%rcx, -64(%rbp)         # 8-byte Spill
	callq	_ZN8MEMORY_T5POKEBEdd
	movq	-8(%rbp), %rdi
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movsd	.LCPI16_1(%rip), %xmm1  # xmm1 = mem[0],zero
	addsd	%xmm1, %xmm0
	movsd	-24(%rbp), %xmm1        # xmm1 = mem[0],zero
	movsd	%xmm0, -72(%rbp)        # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rdi, -80(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movaps	%xmm0, %xmm1
	movsd	-56(%rbp), %xmm2        # 8-byte Reload
                                        # xmm2 = mem[0],zero
	subsd	%xmm2, %xmm1
	cvttsd2si	%xmm1, %rcx
	movq	-64(%rbp), %rdx         # 8-byte Reload
	xorq	%rdx, %rcx
	cvttsd2si	%xmm0, %rdi
	ucomisd	%xmm2, %xmm0
	cmovbq	%rdi, %rcx
                                        # kill: def $cx killed $cx killed $rcx
	movzwl	%cx, %esi
	movl	%esi, %edi
	shrq	$8, %rdi
                                        # kill: def $edi killed $edi killed $rdi
	cvtsi2sd	%edi, %xmm1
	movq	-80(%rbp), %rdi         # 8-byte Reload
	movsd	-72(%rbp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	callq	_ZN8MEMORY_T5POKEBEdd
# %bb.2:
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end16:
	.size	_ZN8MEMORY_T5POKEWEdd, .Lfunc_end16-_ZN8MEMORY_T5POKEWEdd
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function _ZN8MEMORY_T6PEEK64Ed
.LCPI17_0:
	.quad	4678114112931102720     # double 57344
.LCPI17_1:
	.quad	4679239875398991872     # double 65535
.LCPI17_2:
	.quad	-4545257923923673088    # double -57344
.LCPI17_3:
	.quad	4675862313117417472     # double 40960
.LCPI17_4:
	.quad	4676988075585306624     # double 49151
.LCPI17_5:
	.quad	-4547509723737358336    # double -40960
.LCPI17_6:
	.quad	4677832637954392064     # double 55296
.LCPI17_7:
	.quad	4677973238003793920     # double 56319
.LCPI17_8:
	.quad	-4545539398900383744    # double -55296
.LCPI17_9:
	.quad	4677551162977681408     # double 53248
.LCPI17_10:
	.quad	4677691763027083264     # double 54271
.LCPI17_11:
	.quad	4643176031446892544     # double 255
	.text
	.globl	_ZN8MEMORY_T6PEEK64Ed
	.p2align	4, 0x90
	.type	_ZN8MEMORY_T6PEEK64Ed,@function
_ZN8MEMORY_T6PEEK64Ed:                  # @_ZN8MEMORY_T6PEEK64Ed
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	xorl	%esi, %esi
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movsd	%xmm0, -32(%rbp)
	leaq	-16(%rbp), %rax
	movq	%rax, %rdi
	movl	$8, %edx
	callq	memset@PLT
# %bb.1:
	movsd	.LCPI17_0(%rip), %xmm0  # xmm0 = mem[0],zero
	ucomisd	-32(%rbp), %xmm0
	jbe	.LBB17_3
# %bb.2:
	jmp	.LBB17_7
.LBB17_3:
	movsd	.LCPI17_1(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	-32(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jbe	.LBB17_5
# %bb.4:
	jmp	.LBB17_7
.LBB17_5:
	jmp	.LBB17_6
.LBB17_6:
	movsd	.LCPI17_2(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-24(%rbp), %rax
	addsd	-32(%rbp), %xmm0
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movsd	134217728(%rcx,%rax), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB17_31
.LBB17_7:
	movsd	.LCPI17_3(%rip), %xmm0  # xmm0 = mem[0],zero
	ucomisd	-32(%rbp), %xmm0
	jbe	.LBB17_9
# %bb.8:
	jmp	.LBB17_13
.LBB17_9:
	movsd	.LCPI17_4(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	-32(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jbe	.LBB17_11
# %bb.10:
	jmp	.LBB17_13
.LBB17_11:
	jmp	.LBB17_12
.LBB17_12:
	movsd	.LCPI17_5(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-24(%rbp), %rax
	addsd	-32(%rbp), %xmm0
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movsd	134348800(%rcx,%rax), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB17_31
.LBB17_13:
	movsd	.LCPI17_6(%rip), %xmm0  # xmm0 = mem[0],zero
	ucomisd	-32(%rbp), %xmm0
	jbe	.LBB17_15
# %bb.14:
	jmp	.LBB17_19
.LBB17_15:
	movsd	.LCPI17_7(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	-32(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jbe	.LBB17_17
# %bb.16:
	jmp	.LBB17_19
.LBB17_17:
	jmp	.LBB17_18
.LBB17_18:
	movsd	.LCPI17_8(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-24(%rbp), %rax
	addsd	-32(%rbp), %xmm0
	movq	%rax, -64(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movsd	134479872(%rcx,%rax), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB17_31
.LBB17_19:
	movsd	.LCPI17_9(%rip), %xmm0  # xmm0 = mem[0],zero
	ucomisd	-32(%rbp), %xmm0
	jbe	.LBB17_21
# %bb.20:
	jmp	.LBB17_29
.LBB17_21:
	movsd	.LCPI17_10(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	-32(%rbp), %xmm1        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jbe	.LBB17_23
# %bb.22:
	jmp	.LBB17_29
.LBB17_23:
	jmp	.LBB17_24
.LBB17_24:
	movsd	-32(%rbp), %xmm0        # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	andq	$63, %rax
	movq	%rax, -40(%rbp)
	cmpq	$18, -40(%rbp)
	je	.LBB17_26
# %bb.25:
	jmp	.LBB17_27
.LBB17_26:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB17_28
.LBB17_27:
	movsd	.LCPI17_11(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
.LBB17_28:
	jmp	.LBB17_31
.LBB17_29:
	movq	-24(%rbp), %rax
	movsd	-32(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$3, %rax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movsd	(%rcx,%rax), %xmm0      # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
# %bb.30:
	jmp	.LBB17_31
.LBB17_31:
	jmp	.LBB17_32
.LBB17_32:
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	movsd	%xmm0, -80(%rbp)        # 8-byte Spill
	jne	.LBB17_34
# %bb.33:                               # %SP_return
	movsd	-80(%rbp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB17_34:                              # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end17:
	.size	_ZN8MEMORY_T6PEEK64Ed, .Lfunc_end17-_ZN8MEMORY_T6PEEK64Ed
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function _ZN8MEMORY_T8ISSYMBOLE8FBSTRINGd
.LCPI18_0:
	.quad	4607182418800017408     # double 1
	.text
	.globl	_ZN8MEMORY_T8ISSYMBOLE8FBSTRINGd
	.p2align	4, 0x90
	.type	_ZN8MEMORY_T8ISSYMBOLE8FBSTRINGd,@function
_ZN8MEMORY_T8ISSYMBOLE8FBSTRINGd:       # @_ZN8MEMORY_T8ISSYMBOLE8FBSTRINGd
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	xorl	%eax, %eax
	movq	%fs:40, %rcx
	movq	%rcx, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movsd	%xmm0, -40(%rbp)
	leaq	-16(%rbp), %rcx
	movq	%rcx, %rdi
	movl	%eax, %esi
	movl	$8, %edx
	callq	memset@PLT
# %bb.1:
	jmp	.LBB18_2
.LBB18_2:                               # =>This Inner Loop Header: Depth=1
	movq	-32(%rbp), %rdi
	movsd	-40(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdi, -72(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rsi
	movq	-72(%rbp), %rdi         # 8-byte Reload
	movl	$1, %edx
	callq	fb_StrMid@PLT
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rdi
	movl	$1, %esi
	callq	fb_ASC@PLT
	movl	%eax, -60(%rbp)
	movl	-60(%rbp), %eax
	movl	%eax, -44(%rbp)
	movl	-44(%rbp), %eax
	movl	%eax, %ecx
	cmpq	$48, %rcx
	jge	.LBB18_4
# %bb.3:                                #   in Loop: Header=BB18_2 Depth=1
	jmp	.LBB18_8
.LBB18_4:                               #   in Loop: Header=BB18_2 Depth=1
	movl	-44(%rbp), %eax
	movl	%eax, %ecx
	cmpq	$57, %rcx
	jle	.LBB18_6
# %bb.5:                                #   in Loop: Header=BB18_2 Depth=1
	jmp	.LBB18_8
.LBB18_6:
	jmp	.LBB18_7
.LBB18_7:
	jmp	.LBB18_12
.LBB18_8:                               #   in Loop: Header=BB18_2 Depth=1
	movsd	.LCPI18_0(%rip), %xmm0  # xmm0 = mem[0],zero
	addsd	-40(%rbp), %xmm0
	movsd	%xmm0, -40(%rbp)
# %bb.9:                                #   in Loop: Header=BB18_2 Depth=1
	jmp	.LBB18_10
.LBB18_10:                              #   in Loop: Header=BB18_2 Depth=1
	jmp	.LBB18_11
.LBB18_11:                              #   in Loop: Header=BB18_2 Depth=1
	jmp	.LBB18_2
.LBB18_12:
	movsd	-40(%rbp), %xmm0        # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
# %bb.13:
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	movsd	%xmm0, -80(%rbp)        # 8-byte Spill
	jne	.LBB18_15
# %bb.14:                               # %SP_return
	movsd	-80(%rbp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB18_15:                              # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end18:
	.size	_ZN8MEMORY_T8ISSYMBOLE8FBSTRINGd, .Lfunc_end18-_ZN8MEMORY_T8ISSYMBOLE8FBSTRINGd
	.cfi_endproc
                                        # -- End function
	.globl	_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd # -- Begin function _ZN8MEMORY_T8ISNUMBERE8FBSTRINGd
	.p2align	4, 0x90
	.type	_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd,@function
_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd:       # @_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$112, %rsp
	xorl	%eax, %eax
	movq	%fs:40, %rcx
	movq	%rcx, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rsi, -40(%rbp)
	movsd	%xmm0, -48(%rbp)
	leaq	-16(%rbp), %rcx
	movq	%rcx, %rdi
	movl	%eax, %esi
	movl	$8, %edx
	callq	memset@PLT
# %bb.1:
	xorl	%esi, %esi
	leaq	-24(%rbp), %rax
	movq	%rax, %rdi
	movl	$8, %edx
	callq	memset@PLT
	movsd	-48(%rbp), %xmm0        # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	%rax, -24(%rbp)
.LBB19_2:                               # =>This Inner Loop Header: Depth=1
	movq	-24(%rbp), %rsi
	leaq	GET_DATA$(%rip), %rdi
	movl	$1, %edx
	callq	fb_StrMid@PLT
	movq	%rax, -64(%rbp)
	movq	-64(%rbp), %rdi
	movl	$1, %esi
	callq	fb_ASC@PLT
	movl	%eax, -68(%rbp)
	movl	-68(%rbp), %eax
	movl	%eax, -52(%rbp)
	movl	-52(%rbp), %eax
	movl	%eax, %ecx
	cmpq	$48, %rcx
	jge	.LBB19_4
# %bb.3:                                #   in Loop: Header=BB19_2 Depth=1
	jmp	.LBB19_8
.LBB19_4:                               #   in Loop: Header=BB19_2 Depth=1
	movl	-52(%rbp), %eax
	movl	%eax, %ecx
	cmpq	$57, %rcx
	jle	.LBB19_6
# %bb.5:                                #   in Loop: Header=BB19_2 Depth=1
	jmp	.LBB19_8
.LBB19_6:                               #   in Loop: Header=BB19_2 Depth=1
	jmp	.LBB19_7
.LBB19_7:                               #   in Loop: Header=BB19_2 Depth=1
	movq	-24(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -24(%rbp)
	jmp	.LBB19_35
.LBB19_8:                               #   in Loop: Header=BB19_2 Depth=1
	movl	-52(%rbp), %eax
	movl	%eax, %ecx
	cmpq	$38, %rcx
	jne	.LBB19_10
# %bb.9:                                #   in Loop: Header=BB19_2 Depth=1
	jmp	.LBB19_23
.LBB19_10:                              #   in Loop: Header=BB19_2 Depth=1
	jmp	.LBB19_11
.LBB19_11:                              #   in Loop: Header=BB19_2 Depth=1
	movl	-52(%rbp), %eax
	movl	%eax, %ecx
	cmpq	$43, %rcx
	jne	.LBB19_13
# %bb.12:                               #   in Loop: Header=BB19_2 Depth=1
	jmp	.LBB19_23
.LBB19_13:                              #   in Loop: Header=BB19_2 Depth=1
	jmp	.LBB19_14
.LBB19_14:                              #   in Loop: Header=BB19_2 Depth=1
	movl	-52(%rbp), %eax
	movl	%eax, %ecx
	cmpq	$45, %rcx
	jne	.LBB19_16
# %bb.15:                               #   in Loop: Header=BB19_2 Depth=1
	jmp	.LBB19_23
.LBB19_16:                              #   in Loop: Header=BB19_2 Depth=1
	jmp	.LBB19_17
.LBB19_17:                              #   in Loop: Header=BB19_2 Depth=1
	movl	-52(%rbp), %eax
	movl	%eax, %ecx
	cmpq	$46, %rcx
	jne	.LBB19_19
# %bb.18:                               #   in Loop: Header=BB19_2 Depth=1
	jmp	.LBB19_23
.LBB19_19:                              #   in Loop: Header=BB19_2 Depth=1
	jmp	.LBB19_20
.LBB19_20:                              #   in Loop: Header=BB19_2 Depth=1
	movl	-52(%rbp), %eax
	movl	%eax, %ecx
	cmpq	$66, %rcx
	je	.LBB19_22
# %bb.21:                               #   in Loop: Header=BB19_2 Depth=1
	jmp	.LBB19_24
.LBB19_22:                              #   in Loop: Header=BB19_2 Depth=1
	jmp	.LBB19_23
.LBB19_23:                              #   in Loop: Header=BB19_2 Depth=1
	movq	-24(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -24(%rbp)
	jmp	.LBB19_35
.LBB19_24:                              #   in Loop: Header=BB19_2 Depth=1
	movl	-52(%rbp), %eax
	movl	%eax, %ecx
	cmpq	$98, %rcx
	jne	.LBB19_26
# %bb.25:                               #   in Loop: Header=BB19_2 Depth=1
	jmp	.LBB19_33
.LBB19_26:                              #   in Loop: Header=BB19_2 Depth=1
	jmp	.LBB19_27
.LBB19_27:                              #   in Loop: Header=BB19_2 Depth=1
	movl	-52(%rbp), %eax
	movl	%eax, %ecx
	cmpq	$72, %rcx
	jne	.LBB19_29
# %bb.28:                               #   in Loop: Header=BB19_2 Depth=1
	jmp	.LBB19_33
.LBB19_29:                              #   in Loop: Header=BB19_2 Depth=1
	jmp	.LBB19_30
.LBB19_30:                              #   in Loop: Header=BB19_2 Depth=1
	movl	-52(%rbp), %eax
	movl	%eax, %ecx
	cmpq	$104, %rcx
	je	.LBB19_32
# %bb.31:
	jmp	.LBB19_34
.LBB19_32:                              #   in Loop: Header=BB19_2 Depth=1
	jmp	.LBB19_33
.LBB19_33:                              #   in Loop: Header=BB19_2 Depth=1
	movq	-24(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -24(%rbp)
	jmp	.LBB19_35
.LBB19_34:
	jmp	.LBB19_37
.LBB19_35:                              #   in Loop: Header=BB19_2 Depth=1
	jmp	.LBB19_36
.LBB19_36:                              #   in Loop: Header=BB19_2 Depth=1
	jmp	.LBB19_2
.LBB19_37:
	movsd	-48(%rbp), %xmm0        # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rsi
	movq	-24(%rbp), %rdx
	leaq	GET_DATA$(%rip), %rdi
	callq	fb_StrMid@PLT
	movq	%rax, -80(%rbp)
	movq	-80(%rbp), %rdi
	callq	fb_VAL@PLT
	movsd	%xmm0, -88(%rbp)
	xorps	%xmm0, %xmm0
	ucomisd	-88(%rbp), %xmm0
	jb	.LBB19_39
# %bb.38:
	jmp	.LBB19_40
.LBB19_39:
	movsd	-48(%rbp), %xmm0        # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rsi
	movq	-24(%rbp), %rdx
	leaq	GET_DATA$(%rip), %rdi
	callq	fb_StrMid@PLT
	movq	%rax, -96(%rbp)
	movq	-96(%rbp), %rdi
	callq	fb_VAL@PLT
	movsd	%xmm0, -104(%rbp)
	movsd	-104(%rbp), %xmm0       # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB19_41
.LBB19_40:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -16(%rbp)
.LBB19_41:
	jmp	.LBB19_42
.LBB19_42:
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	movsd	%xmm0, -112(%rbp)       # 8-byte Spill
	jne	.LBB19_44
# %bb.43:                               # %SP_return
	movsd	-112(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addq	$112, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB19_44:                              # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end19:
	.size	_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd, .Lfunc_end19-_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function _ZN8MEMORY_T6GETXYZEv
.LCPI20_0:
	.quad	4619567317775286272     # double 7
	.text
	.globl	_ZN8MEMORY_T6GETXYZEv
	.p2align	4, 0x90
	.type	_ZN8MEMORY_T6GETXYZEv,@function
_ZN8MEMORY_T6GETXYZEv:                  # @_ZN8MEMORY_T6GETXYZEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$656, %rsp              # imm = 0x290
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -184(%rbp)
# %bb.1:
	leaq	GET_DATA$(%rip), %rax
	xorl	%ecx, %ecx
	leaq	-32(%rbp), %rdx
	movq	%rdx, %rsi
	movq	%rsi, %rdi
	movl	%ecx, %esi
	movl	$24, %r8d
	movq	%rdx, -496(%rbp)        # 8-byte Spill
	movq	%r8, %rdx
	movq	%rax, -504(%rbp)        # 8-byte Spill
	movl	%ecx, -508(%rbp)        # 4-byte Spill
	callq	memset@PLT
	movq	-496(%rbp), %rax        # 8-byte Reload
	movq	%rax, %rdi
	movq	$-1, %rax
	movq	%rax, %rsi
	movq	-504(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	movl	-508(%rbp), %r8d        # 4-byte Reload
	callq	fb_StrAssign@PLT
	movsd	.LCPI20_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	%rax, -192(%rbp)
	movq	-184(%rbp), %rdi
	leaq	-32(%rbp), %rsi
	callq	_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd
	movsd	%xmm0, -200(%rbp)
	movsd	-200(%rbp), %xmm0       # xmm0 = mem[0],zero
	movq	-184(%rbp), %rax
	movsd	%xmm0, 394840(%rax)
	leaq	-32(%rbp), %rdi
	callq	fb_StrDelete@PLT
	movq	-184(%rbp), %rax
	movsd	394840(%rax), %xmm0     # xmm0 = mem[0],zero
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB20_2
	jp	.LBB20_2
	jmp	.LBB20_3
.LBB20_2:
	jmp	.LBB20_4
.LBB20_3:
	movq	-184(%rbp), %rax
	movsd	394840(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	fb_DoubleToStr@PLT
	movq	%rax, -208(%rbp)
	movq	-208(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	callq	fb_StrLen@PLT
	leaq	GET_DATA$(%rip), %rcx
	xorl	%edx, %edx
	movq	%rax, -216(%rbp)
	leaq	-104(%rbp), %rax
	movq	%rax, %rsi
	movq	%rsi, %rdi
	movl	%edx, %esi
	movl	$24, %r8d
	movl	%edx, -512(%rbp)        # 4-byte Spill
	movq	%r8, %rdx
	movq	%rcx, -520(%rbp)        # 8-byte Spill
	movq	%rax, -528(%rbp)        # 8-byte Spill
	callq	memset@PLT
	movq	-528(%rbp), %rax        # 8-byte Reload
	movq	%rax, %rdi
	movq	$-1, %rax
	movq	%rax, %rsi
	movq	-520(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	movl	-512(%rbp), %r8d        # 4-byte Reload
	callq	fb_StrAssign@PLT
	movq	%rax, -224(%rbp)
	movq	-184(%rbp), %rdi
	movq	-216(%rbp), %rax
	addq	$7, %rax
	cvtsi2sd	%rax, %xmm0
	leaq	-104(%rbp), %rsi
	callq	_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd
	movsd	%xmm0, -232(%rbp)
	movsd	-232(%rbp), %xmm0       # xmm0 = mem[0],zero
	movq	%xmm0, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	movq	%rax, %xmm0
	xorps	%xmm1, %xmm1
	addsd	%xmm1, %xmm0
	movq	-184(%rbp), %rax
	movsd	%xmm0, 394840(%rax)
	leaq	-104(%rbp), %rdi
	callq	fb_StrDelete@PLT
	jmp	.LBB20_8
.LBB20_4:
	movq	-184(%rbp), %rax
	movsd	394840(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	fb_DoubleToStr@PLT
	movq	%rax, -240(%rbp)
	movq	-240(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	callq	fb_StrLen@PLT
	movq	%rax, -248(%rbp)
	movq	-248(%rbp), %rax
	addq	$7, %rax
	leaq	GET_DATA$(%rip), %rdi
	movq	%rax, %rsi
	movl	$1, %edx
	callq	fb_StrMid@PLT
	movq	%rax, -256(%rbp)
	movq	-256(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.84(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -260(%rbp)
	movslq	-260(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB20_6
# %bb.5:
	jmp	.LBB20_7
.LBB20_6:
	movq	-184(%rbp), %rax
	movsd	394840(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	fb_DoubleToStr@PLT
	movq	%rax, -272(%rbp)
	movq	-272(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	callq	fb_StrLen@PLT
	leaq	GET_DATA$(%rip), %rcx
	xorl	%edx, %edx
	movq	%rax, -280(%rbp)
	leaq	-128(%rbp), %rax
	movq	%rax, %rsi
	movq	%rsi, %rdi
	movl	%edx, %esi
	movl	$24, %r8d
	movl	%edx, -532(%rbp)        # 4-byte Spill
	movq	%r8, %rdx
	movq	%rcx, -544(%rbp)        # 8-byte Spill
	movq	%rax, -552(%rbp)        # 8-byte Spill
	callq	memset@PLT
	movq	-552(%rbp), %rax        # 8-byte Reload
	movq	%rax, %rdi
	movq	$-1, %rax
	movq	%rax, %rsi
	movq	-544(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	movl	-532(%rbp), %r8d        # 4-byte Reload
	callq	fb_StrAssign@PLT
	movq	%rax, -288(%rbp)
	movq	-184(%rbp), %rdi
	movq	-280(%rbp), %rax
	addq	$8, %rax
	cvtsi2sd	%rax, %xmm0
	leaq	-128(%rbp), %rsi
	callq	_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd
	movsd	%xmm0, -296(%rbp)
	movsd	-296(%rbp), %xmm0       # xmm0 = mem[0],zero
	movq	%xmm0, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	movq	%rax, %xmm0
	xorps	%xmm1, %xmm1
	addsd	%xmm1, %xmm0
	movq	-184(%rbp), %rax
	movsd	%xmm0, 394840(%rax)
	leaq	-128(%rbp), %rdi
	callq	fb_StrDelete@PLT
.LBB20_7:
	jmp	.LBB20_8
.LBB20_8:
	movq	-184(%rbp), %rax
	movsd	394840(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	fb_DoubleToStr@PLT
	movq	%rax, -304(%rbp)
	movq	-304(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	callq	fb_StrLen@PLT
	leaq	GET_DATA$(%rip), %rcx
	xorl	%edx, %edx
	movq	%rax, -312(%rbp)
	leaq	-56(%rbp), %rax
	movq	%rax, %rsi
	movq	%rsi, %rdi
	movl	%edx, %esi
	movl	$24, %r8d
	movl	%edx, -556(%rbp)        # 4-byte Spill
	movq	%r8, %rdx
	movq	%rcx, -568(%rbp)        # 8-byte Spill
	movq	%rax, -576(%rbp)        # 8-byte Spill
	callq	memset@PLT
	movq	-576(%rbp), %rax        # 8-byte Reload
	movq	%rax, %rdi
	movq	$-1, %rax
	movq	%rax, %rsi
	movq	-568(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	movl	-556(%rbp), %r8d        # 4-byte Reload
	callq	fb_StrAssign@PLT
	movq	%rax, -320(%rbp)
	movq	-184(%rbp), %rdi
	movq	-312(%rbp), %rax
	addq	$9, %rax
	cvtsi2sd	%rax, %xmm0
	leaq	-56(%rbp), %rsi
	callq	_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd
	movsd	%xmm0, -328(%rbp)
	movsd	-328(%rbp), %xmm0       # xmm0 = mem[0],zero
	movq	-184(%rbp), %rax
	movsd	%xmm0, 394848(%rax)
	leaq	-56(%rbp), %rdi
	callq	fb_StrDelete@PLT
	movq	-184(%rbp), %rax
	movsd	394840(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	fb_DoubleToStr@PLT
	movq	%rax, -336(%rbp)
	movq	-336(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	callq	fb_StrLen@PLT
	movq	%rax, -344(%rbp)
	movq	-344(%rbp), %rax
	addq	$9, %rax
	leaq	GET_DATA$(%rip), %rdi
	movq	%rax, %rsi
	movl	$1, %edx
	callq	fb_StrMid@PLT
	movq	%rax, -352(%rbp)
	movq	-352(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.84(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -356(%rbp)
	movslq	-356(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB20_10
# %bb.9:
	jmp	.LBB20_11
.LBB20_10:
	movq	-184(%rbp), %rax
	movsd	394840(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	fb_DoubleToStr@PLT
	movq	%rax, -368(%rbp)
	movq	-368(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	callq	fb_StrLen@PLT
	leaq	GET_DATA$(%rip), %rcx
	xorl	%edx, %edx
	movq	%rax, -376(%rbp)
	leaq	-152(%rbp), %rax
	movq	%rax, %rsi
	movq	%rsi, %rdi
	movl	%edx, %esi
	movl	$24, %r8d
	movl	%edx, -580(%rbp)        # 4-byte Spill
	movq	%r8, %rdx
	movq	%rcx, -592(%rbp)        # 8-byte Spill
	movq	%rax, -600(%rbp)        # 8-byte Spill
	callq	memset@PLT
	movq	-600(%rbp), %rax        # 8-byte Reload
	movq	%rax, %rdi
	movq	$-1, %rax
	movq	%rax, %rsi
	movq	-592(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	movl	-580(%rbp), %r8d        # 4-byte Reload
	callq	fb_StrAssign@PLT
	movq	%rax, -384(%rbp)
	movq	-184(%rbp), %rdi
	movq	-376(%rbp), %rax
	addq	$10, %rax
	cvtsi2sd	%rax, %xmm0
	leaq	-152(%rbp), %rsi
	callq	_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd
	movsd	%xmm0, -392(%rbp)
	movsd	-392(%rbp), %xmm0       # xmm0 = mem[0],zero
	movq	%xmm0, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	movq	%rax, %xmm0
	xorps	%xmm1, %xmm1
	addsd	%xmm1, %xmm0
	movq	-184(%rbp), %rax
	movsd	%xmm0, 394848(%rax)
	leaq	-152(%rbp), %rdi
	callq	fb_StrDelete@PLT
.LBB20_11:
	jmp	.LBB20_12
.LBB20_12:
	movq	-184(%rbp), %rax
	movsd	394848(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	fb_DoubleToStr@PLT
	movq	%rax, -400(%rbp)
	movq	-400(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	callq	fb_StrLen@PLT
	leaq	GET_DATA$(%rip), %rcx
	xorl	%edx, %edx
	movq	%rax, -408(%rbp)
	leaq	-80(%rbp), %rax
	movq	%rax, %rsi
	movq	%rsi, %rdi
	movl	%edx, %esi
	movl	$24, %r8d
	movl	%edx, -604(%rbp)        # 4-byte Spill
	movq	%r8, %rdx
	movq	%rcx, -616(%rbp)        # 8-byte Spill
	movq	%rax, -624(%rbp)        # 8-byte Spill
	callq	memset@PLT
	movq	-624(%rbp), %rax        # 8-byte Reload
	movq	%rax, %rdi
	movq	$-1, %rax
	movq	%rax, %rsi
	movq	-616(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	movl	-604(%rbp), %r8d        # 4-byte Reload
	callq	fb_StrAssign@PLT
	movq	%rax, -416(%rbp)
	movq	-184(%rbp), %rdi
	movq	-408(%rbp), %rax
	addq	$13, %rax
	cvtsi2sd	%rax, %xmm0
	leaq	-80(%rbp), %rsi
	callq	_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd
	movsd	%xmm0, -424(%rbp)
	movsd	-424(%rbp), %xmm0       # xmm0 = mem[0],zero
	movq	-184(%rbp), %rax
	movsd	%xmm0, 394856(%rax)
	leaq	-80(%rbp), %rdi
	callq	fb_StrDelete@PLT
	movq	-184(%rbp), %rax
	movsd	394848(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	fb_DoubleToStr@PLT
	movq	%rax, -432(%rbp)
	movq	-432(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	callq	fb_StrLen@PLT
	movq	%rax, -440(%rbp)
	movq	-440(%rbp), %rax
	addq	$13, %rax
	leaq	GET_DATA$(%rip), %rdi
	movq	%rax, %rsi
	movl	$1, %edx
	callq	fb_StrMid@PLT
	movq	%rax, -448(%rbp)
	movq	-448(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.84(%rip), %rdx
	movl	$2, %ecx
	callq	fb_StrCompare@PLT
	movl	%eax, -452(%rbp)
	movslq	-452(%rbp), %rcx
	cmpq	$0, %rcx
	je	.LBB20_14
# %bb.13:
	jmp	.LBB20_15
.LBB20_14:
	movq	-184(%rbp), %rax
	movsd	394848(%rax), %xmm0     # xmm0 = mem[0],zero
	callq	fb_DoubleToStr@PLT
	movq	%rax, -464(%rbp)
	movq	-464(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	callq	fb_StrLen@PLT
	leaq	GET_DATA$(%rip), %rcx
	xorl	%edx, %edx
	movq	%rax, -472(%rbp)
	leaq	-176(%rbp), %rax
	movq	%rax, %rsi
	movq	%rsi, %rdi
	movl	%edx, %esi
	movl	$24, %r8d
	movl	%edx, -628(%rbp)        # 4-byte Spill
	movq	%r8, %rdx
	movq	%rcx, -640(%rbp)        # 8-byte Spill
	movq	%rax, -648(%rbp)        # 8-byte Spill
	callq	memset@PLT
	movq	-648(%rbp), %rax        # 8-byte Reload
	movq	%rax, %rdi
	movq	$-1, %rax
	movq	%rax, %rsi
	movq	-640(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	movl	-628(%rbp), %r8d        # 4-byte Reload
	callq	fb_StrAssign@PLT
	movq	%rax, -480(%rbp)
	movq	-184(%rbp), %rdi
	movq	-472(%rbp), %rax
	addq	$14, %rax
	cvtsi2sd	%rax, %xmm0
	leaq	-176(%rbp), %rsi
	callq	_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd
	movsd	%xmm0, -488(%rbp)
	xorps	%xmm0, %xmm0
	addsd	-488(%rbp), %xmm0
	movq	-184(%rbp), %rax
	movsd	%xmm0, 394856(%rax)
	leaq	-176(%rbp), %rdi
	callq	fb_StrDelete@PLT
.LBB20_15:
	jmp	.LBB20_16
.LBB20_16:
	jmp	.LBB20_17
.LBB20_17:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB20_19
# %bb.18:                               # %SP_return
	addq	$656, %rsp              # imm = 0x290
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB20_19:                              # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end20:
	.size	_ZN8MEMORY_T6GETXYZEv, .Lfunc_end20-_ZN8MEMORY_T6GETXYZEv
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function _ZN9SHADERTOYC1Ev
	.type	_ZN9SHADERTOYC1Ev,@function
_ZN9SHADERTOYC1Ev:                      # @_ZN9SHADERTOYC1Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	xorl	%eax, %eax
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rcx
	movq	%rcx, %rdi
	movl	%eax, %esi
	movl	$4, %ecx
	movq	%rcx, %rdx
	movl	%eax, -12(%rbp)         # 4-byte Spill
	movq	%rcx, -24(%rbp)         # 8-byte Spill
	callq	memset@PLT
	movq	-8(%rbp), %rcx
	addq	$4, %rcx
	movq	%rcx, %rdi
	movl	-12(%rbp), %esi         # 4-byte Reload
	movq	-24(%rbp), %rdx         # 8-byte Reload
	callq	memset@PLT
	movq	-8(%rbp), %rcx
	addq	$8, %rcx
	movq	%rcx, %rdi
	movl	-12(%rbp), %esi         # 4-byte Reload
	movl	$24, %edx
	callq	memset@PLT
# %bb.1:
	jmp	.LBB21_2
.LBB21_2:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end21:
	.size	_ZN9SHADERTOYC1Ev, .Lfunc_end21-_ZN9SHADERTOYC1Ev
	.cfi_endproc
                                        # -- End function
	.globl	_ZN8MEMORY_T9READUBYTEEd # -- Begin function _ZN8MEMORY_T9READUBYTEEd
	.p2align	4, 0x90
	.type	_ZN8MEMORY_T9READUBYTEEd,@function
_ZN8MEMORY_T9READUBYTEEd:               # @_ZN8MEMORY_T9READUBYTEEd
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	xorl	%esi, %esi
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movsd	%xmm0, -32(%rbp)
	leaq	-9(%rbp), %rdi
	movl	$1, %edx
	callq	memset@PLT
# %bb.1:
	movq	-24(%rbp), %rdi
	movsd	-32(%rbp), %xmm0        # xmm0 = mem[0],zero
	callq	_ZN8MEMORY_T6PEEK64Ed
	movsd	%xmm0, -40(%rbp)
	movsd	-40(%rbp), %xmm0        # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %eax
                                        # kill: def $al killed $al killed $eax
	movb	%al, -9(%rbp)
# %bb.2:
	movb	-9(%rbp), %al
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movb	%al, -41(%rbp)          # 1-byte Spill
	jne	.LBB22_4
# %bb.3:                                # %SP_return
	movb	-41(%rbp), %al          # 1-byte Reload
	movzbl	%al, %eax
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB22_4:                               # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end22:
	.size	_ZN8MEMORY_T9READUBYTEEd, .Lfunc_end22-_ZN8MEMORY_T9READUBYTEEd
	.cfi_endproc
                                        # -- End function
	.globl	_ZN8MEMORY_T8READBYTEEd # -- Begin function _ZN8MEMORY_T8READBYTEEd
	.p2align	4, 0x90
	.type	_ZN8MEMORY_T8READBYTEEd,@function
_ZN8MEMORY_T8READBYTEEd:                # @_ZN8MEMORY_T8READBYTEEd
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	xorl	%esi, %esi
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movsd	%xmm0, -32(%rbp)
	leaq	-9(%rbp), %rdi
	movl	$1, %edx
	callq	memset@PLT
# %bb.1:
	movq	-24(%rbp), %rdi
	movsd	-32(%rbp), %xmm0        # xmm0 = mem[0],zero
	callq	_ZN8MEMORY_T6PEEK64Ed
	movsd	%xmm0, -40(%rbp)
	movsd	-40(%rbp), %xmm0        # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %eax
                                        # kill: def $al killed $al killed $eax
	movb	%al, -9(%rbp)
# %bb.2:
	movb	-9(%rbp), %al
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movb	%al, -41(%rbp)          # 1-byte Spill
	jne	.LBB23_4
# %bb.3:                                # %SP_return
	movb	-41(%rbp), %al          # 1-byte Reload
	movsbl	%al, %eax
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB23_4:                               # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end23:
	.size	_ZN8MEMORY_T8READBYTEEd, .Lfunc_end23-_ZN8MEMORY_T8READBYTEEd
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function _ZN8MEMORY_T10READUSHORTEd
.LCPI24_0:
	.quad	4607182418800017408     # double 1
	.text
	.globl	_ZN8MEMORY_T10READUSHORTEd
	.p2align	4, 0x90
	.type	_ZN8MEMORY_T10READUSHORTEd,@function
_ZN8MEMORY_T10READUSHORTEd:             # @_ZN8MEMORY_T10READUSHORTEd
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	xorl	%esi, %esi
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movsd	%xmm0, -32(%rbp)
	leaq	-10(%rbp), %rax
	movq	%rax, %rdi
	movl	$2, %edx
	callq	memset@PLT
# %bb.1:
	movq	-24(%rbp), %rdi
	movsd	-32(%rbp), %xmm0        # xmm0 = mem[0],zero
	callq	_ZN8MEMORY_T6PEEK64Ed
	movsd	.LCPI24_0(%rip), %xmm1  # xmm1 = mem[0],zero
	movsd	%xmm0, -40(%rbp)
	movq	-24(%rbp), %rdi
	addsd	-32(%rbp), %xmm1
	movaps	%xmm1, %xmm0
	callq	_ZN8MEMORY_T6PEEK64Ed
	movsd	%xmm0, -48(%rbp)
	movsd	-40(%rbp), %xmm0        # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movsd	-48(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	shlq	$8, %rax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	orq	%rax, %rcx
                                        # kill: def $cx killed $cx killed $rcx
	movw	%cx, -10(%rbp)
# %bb.2:
	movw	-10(%rbp), %ax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movw	%ax, -58(%rbp)          # 2-byte Spill
	jne	.LBB24_4
# %bb.3:                                # %SP_return
	movw	-58(%rbp), %ax          # 2-byte Reload
	movzwl	%ax, %ecx
	movl	%ecx, %eax
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB24_4:                               # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end24:
	.size	_ZN8MEMORY_T10READUSHORTEd, .Lfunc_end24-_ZN8MEMORY_T10READUSHORTEd
	.cfi_endproc
                                        # -- End function
	.globl	_ZN8MEMORY_T9WRITEBYTEEdd # -- Begin function _ZN8MEMORY_T9WRITEBYTEEdd
	.p2align	4, 0x90
	.type	_ZN8MEMORY_T9WRITEBYTEEdd,@function
_ZN8MEMORY_T9WRITEBYTEEdd:              # @_ZN8MEMORY_T9WRITEBYTEEdd
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movsd	%xmm0, -16(%rbp)
	movsd	%xmm1, -24(%rbp)
# %bb.1:
	movq	-8(%rbp), %rdi
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movsd	-24(%rbp), %xmm1        # xmm1 = mem[0],zero
	callq	_ZN8MEMORY_T6POKE64Edd
# %bb.2:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end25:
	.size	_ZN8MEMORY_T9WRITEBYTEEdd, .Lfunc_end25-_ZN8MEMORY_T9WRITEBYTEEdd
	.cfi_endproc
                                        # -- End function
	.globl	_ZN8MEMORY_T10WRITEUBYTEEdd # -- Begin function _ZN8MEMORY_T10WRITEUBYTEEdd
	.p2align	4, 0x90
	.type	_ZN8MEMORY_T10WRITEUBYTEEdd,@function
_ZN8MEMORY_T10WRITEUBYTEEdd:            # @_ZN8MEMORY_T10WRITEUBYTEEdd
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movsd	%xmm0, -16(%rbp)
	movsd	%xmm1, -24(%rbp)
# %bb.1:
	movq	-8(%rbp), %rdi
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movsd	-24(%rbp), %xmm1        # xmm1 = mem[0],zero
	callq	_ZN8MEMORY_T6POKE64Edd
# %bb.2:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end26:
	.size	_ZN8MEMORY_T10WRITEUBYTEEdd, .Lfunc_end26-_ZN8MEMORY_T10WRITEUBYTEEdd
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function _ZN8MEMORY_T11WRITEUSHORTEdd
.LCPI27_0:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
.LCPI27_1:
	.quad	4607182418800017408     # double 1
	.text
	.globl	_ZN8MEMORY_T11WRITEUSHORTEdd
	.p2align	4, 0x90
	.type	_ZN8MEMORY_T11WRITEUSHORTEdd,@function
_ZN8MEMORY_T11WRITEUSHORTEdd:           # @_ZN8MEMORY_T11WRITEUSHORTEdd
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -8(%rbp)
	movsd	%xmm0, -16(%rbp)
	movsd	%xmm1, -24(%rbp)
# %bb.1:
	movq	-8(%rbp), %rdi
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movsd	-24(%rbp), %xmm1        # xmm1 = mem[0],zero
	movsd	%xmm0, -32(%rbp)        # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rdi, -40(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI27_0(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	cvttsd2si	%xmm0, %rdx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rdx, %rax
                                        # kill: def $eax killed $eax killed $rax
                                        # kill: def $al killed $al killed $eax
	movzbl	%al, %esi
	cvtsi2sd	%esi, %xmm0
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movsd	-32(%rbp), %xmm2        # 8-byte Reload
                                        # xmm2 = mem[0],zero
	movsd	%xmm0, -48(%rbp)        # 8-byte Spill
	movaps	%xmm2, %xmm0
	movsd	-48(%rbp), %xmm3        # 8-byte Reload
                                        # xmm3 = mem[0],zero
	movsd	%xmm1, -56(%rbp)        # 8-byte Spill
	movaps	%xmm3, %xmm1
	movq	%rcx, -64(%rbp)         # 8-byte Spill
	callq	_ZN8MEMORY_T6POKE64Edd
	movq	-8(%rbp), %rdi
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movsd	.LCPI27_1(%rip), %xmm1  # xmm1 = mem[0],zero
	addsd	%xmm1, %xmm0
	movsd	-24(%rbp), %xmm1        # xmm1 = mem[0],zero
	movsd	%xmm0, -72(%rbp)        # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rdi, -80(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movaps	%xmm0, %xmm1
	movsd	-56(%rbp), %xmm2        # 8-byte Reload
                                        # xmm2 = mem[0],zero
	subsd	%xmm2, %xmm1
	cvttsd2si	%xmm1, %rcx
	movq	-64(%rbp), %rdx         # 8-byte Reload
	xorq	%rdx, %rcx
	cvttsd2si	%xmm0, %rdi
	ucomisd	%xmm2, %xmm0
	cmovbq	%rdi, %rcx
                                        # kill: def $cx killed $cx killed $rcx
	movzwl	%cx, %esi
	movl	%esi, %edi
	shrq	$8, %rdi
                                        # kill: def $edi killed $edi killed $rdi
	cvtsi2sd	%edi, %xmm1
	movq	-80(%rbp), %rdi         # 8-byte Reload
	movsd	-72(%rbp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	callq	_ZN8MEMORY_T6POKE64Edd
# %bb.2:
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end27:
	.size	_ZN8MEMORY_T11WRITEUSHORTEdd, .Lfunc_end27-_ZN8MEMORY_T11WRITEUSHORTEdd
	.cfi_endproc
                                        # -- End function
	.globl	_ZN7CPU6510cv8FBSTRINGEv # -- Begin function _ZN7CPU6510cv8FBSTRINGEv
	.p2align	4, 0x90
	.type	_ZN7CPU6510cv8FBSTRINGEv,@function
_ZN7CPU6510cv8FBSTRINGEv:               # @_ZN7CPU6510cv8FBSTRINGEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$1120, %rsp             # imm = 0x460
	xorl	%esi, %esi
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -616(%rbp)
	leaq	-608(%rbp), %rax
	movq	%rax, %rdi
	movl	$24, %edx
	callq	memset@PLT
# %bb.1:
	movq	-616(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
	andq	$1, %rax
	movq	%rax, %rdi
	callq	fb_ULongintToStr@PLT
	movq	%rax, -624(%rbp)
	movq	-616(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
	sarq	$1, %rax
	andq	$1, %rax
	movq	%rax, %rdi
	callq	fb_ULongintToStr@PLT
	movq	%rax, -632(%rbp)
	movq	-616(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
	sarq	$2, %rax
	andq	$1, %rax
	movq	%rax, %rdi
	callq	fb_ULongintToStr@PLT
	movq	%rax, -640(%rbp)
	movq	-616(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
	sarq	$3, %rax
	andq	$1, %rax
	movq	%rax, %rdi
	callq	fb_ULongintToStr@PLT
	movq	%rax, -648(%rbp)
	movq	-616(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
	sarq	$4, %rax
	andq	$1, %rax
	movq	%rax, %rdi
	callq	fb_ULongintToStr@PLT
	movq	%rax, -656(%rbp)
	movq	-616(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
	sarq	$6, %rax
	andq	$1, %rax
	movq	%rax, %rdi
	callq	fb_ULongintToStr@PLT
	movq	%rax, -664(%rbp)
	movq	-616(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
	sarq	$7, %rax
	andq	$1, %rax
	movq	%rax, %rdi
	callq	fb_ULongintToStr@PLT
	movq	%rax, -672(%rbp)
	movq	-616(%rbp), %rax
	movzbl	6(%rax), %edi
	movl	$2, %esi
	callq	fb_HEXEx_b@PLT
	movq	%rax, -680(%rbp)
	movq	-616(%rbp), %rax
	movzbl	3(%rax), %edi
	movl	$2, %esi
	callq	fb_HEXEx_b@PLT
	movq	%rax, -688(%rbp)
	movq	-616(%rbp), %rax
	movzbl	2(%rax), %edi
	movl	$2, %esi
	callq	fb_HEXEx_b@PLT
	movq	%rax, -696(%rbp)
	movq	-616(%rbp), %rax
	movzbl	1(%rax), %edi
	movl	$2, %esi
	callq	fb_HEXEx_b@PLT
	movq	%rax, -704(%rbp)
	movq	-616(%rbp), %rax
	movzwl	4(%rax), %edi
	movl	$4, %esi
	callq	fb_HEXEx_s@PLT
	xorl	%esi, %esi
	movq	%rax, -712(%rbp)
	leaq	-32(%rbp), %rax
	movq	%rax, %rdx
	movq	%rdx, %rdi
	movl	$24, %edx
	movq	%rax, -928(%rbp)        # 8-byte Spill
	callq	memset@PLT
	movq	-712(%rbp), %rax
	movq	-928(%rbp), %rdi        # 8-byte Reload
	leaq	.L.str.1680(%rip), %rsi
	movl	$4, %edx
	movq	%rax, %rcx
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -720(%rbp)
	leaq	-56(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -936(%rbp)        # 8-byte Spill
	callq	memset@PLT
	movq	-720(%rbp), %rax
	movq	-936(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.1681(%rip), %rcx
	movl	$4, %r8d
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -728(%rbp)
	leaq	-80(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -944(%rbp)        # 8-byte Spill
	callq	memset@PLT
	movq	-728(%rbp), %rax
	movq	-704(%rbp), %rcx
	movq	-944(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rax
	movq	%rax, %rdx
	movq	%rax, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -736(%rbp)
	leaq	-104(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -952(%rbp)        # 8-byte Spill
	callq	memset@PLT
	movq	-736(%rbp), %rax
	movq	-952(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.1682(%rip), %rcx
	movl	$4, %r8d
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -744(%rbp)
	leaq	-128(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -960(%rbp)        # 8-byte Spill
	callq	memset@PLT
	movq	-744(%rbp), %rax
	movq	-696(%rbp), %rcx
	movq	-960(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rax
	movq	%rax, %rdx
	movq	%rax, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -752(%rbp)
	leaq	-152(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -968(%rbp)        # 8-byte Spill
	callq	memset@PLT
	movq	-752(%rbp), %rax
	movq	-968(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.1683(%rip), %rcx
	movl	$4, %r8d
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -760(%rbp)
	leaq	-176(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -976(%rbp)        # 8-byte Spill
	callq	memset@PLT
	movq	-760(%rbp), %rax
	movq	-688(%rbp), %rcx
	movq	-976(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rax
	movq	%rax, %rdx
	movq	%rax, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -768(%rbp)
	leaq	-200(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -984(%rbp)        # 8-byte Spill
	callq	memset@PLT
	movq	-768(%rbp), %rax
	movq	-984(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.1684(%rip), %rcx
	movl	$4, %r8d
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -776(%rbp)
	leaq	-224(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -992(%rbp)        # 8-byte Spill
	callq	memset@PLT
	movq	-776(%rbp), %rax
	movq	-680(%rbp), %rcx
	movq	-992(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rax
	movq	%rax, %rdx
	movq	%rax, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -784(%rbp)
	leaq	-248(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -1000(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-784(%rbp), %rax
	movq	-1000(%rbp), %rdi       # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.1685(%rip), %rcx
	movl	$4, %r8d
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -792(%rbp)
	leaq	-272(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -1008(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-792(%rbp), %rax
	movq	-672(%rbp), %rcx
	movq	-1008(%rbp), %rdi       # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rax
	movq	%rax, %rdx
	movq	%rax, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -800(%rbp)
	leaq	-296(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -1016(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-800(%rbp), %rax
	movq	-1016(%rbp), %rdi       # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.1686(%rip), %rcx
	movl	$4, %r8d
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -808(%rbp)
	leaq	-320(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -1024(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-808(%rbp), %rax
	movq	-664(%rbp), %rcx
	movq	-1024(%rbp), %rdi       # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rax
	movq	%rax, %rdx
	movq	%rax, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -816(%rbp)
	leaq	-344(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -1032(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-816(%rbp), %rax
	movq	-1032(%rbp), %rdi       # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.1687(%rip), %rcx
	movl	$3, %r8d
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -824(%rbp)
	leaq	-368(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -1040(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-824(%rbp), %rax
	movq	-1040(%rbp), %rdi       # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.1688(%rip), %rcx
	movl	$4, %r8d
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -832(%rbp)
	leaq	-392(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -1048(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-832(%rbp), %rax
	movq	-656(%rbp), %rcx
	movq	-1048(%rbp), %rdi       # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rax
	movq	%rax, %rdx
	movq	%rax, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -840(%rbp)
	leaq	-416(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -1056(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-840(%rbp), %rax
	movq	-1056(%rbp), %rdi       # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.1689(%rip), %rcx
	movl	$4, %r8d
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -848(%rbp)
	leaq	-440(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -1064(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-848(%rbp), %rax
	movq	-648(%rbp), %rcx
	movq	-1064(%rbp), %rdi       # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rax
	movq	%rax, %rdx
	movq	%rax, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -856(%rbp)
	leaq	-464(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -1072(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-856(%rbp), %rax
	movq	-1072(%rbp), %rdi       # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.1690(%rip), %rcx
	movl	$4, %r8d
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -864(%rbp)
	leaq	-488(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -1080(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-864(%rbp), %rax
	movq	-640(%rbp), %rcx
	movq	-1080(%rbp), %rdi       # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rax
	movq	%rax, %rdx
	movq	%rax, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -872(%rbp)
	leaq	-512(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -1088(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-872(%rbp), %rax
	movq	-1088(%rbp), %rdi       # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.1691(%rip), %rcx
	movl	$4, %r8d
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -880(%rbp)
	leaq	-536(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -1096(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-880(%rbp), %rax
	movq	-632(%rbp), %rcx
	movq	-1096(%rbp), %rdi       # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rax
	movq	%rax, %rdx
	movq	%rax, %r8
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -888(%rbp)
	leaq	-560(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -1104(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-888(%rbp), %rax
	movq	-1104(%rbp), %rdi       # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rdx
	leaq	.L.str.1692(%rip), %rcx
	movl	$4, %r8d
	callq	fb_StrConcat@PLT
	xorl	%esi, %esi
	movq	%rax, -896(%rbp)
	leaq	-584(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movl	$24, %edx
	movq	%rax, -1112(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-896(%rbp), %rax
	movq	-624(%rbp), %rcx
	movq	-1112(%rbp), %rdi       # 8-byte Reload
	movq	%rax, %rsi
	movq	$-1, %rax
	movq	%rax, %rdx
	movq	%rax, %r8
	callq	fb_StrConcat@PLT
	xorl	%r8d, %r8d
	movq	%rax, -904(%rbp)
	leaq	-608(%rbp), %rax
	movq	-904(%rbp), %rcx
	movq	%rax, %rdi
	movq	$-1, %rax
	movq	%rax, %rsi
	movq	%rcx, %rdx
	movq	%rax, %rcx
	callq	fb_StrAssign@PLT
	movq	%rax, -912(%rbp)
# %bb.2:
	leaq	-608(%rbp), %rdi
	callq	fb_StrAllocTempResult@PLT
	movq	%rax, -920(%rbp)
	movq	-920(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -1120(%rbp)       # 8-byte Spill
	jne	.LBB28_4
# %bb.3:                                # %SP_return
	movq	-1120(%rbp), %rax       # 8-byte Reload
	addq	$1120, %rsp             # imm = 0x460
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB28_4:                               # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end28:
	.size	_ZN7CPU6510cv8FBSTRINGEv, .Lfunc_end28-_ZN7CPU6510cv8FBSTRINGEv
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function _ZN7CPU65104TICKEd
.LCPI29_0:
	.quad	4607182418800017408     # double 1
	.text
	.globl	_ZN7CPU65104TICKEd
	.p2align	4, 0x90
	.type	_ZN7CPU65104TICKEd,@function
_ZN7CPU65104TICKEd:                     # @_ZN7CPU65104TICKEd
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$224, %rsp
	xorl	%esi, %esi
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -56(%rbp)
	movsd	%xmm0, -64(%rbp)
	leaq	-16(%rbp), %rax
	movq	%rax, %rdi
	movl	$8, %edx
	callq	memset@PLT
# %bb.1:
	movq	$0, -72(%rbp)
	xorl	%eax, %eax
	movl	%eax, %esi
	movb	%al, %cl
	movl	$1, %edi
	movl	%eax, -196(%rbp)        # 4-byte Spill
	movb	%cl, %al
	callq	fb_CHR@PLT
	movq	%rax, -80(%rbp)
	movq	-80(%rbp), %rdx
	leaq	-40(%rbp), %rdi
	movq	$-1, %rax
	movq	%rax, %rsi
	movq	%rax, %rcx
	movl	-196(%rbp), %r8d        # 4-byte Reload
	callq	fb_StrInit@PLT
	movq	%rax, -88(%rbp)
	movq	$0, -48(%rbp)
	movq	-56(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	4(%rax), %r8d
	cvtsi2sd	%r8d, %xmm0
	callq	_ZN8MEMORY_T9READUBYTEEd
	movsd	.LCPI29_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movb	%al, -89(%rbp)
	movq	-56(%rbp), %rcx
	addq	$16, %rcx
	movq	-56(%rbp), %rdx
	movzbl	-89(%rbp), %r8d
	movl	%r8d, %esi
	imulq	$56, %rsi, %rsi
	addq	%rsi, %rdx
	addq	$72, %rdx
	movq	%rcx, %rdi
	movq	%rdx, %rsi
	movl	$56, %edx
	movsd	%xmm0, -208(%rbp)       # 8-byte Spill
	callq	memcpy@PLT
	movq	-56(%rbp), %rcx
	xorps	%xmm0, %xmm0
	movsd	%xmm0, 56(%rcx)
	cvtsi2sdq	-72(%rbp), %xmm0
	movsd	-208(%rbp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	addsd	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rcx
	movq	%rcx, -72(%rbp)
	movq	-56(%rbp), %rcx
	movzwl	4(%rcx), %r8d
	movl	%r8d, %ecx
	cvtsi2sd	%rcx, %xmm0
	movsd	-208(%rbp), %xmm1       # 8-byte Reload
                                        # xmm1 = mem[0],zero
	addsd	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %r8d
                                        # kill: def $r8w killed $r8w killed $r8d
	movq	-56(%rbp), %rcx
	movw	%r8w, 4(%rcx)
	movq	-56(%rbp), %rcx
	movq	32(%rcx), %rcx
	movq	%rcx, -104(%rbp)
	jmp	.LBB29_15
.Ltmp1531:                              # Block address taken
.LBB29_2:
	jmp	.LBB29_18
.Ltmp1532:                              # Block address taken
.LBB29_3:
	movq	-56(%rbp), %rax
	movq	64(%rax), %rax
	movq	-56(%rbp), %rdi
	callq	*%rax
	jmp	.LBB29_18
.Ltmp1533:                              # Block address taken
.LBB29_4:
	movq	-56(%rbp), %rdi
	callq	_ZN7CPU65107ADR_IMMEv
	movsd	%xmm0, -112(%rbp)
	movsd	-112(%rbp), %xmm0       # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %eax
                                        # kill: def $ax killed $ax killed $eax
	movq	-56(%rbp), %rcx
	movw	%ax, 56(%rcx)
	movq	-56(%rbp), %rcx
	movq	64(%rcx), %rcx
	movq	-56(%rbp), %rdi
	callq	*%rcx
	jmp	.LBB29_18
.Ltmp1534:                              # Block address taken
.LBB29_5:
	movq	-56(%rbp), %rdi
	callq	_ZN7CPU65107ADR_ABSEv
	movsd	%xmm0, -120(%rbp)
	movsd	-120(%rbp), %xmm0       # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %eax
                                        # kill: def $ax killed $ax killed $eax
	movq	-56(%rbp), %rcx
	movw	%ax, 56(%rcx)
	movq	-56(%rbp), %rcx
	movq	64(%rcx), %rcx
	movq	-56(%rbp), %rdi
	callq	*%rcx
	jmp	.LBB29_18
.Ltmp1535:                              # Block address taken
.LBB29_6:
	movq	-56(%rbp), %rdi
	callq	_ZN7CPU65108ADR_ZEROEv
	movsd	%xmm0, -128(%rbp)
	movsd	-128(%rbp), %xmm0       # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %eax
                                        # kill: def $ax killed $ax killed $eax
	movq	-56(%rbp), %rcx
	movw	%ax, 56(%rcx)
	movq	-56(%rbp), %rcx
	movq	64(%rcx), %rcx
	movq	-56(%rbp), %rdi
	callq	*%rcx
	jmp	.LBB29_18
.Ltmp1536:                              # Block address taken
.LBB29_7:
	movq	-56(%rbp), %rdi
	callq	_ZN7CPU65109ADR_ZEROXEv
	movsd	%xmm0, -136(%rbp)
	movsd	-136(%rbp), %xmm0       # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %eax
                                        # kill: def $ax killed $ax killed $eax
	movq	-56(%rbp), %rcx
	movw	%ax, 56(%rcx)
	movq	-56(%rbp), %rcx
	movq	64(%rcx), %rcx
	movq	-56(%rbp), %rdi
	callq	*%rcx
	jmp	.LBB29_18
.Ltmp1537:                              # Block address taken
.LBB29_8:
	movq	-56(%rbp), %rdi
	callq	_ZN7CPU65109ADR_ZEROYEv
	movsd	%xmm0, -144(%rbp)
	movsd	-144(%rbp), %xmm0       # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %eax
                                        # kill: def $ax killed $ax killed $eax
	movq	-56(%rbp), %rcx
	movw	%ax, 56(%rcx)
	movq	-56(%rbp), %rcx
	movq	64(%rcx), %rcx
	movq	-56(%rbp), %rdi
	callq	*%rcx
	jmp	.LBB29_18
.Ltmp1538:                              # Block address taken
.LBB29_9:
	movq	-56(%rbp), %rdi
	callq	_ZN7CPU65108ADR_ABSXEv
	movsd	%xmm0, -152(%rbp)
	movsd	-152(%rbp), %xmm0       # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %eax
                                        # kill: def $ax killed $ax killed $eax
	movq	-56(%rbp), %rcx
	movw	%ax, 56(%rcx)
	movq	-56(%rbp), %rcx
	movq	64(%rcx), %rcx
	movq	-56(%rbp), %rdi
	callq	*%rcx
	jmp	.LBB29_18
.Ltmp1539:                              # Block address taken
.LBB29_10:
	movq	-56(%rbp), %rdi
	callq	_ZN7CPU65108ADR_ABSYEv
	movsd	%xmm0, -160(%rbp)
	movsd	-160(%rbp), %xmm0       # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %eax
                                        # kill: def $ax killed $ax killed $eax
	movq	-56(%rbp), %rcx
	movw	%ax, 56(%rcx)
	movq	-56(%rbp), %rcx
	movq	64(%rcx), %rcx
	movq	-56(%rbp), %rdi
	callq	*%rcx
	jmp	.LBB29_18
.Ltmp1540:                              # Block address taken
.LBB29_11:
	movq	-56(%rbp), %rdi
	callq	_ZN7CPU65107ADR_RELEv
	movsd	%xmm0, -168(%rbp)
	movsd	-168(%rbp), %xmm0       # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %eax
                                        # kill: def $ax killed $ax killed $eax
	movq	-56(%rbp), %rcx
	movw	%ax, 56(%rcx)
	movq	-56(%rbp), %rcx
	movq	64(%rcx), %rcx
	movq	-56(%rbp), %rdi
	callq	*%rcx
	jmp	.LBB29_18
.Ltmp1541:                              # Block address taken
.LBB29_12:
	movq	-56(%rbp), %rdi
	callq	_ZN7CPU65108ADR_INDXEv
	movsd	%xmm0, -176(%rbp)
	movsd	-176(%rbp), %xmm0       # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %eax
                                        # kill: def $ax killed $ax killed $eax
	movq	-56(%rbp), %rcx
	movw	%ax, 56(%rcx)
	movq	-56(%rbp), %rcx
	movq	64(%rcx), %rcx
	movq	-56(%rbp), %rdi
	callq	*%rcx
	jmp	.LBB29_18
.Ltmp1542:                              # Block address taken
.LBB29_13:
	movq	-56(%rbp), %rdi
	callq	_ZN7CPU65108ADR_INDYEv
	movsd	%xmm0, -184(%rbp)
	movsd	-184(%rbp), %xmm0       # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %eax
                                        # kill: def $ax killed $ax killed $eax
	movq	-56(%rbp), %rcx
	movw	%ax, 56(%rcx)
	movq	-56(%rbp), %rcx
	movq	64(%rcx), %rcx
	movq	-56(%rbp), %rdi
	callq	*%rcx
	jmp	.LBB29_18
.Ltmp1543:                              # Block address taken
.LBB29_14:
	movq	-56(%rbp), %rdi
	callq	_ZN7CPU65107ADR_INDEv
	movsd	%xmm0, -192(%rbp)
	movsd	-192(%rbp), %xmm0       # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %eax
                                        # kill: def $ax killed $ax killed $eax
	movq	-56(%rbp), %rcx
	movw	%ax, 56(%rcx)
	movq	-56(%rbp), %rcx
	movq	64(%rcx), %rcx
	movq	-56(%rbp), %rdi
	callq	*%rcx
	jmp	.LBB29_18
.LBB29_15:
	cmpq	$12, -104(%rbp)
	jbe	.LBB29_17
# %bb.16:
	jmp	.LBB29_18
.LBB29_17:
	movq	-104(%rbp), %rax
	subq	$0, %rax
	leaq	_ZN7CPU65104TICKEd.tmp$2534(%rip), %rcx
	movq	(%rcx,%rax,8), %rax
	movq	%rax, -216(%rbp)        # 8-byte Spill
	jmp	.LBB29_21
.LBB29_18:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -16(%rbp)
	leaq	-40(%rbp), %rdi
	callq	fb_StrDelete@PLT
# %bb.19:
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	movsd	%xmm0, -224(%rbp)       # 8-byte Spill
	jne	.LBB29_22
# %bb.20:                               # %SP_return
	movsd	-224(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addq	$224, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB29_21:
	.cfi_def_cfa %rbp, 16
	movq	-216(%rbp), %rax        # 8-byte Reload
	jmpq	*%rax
.LBB29_22:                              # %CallStackCheckFailBlk
	callq	__stack_chk_fail@PLT
.Lfunc_end29:
	.size	_ZN7CPU65104TICKEd, .Lfunc_end29-_ZN7CPU65104TICKEd
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function _ZN7CPU65107ADR_IMMEv
.LCPI30_0:
	.quad	4607182418800017408     # double 1
	.text
	.globl	_ZN7CPU65107ADR_IMMEv
	.p2align	4, 0x90
	.type	_ZN7CPU65107ADR_IMMEv,@function
_ZN7CPU65107ADR_IMMEv:                  # @_ZN7CPU65107ADR_IMMEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	xorl	%esi, %esi
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	leaq	-16(%rbp), %rax
	movq	%rax, %rdi
	movl	$8, %edx
	callq	memset@PLT
# %bb.1:
	movsd	.LCPI30_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-24(%rbp), %rax
	movzwl	4(%rax), %ecx
	cvtsi2sd	%ecx, %xmm1
	movsd	%xmm1, -16(%rbp)
	movq	-24(%rbp), %rax
	movzwl	4(%rax), %ecx
	movl	%ecx, %eax
	cvtsi2sd	%rax, %xmm1
	addsd	%xmm0, %xmm1
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %ecx
                                        # kill: def $cx killed $cx killed $ecx
	movq	-24(%rbp), %rax
	movw	%cx, 4(%rax)
# %bb.2:
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	movsd	%xmm0, -32(%rbp)        # 8-byte Spill
	jne	.LBB30_4
# %bb.3:                                # %SP_return
	movsd	-32(%rbp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB30_4:                               # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end30:
	.size	_ZN7CPU65107ADR_IMMEv, .Lfunc_end30-_ZN7CPU65107ADR_IMMEv
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function _ZN7CPU65107ADR_ABSEv
.LCPI31_0:
	.quad	4611686018427387904     # double 2
	.text
	.globl	_ZN7CPU65107ADR_ABSEv
	.p2align	4, 0x90
	.type	_ZN7CPU65107ADR_ABSEv,@function
_ZN7CPU65107ADR_ABSEv:                  # @_ZN7CPU65107ADR_ABSEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	xorl	%esi, %esi
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	leaq	-16(%rbp), %rax
	movq	%rax, %rdi
	movl	$8, %edx
	callq	memset@PLT
# %bb.1:
	movsd	.LCPI31_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-24(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	4(%rax), %ecx
	cvtsi2sd	%ecx, %xmm1
	movsd	%xmm0, -40(%rbp)        # 8-byte Spill
	movaps	%xmm1, %xmm0
	callq	_ZN8MEMORY_T10READUSHORTEd
	movw	%ax, -26(%rbp)
	movzwl	-26(%rbp), %ecx
	cvtsi2sd	%ecx, %xmm0
	movsd	%xmm0, -16(%rbp)
	movq	-24(%rbp), %rdx
	movzwl	4(%rdx), %ecx
	movl	%ecx, %edx
	cvtsi2sd	%rdx, %xmm0
	movsd	-40(%rbp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	addsd	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %ecx
                                        # kill: def $cx killed $cx killed $ecx
	movq	-24(%rbp), %rdx
	movw	%cx, 4(%rdx)
# %bb.2:
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	movsd	%xmm0, -48(%rbp)        # 8-byte Spill
	jne	.LBB31_4
# %bb.3:                                # %SP_return
	movsd	-48(%rbp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB31_4:                               # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end31:
	.size	_ZN7CPU65107ADR_ABSEv, .Lfunc_end31-_ZN7CPU65107ADR_ABSEv
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function _ZN7CPU65108ADR_ZEROEv
.LCPI32_0:
	.quad	4607182418800017408     # double 1
	.text
	.globl	_ZN7CPU65108ADR_ZEROEv
	.p2align	4, 0x90
	.type	_ZN7CPU65108ADR_ZEROEv,@function
_ZN7CPU65108ADR_ZEROEv:                 # @_ZN7CPU65108ADR_ZEROEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	xorl	%esi, %esi
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	leaq	-16(%rbp), %rax
	movq	%rax, %rdi
	movl	$8, %edx
	callq	memset@PLT
# %bb.1:
	movq	-24(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	4(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	callq	_ZN8MEMORY_T9READUBYTEEd
	movsd	.LCPI32_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movb	%al, -25(%rbp)
	movzbl	-25(%rbp), %ecx
	movl	%ecx, %edx
	andq	$255, %rdx
	cvtsi2sd	%rdx, %xmm1
	movsd	%xmm1, -16(%rbp)
	movq	-24(%rbp), %rdx
	movzwl	4(%rdx), %ecx
	movl	%ecx, %edx
	cvtsi2sd	%rdx, %xmm1
	addsd	%xmm0, %xmm1
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %ecx
                                        # kill: def $cx killed $cx killed $ecx
	movq	-24(%rbp), %rdx
	movw	%cx, 4(%rdx)
# %bb.2:
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	movsd	%xmm0, -40(%rbp)        # 8-byte Spill
	jne	.LBB32_4
# %bb.3:                                # %SP_return
	movsd	-40(%rbp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB32_4:                               # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end32:
	.size	_ZN7CPU65108ADR_ZEROEv, .Lfunc_end32-_ZN7CPU65108ADR_ZEROEv
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function _ZN7CPU65109ADR_ZEROXEv
.LCPI33_0:
	.quad	4607182418800017408     # double 1
	.text
	.globl	_ZN7CPU65109ADR_ZEROXEv
	.p2align	4, 0x90
	.type	_ZN7CPU65109ADR_ZEROXEv,@function
_ZN7CPU65109ADR_ZEROXEv:                # @_ZN7CPU65109ADR_ZEROXEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	xorl	%esi, %esi
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	leaq	-16(%rbp), %rax
	movq	%rax, %rdi
	movl	$8, %edx
	callq	memset@PLT
# %bb.1:
	movq	-24(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	4(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	callq	_ZN8MEMORY_T9READUBYTEEd
	movsd	.LCPI33_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movb	%al, -25(%rbp)
	movzbl	-25(%rbp), %ecx
	movl	%ecx, %edx
	movq	-24(%rbp), %rsi
	movzbl	2(%rsi), %ecx
	movl	%ecx, %esi
	addq	%rsi, %rdx
	andq	$255, %rdx
	cvtsi2sd	%rdx, %xmm1
	movsd	%xmm1, -16(%rbp)
	movq	-24(%rbp), %rdx
	movzwl	4(%rdx), %ecx
	movl	%ecx, %edx
	cvtsi2sd	%rdx, %xmm1
	addsd	%xmm0, %xmm1
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %ecx
                                        # kill: def $cx killed $cx killed $ecx
	movq	-24(%rbp), %rdx
	movw	%cx, 4(%rdx)
# %bb.2:
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	movsd	%xmm0, -40(%rbp)        # 8-byte Spill
	jne	.LBB33_4
# %bb.3:                                # %SP_return
	movsd	-40(%rbp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB33_4:                               # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end33:
	.size	_ZN7CPU65109ADR_ZEROXEv, .Lfunc_end33-_ZN7CPU65109ADR_ZEROXEv
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function _ZN7CPU65109ADR_ZEROYEv
.LCPI34_0:
	.quad	4607182418800017408     # double 1
	.text
	.globl	_ZN7CPU65109ADR_ZEROYEv
	.p2align	4, 0x90
	.type	_ZN7CPU65109ADR_ZEROYEv,@function
_ZN7CPU65109ADR_ZEROYEv:                # @_ZN7CPU65109ADR_ZEROYEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	xorl	%esi, %esi
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	leaq	-16(%rbp), %rax
	movq	%rax, %rdi
	movl	$8, %edx
	callq	memset@PLT
# %bb.1:
	movq	-24(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	4(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	callq	_ZN8MEMORY_T9READUBYTEEd
	movsd	.LCPI34_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movb	%al, -25(%rbp)
	movzbl	-25(%rbp), %ecx
	movl	%ecx, %edx
	movq	-24(%rbp), %rsi
	movzbl	3(%rsi), %ecx
	movl	%ecx, %esi
	addq	%rsi, %rdx
	andq	$255, %rdx
	cvtsi2sd	%rdx, %xmm1
	movsd	%xmm1, -16(%rbp)
	movq	-24(%rbp), %rdx
	movzwl	4(%rdx), %ecx
	movl	%ecx, %edx
	cvtsi2sd	%rdx, %xmm1
	addsd	%xmm0, %xmm1
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %ecx
                                        # kill: def $cx killed $cx killed $ecx
	movq	-24(%rbp), %rdx
	movw	%cx, 4(%rdx)
# %bb.2:
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	movsd	%xmm0, -40(%rbp)        # 8-byte Spill
	jne	.LBB34_4
# %bb.3:                                # %SP_return
	movsd	-40(%rbp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB34_4:                               # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end34:
	.size	_ZN7CPU65109ADR_ZEROYEv, .Lfunc_end34-_ZN7CPU65109ADR_ZEROYEv
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function _ZN7CPU65108ADR_ABSXEv
.LCPI35_0:
	.quad	4611686018427387904     # double 2
	.text
	.globl	_ZN7CPU65108ADR_ABSXEv
	.p2align	4, 0x90
	.type	_ZN7CPU65108ADR_ABSXEv,@function
_ZN7CPU65108ADR_ABSXEv:                 # @_ZN7CPU65108ADR_ABSXEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	xorl	%esi, %esi
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	leaq	-16(%rbp), %rax
	movq	%rax, %rdi
	movl	$8, %edx
	callq	memset@PLT
# %bb.1:
	movq	-24(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	4(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	callq	_ZN8MEMORY_T10READUSHORTEd
	movsd	.LCPI35_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movw	%ax, -26(%rbp)
	movzwl	-26(%rbp), %ecx
	movl	%ecx, %edx
	movq	-24(%rbp), %rsi
	movzbl	2(%rsi), %ecx
	movl	%ecx, %esi
	addq	%rsi, %rdx
	cvtsi2sd	%rdx, %xmm1
	movsd	%xmm1, -16(%rbp)
	movq	-24(%rbp), %rdx
	movzwl	4(%rdx), %ecx
	movl	%ecx, %edx
	cvtsi2sd	%rdx, %xmm1
	addsd	%xmm0, %xmm1
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %ecx
                                        # kill: def $cx killed $cx killed $ecx
	movq	-24(%rbp), %rdx
	movw	%cx, 4(%rdx)
# %bb.2:
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	movsd	%xmm0, -40(%rbp)        # 8-byte Spill
	jne	.LBB35_4
# %bb.3:                                # %SP_return
	movsd	-40(%rbp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB35_4:                               # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end35:
	.size	_ZN7CPU65108ADR_ABSXEv, .Lfunc_end35-_ZN7CPU65108ADR_ABSXEv
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function _ZN7CPU65108ADR_ABSYEv
.LCPI36_0:
	.quad	4611686018427387904     # double 2
	.text
	.globl	_ZN7CPU65108ADR_ABSYEv
	.p2align	4, 0x90
	.type	_ZN7CPU65108ADR_ABSYEv,@function
_ZN7CPU65108ADR_ABSYEv:                 # @_ZN7CPU65108ADR_ABSYEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	xorl	%esi, %esi
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	leaq	-16(%rbp), %rax
	movq	%rax, %rdi
	movl	$8, %edx
	callq	memset@PLT
# %bb.1:
	movq	-24(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	4(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	callq	_ZN8MEMORY_T10READUSHORTEd
	movsd	.LCPI36_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movw	%ax, -26(%rbp)
	movzwl	-26(%rbp), %ecx
	movl	%ecx, %edx
	movq	-24(%rbp), %rsi
	movzbl	3(%rsi), %ecx
	movl	%ecx, %esi
	addq	%rsi, %rdx
	cvtsi2sd	%rdx, %xmm1
	movsd	%xmm1, -16(%rbp)
	movq	-24(%rbp), %rdx
	movzwl	4(%rdx), %ecx
	movl	%ecx, %edx
	cvtsi2sd	%rdx, %xmm1
	addsd	%xmm0, %xmm1
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %ecx
                                        # kill: def $cx killed $cx killed $ecx
	movq	-24(%rbp), %rdx
	movw	%cx, 4(%rdx)
# %bb.2:
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	movsd	%xmm0, -40(%rbp)        # 8-byte Spill
	jne	.LBB36_4
# %bb.3:                                # %SP_return
	movsd	-40(%rbp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB36_4:                               # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end36:
	.size	_ZN7CPU65108ADR_ABSYEv, .Lfunc_end36-_ZN7CPU65108ADR_ABSYEv
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function _ZN7CPU65107ADR_RELEv
.LCPI37_0:
	.quad	4607182418800017408     # double 1
	.text
	.globl	_ZN7CPU65107ADR_RELEv
	.p2align	4, 0x90
	.type	_ZN7CPU65107ADR_RELEv,@function
_ZN7CPU65107ADR_RELEv:                  # @_ZN7CPU65107ADR_RELEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	xorl	%esi, %esi
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	leaq	-16(%rbp), %rax
	movq	%rax, %rdi
	movl	$8, %edx
	callq	memset@PLT
# %bb.1:
	movsd	.LCPI37_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-24(%rbp), %rax
	movzwl	4(%rax), %ecx
	cvtsi2sd	%ecx, %xmm1
	movsd	%xmm1, -16(%rbp)
	movq	-24(%rbp), %rax
	movzwl	4(%rax), %ecx
	movl	%ecx, %eax
	cvtsi2sd	%rax, %xmm1
	addsd	%xmm0, %xmm1
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %ecx
                                        # kill: def $cx killed $cx killed $ecx
	movq	-24(%rbp), %rax
	movw	%cx, 4(%rax)
# %bb.2:
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	movsd	%xmm0, -32(%rbp)        # 8-byte Spill
	jne	.LBB37_4
# %bb.3:                                # %SP_return
	movsd	-32(%rbp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB37_4:                               # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end37:
	.size	_ZN7CPU65107ADR_RELEv, .Lfunc_end37-_ZN7CPU65107ADR_RELEv
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function _ZN7CPU65108ADR_INDXEv
.LCPI38_0:
	.quad	4607182418800017408     # double 1
	.text
	.globl	_ZN7CPU65108ADR_INDXEv
	.p2align	4, 0x90
	.type	_ZN7CPU65108ADR_INDXEv,@function
_ZN7CPU65108ADR_INDXEv:                 # @_ZN7CPU65108ADR_INDXEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	xorl	%esi, %esi
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	leaq	-16(%rbp), %rax
	movq	%rax, %rdi
	movl	$8, %edx
	callq	memset@PLT
# %bb.1:
	movq	$0, -24(%rbp)
	movq	-32(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	4(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	callq	_ZN8MEMORY_T9READUBYTEEd
	movb	%al, -33(%rbp)
	movzbl	-33(%rbp), %ecx
	movq	-32(%rbp), %rdx
	movzbl	2(%rdx), %esi
	addl	%esi, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	movzbl	%cl, %esi
                                        # kill: def $si killed $si killed $esi
	movw	%si, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	8(%rdx), %rdi
	movzwl	-24(%rbp), %r8d
	cvtsi2sd	%r8d, %xmm0
	callq	_ZN8MEMORY_T10READUSHORTEd
	movw	%ax, -36(%rbp)
	movw	-36(%rbp), %ax
	movw	%ax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movzwl	4(%rdx), %r8d
	cvtsi2sd	%r8d, %xmm0
	movsd	.LCPI38_0(%rip), %xmm1  # xmm1 = mem[0],zero
	addsd	%xmm1, %xmm0
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %r8d
                                        # kill: def $r8w killed $r8w killed $r8d
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movw	%r8w, 4(%rdx)
	movzwl	-24(%rbp), %r9d
	cvtsi2sd	%r9d, %xmm0
	movsd	%xmm0, -16(%rbp)
# %bb.2:
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	movsd	%xmm0, -56(%rbp)        # 8-byte Spill
	jne	.LBB38_4
# %bb.3:                                # %SP_return
	movsd	-56(%rbp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB38_4:                               # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end38:
	.size	_ZN7CPU65108ADR_INDXEv, .Lfunc_end38-_ZN7CPU65108ADR_INDXEv
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function _ZN7CPU65108ADR_INDYEv
.LCPI39_0:
	.quad	4607182418800017408     # double 1
	.text
	.globl	_ZN7CPU65108ADR_INDYEv
	.p2align	4, 0x90
	.type	_ZN7CPU65108ADR_INDYEv,@function
_ZN7CPU65108ADR_INDYEv:                 # @_ZN7CPU65108ADR_INDYEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	xorl	%esi, %esi
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	leaq	-16(%rbp), %rax
	movq	%rax, %rdi
	movl	$8, %edx
	callq	memset@PLT
# %bb.1:
	movsd	.LCPI39_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	$0, -24(%rbp)
	movq	-32(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	4(%rax), %ecx
	cvtsi2sd	%ecx, %xmm1
	movsd	%xmm0, -48(%rbp)        # 8-byte Spill
	movaps	%xmm1, %xmm0
	callq	_ZN8MEMORY_T9READUBYTEEd
	movb	%al, -33(%rbp)
	movq	-32(%rbp), %rdx
	movq	8(%rdx), %rdi
	movzbl	-33(%rbp), %ecx
	cvtsi2sd	%ecx, %xmm0
	callq	_ZN8MEMORY_T10READUSHORTEd
	movw	%ax, -36(%rbp)
	movw	-36(%rbp), %ax
	movw	%ax, -24(%rbp)
	movl	-24(%rbp), %ecx
	movq	-32(%rbp), %rdx
	movzbl	3(%rdx), %esi
	addl	%esi, %ecx
                                        # kill: def $cx killed $cx killed $ecx
	movw	%cx, -24(%rbp)
	movzwl	-24(%rbp), %esi
	cvtsi2sd	%esi, %xmm0
	movsd	%xmm0, -16(%rbp)
	movq	-32(%rbp), %rdx
	movzwl	4(%rdx), %esi
	movl	%esi, %edx
	cvtsi2sd	%rdx, %xmm0
	movsd	-48(%rbp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	addsd	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %esi
                                        # kill: def $si killed $si killed $esi
	movq	-32(%rbp), %rdx
	movw	%si, 4(%rdx)
# %bb.2:
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	movsd	%xmm0, -56(%rbp)        # 8-byte Spill
	jne	.LBB39_4
# %bb.3:                                # %SP_return
	movsd	-56(%rbp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB39_4:                               # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end39:
	.size	_ZN7CPU65108ADR_INDYEv, .Lfunc_end39-_ZN7CPU65108ADR_INDYEv
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function _ZN7CPU65107ADR_INDEv
.LCPI40_0:
	.quad	4611686018427387904     # double 2
	.text
	.globl	_ZN7CPU65107ADR_INDEv
	.p2align	4, 0x90
	.type	_ZN7CPU65107ADR_INDEv,@function
_ZN7CPU65107ADR_INDEv:                  # @_ZN7CPU65107ADR_INDEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	xorl	%esi, %esi
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	leaq	-16(%rbp), %rax
	movq	%rax, %rdi
	movl	$8, %edx
	callq	memset@PLT
# %bb.1:
	movq	$0, -24(%rbp)
	movq	-32(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	4(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	callq	_ZN8MEMORY_T10READUSHORTEd
	movw	%ax, -34(%rbp)
	movw	-34(%rbp), %ax
	movw	%ax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	8(%rdx), %rdi
	movzwl	-24(%rbp), %ecx
	cvtsi2sd	%ecx, %xmm0
	callq	_ZN8MEMORY_T10READUSHORTEd
	movw	%ax, -36(%rbp)
	movw	-36(%rbp), %ax
	movw	%ax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movzwl	4(%rdx), %ecx
	cvtsi2sd	%ecx, %xmm0
	movsd	.LCPI40_0(%rip), %xmm1  # xmm1 = mem[0],zero
	addsd	%xmm1, %xmm0
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %ecx
                                        # kill: def $cx killed $cx killed $ecx
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movw	%cx, 4(%rdx)
	movzwl	-24(%rbp), %esi
	cvtsi2sd	%esi, %xmm0
	movsd	%xmm0, -16(%rbp)
# %bb.2:
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	movsd	%xmm0, -56(%rbp)        # 8-byte Spill
	jne	.LBB40_4
# %bb.3:                                # %SP_return
	movsd	-56(%rbp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB40_4:                               # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end40:
	.size	_ZN7CPU65107ADR_INDEv, .Lfunc_end40-_ZN7CPU65107ADR_INDEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN7CPU65107ADR_UNKEv   # -- Begin function _ZN7CPU65107ADR_UNKEv
	.p2align	4, 0x90
	.type	_ZN7CPU65107ADR_UNKEv,@function
_ZN7CPU65107ADR_UNKEv:                  # @_ZN7CPU65107ADR_UNKEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	xorl	%esi, %esi
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	leaq	-16(%rbp), %rax
	movq	%rax, %rdi
	movl	$8, %edx
	callq	memset@PLT
# %bb.1:
	movl	$4294967295, %edi       # imm = 0xFFFFFFFF
	callq	fb_Sleep@PLT
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -16(%rbp)
# %bb.2:
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	movsd	%xmm0, -32(%rbp)        # 8-byte Spill
	jne	.LBB41_4
# %bb.3:                                # %SP_return
	movsd	-32(%rbp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB41_4:                               # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end41:
	.size	_ZN7CPU65107ADR_UNKEv, .Lfunc_end41-_ZN7CPU65107ADR_UNKEv
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function _ZN7CPU65104PUSHEd
.LCPI42_0:
	.quad	-4616189618054758400    # double -1
	.text
	.globl	_ZN7CPU65104PUSHEd
	.p2align	4, 0x90
	.type	_ZN7CPU65104PUSHEd,@function
_ZN7CPU65104PUSHEd:                     # @_ZN7CPU65104PUSHEd
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movsd	%xmm0, -16(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	6(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	movsd	-16(%rbp), %xmm1        # xmm1 = mem[0],zero
	callq	_ZN8MEMORY_T10WRITEUBYTEEdd
	movsd	.LCPI42_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-8(%rbp), %rax
	movzbl	6(%rax), %ecx
	movl	%ecx, %eax
	cvtsi2sd	%rax, %xmm1
	addsd	%xmm0, %xmm1
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	movq	-8(%rbp), %rax
	movb	%cl, 6(%rax)
# %bb.2:
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end42:
	.size	_ZN7CPU65104PUSHEd, .Lfunc_end42-_ZN7CPU65104PUSHEd
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function _ZN7CPU65104PULLEv
.LCPI43_0:
	.quad	4607182418800017408     # double 1
	.text
	.globl	_ZN7CPU65104PULLEv
	.p2align	4, 0x90
	.type	_ZN7CPU65104PULLEv,@function
_ZN7CPU65104PULLEv:                     # @_ZN7CPU65104PULLEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	xorl	%esi, %esi
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	leaq	-16(%rbp), %rax
	movq	%rax, %rdi
	movl	$8, %edx
	callq	memset@PLT
# %bb.1:
	movq	-24(%rbp), %rax
	movzbl	6(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	movsd	.LCPI43_0(%rip), %xmm1  # xmm1 = mem[0],zero
	addsd	%xmm1, %xmm0
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	movq	-40(%rbp), %rax         # 8-byte Reload
	movb	%cl, 6(%rax)
	movq	-24(%rbp), %rdx
	movq	8(%rdx), %rdi
	movzwl	6(%rdx), %esi
	cvtsi2sd	%esi, %xmm0
	callq	_ZN8MEMORY_T9READUBYTEEd
	movb	%al, -25(%rbp)
	movzbl	-25(%rbp), %esi
	cvtsi2sd	%esi, %xmm0
	movsd	%xmm0, -16(%rbp)
# %bb.2:
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	movsd	%xmm0, -48(%rbp)        # 8-byte Spill
	jne	.LBB43_4
# %bb.3:                                # %SP_return
	movsd	-48(%rbp), %xmm0        # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB43_4:                               # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end43:
	.size	_ZN7CPU65104PULLEv, .Lfunc_end43-_ZN7CPU65104PULLEv
	.cfi_endproc
                                        # -- End function
	.globl	INS_UNK                 # -- Begin function INS_UNK
	.p2align	4, 0x90
	.type	INS_UNK,@function
INS_UNK:                                # @INS_UNK
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
# %bb.1:
	jmp	.LBB44_2
.LBB44_2:
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end44:
	.size	INS_UNK, .Lfunc_end44-INS_UNK
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_ADC
.LCPI45_0:
	.quad	4607182418800017408     # double 1
.LCPI45_1:
	.quad	4643176031446892544     # double 255
.LCPI45_2:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
	.text
	.globl	INS_ADC
	.p2align	4, 0x90
	.type	INS_ADC,@function
INS_ADC:                                # @INS_ADC
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$112, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
# %bb.1:
	movq	$0, -16(%rbp)
	movq	$0, -64(%rbp)
	movq	-24(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	56(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	callq	_ZN8MEMORY_T9READUBYTEEd
	movb	%al, -65(%rbp)
	movzbl	-65(%rbp), %ecx
	movl	%ecx, %edx
	movq	%rdx, -64(%rbp)
	movq	-24(%rbp), %rdx
	movzbl	1(%rdx), %ecx
	movl	%ecx, %edx
	addq	-64(%rbp), %rdx
                                        # kill: def $dx killed $dx killed $rdx
	movw	%dx, -16(%rbp)
	movq	-24(%rbp), %rsi
	movzbl	(%rsi), %ecx
	movl	%ecx, %esi
	andq	$1, %rsi
	cmpq	$1, %rsi
	je	.LBB45_3
# %bb.2:
	jmp	.LBB45_4
.LBB45_3:
	movzwl	-16(%rbp), %eax
	movl	%eax, %ecx
	addq	$1, %rcx
                                        # kill: def $cx killed $cx killed $rcx
	movw	%cx, -16(%rbp)
.LBB45_4:
	movq	-24(%rbp), %rax
	movzbl	1(%rax), %ecx
	movl	%ecx, %eax
	xorq	-64(%rbp), %rax
	orq	$-129, %rax
	xorq	$-1, %rax
	movq	-24(%rbp), %rdx
	movzbl	1(%rdx), %ecx
	movl	%ecx, %edx
	movzbl	-16(%rbp), %ecx
	movl	%ecx, %esi
	xorq	%rsi, %rdx
	andq	$128, %rdx
	andq	%rdx, %rax
	cmpq	$0, %rax
	jne	.LBB45_6
# %bb.5:
	jmp	.LBB45_7
.LBB45_6:
	movsd	.LCPI45_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -32(%rbp)
	jmp	.LBB45_8
.LBB45_7:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -32(%rbp)
.LBB45_8:
	movsd	.LCPI45_1(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-65, %eax
	movl	%eax, %edx
	movsd	-32(%rbp), %xmm1        # xmm1 = mem[0],zero
	movsd	%xmm0, -80(%rbp)        # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rdx, -88(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI45_2(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$6, %rdx
	movq	-88(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-24(%rbp), %rdx
	movb	%sil, (%rdx)
	movb	-16(%rbp), %sil
	movq	-24(%rbp), %rdx
	movb	%sil, 1(%rdx)
	movzwl	-16(%rbp), %eax
	movl	%eax, %edx
	cvtsi2sd	%rdx, %xmm0
	movsd	-80(%rbp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	ucomisd	%xmm0, %xmm1
	jb	.LBB45_10
# %bb.9:
	jmp	.LBB45_11
.LBB45_10:
	movsd	.LCPI45_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -40(%rbp)
	jmp	.LBB45_12
.LBB45_11:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -40(%rbp)
.LBB45_12:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-2, %eax
	movl	%eax, %edx
	movsd	-40(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -96(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI45_2(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	movq	-96(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-24(%rbp), %rdx
	movb	%sil, (%rdx)
	movzbl	-16(%rbp), %eax
	movl	%eax, %edx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB45_13
	jp	.LBB45_13
	jmp	.LBB45_14
.LBB45_13:
	jmp	.LBB45_15
.LBB45_14:
	movsd	.LCPI45_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -48(%rbp)
	jmp	.LBB45_16
.LBB45_15:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -48(%rbp)
.LBB45_16:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-3, %eax
	movl	%eax, %edx
	movsd	-48(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -104(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI45_2(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$1, %rdx
	movq	-104(%rbp), %rsi        # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-24(%rbp), %rdx
	movb	%sil, (%rdx)
	movsbq	-16(%rbp), %rdx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jb	.LBB45_18
# %bb.17:
	jmp	.LBB45_19
.LBB45_18:
	movsd	.LCPI45_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -56(%rbp)
	jmp	.LBB45_20
.LBB45_19:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -56(%rbp)
.LBB45_20:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$127, %eax
	movl	%eax, %edx
	movsd	-56(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -112(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI45_2(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$7, %rdx
	movq	-112(%rbp), %rsi        # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-24(%rbp), %rdx
	movb	%sil, (%rdx)
# %bb.21:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB45_23
# %bb.22:                               # %SP_return
	addq	$112, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB45_23:                              # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end45:
	.size	INS_ADC, .Lfunc_end45-INS_ADC
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_AND
.LCPI46_0:
	.quad	4607182418800017408     # double 1
.LCPI46_1:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
	.text
	.globl	INS_AND
	.p2align	4, 0x90
	.type	INS_AND,@function
INS_AND:                                # @INS_AND
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	56(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	callq	_ZN8MEMORY_T9READUBYTEEd
	movb	%al, -25(%rbp)
	movq	-8(%rbp), %rdx
	movzbl	1(%rdx), %ecx
	movl	%ecx, %edx
	movzbl	-25(%rbp), %ecx
	movl	%ecx, %esi
	andq	%rsi, %rdx
                                        # kill: def $dl killed $dl killed $rdx
	movq	-8(%rbp), %rsi
	movb	%dl, 1(%rsi)
	movq	-8(%rbp), %rsi
	movzbl	1(%rsi), %ecx
	movl	%ecx, %esi
	cvtsi2sd	%rsi, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB46_2
	jp	.LBB46_2
	jmp	.LBB46_3
.LBB46_2:
	jmp	.LBB46_4
.LBB46_3:
	movsd	.LCPI46_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB46_5
.LBB46_4:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -16(%rbp)
.LBB46_5:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-3, %eax
	movl	%eax, %edx
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -40(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI46_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$1, %rdx
	movq	-40(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
	movq	-8(%rbp), %rdx
	movsbq	1(%rdx), %rdx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jb	.LBB46_7
# %bb.6:
	jmp	.LBB46_8
.LBB46_7:
	movsd	.LCPI46_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -24(%rbp)
	jmp	.LBB46_9
.LBB46_8:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -24(%rbp)
.LBB46_9:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$127, %eax
	movl	%eax, %edx
	movsd	-24(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI46_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$7, %rdx
	movq	-48(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
# %bb.10:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end46:
	.size	INS_AND, .Lfunc_end46-INS_AND
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_ASL
.LCPI47_0:
	.quad	4607182418800017408     # double 1
.LCPI47_1:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
	.text
	.globl	INS_ASL
	.p2align	4, 0x90
	.type	INS_ASL,@function
INS_ASL:                                # @INS_ASL
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
# %bb.1:
	movq	$0, -16(%rbp)
	movq	-24(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	56(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	callq	_ZN8MEMORY_T9READUBYTEEd
	movb	%al, -49(%rbp)
	movb	-49(%rbp), %al
	movb	%al, -16(%rbp)
	movzbl	-16(%rbp), %ecx
	movl	%ecx, %edx
	andq	$128, %rdx
	cmpq	$0, %rdx
	jne	.LBB47_3
# %bb.2:
	jmp	.LBB47_4
.LBB47_3:
	movsd	.LCPI47_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -32(%rbp)
	jmp	.LBB47_5
.LBB47_4:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -32(%rbp)
.LBB47_5:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	andl	$-2, %ecx
	movsd	-32(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rax, -64(%rbp)         # 8-byte Spill
	movl	%ecx, -68(%rbp)         # 4-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI47_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rdx # imm = 0x8000000000000000
	xorq	%rdx, %rax
	cvttsd2si	%xmm0, %rdx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rdx, %rax
                                        # kill: def $eax killed $eax killed $rax
	andl	$1, %eax
	movl	-68(%rbp), %ecx         # 4-byte Reload
	orl	%eax, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	movq	-64(%rbp), %rdx         # 8-byte Reload
	movb	%cl, (%rdx)
	movb	-16(%rbp), %cl
	addb	%cl, %cl
	movb	%cl, -16(%rbp)
	movq	-24(%rbp), %rsi
	movq	8(%rsi), %rdi
	movzwl	56(%rsi), %eax
	cvtsi2sd	%eax, %xmm0
	movzbl	-16(%rbp), %eax
	cvtsi2sd	%eax, %xmm1
	callq	_ZN8MEMORY_T10WRITEUBYTEEdd
	movzbl	-16(%rbp), %eax
	movl	%eax, %edx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB47_6
	jp	.LBB47_6
	jmp	.LBB47_7
.LBB47_6:
	jmp	.LBB47_8
.LBB47_7:
	movsd	.LCPI47_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -40(%rbp)
	jmp	.LBB47_9
.LBB47_8:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -40(%rbp)
.LBB47_9:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-3, %eax
	movl	%eax, %edx
	movsd	-40(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -80(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI47_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$1, %rdx
	movq	-80(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-24(%rbp), %rdx
	movb	%sil, (%rdx)
	movsbq	-16(%rbp), %rdx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jb	.LBB47_11
# %bb.10:
	jmp	.LBB47_12
.LBB47_11:
	movsd	.LCPI47_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -48(%rbp)
	jmp	.LBB47_13
.LBB47_12:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -48(%rbp)
.LBB47_13:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$127, %eax
	movl	%eax, %edx
	movsd	-48(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -88(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI47_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$7, %rdx
	movq	-88(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-24(%rbp), %rdx
	movb	%sil, (%rdx)
# %bb.14:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB47_16
# %bb.15:                               # %SP_return
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB47_16:                              # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end47:
	.size	INS_ASL, .Lfunc_end47-INS_ASL
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_ASLA
.LCPI48_0:
	.quad	4607182418800017408     # double 1
.LCPI48_1:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
	.text
	.globl	INS_ASLA
	.p2align	4, 0x90
	.type	INS_ASLA,@function
INS_ASLA:                               # @INS_ASLA
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movzbl	1(%rax), %ecx
	movl	%ecx, %eax
	andq	$128, %rax
	cmpq	$0, %rax
	jne	.LBB48_3
# %bb.2:
	jmp	.LBB48_4
.LBB48_3:
	movsd	.LCPI48_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB48_5
.LBB48_4:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -16(%rbp)
.LBB48_5:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-2, %eax
	movl	%eax, %edx
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -40(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI48_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	movq	-40(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
	movq	-8(%rbp), %rdx
	movzbl	1(%rdx), %eax
	movl	%eax, %edx
	shlq	$1, %rdx
                                        # kill: def $dl killed $dl killed $rdx
	movq	-8(%rbp), %rdi
	movb	%dl, 1(%rdi)
	movq	-8(%rbp), %rdi
	movzbl	1(%rdi), %eax
	movl	%eax, %edi
	cvtsi2sd	%rdi, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB48_6
	jp	.LBB48_6
	jmp	.LBB48_7
.LBB48_6:
	jmp	.LBB48_8
.LBB48_7:
	movsd	.LCPI48_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -24(%rbp)
	jmp	.LBB48_9
.LBB48_8:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -24(%rbp)
.LBB48_9:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-3, %eax
	movl	%eax, %edx
	movsd	-24(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI48_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$1, %rdx
	movq	-48(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
	movq	-8(%rbp), %rdx
	movsbq	1(%rdx), %rdx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jb	.LBB48_11
# %bb.10:
	jmp	.LBB48_12
.LBB48_11:
	movsd	.LCPI48_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -32(%rbp)
	jmp	.LBB48_13
.LBB48_12:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -32(%rbp)
.LBB48_13:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$127, %eax
	movl	%eax, %edx
	movsd	-32(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -56(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI48_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$7, %rdx
	movq	-56(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
# %bb.14:
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end48:
	.size	INS_ASLA, .Lfunc_end48-INS_ASLA
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_BCC
.LCPI49_0:
	.quad	4607182418800017408     # double 1
.LCPI49_1:
	.quad	-4616189618054758400    # double -1
	.text
	.globl	INS_BCC
	.p2align	4, 0x90
	.type	INS_BCC,@function
INS_BCC:                                # @INS_BCC
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
# %bb.1:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
	andq	$1, %rax
	cmpq	$0, %rax
	je	.LBB49_3
# %bb.2:
	jmp	.LBB49_4
.LBB49_3:
	movq	$0, -16(%rbp)
	movq	-24(%rbp), %rax
	movw	4(%rax), %cx
	movw	%cx, -16(%rbp)
	movswl	-16(%rbp), %edx
	cvtsi2sd	%edx, %xmm0
	movsd	.LCPI49_1(%rip), %xmm1  # xmm1 = mem[0],zero
	addsd	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %edx
                                        # kill: def $dx killed $dx killed $edx
	movw	%dx, -16(%rbp)
	movq	-24(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	56(%rax), %esi
	cvtsi2sd	%esi, %xmm0
	callq	_ZN8MEMORY_T8READBYTEEd
	movsd	.LCPI49_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movb	%al, -25(%rbp)
	movswq	-16(%rbp), %rdi
	cvtsi2sd	%rdi, %xmm1
	movsbq	-25(%rbp), %rdi
	cvtsi2sd	%rdi, %xmm2
	addsd	%xmm2, %xmm1
	addsd	%xmm0, %xmm1
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %esi
                                        # kill: def $si killed $si killed $esi
	movw	%si, -16(%rbp)
	movw	-16(%rbp), %cx
	movq	-24(%rbp), %rdi
	movw	%cx, 4(%rdi)
.LBB49_4:
	jmp	.LBB49_5
.LBB49_5:
	jmp	.LBB49_6
.LBB49_6:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB49_8
# %bb.7:                                # %SP_return
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB49_8:                               # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end49:
	.size	INS_BCC, .Lfunc_end49-INS_BCC
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_BCS
.LCPI50_0:
	.quad	4607182418800017408     # double 1
.LCPI50_1:
	.quad	-4616189618054758400    # double -1
	.text
	.globl	INS_BCS
	.p2align	4, 0x90
	.type	INS_BCS,@function
INS_BCS:                                # @INS_BCS
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
# %bb.1:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
	andq	$1, %rax
	cmpq	$0, %rax
	jne	.LBB50_3
# %bb.2:
	jmp	.LBB50_4
.LBB50_3:
	movq	$0, -16(%rbp)
	movq	-24(%rbp), %rax
	movw	4(%rax), %cx
	movw	%cx, -16(%rbp)
	movswl	-16(%rbp), %edx
	cvtsi2sd	%edx, %xmm0
	movsd	.LCPI50_1(%rip), %xmm1  # xmm1 = mem[0],zero
	addsd	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %edx
                                        # kill: def $dx killed $dx killed $edx
	movw	%dx, -16(%rbp)
	movq	-24(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	56(%rax), %esi
	cvtsi2sd	%esi, %xmm0
	callq	_ZN8MEMORY_T8READBYTEEd
	movsd	.LCPI50_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movb	%al, -25(%rbp)
	movswq	-16(%rbp), %rdi
	cvtsi2sd	%rdi, %xmm1
	movsbq	-25(%rbp), %rdi
	cvtsi2sd	%rdi, %xmm2
	addsd	%xmm2, %xmm1
	addsd	%xmm0, %xmm1
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %esi
                                        # kill: def $si killed $si killed $esi
	movw	%si, -16(%rbp)
	movw	-16(%rbp), %cx
	movq	-24(%rbp), %rdi
	movw	%cx, 4(%rdi)
.LBB50_4:
	jmp	.LBB50_5
.LBB50_5:
	jmp	.LBB50_6
.LBB50_6:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB50_8
# %bb.7:                                # %SP_return
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB50_8:                               # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end50:
	.size	INS_BCS, .Lfunc_end50-INS_BCS
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_BEQ
.LCPI51_0:
	.quad	4607182418800017408     # double 1
.LCPI51_1:
	.quad	-4616189618054758400    # double -1
	.text
	.globl	INS_BEQ
	.p2align	4, 0x90
	.type	INS_BEQ,@function
INS_BEQ:                                # @INS_BEQ
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
# %bb.1:
	movsd	.LCPI51_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	shrl	%ecx
	andl	$1, %ecx
	cvtsi2sd	%ecx, %xmm1
	ucomisd	%xmm0, %xmm1
	jne	.LBB51_2
	jp	.LBB51_2
	jmp	.LBB51_3
.LBB51_2:
	jmp	.LBB51_4
.LBB51_3:
	movq	$0, -16(%rbp)
	movq	-24(%rbp), %rax
	movw	4(%rax), %cx
	movw	%cx, -16(%rbp)
	movswl	-16(%rbp), %edx
	cvtsi2sd	%edx, %xmm0
	movsd	.LCPI51_1(%rip), %xmm1  # xmm1 = mem[0],zero
	addsd	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %edx
                                        # kill: def $dx killed $dx killed $edx
	movw	%dx, -16(%rbp)
	movq	-24(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	56(%rax), %esi
	cvtsi2sd	%esi, %xmm0
	callq	_ZN8MEMORY_T8READBYTEEd
	movsd	.LCPI51_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movb	%al, -25(%rbp)
	movswq	-16(%rbp), %rdi
	cvtsi2sd	%rdi, %xmm1
	movsbq	-25(%rbp), %rdi
	cvtsi2sd	%rdi, %xmm2
	addsd	%xmm2, %xmm1
	addsd	%xmm0, %xmm1
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %esi
                                        # kill: def $si killed $si killed $esi
	movw	%si, -16(%rbp)
	movw	-16(%rbp), %cx
	movq	-24(%rbp), %rdi
	movw	%cx, 4(%rdi)
.LBB51_4:
	jmp	.LBB51_5
.LBB51_5:
	jmp	.LBB51_6
.LBB51_6:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB51_8
# %bb.7:                                # %SP_return
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB51_8:                               # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end51:
	.size	INS_BEQ, .Lfunc_end51-INS_BEQ
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_BIT
.LCPI52_0:
	.quad	4607182418800017408     # double 1
.LCPI52_1:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
	.text
	.globl	INS_BIT
	.p2align	4, 0x90
	.type	INS_BIT,@function
INS_BIT:                                # @INS_BIT
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
# %bb.1:
	movb	$0, -9(%rbp)
	movq	-24(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	56(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	callq	_ZN8MEMORY_T8READBYTEEd
	movb	%al, -49(%rbp)
	movb	-49(%rbp), %al
	movb	%al, -9(%rbp)
	movsbq	-9(%rbp), %rdx
	andq	$128, %rdx
	cmpq	$0, %rdx
	jne	.LBB52_3
# %bb.2:
	jmp	.LBB52_4
.LBB52_3:
	movsd	.LCPI52_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -32(%rbp)
	jmp	.LBB52_5
.LBB52_4:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -32(%rbp)
.LBB52_5:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$127, %eax
	movl	%eax, %edx
	movsd	-32(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -64(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI52_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$7, %rdx
	movq	-64(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-24(%rbp), %rdx
	movb	%sil, (%rdx)
	movsbq	-9(%rbp), %rdx
	andq	$64, %rdx
	cmpq	$0, %rdx
	jne	.LBB52_7
# %bb.6:
	jmp	.LBB52_8
.LBB52_7:
	movsd	.LCPI52_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -40(%rbp)
	jmp	.LBB52_9
.LBB52_8:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -40(%rbp)
.LBB52_9:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-65, %eax
	movl	%eax, %edx
	movsd	-40(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -72(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI52_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$6, %rdx
	movq	-72(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-24(%rbp), %rdx
	movb	%sil, (%rdx)
	movsbq	-9(%rbp), %rdx
	movq	-24(%rbp), %rdi
	movsbq	2(%rdi), %rdi
	andq	%rdi, %rdx
	cmpq	$0, %rdx
	je	.LBB52_11
# %bb.10:
	jmp	.LBB52_12
.LBB52_11:
	movsd	.LCPI52_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -48(%rbp)
	jmp	.LBB52_13
.LBB52_12:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -48(%rbp)
.LBB52_13:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-3, %eax
	movl	%eax, %edx
	movsd	-48(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -80(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI52_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$1, %rdx
	movq	-80(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-24(%rbp), %rdx
	movb	%sil, (%rdx)
# %bb.14:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB52_16
# %bb.15:                               # %SP_return
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB52_16:                              # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end52:
	.size	INS_BIT, .Lfunc_end52-INS_BIT
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_BMI
.LCPI53_0:
	.quad	4607182418800017408     # double 1
.LCPI53_1:
	.quad	-4616189618054758400    # double -1
	.text
	.globl	INS_BMI
	.p2align	4, 0x90
	.type	INS_BMI,@function
INS_BMI:                                # @INS_BMI
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
# %bb.1:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
	sarq	$7, %rax
	andq	$1, %rax
	cmpq	$0, %rax
	jne	.LBB53_3
# %bb.2:
	jmp	.LBB53_4
.LBB53_3:
	movq	$0, -16(%rbp)
	movq	-24(%rbp), %rax
	movw	4(%rax), %cx
	movw	%cx, -16(%rbp)
	movswl	-16(%rbp), %edx
	cvtsi2sd	%edx, %xmm0
	movsd	.LCPI53_1(%rip), %xmm1  # xmm1 = mem[0],zero
	addsd	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %edx
                                        # kill: def $dx killed $dx killed $edx
	movw	%dx, -16(%rbp)
	movq	-24(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	56(%rax), %esi
	cvtsi2sd	%esi, %xmm0
	callq	_ZN8MEMORY_T8READBYTEEd
	movsd	.LCPI53_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movb	%al, -25(%rbp)
	movswq	-16(%rbp), %rdi
	cvtsi2sd	%rdi, %xmm1
	movsbq	-25(%rbp), %rdi
	cvtsi2sd	%rdi, %xmm2
	addsd	%xmm2, %xmm1
	addsd	%xmm0, %xmm1
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %esi
                                        # kill: def $si killed $si killed $esi
	movw	%si, -16(%rbp)
	movw	-16(%rbp), %cx
	movq	-24(%rbp), %rdi
	movw	%cx, 4(%rdi)
.LBB53_4:
	jmp	.LBB53_5
.LBB53_5:
	jmp	.LBB53_6
.LBB53_6:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB53_8
# %bb.7:                                # %SP_return
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB53_8:                               # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end53:
	.size	INS_BMI, .Lfunc_end53-INS_BMI
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_BNE
.LCPI54_0:
	.quad	4607182418800017408     # double 1
.LCPI54_1:
	.quad	-4616189618054758400    # double -1
	.text
	.globl	INS_BNE
	.p2align	4, 0x90
	.type	INS_BNE,@function
INS_BNE:                                # @INS_BNE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
# %bb.1:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	shrl	%ecx
	andl	$1, %ecx
	cvtsi2sd	%ecx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB54_2
	jp	.LBB54_2
	jmp	.LBB54_3
.LBB54_2:
	jmp	.LBB54_4
.LBB54_3:
	movq	$0, -16(%rbp)
	movq	-24(%rbp), %rax
	movw	4(%rax), %cx
	movw	%cx, -16(%rbp)
	movswl	-16(%rbp), %edx
	cvtsi2sd	%edx, %xmm0
	movsd	.LCPI54_1(%rip), %xmm1  # xmm1 = mem[0],zero
	addsd	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %edx
                                        # kill: def $dx killed $dx killed $edx
	movw	%dx, -16(%rbp)
	movq	-24(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	56(%rax), %esi
	cvtsi2sd	%esi, %xmm0
	callq	_ZN8MEMORY_T8READBYTEEd
	movsd	.LCPI54_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movb	%al, -25(%rbp)
	movswq	-16(%rbp), %rdi
	cvtsi2sd	%rdi, %xmm1
	movsbq	-25(%rbp), %rdi
	cvtsi2sd	%rdi, %xmm2
	addsd	%xmm2, %xmm1
	addsd	%xmm0, %xmm1
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %esi
                                        # kill: def $si killed $si killed $esi
	movw	%si, -16(%rbp)
	movw	-16(%rbp), %cx
	movq	-24(%rbp), %rdi
	movw	%cx, 4(%rdi)
.LBB54_4:
	jmp	.LBB54_5
.LBB54_5:
	jmp	.LBB54_6
.LBB54_6:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB54_8
# %bb.7:                                # %SP_return
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB54_8:                               # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end54:
	.size	INS_BNE, .Lfunc_end54-INS_BNE
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_BPL
.LCPI55_0:
	.quad	4607182418800017408     # double 1
.LCPI55_1:
	.quad	-4616189618054758400    # double -1
	.text
	.globl	INS_BPL
	.p2align	4, 0x90
	.type	INS_BPL,@function
INS_BPL:                                # @INS_BPL
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
# %bb.1:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
	sarq	$7, %rax
	andq	$1, %rax
	cmpq	$0, %rax
	je	.LBB55_3
# %bb.2:
	jmp	.LBB55_4
.LBB55_3:
	movq	$0, -16(%rbp)
	movq	-24(%rbp), %rax
	movw	4(%rax), %cx
	movw	%cx, -16(%rbp)
	movswl	-16(%rbp), %edx
	cvtsi2sd	%edx, %xmm0
	movsd	.LCPI55_1(%rip), %xmm1  # xmm1 = mem[0],zero
	addsd	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %edx
                                        # kill: def $dx killed $dx killed $edx
	movw	%dx, -16(%rbp)
	movq	-24(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	56(%rax), %esi
	cvtsi2sd	%esi, %xmm0
	callq	_ZN8MEMORY_T8READBYTEEd
	movsd	.LCPI55_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movb	%al, -25(%rbp)
	movswq	-16(%rbp), %rdi
	cvtsi2sd	%rdi, %xmm1
	movsbq	-25(%rbp), %rdi
	cvtsi2sd	%rdi, %xmm2
	addsd	%xmm2, %xmm1
	addsd	%xmm0, %xmm1
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %esi
                                        # kill: def $si killed $si killed $esi
	movw	%si, -16(%rbp)
	movw	-16(%rbp), %cx
	movq	-24(%rbp), %rdi
	movw	%cx, 4(%rdi)
.LBB55_4:
	jmp	.LBB55_5
.LBB55_5:
	jmp	.LBB55_6
.LBB55_6:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB55_8
# %bb.7:                                # %SP_return
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB55_8:                               # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end55:
	.size	INS_BPL, .Lfunc_end55-INS_BPL
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_BRK
.LCPI56_0:
	.quad	4679239737960038400     # double 65534
.LCPI56_1:
	.quad	4607182418800017408     # double 1
	.text
	.globl	INS_BRK
	.p2align	4, 0x90
	.type	INS_BRK,@function
INS_BRK:                                # @INS_BRK
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movzwl	4(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	movsd	.LCPI56_1(%rip), %xmm1  # xmm1 = mem[0],zero
	addsd	%xmm1, %xmm0
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %ecx
                                        # kill: def $cx killed $cx killed $ecx
	movq	-24(%rbp), %rax         # 8-byte Reload
	movw	%cx, 4(%rax)
	movq	-8(%rbp), %rdx
	movzbl	5(%rdx), %esi
	cvtsi2sd	%esi, %xmm0
	movq	%rdx, %rdi
	callq	_ZN7CPU65104PUSHEd
	movq	-8(%rbp), %rax
	movzbl	4(%rax), %esi
	cvtsi2sd	%esi, %xmm0
	movq	%rax, %rdi
	callq	_ZN7CPU65104PUSHEd
	movq	-8(%rbp), %rax
	movzbl	(%rax), %esi
	cvtsi2sd	%esi, %xmm0
	movq	%rax, %rdi
	callq	_ZN7CPU65104PUSHEd
	movsd	.LCPI56_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-8(%rbp), %rax
	movzbl	(%rax), %esi
	movl	%esi, %eax
	andq	$-17, %rax
	orq	$16, %rax
                                        # kill: def $al killed $al killed $rax
	movq	-8(%rbp), %rdx
	movb	%al, (%rdx)
	movq	-8(%rbp), %rdx
	movzbl	(%rdx), %esi
	movl	%esi, %edx
	andq	$-5, %rdx
	orq	$4, %rdx
                                        # kill: def $dl killed $dl killed $rdx
	movq	-8(%rbp), %rdi
	movb	%dl, (%rdi)
	movq	-8(%rbp), %rdi
	movq	8(%rdi), %rdi
	callq	_ZN8MEMORY_T10READUSHORTEd
	movw	%ax, -10(%rbp)
	movw	-10(%rbp), %ax
	movq	-8(%rbp), %rdi
	movw	%ax, 4(%rdi)
# %bb.2:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end56:
	.size	INS_BRK, .Lfunc_end56-INS_BRK
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_BVC
.LCPI57_0:
	.quad	4607182418800017408     # double 1
.LCPI57_1:
	.quad	-4616189618054758400    # double -1
	.text
	.globl	INS_BVC
	.p2align	4, 0x90
	.type	INS_BVC,@function
INS_BVC:                                # @INS_BVC
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
# %bb.1:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
	sarq	$6, %rax
	andq	$1, %rax
	cmpq	$0, %rax
	je	.LBB57_3
# %bb.2:
	jmp	.LBB57_4
.LBB57_3:
	movq	$0, -16(%rbp)
	movq	-24(%rbp), %rax
	movw	4(%rax), %cx
	movw	%cx, -16(%rbp)
	movswl	-16(%rbp), %edx
	cvtsi2sd	%edx, %xmm0
	movsd	.LCPI57_1(%rip), %xmm1  # xmm1 = mem[0],zero
	addsd	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %edx
                                        # kill: def $dx killed $dx killed $edx
	movw	%dx, -16(%rbp)
	movq	-24(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	56(%rax), %esi
	cvtsi2sd	%esi, %xmm0
	callq	_ZN8MEMORY_T8READBYTEEd
	movsd	.LCPI57_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movb	%al, -25(%rbp)
	movswq	-16(%rbp), %rdi
	cvtsi2sd	%rdi, %xmm1
	movsbq	-25(%rbp), %rdi
	cvtsi2sd	%rdi, %xmm2
	addsd	%xmm2, %xmm1
	addsd	%xmm0, %xmm1
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %esi
                                        # kill: def $si killed $si killed $esi
	movw	%si, -16(%rbp)
	movw	-16(%rbp), %cx
	movq	-24(%rbp), %rdi
	movw	%cx, 4(%rdi)
.LBB57_4:
	jmp	.LBB57_5
.LBB57_5:
	jmp	.LBB57_6
.LBB57_6:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB57_8
# %bb.7:                                # %SP_return
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB57_8:                               # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end57:
	.size	INS_BVC, .Lfunc_end57-INS_BVC
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_BVS
.LCPI58_0:
	.quad	4607182418800017408     # double 1
.LCPI58_1:
	.quad	-4616189618054758400    # double -1
	.text
	.globl	INS_BVS
	.p2align	4, 0x90
	.type	INS_BVS,@function
INS_BVS:                                # @INS_BVS
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
# %bb.1:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
	sarq	$6, %rax
	andq	$1, %rax
	cmpq	$0, %rax
	jne	.LBB58_3
# %bb.2:
	jmp	.LBB58_4
.LBB58_3:
	movq	$0, -16(%rbp)
	movq	-24(%rbp), %rax
	movw	4(%rax), %cx
	movw	%cx, -16(%rbp)
	movswl	-16(%rbp), %edx
	cvtsi2sd	%edx, %xmm0
	movsd	.LCPI58_1(%rip), %xmm1  # xmm1 = mem[0],zero
	addsd	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %edx
                                        # kill: def $dx killed $dx killed $edx
	movw	%dx, -16(%rbp)
	movq	-24(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	56(%rax), %esi
	cvtsi2sd	%esi, %xmm0
	callq	_ZN8MEMORY_T8READBYTEEd
	movsd	.LCPI58_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movb	%al, -25(%rbp)
	movswq	-16(%rbp), %rdi
	cvtsi2sd	%rdi, %xmm1
	movsbq	-25(%rbp), %rdi
	cvtsi2sd	%rdi, %xmm2
	addsd	%xmm2, %xmm1
	addsd	%xmm0, %xmm1
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %esi
                                        # kill: def $si killed $si killed $esi
	movw	%si, -16(%rbp)
	movw	-16(%rbp), %cx
	movq	-24(%rbp), %rdi
	movw	%cx, 4(%rdi)
.LBB58_4:
	jmp	.LBB58_5
.LBB58_5:
	jmp	.LBB58_6
.LBB58_6:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB58_8
# %bb.7:                                # %SP_return
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB58_8:                               # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end58:
	.size	INS_BVS, .Lfunc_end58-INS_BVS
	.cfi_endproc
                                        # -- End function
	.globl	INS_CLC                 # -- Begin function INS_CLC
	.p2align	4, 0x90
	.type	INS_CLC,@function
INS_CLC:                                # @INS_CLC
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
	andq	$-2, %rax
                                        # kill: def $al killed $al killed $rax
	movq	-8(%rbp), %rdx
	movb	%al, (%rdx)
# %bb.2:
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end59:
	.size	INS_CLC, .Lfunc_end59-INS_CLC
	.cfi_endproc
                                        # -- End function
	.globl	INS_CLD                 # -- Begin function INS_CLD
	.p2align	4, 0x90
	.type	INS_CLD,@function
INS_CLD:                                # @INS_CLD
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
	andq	$-9, %rax
                                        # kill: def $al killed $al killed $rax
	movq	-8(%rbp), %rdx
	movb	%al, (%rdx)
# %bb.2:
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end60:
	.size	INS_CLD, .Lfunc_end60-INS_CLD
	.cfi_endproc
                                        # -- End function
	.globl	INS_CLI                 # -- Begin function INS_CLI
	.p2align	4, 0x90
	.type	INS_CLI,@function
INS_CLI:                                # @INS_CLI
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
	andq	$-5, %rax
                                        # kill: def $al killed $al killed $rax
	movq	-8(%rbp), %rdx
	movb	%al, (%rdx)
# %bb.2:
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end61:
	.size	INS_CLI, .Lfunc_end61-INS_CLI
	.cfi_endproc
                                        # -- End function
	.globl	INS_CLV                 # -- Begin function INS_CLV
	.p2align	4, 0x90
	.type	INS_CLV,@function
INS_CLV:                                # @INS_CLV
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
	andq	$-65, %rax
                                        # kill: def $al killed $al killed $rax
	movq	-8(%rbp), %rdx
	movb	%al, (%rdx)
# %bb.2:
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end62:
	.size	INS_CLV, .Lfunc_end62-INS_CLV
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_CMP
.LCPI63_0:
	.quad	4643176031446892544     # double 255
.LCPI63_1:
	.quad	4607182418800017408     # double 1
.LCPI63_2:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
	.text
	.globl	INS_CMP
	.p2align	4, 0x90
	.type	INS_CMP,@function
INS_CMP:                                # @INS_CMP
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
# %bb.1:
	movq	$0, -16(%rbp)
	movq	-24(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	56(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	callq	_ZN8MEMORY_T9READUBYTEEd
	movsd	.LCPI63_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movb	%al, -49(%rbp)
	movq	-24(%rbp), %rdx
	movzbl	1(%rdx), %ecx
	movl	%ecx, %edx
	movzbl	-49(%rbp), %ecx
	movl	%ecx, %esi
	subq	%rsi, %rdx
                                        # kill: def $dx killed $dx killed $rdx
	movw	%dx, -16(%rbp)
	movzwl	-16(%rbp), %ecx
	movl	%ecx, %esi
	cvtsi2sd	%rsi, %xmm1
	ucomisd	%xmm0, %xmm1
	jbe	.LBB63_3
# %bb.2:
	jmp	.LBB63_4
.LBB63_3:
	movsd	.LCPI63_1(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -32(%rbp)
	jmp	.LBB63_5
.LBB63_4:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -32(%rbp)
.LBB63_5:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-2, %eax
	movl	%eax, %edx
	movsd	-32(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -64(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI63_2(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	movq	-64(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-24(%rbp), %rdx
	movb	%sil, (%rdx)
	movzbl	-16(%rbp), %eax
	movl	%eax, %edx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB63_6
	jp	.LBB63_6
	jmp	.LBB63_7
.LBB63_6:
	jmp	.LBB63_8
.LBB63_7:
	movsd	.LCPI63_1(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -40(%rbp)
	jmp	.LBB63_9
.LBB63_8:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -40(%rbp)
.LBB63_9:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-3, %eax
	movl	%eax, %edx
	movsd	-40(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -72(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI63_2(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$1, %rdx
	movq	-72(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-24(%rbp), %rdx
	movb	%sil, (%rdx)
	movsbq	-16(%rbp), %rdx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jb	.LBB63_11
# %bb.10:
	jmp	.LBB63_12
.LBB63_11:
	movsd	.LCPI63_1(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -48(%rbp)
	jmp	.LBB63_13
.LBB63_12:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -48(%rbp)
.LBB63_13:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$127, %eax
	movl	%eax, %edx
	movsd	-48(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -80(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI63_2(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$7, %rdx
	movq	-80(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-24(%rbp), %rdx
	movb	%sil, (%rdx)
# %bb.14:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB63_16
# %bb.15:                               # %SP_return
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB63_16:                              # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end63:
	.size	INS_CMP, .Lfunc_end63-INS_CMP
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_CPX
.LCPI64_0:
	.quad	4643176031446892544     # double 255
.LCPI64_1:
	.quad	4607182418800017408     # double 1
.LCPI64_2:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
	.text
	.globl	INS_CPX
	.p2align	4, 0x90
	.type	INS_CPX,@function
INS_CPX:                                # @INS_CPX
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
# %bb.1:
	movq	$0, -16(%rbp)
	movq	-24(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	56(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	callq	_ZN8MEMORY_T9READUBYTEEd
	movsd	.LCPI64_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movb	%al, -49(%rbp)
	movq	-24(%rbp), %rdx
	movzbl	2(%rdx), %ecx
	movl	%ecx, %edx
	movzbl	-49(%rbp), %ecx
	movl	%ecx, %esi
	subq	%rsi, %rdx
                                        # kill: def $dx killed $dx killed $rdx
	movw	%dx, -16(%rbp)
	movzwl	-16(%rbp), %ecx
	movl	%ecx, %esi
	cvtsi2sd	%rsi, %xmm1
	ucomisd	%xmm0, %xmm1
	jbe	.LBB64_3
# %bb.2:
	jmp	.LBB64_4
.LBB64_3:
	movsd	.LCPI64_1(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -32(%rbp)
	jmp	.LBB64_5
.LBB64_4:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -32(%rbp)
.LBB64_5:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-2, %eax
	movl	%eax, %edx
	movsd	-32(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -64(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI64_2(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	movq	-64(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-24(%rbp), %rdx
	movb	%sil, (%rdx)
	movzbl	-16(%rbp), %eax
	movl	%eax, %edx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB64_6
	jp	.LBB64_6
	jmp	.LBB64_7
.LBB64_6:
	jmp	.LBB64_8
.LBB64_7:
	movsd	.LCPI64_1(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -40(%rbp)
	jmp	.LBB64_9
.LBB64_8:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -40(%rbp)
.LBB64_9:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-3, %eax
	movl	%eax, %edx
	movsd	-40(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -72(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI64_2(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$1, %rdx
	movq	-72(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-24(%rbp), %rdx
	movb	%sil, (%rdx)
	movsbq	-16(%rbp), %rdx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jb	.LBB64_11
# %bb.10:
	jmp	.LBB64_12
.LBB64_11:
	movsd	.LCPI64_1(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -48(%rbp)
	jmp	.LBB64_13
.LBB64_12:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -48(%rbp)
.LBB64_13:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$127, %eax
	movl	%eax, %edx
	movsd	-48(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -80(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI64_2(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$7, %rdx
	movq	-80(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-24(%rbp), %rdx
	movb	%sil, (%rdx)
# %bb.14:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB64_16
# %bb.15:                               # %SP_return
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB64_16:                              # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end64:
	.size	INS_CPX, .Lfunc_end64-INS_CPX
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_CPY
.LCPI65_0:
	.quad	4643176031446892544     # double 255
.LCPI65_1:
	.quad	4607182418800017408     # double 1
.LCPI65_2:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
	.text
	.globl	INS_CPY
	.p2align	4, 0x90
	.type	INS_CPY,@function
INS_CPY:                                # @INS_CPY
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
# %bb.1:
	movq	$0, -16(%rbp)
	movq	-24(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	56(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	callq	_ZN8MEMORY_T9READUBYTEEd
	movsd	.LCPI65_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movb	%al, -49(%rbp)
	movq	-24(%rbp), %rdx
	movzbl	3(%rdx), %ecx
	movl	%ecx, %edx
	movzbl	-49(%rbp), %ecx
	movl	%ecx, %esi
	subq	%rsi, %rdx
                                        # kill: def $dx killed $dx killed $rdx
	movw	%dx, -16(%rbp)
	movzwl	-16(%rbp), %ecx
	movl	%ecx, %esi
	cvtsi2sd	%rsi, %xmm1
	ucomisd	%xmm0, %xmm1
	jbe	.LBB65_3
# %bb.2:
	jmp	.LBB65_4
.LBB65_3:
	movsd	.LCPI65_1(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -32(%rbp)
	jmp	.LBB65_5
.LBB65_4:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -32(%rbp)
.LBB65_5:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-2, %eax
	movl	%eax, %edx
	movsd	-32(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -64(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI65_2(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	movq	-64(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-24(%rbp), %rdx
	movb	%sil, (%rdx)
	movzbl	-16(%rbp), %eax
	movl	%eax, %edx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB65_6
	jp	.LBB65_6
	jmp	.LBB65_7
.LBB65_6:
	jmp	.LBB65_8
.LBB65_7:
	movsd	.LCPI65_1(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -40(%rbp)
	jmp	.LBB65_9
.LBB65_8:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -40(%rbp)
.LBB65_9:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-3, %eax
	movl	%eax, %edx
	movsd	-40(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -72(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI65_2(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$1, %rdx
	movq	-72(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-24(%rbp), %rdx
	movb	%sil, (%rdx)
	movsbq	-16(%rbp), %rdx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jb	.LBB65_11
# %bb.10:
	jmp	.LBB65_12
.LBB65_11:
	movsd	.LCPI65_1(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -48(%rbp)
	jmp	.LBB65_13
.LBB65_12:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -48(%rbp)
.LBB65_13:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$127, %eax
	movl	%eax, %edx
	movsd	-48(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -80(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI65_2(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$7, %rdx
	movq	-80(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-24(%rbp), %rdx
	movb	%sil, (%rdx)
# %bb.14:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB65_16
# %bb.15:                               # %SP_return
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB65_16:                              # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end65:
	.size	INS_CPY, .Lfunc_end65-INS_CPY
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_DEC
.LCPI66_0:
	.quad	-4616189618054758400    # double -1
.LCPI66_1:
	.quad	4607182418800017408     # double 1
.LCPI66_2:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
	.text
	.globl	INS_DEC
	.p2align	4, 0x90
	.type	INS_DEC,@function
INS_DEC:                                # @INS_DEC
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
# %bb.1:
	movq	$0, -16(%rbp)
	movq	-24(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	56(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	callq	_ZN8MEMORY_T9READUBYTEEd
	movsd	.LCPI66_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movb	%al, -41(%rbp)
	movb	-41(%rbp), %al
	movb	%al, -16(%rbp)
	movsbq	-16(%rbp), %rdx
	cvtsi2sd	%rdx, %xmm1
	addsd	%xmm0, %xmm1
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	movb	%cl, -16(%rbp)
	movsbq	-16(%rbp), %rdx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB66_2
	jp	.LBB66_2
	jmp	.LBB66_3
.LBB66_2:
	jmp	.LBB66_4
.LBB66_3:
	movsd	.LCPI66_1(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -32(%rbp)
	jmp	.LBB66_5
.LBB66_4:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -32(%rbp)
.LBB66_5:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-3, %eax
	movl	%eax, %edx
	movsd	-32(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -56(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI66_2(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$1, %rdx
	movq	-56(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-24(%rbp), %rdx
	movb	%sil, (%rdx)
	movsbq	-16(%rbp), %rdx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jb	.LBB66_7
# %bb.6:
	jmp	.LBB66_8
.LBB66_7:
	movsd	.LCPI66_1(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -40(%rbp)
	jmp	.LBB66_9
.LBB66_8:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -40(%rbp)
.LBB66_9:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	andl	$127, %ecx
	movsd	-40(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rax, -64(%rbp)         # 8-byte Spill
	movl	%ecx, -68(%rbp)         # 4-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI66_2(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rdx # imm = 0x8000000000000000
	xorq	%rdx, %rax
	cvttsd2si	%xmm0, %rdx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rdx, %rax
                                        # kill: def $eax killed $eax killed $rax
	shll	$7, %eax
	movl	-68(%rbp), %ecx         # 4-byte Reload
	orl	%eax, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	movq	-64(%rbp), %rdx         # 8-byte Reload
	movb	%cl, (%rdx)
	movq	-24(%rbp), %rsi
	movq	8(%rsi), %rdi
	movzwl	56(%rsi), %eax
	cvtsi2sd	%eax, %xmm0
	movzbl	-16(%rbp), %eax
	cvtsi2sd	%eax, %xmm1
	callq	_ZN8MEMORY_T10WRITEUBYTEEdd
# %bb.10:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB66_12
# %bb.11:                               # %SP_return
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB66_12:                              # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end66:
	.size	INS_DEC, .Lfunc_end66-INS_DEC
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_DEX
.LCPI67_0:
	.quad	-4616189618054758400    # double -1
.LCPI67_1:
	.quad	4607182418800017408     # double 1
.LCPI67_2:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
	.text
	.globl	INS_DEX
	.p2align	4, 0x90
	.type	INS_DEX,@function
INS_DEX:                                # @INS_DEX
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movsd	.LCPI67_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-8(%rbp), %rax
	movsbq	2(%rax), %rax
	cvtsi2sd	%rax, %xmm1
	addsd	%xmm0, %xmm1
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	movq	-8(%rbp), %rax
	movb	%cl, 2(%rax)
	movq	-8(%rbp), %rax
	movzbl	2(%rax), %edx
	movl	%edx, %eax
	cvtsi2sd	%rax, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB67_2
	jp	.LBB67_2
	jmp	.LBB67_3
.LBB67_2:
	jmp	.LBB67_4
.LBB67_3:
	movsd	.LCPI67_1(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB67_5
.LBB67_4:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -16(%rbp)
.LBB67_5:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-3, %eax
	movl	%eax, %edx
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI67_2(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$1, %rdx
	movq	-32(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
	movq	-8(%rbp), %rdx
	movsbq	2(%rdx), %rdx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jb	.LBB67_7
# %bb.6:
	jmp	.LBB67_8
.LBB67_7:
	movsd	.LCPI67_1(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -24(%rbp)
	jmp	.LBB67_9
.LBB67_8:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -24(%rbp)
.LBB67_9:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$127, %eax
	movl	%eax, %edx
	movsd	-24(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -40(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI67_2(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$7, %rdx
	movq	-40(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
# %bb.10:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end67:
	.size	INS_DEX, .Lfunc_end67-INS_DEX
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_DEY
.LCPI68_0:
	.quad	-4616189618054758400    # double -1
.LCPI68_1:
	.quad	4607182418800017408     # double 1
.LCPI68_2:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
	.text
	.globl	INS_DEY
	.p2align	4, 0x90
	.type	INS_DEY,@function
INS_DEY:                                # @INS_DEY
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movsd	.LCPI68_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-8(%rbp), %rax
	movsbq	3(%rax), %rax
	cvtsi2sd	%rax, %xmm1
	addsd	%xmm0, %xmm1
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	movq	-8(%rbp), %rax
	movb	%cl, 3(%rax)
	movq	-8(%rbp), %rax
	movzbl	3(%rax), %edx
	movl	%edx, %eax
	cvtsi2sd	%rax, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB68_2
	jp	.LBB68_2
	jmp	.LBB68_3
.LBB68_2:
	jmp	.LBB68_4
.LBB68_3:
	movsd	.LCPI68_1(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB68_5
.LBB68_4:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -16(%rbp)
.LBB68_5:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-3, %eax
	movl	%eax, %edx
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI68_2(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$1, %rdx
	movq	-32(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
	movq	-8(%rbp), %rdx
	movsbq	3(%rdx), %rdx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jb	.LBB68_7
# %bb.6:
	jmp	.LBB68_8
.LBB68_7:
	movsd	.LCPI68_1(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -24(%rbp)
	jmp	.LBB68_9
.LBB68_8:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -24(%rbp)
.LBB68_9:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$127, %eax
	movl	%eax, %edx
	movsd	-24(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -40(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI68_2(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$7, %rdx
	movq	-40(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
# %bb.10:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end68:
	.size	INS_DEY, .Lfunc_end68-INS_DEY
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_EOR
.LCPI69_0:
	.quad	4607182418800017408     # double 1
.LCPI69_1:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
	.text
	.globl	INS_EOR
	.p2align	4, 0x90
	.type	INS_EOR,@function
INS_EOR:                                # @INS_EOR
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	56(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	callq	_ZN8MEMORY_T9READUBYTEEd
	movb	%al, -25(%rbp)
	movq	-8(%rbp), %rdx
	movzbl	1(%rdx), %ecx
	movl	%ecx, %edx
	movzbl	-25(%rbp), %ecx
	movl	%ecx, %esi
	xorq	%rsi, %rdx
                                        # kill: def $dl killed $dl killed $rdx
	movq	-8(%rbp), %rsi
	movb	%dl, 1(%rsi)
	movq	-8(%rbp), %rsi
	movzbl	1(%rsi), %ecx
	movl	%ecx, %esi
	cvtsi2sd	%rsi, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB69_2
	jp	.LBB69_2
	jmp	.LBB69_3
.LBB69_2:
	jmp	.LBB69_4
.LBB69_3:
	movsd	.LCPI69_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB69_5
.LBB69_4:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -16(%rbp)
.LBB69_5:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-3, %eax
	movl	%eax, %edx
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -40(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI69_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$1, %rdx
	movq	-40(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
	movq	-8(%rbp), %rdx
	movsbq	1(%rdx), %rdx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jb	.LBB69_7
# %bb.6:
	jmp	.LBB69_8
.LBB69_7:
	movsd	.LCPI69_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -24(%rbp)
	jmp	.LBB69_9
.LBB69_8:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -24(%rbp)
.LBB69_9:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$127, %eax
	movl	%eax, %edx
	movsd	-24(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI69_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$7, %rdx
	movq	-48(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
# %bb.10:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end69:
	.size	INS_EOR, .Lfunc_end69-INS_EOR
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_INC
.LCPI70_0:
	.quad	4607182418800017408     # double 1
.LCPI70_1:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
	.text
	.globl	INS_INC
	.p2align	4, 0x90
	.type	INS_INC,@function
INS_INC:                                # @INS_INC
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
# %bb.1:
	movq	$0, -16(%rbp)
	movq	-24(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	56(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	callq	_ZN8MEMORY_T9READUBYTEEd
	movb	%al, -41(%rbp)
	movb	-41(%rbp), %al
	movb	%al, -16(%rbp)
	movswl	-16(%rbp), %ecx
	cvtsi2sd	%ecx, %xmm0
	movsd	.LCPI70_0(%rip), %xmm1  # xmm1 = mem[0],zero
	addsd	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %ecx
                                        # kill: def $cx killed $cx killed $ecx
	movw	%cx, -16(%rbp)
	movq	-24(%rbp), %rdx
	movq	8(%rdx), %rdi
	movzwl	56(%rdx), %esi
	cvtsi2sd	%esi, %xmm0
	movzbl	-16(%rbp), %esi
	cvtsi2sd	%esi, %xmm1
	callq	_ZN8MEMORY_T9WRITEBYTEEdd
	movzbl	-16(%rbp), %esi
	movl	%esi, %edx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB70_2
	jp	.LBB70_2
	jmp	.LBB70_3
.LBB70_2:
	jmp	.LBB70_4
.LBB70_3:
	movsd	.LCPI70_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -32(%rbp)
	jmp	.LBB70_5
.LBB70_4:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -32(%rbp)
.LBB70_5:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-3, %eax
	movl	%eax, %edx
	movsd	-32(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -56(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI70_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$1, %rdx
	movq	-56(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-24(%rbp), %rdx
	movb	%sil, (%rdx)
	movsbq	-16(%rbp), %rdx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jb	.LBB70_7
# %bb.6:
	jmp	.LBB70_8
.LBB70_7:
	movsd	.LCPI70_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -40(%rbp)
	jmp	.LBB70_9
.LBB70_8:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -40(%rbp)
.LBB70_9:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$127, %eax
	movl	%eax, %edx
	movsd	-40(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -64(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI70_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$7, %rdx
	movq	-64(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-24(%rbp), %rdx
	movb	%sil, (%rdx)
# %bb.10:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB70_12
# %bb.11:                               # %SP_return
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB70_12:                              # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end70:
	.size	INS_INC, .Lfunc_end70-INS_INC
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_INX
.LCPI71_0:
	.quad	4607182418800017408     # double 1
.LCPI71_1:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
	.text
	.globl	INS_INX
	.p2align	4, 0x90
	.type	INS_INX,@function
INS_INX:                                # @INS_INX
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
# %bb.1:
	movsd	.LCPI71_0(%rip), %xmm0  # xmm0 = mem[0],zero
	xorl	%esi, %esi
	leaq	-16(%rbp), %rax
	movq	%rax, %rdi
	movl	$8, %edx
	movsd	%xmm0, -48(%rbp)        # 8-byte Spill
	callq	memset@PLT
	movq	-24(%rbp), %rax
	movb	2(%rax), %cl
	movb	%cl, -16(%rbp)
	movswq	-16(%rbp), %rax
	cvtsi2sd	%rax, %xmm0
	movsd	-48(%rbp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	addsd	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %esi
                                        # kill: def $si killed $si killed $esi
	movw	%si, -16(%rbp)
	movb	-16(%rbp), %cl
	movq	-24(%rbp), %rax
	movb	%cl, 2(%rax)
	movzbl	-16(%rbp), %r8d
	movl	%r8d, %eax
	cvtsi2sd	%rax, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB71_2
	jp	.LBB71_2
	jmp	.LBB71_3
.LBB71_2:
	jmp	.LBB71_4
.LBB71_3:
	movsd	.LCPI71_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -32(%rbp)
	jmp	.LBB71_5
.LBB71_4:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -32(%rbp)
.LBB71_5:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-3, %eax
	movl	%eax, %edx
	movsd	-32(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -56(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI71_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$1, %rdx
	movq	-56(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-24(%rbp), %rdx
	movb	%sil, (%rdx)
	movsbq	-16(%rbp), %rdx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jb	.LBB71_7
# %bb.6:
	jmp	.LBB71_8
.LBB71_7:
	movsd	.LCPI71_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -40(%rbp)
	jmp	.LBB71_9
.LBB71_8:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -40(%rbp)
.LBB71_9:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$127, %eax
	movl	%eax, %edx
	movsd	-40(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -64(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI71_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$7, %rdx
	movq	-64(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-24(%rbp), %rdx
	movb	%sil, (%rdx)
# %bb.10:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB71_12
# %bb.11:                               # %SP_return
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB71_12:                              # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end71:
	.size	INS_INX, .Lfunc_end71-INS_INX
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_INY
.LCPI72_0:
	.quad	4607182418800017408     # double 1
.LCPI72_1:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
	.text
	.globl	INS_INY
	.p2align	4, 0x90
	.type	INS_INY,@function
INS_INY:                                # @INS_INY
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
# %bb.1:
	movsd	.LCPI72_0(%rip), %xmm0  # xmm0 = mem[0],zero
	xorl	%esi, %esi
	leaq	-16(%rbp), %rax
	movq	%rax, %rdi
	movl	$8, %edx
	movsd	%xmm0, -48(%rbp)        # 8-byte Spill
	callq	memset@PLT
	movq	-24(%rbp), %rax
	movb	3(%rax), %cl
	movb	%cl, -16(%rbp)
	movswq	-16(%rbp), %rax
	cvtsi2sd	%rax, %xmm0
	movsd	-48(%rbp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	addsd	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %esi
                                        # kill: def $si killed $si killed $esi
	movw	%si, -16(%rbp)
	movb	-16(%rbp), %cl
	movq	-24(%rbp), %rax
	movb	%cl, 3(%rax)
	movzbl	-16(%rbp), %r8d
	movl	%r8d, %eax
	cvtsi2sd	%rax, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB72_2
	jp	.LBB72_2
	jmp	.LBB72_3
.LBB72_2:
	jmp	.LBB72_4
.LBB72_3:
	movsd	.LCPI72_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -32(%rbp)
	jmp	.LBB72_5
.LBB72_4:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -32(%rbp)
.LBB72_5:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-3, %eax
	movl	%eax, %edx
	movsd	-32(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -56(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI72_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$1, %rdx
	movq	-56(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-24(%rbp), %rdx
	movb	%sil, (%rdx)
	movsbq	-16(%rbp), %rdx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jb	.LBB72_7
# %bb.6:
	jmp	.LBB72_8
.LBB72_7:
	movsd	.LCPI72_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -40(%rbp)
	jmp	.LBB72_9
.LBB72_8:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -40(%rbp)
.LBB72_9:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$127, %eax
	movl	%eax, %edx
	movsd	-40(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -64(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI72_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$7, %rdx
	movq	-64(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-24(%rbp), %rdx
	movb	%sil, (%rdx)
# %bb.10:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB72_12
# %bb.11:                               # %SP_return
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB72_12:                              # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end72:
	.size	INS_INY, .Lfunc_end72-INS_INY
	.cfi_endproc
                                        # -- End function
	.globl	INS_JMP                 # -- Begin function INS_JMP
	.p2align	4, 0x90
	.type	INS_JMP,@function
INS_JMP:                                # @INS_JMP
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movw	56(%rax), %cx
	movq	-8(%rbp), %rax
	movw	%cx, 4(%rax)
# %bb.2:
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end73:
	.size	INS_JMP, .Lfunc_end73-INS_JMP
	.cfi_endproc
                                        # -- End function
	.globl	INS_JSR                 # -- Begin function INS_JSR
	.p2align	4, 0x90
	.type	INS_JSR,@function
INS_JSR:                                # @INS_JSR
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movw	4(%rax), %cx
	addw	$-1, %cx
	movw	%cx, 4(%rax)
	movq	-8(%rbp), %rax
	movzbl	5(%rax), %edx
	cvtsi2sd	%edx, %xmm0
	movq	%rax, %rdi
	callq	_ZN7CPU65104PUSHEd
	movq	-8(%rbp), %rax
	movzbl	4(%rax), %edx
	cvtsi2sd	%edx, %xmm0
	movq	%rax, %rdi
	callq	_ZN7CPU65104PUSHEd
	movq	-8(%rbp), %rax
	movw	56(%rax), %cx
	movq	-8(%rbp), %rax
	movw	%cx, 4(%rax)
# %bb.2:
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end74:
	.size	INS_JSR, .Lfunc_end74-INS_JSR
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_LDA
.LCPI75_0:
	.quad	4607182418800017408     # double 1
.LCPI75_1:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
	.text
	.globl	INS_LDA
	.p2align	4, 0x90
	.type	INS_LDA,@function
INS_LDA:                                # @INS_LDA
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	56(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	callq	_ZN8MEMORY_T9READUBYTEEd
	movb	%al, -25(%rbp)
	movb	-25(%rbp), %al
	movq	-8(%rbp), %rdx
	movb	%al, 1(%rdx)
	movq	-8(%rbp), %rdx
	movzbl	1(%rdx), %ecx
	movl	%ecx, %edx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB75_2
	jp	.LBB75_2
	jmp	.LBB75_3
.LBB75_2:
	jmp	.LBB75_4
.LBB75_3:
	movsd	.LCPI75_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB75_5
.LBB75_4:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -16(%rbp)
.LBB75_5:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-3, %eax
	movl	%eax, %edx
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -40(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI75_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$1, %rdx
	movq	-40(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
	movq	-8(%rbp), %rdx
	movsbq	1(%rdx), %rdx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jb	.LBB75_7
# %bb.6:
	jmp	.LBB75_8
.LBB75_7:
	movsd	.LCPI75_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -24(%rbp)
	jmp	.LBB75_9
.LBB75_8:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -24(%rbp)
.LBB75_9:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$127, %eax
	movl	%eax, %edx
	movsd	-24(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI75_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$7, %rdx
	movq	-48(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
# %bb.10:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end75:
	.size	INS_LDA, .Lfunc_end75-INS_LDA
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_LDX
.LCPI76_0:
	.quad	4607182418800017408     # double 1
.LCPI76_1:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
	.text
	.globl	INS_LDX
	.p2align	4, 0x90
	.type	INS_LDX,@function
INS_LDX:                                # @INS_LDX
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	56(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	callq	_ZN8MEMORY_T9READUBYTEEd
	movb	%al, -25(%rbp)
	movb	-25(%rbp), %al
	movq	-8(%rbp), %rdx
	movb	%al, 2(%rdx)
	movq	-8(%rbp), %rdx
	movzbl	2(%rdx), %ecx
	movl	%ecx, %edx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB76_2
	jp	.LBB76_2
	jmp	.LBB76_3
.LBB76_2:
	jmp	.LBB76_4
.LBB76_3:
	movsd	.LCPI76_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB76_5
.LBB76_4:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -16(%rbp)
.LBB76_5:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-3, %eax
	movl	%eax, %edx
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -40(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI76_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$1, %rdx
	movq	-40(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
	movq	-8(%rbp), %rdx
	movsbq	2(%rdx), %rdx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jb	.LBB76_7
# %bb.6:
	jmp	.LBB76_8
.LBB76_7:
	movsd	.LCPI76_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -24(%rbp)
	jmp	.LBB76_9
.LBB76_8:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -24(%rbp)
.LBB76_9:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$127, %eax
	movl	%eax, %edx
	movsd	-24(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI76_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$7, %rdx
	movq	-48(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
# %bb.10:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end76:
	.size	INS_LDX, .Lfunc_end76-INS_LDX
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_LDY
.LCPI77_0:
	.quad	4607182418800017408     # double 1
.LCPI77_1:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
	.text
	.globl	INS_LDY
	.p2align	4, 0x90
	.type	INS_LDY,@function
INS_LDY:                                # @INS_LDY
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	56(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	callq	_ZN8MEMORY_T9READUBYTEEd
	movb	%al, -25(%rbp)
	movb	-25(%rbp), %al
	movq	-8(%rbp), %rdx
	movb	%al, 3(%rdx)
	movq	-8(%rbp), %rdx
	movzbl	3(%rdx), %ecx
	movl	%ecx, %edx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB77_2
	jp	.LBB77_2
	jmp	.LBB77_3
.LBB77_2:
	jmp	.LBB77_4
.LBB77_3:
	movsd	.LCPI77_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB77_5
.LBB77_4:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -16(%rbp)
.LBB77_5:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-3, %eax
	movl	%eax, %edx
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -40(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI77_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$1, %rdx
	movq	-40(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
	movq	-8(%rbp), %rdx
	movsbq	3(%rdx), %rdx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jb	.LBB77_7
# %bb.6:
	jmp	.LBB77_8
.LBB77_7:
	movsd	.LCPI77_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -24(%rbp)
	jmp	.LBB77_9
.LBB77_8:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -24(%rbp)
.LBB77_9:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$127, %eax
	movl	%eax, %edx
	movsd	-24(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI77_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$7, %rdx
	movq	-48(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
# %bb.10:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end77:
	.size	INS_LDY, .Lfunc_end77-INS_LDY
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_LSR
.LCPI78_0:
	.quad	4607182418800017408     # double 1
.LCPI78_1:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
	.text
	.globl	INS_LSR
	.p2align	4, 0x90
	.type	INS_LSR,@function
INS_LSR:                                # @INS_LSR
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
# %bb.1:
	movq	$0, -16(%rbp)
	movq	-24(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	56(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	callq	_ZN8MEMORY_T9READUBYTEEd
	movb	%al, -49(%rbp)
	movb	-49(%rbp), %al
	movb	%al, -16(%rbp)
	movzbl	-16(%rbp), %ecx
	movl	%ecx, %edx
	andq	$1, %rdx
	cmpq	$0, %rdx
	jne	.LBB78_3
# %bb.2:
	jmp	.LBB78_4
.LBB78_3:
	movsd	.LCPI78_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -32(%rbp)
	jmp	.LBB78_5
.LBB78_4:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -32(%rbp)
.LBB78_5:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	andl	$-2, %ecx
	movsd	-32(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rax, -64(%rbp)         # 8-byte Spill
	movl	%ecx, -68(%rbp)         # 4-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI78_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rdx # imm = 0x8000000000000000
	xorq	%rdx, %rax
	cvttsd2si	%xmm0, %rdx
	ucomisd	%xmm1, %xmm0
	cmovbq	%rdx, %rax
                                        # kill: def $eax killed $eax killed $rax
	andl	$1, %eax
	movl	-68(%rbp), %ecx         # 4-byte Reload
	orl	%eax, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	movq	-64(%rbp), %rdx         # 8-byte Reload
	movb	%cl, (%rdx)
	movzbl	-16(%rbp), %eax
	movl	%eax, %esi
	shrq	%rsi
                                        # kill: def $sil killed $sil killed $rsi
	movb	%sil, -16(%rbp)
	movq	-24(%rbp), %rdi
	movq	8(%rdi), %r8
	movzwl	56(%rdi), %eax
	cvtsi2sd	%eax, %xmm0
	movzbl	-16(%rbp), %eax
	cvtsi2sd	%eax, %xmm1
	movq	%r8, %rdi
	callq	_ZN8MEMORY_T10WRITEUBYTEEdd
	movzbl	-16(%rbp), %eax
	movl	%eax, %edx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB78_6
	jp	.LBB78_6
	jmp	.LBB78_7
.LBB78_6:
	jmp	.LBB78_8
.LBB78_7:
	movsd	.LCPI78_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -40(%rbp)
	jmp	.LBB78_9
.LBB78_8:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -40(%rbp)
.LBB78_9:
	movsd	.LCPI78_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-3, %eax
	movl	%eax, %edx
	movsd	-40(%rbp), %xmm1        # xmm1 = mem[0],zero
	movsd	%xmm0, -80(%rbp)        # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rdx, -88(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI78_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$1, %rdx
	movq	-88(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-24(%rbp), %rdx
	movb	%sil, (%rdx)
	movsbq	-16(%rbp), %rdx
	cvtsi2sd	%rdx, %xmm0
	movsd	-80(%rbp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	ucomisd	%xmm1, %xmm0
	jb	.LBB78_11
# %bb.10:
	jmp	.LBB78_12
.LBB78_11:
	movsd	.LCPI78_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -48(%rbp)
	jmp	.LBB78_13
.LBB78_12:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -48(%rbp)
.LBB78_13:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$127, %eax
	movl	%eax, %edx
	movsd	-48(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -96(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI78_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$7, %rdx
	movq	-96(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-24(%rbp), %rdx
	movb	%sil, (%rdx)
# %bb.14:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB78_16
# %bb.15:                               # %SP_return
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB78_16:                              # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end78:
	.size	INS_LSR, .Lfunc_end78-INS_LSR
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_LSRA
.LCPI79_0:
	.quad	4607182418800017408     # double 1
.LCPI79_1:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
	.text
	.globl	INS_LSRA
	.p2align	4, 0x90
	.type	INS_LSRA,@function
INS_LSRA:                               # @INS_LSRA
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movzbl	1(%rax), %ecx
	movl	%ecx, %eax
	andq	$1, %rax
	cmpq	$0, %rax
	jne	.LBB79_3
# %bb.2:
	jmp	.LBB79_4
.LBB79_3:
	movsd	.LCPI79_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB79_5
.LBB79_4:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -16(%rbp)
.LBB79_5:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-2, %eax
	movl	%eax, %edx
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -40(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI79_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	movq	-40(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
	movq	-8(%rbp), %rdx
	movzbl	1(%rdx), %eax
	movl	%eax, %edx
	sarq	$1, %rdx
                                        # kill: def $dl killed $dl killed $rdx
	movq	-8(%rbp), %rdi
	movb	%dl, 1(%rdi)
	movq	-8(%rbp), %rdi
	movzbl	1(%rdi), %eax
	movl	%eax, %edi
	cvtsi2sd	%rdi, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB79_6
	jp	.LBB79_6
	jmp	.LBB79_7
.LBB79_6:
	jmp	.LBB79_8
.LBB79_7:
	movsd	.LCPI79_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -24(%rbp)
	jmp	.LBB79_9
.LBB79_8:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -24(%rbp)
.LBB79_9:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-3, %eax
	movl	%eax, %edx
	movsd	-24(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI79_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$1, %rdx
	movq	-48(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
	movq	-8(%rbp), %rdx
	movsbq	1(%rdx), %rdx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jb	.LBB79_11
# %bb.10:
	jmp	.LBB79_12
.LBB79_11:
	movsd	.LCPI79_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -32(%rbp)
	jmp	.LBB79_13
.LBB79_12:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -32(%rbp)
.LBB79_13:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$127, %eax
	movl	%eax, %edx
	movsd	-32(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -56(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI79_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$7, %rdx
	movq	-56(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
# %bb.14:
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end79:
	.size	INS_LSRA, .Lfunc_end79-INS_LSRA
	.cfi_endproc
                                        # -- End function
	.globl	INS_NOP                 # -- Begin function INS_NOP
	.p2align	4, 0x90
	.type	INS_NOP,@function
INS_NOP:                                # @INS_NOP
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
# %bb.1:
	jmp	.LBB80_2
.LBB80_2:
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end80:
	.size	INS_NOP, .Lfunc_end80-INS_NOP
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_ORA
.LCPI81_0:
	.quad	4607182418800017408     # double 1
.LCPI81_1:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
	.text
	.globl	INS_ORA
	.p2align	4, 0x90
	.type	INS_ORA,@function
INS_ORA:                                # @INS_ORA
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	56(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	callq	_ZN8MEMORY_T9READUBYTEEd
	movb	%al, -25(%rbp)
	movq	-8(%rbp), %rdx
	movzbl	1(%rdx), %ecx
	movl	%ecx, %edx
	movzbl	-25(%rbp), %ecx
	movl	%ecx, %esi
	orq	%rsi, %rdx
                                        # kill: def $dl killed $dl killed $rdx
	movq	-8(%rbp), %rsi
	movb	%dl, 1(%rsi)
	movq	-8(%rbp), %rsi
	movzbl	1(%rsi), %ecx
	movl	%ecx, %esi
	cvtsi2sd	%rsi, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB81_2
	jp	.LBB81_2
	jmp	.LBB81_3
.LBB81_2:
	jmp	.LBB81_4
.LBB81_3:
	movsd	.LCPI81_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB81_5
.LBB81_4:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -16(%rbp)
.LBB81_5:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-3, %eax
	movl	%eax, %edx
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -40(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI81_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$1, %rdx
	movq	-40(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
	movq	-8(%rbp), %rdx
	movsbq	1(%rdx), %rdx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jb	.LBB81_7
# %bb.6:
	jmp	.LBB81_8
.LBB81_7:
	movsd	.LCPI81_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -24(%rbp)
	jmp	.LBB81_9
.LBB81_8:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -24(%rbp)
.LBB81_9:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$127, %eax
	movl	%eax, %edx
	movsd	-24(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI81_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$7, %rdx
	movq	-48(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
# %bb.10:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end81:
	.size	INS_ORA, .Lfunc_end81-INS_ORA
	.cfi_endproc
                                        # -- End function
	.globl	INS_PHA                 # -- Begin function INS_PHA
	.p2align	4, 0x90
	.type	INS_PHA,@function
INS_PHA:                                # @INS_PHA
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movzbl	1(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	movq	%rax, %rdi
	callq	_ZN7CPU65104PUSHEd
# %bb.2:
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end82:
	.size	INS_PHA, .Lfunc_end82-INS_PHA
	.cfi_endproc
                                        # -- End function
	.globl	INS_PHP                 # -- Begin function INS_PHP
	.p2align	4, 0x90
	.type	INS_PHP,@function
INS_PHP:                                # @INS_PHP
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	movq	%rax, %rdi
	callq	_ZN7CPU65104PUSHEd
# %bb.2:
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end83:
	.size	INS_PHP, .Lfunc_end83-INS_PHP
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_PLA
.LCPI84_0:
	.quad	4607182418800017408     # double 1
.LCPI84_1:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
	.text
	.globl	INS_PLA
	.p2align	4, 0x90
	.type	INS_PLA,@function
INS_PLA:                                # @INS_PLA
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rdi
	callq	_ZN7CPU65104PULLEv
	movsd	%xmm0, -32(%rbp)
	movsd	-32(%rbp), %xmm0        # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %eax
                                        # kill: def $al killed $al killed $eax
	movq	-8(%rbp), %rcx
	movb	%al, 1(%rcx)
	movq	-8(%rbp), %rcx
	movzbl	1(%rcx), %edx
	movl	%edx, %ecx
	cvtsi2sd	%rcx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB84_2
	jp	.LBB84_2
	jmp	.LBB84_3
.LBB84_2:
	jmp	.LBB84_4
.LBB84_3:
	movsd	.LCPI84_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB84_5
.LBB84_4:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -16(%rbp)
.LBB84_5:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-3, %eax
	movl	%eax, %edx
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -40(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI84_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$1, %rdx
	movq	-40(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
	movq	-8(%rbp), %rdx
	movsbq	1(%rdx), %rdx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jb	.LBB84_7
# %bb.6:
	jmp	.LBB84_8
.LBB84_7:
	movsd	.LCPI84_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -24(%rbp)
	jmp	.LBB84_9
.LBB84_8:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -24(%rbp)
.LBB84_9:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$127, %eax
	movl	%eax, %edx
	movsd	-24(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI84_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$7, %rdx
	movq	-48(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
# %bb.10:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end84:
	.size	INS_PLA, .Lfunc_end84-INS_PLA
	.cfi_endproc
                                        # -- End function
	.globl	INS_PLP                 # -- Begin function INS_PLP
	.p2align	4, 0x90
	.type	INS_PLP,@function
INS_PLP:                                # @INS_PLP
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rdi
	callq	_ZN7CPU65104PULLEv
	movsd	%xmm0, -16(%rbp)
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %eax
                                        # kill: def $al killed $al killed $eax
	movq	-8(%rbp), %rcx
	movb	%al, (%rcx)
# %bb.2:
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end85:
	.size	INS_PLP, .Lfunc_end85-INS_PLP
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_ROL
.LCPI86_0:
	.quad	4607182418800017408     # double 1
.LCPI86_1:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
	.text
	.globl	INS_ROL
	.p2align	4, 0x90
	.type	INS_ROL,@function
INS_ROL:                                # @INS_ROL
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$112, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
# %bb.1:
	movsd	.LCPI86_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	$0, -16(%rbp)
	movq	-24(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	56(%rax), %ecx
	cvtsi2sd	%ecx, %xmm1
	movsd	%xmm0, -72(%rbp)        # 8-byte Spill
	movaps	%xmm1, %xmm0
	callq	_ZN8MEMORY_T9READUBYTEEd
	movb	%al, -57(%rbp)
	movb	-57(%rbp), %al
	movb	%al, -16(%rbp)
	movq	-24(%rbp), %rdx
	movzbl	(%rdx), %ecx
	andl	$1, %ecx
	cvtsi2sd	%ecx, %xmm0
	movsd	-72(%rbp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	ucomisd	%xmm1, %xmm0
	jne	.LBB86_2
	jp	.LBB86_2
	jmp	.LBB86_3
.LBB86_2:
	jmp	.LBB86_4
.LBB86_3:
	movsd	.LCPI86_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -32(%rbp)
	jmp	.LBB86_5
.LBB86_4:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -32(%rbp)
.LBB86_5:
	movsd	-32(%rbp), %xmm0        # xmm0 = mem[0],zero
	movsd	%xmm0, CARY$(%rip)
	movzbl	-16(%rbp), %eax
	movl	%eax, %ecx
	andq	$128, %rcx
	cmpq	$0, %rcx
	jne	.LBB86_7
# %bb.6:
	jmp	.LBB86_8
.LBB86_7:
	movsd	.LCPI86_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -40(%rbp)
	jmp	.LBB86_9
.LBB86_8:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -40(%rbp)
.LBB86_9:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-2, %eax
	movl	%eax, %edx
	movsd	-40(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -80(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI86_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	movq	-80(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-24(%rbp), %rdx
	movb	%sil, (%rdx)
	movzbl	-16(%rbp), %eax
	movl	%eax, %edx
	shlq	$1, %rdx
                                        # kill: def $dl killed $dl killed $rdx
	movb	%dl, -16(%rbp)
	movsd	CARY$(%rip), %xmm0      # xmm0 = mem[0],zero
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB86_11
	jp	.LBB86_11
# %bb.10:
	jmp	.LBB86_12
.LBB86_11:
	movzbl	-16(%rbp), %eax
	movl	%eax, %ecx
	orq	$1, %rcx
                                        # kill: def $cl killed $cl killed $rcx
	movb	%cl, -16(%rbp)
.LBB86_12:
	movq	-24(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	56(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	movzbl	-16(%rbp), %ecx
	cvtsi2sd	%ecx, %xmm1
	callq	_ZN8MEMORY_T10WRITEUBYTEEdd
	movzbl	-16(%rbp), %ecx
	movl	%ecx, %eax
	cvtsi2sd	%rax, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB86_13
	jp	.LBB86_13
	jmp	.LBB86_14
.LBB86_13:
	jmp	.LBB86_15
.LBB86_14:
	movsd	.LCPI86_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -48(%rbp)
	jmp	.LBB86_16
.LBB86_15:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -48(%rbp)
.LBB86_16:
	movsd	.LCPI86_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-3, %eax
	movl	%eax, %edx
	movsd	-48(%rbp), %xmm1        # xmm1 = mem[0],zero
	movsd	%xmm0, -88(%rbp)        # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rdx, -96(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI86_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$1, %rdx
	movq	-96(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-24(%rbp), %rdx
	movb	%sil, (%rdx)
	movsbq	-16(%rbp), %rdx
	cvtsi2sd	%rdx, %xmm0
	movsd	-88(%rbp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	ucomisd	%xmm1, %xmm0
	jb	.LBB86_18
# %bb.17:
	jmp	.LBB86_19
.LBB86_18:
	movsd	.LCPI86_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -56(%rbp)
	jmp	.LBB86_20
.LBB86_19:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -56(%rbp)
.LBB86_20:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$127, %eax
	movl	%eax, %edx
	movsd	-56(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -104(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI86_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$7, %rdx
	movq	-104(%rbp), %rsi        # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-24(%rbp), %rdx
	movb	%sil, (%rdx)
# %bb.21:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB86_23
# %bb.22:                               # %SP_return
	addq	$112, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB86_23:                              # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end86:
	.size	INS_ROL, .Lfunc_end86-INS_ROL
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_ROLA
.LCPI87_0:
	.quad	4607182418800017408     # double 1
.LCPI87_1:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
	.text
	.globl	INS_ROLA
	.p2align	4, 0x90
	.type	INS_ROLA,@function
INS_ROLA:                               # @INS_ROLA
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movsd	.LCPI87_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	andl	$1, %ecx
	cvtsi2sd	%ecx, %xmm1
	ucomisd	%xmm0, %xmm1
	jne	.LBB87_2
	jp	.LBB87_2
	jmp	.LBB87_3
.LBB87_2:
	jmp	.LBB87_4
.LBB87_3:
	movsd	.LCPI87_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB87_5
.LBB87_4:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -16(%rbp)
.LBB87_5:
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movsd	%xmm0, CARY$(%rip)
	movq	-8(%rbp), %rax
	movzbl	1(%rax), %ecx
	movl	%ecx, %eax
	andq	$128, %rax
	cmpq	$0, %rax
	jne	.LBB87_7
# %bb.6:
	jmp	.LBB87_8
.LBB87_7:
	movsd	.LCPI87_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -24(%rbp)
	jmp	.LBB87_9
.LBB87_8:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -24(%rbp)
.LBB87_9:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-2, %eax
	movl	%eax, %edx
	movsd	-24(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI87_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	movq	-48(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
	movq	-8(%rbp), %rdx
	movzbl	1(%rdx), %eax
	movl	%eax, %edx
	shlq	$1, %rdx
                                        # kill: def $dl killed $dl killed $rdx
	movq	-8(%rbp), %rdi
	movb	%dl, 1(%rdi)
	movsd	CARY$(%rip), %xmm0      # xmm0 = mem[0],zero
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB87_11
	jp	.LBB87_11
# %bb.10:
	jmp	.LBB87_12
.LBB87_11:
	movq	-8(%rbp), %rax
	movzbl	1(%rax), %ecx
	movl	%ecx, %eax
	orq	$1, %rax
                                        # kill: def $al killed $al killed $rax
	movq	-8(%rbp), %rdx
	movb	%al, 1(%rdx)
.LBB87_12:
	movq	-8(%rbp), %rax
	movzbl	1(%rax), %ecx
	movl	%ecx, %eax
	cvtsi2sd	%rax, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB87_13
	jp	.LBB87_13
	jmp	.LBB87_14
.LBB87_13:
	jmp	.LBB87_15
.LBB87_14:
	movsd	.LCPI87_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -32(%rbp)
	jmp	.LBB87_16
.LBB87_15:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -32(%rbp)
.LBB87_16:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-3, %eax
	movl	%eax, %edx
	movsd	-32(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -56(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI87_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$1, %rdx
	movq	-56(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
	movq	-8(%rbp), %rdx
	movsbq	1(%rdx), %rdx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jb	.LBB87_18
# %bb.17:
	jmp	.LBB87_19
.LBB87_18:
	movsd	.LCPI87_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -40(%rbp)
	jmp	.LBB87_20
.LBB87_19:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -40(%rbp)
.LBB87_20:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$127, %eax
	movl	%eax, %edx
	movsd	-40(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -64(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI87_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$7, %rdx
	movq	-64(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
# %bb.21:
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end87:
	.size	INS_ROLA, .Lfunc_end87-INS_ROLA
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_ROR
.LCPI88_0:
	.quad	4607182418800017408     # double 1
.LCPI88_1:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
	.text
	.globl	INS_ROR
	.p2align	4, 0x90
	.type	INS_ROR,@function
INS_ROR:                                # @INS_ROR
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
# %bb.1:
	movsd	.LCPI88_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	$0, -16(%rbp)
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	andl	$1, %ecx
	cvtsi2sd	%ecx, %xmm1
	ucomisd	%xmm0, %xmm1
	jne	.LBB88_2
	jp	.LBB88_2
	jmp	.LBB88_3
.LBB88_2:
	jmp	.LBB88_4
.LBB88_3:
	movsd	.LCPI88_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -32(%rbp)
	jmp	.LBB88_5
.LBB88_4:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -32(%rbp)
.LBB88_5:
	movsd	-32(%rbp), %xmm0        # xmm0 = mem[0],zero
	movsd	%xmm0, CARY$(%rip)
	movq	-24(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	56(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	callq	_ZN8MEMORY_T9READUBYTEEd
	movb	%al, -57(%rbp)
	movb	-57(%rbp), %al
	movb	%al, -16(%rbp)
	movzbl	-16(%rbp), %ecx
	movl	%ecx, %edx
	andq	$1, %rdx
	cmpq	$0, %rdx
	jne	.LBB88_7
# %bb.6:
	jmp	.LBB88_8
.LBB88_7:
	movsd	.LCPI88_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -40(%rbp)
	jmp	.LBB88_9
.LBB88_8:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -40(%rbp)
.LBB88_9:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-2, %eax
	movl	%eax, %edx
	movsd	-40(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -72(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI88_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	movq	-72(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-24(%rbp), %rdx
	movb	%sil, (%rdx)
	movzbl	-16(%rbp), %eax
	movl	%eax, %edx
	sarq	$1, %rdx
                                        # kill: def $dl killed $dl killed $rdx
	movb	%dl, -16(%rbp)
	movsd	CARY$(%rip), %xmm0      # xmm0 = mem[0],zero
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB88_11
	jp	.LBB88_11
# %bb.10:
	jmp	.LBB88_12
.LBB88_11:
	movzbl	-16(%rbp), %eax
	movl	%eax, %ecx
	orq	$128, %rcx
                                        # kill: def $cl killed $cl killed $rcx
	movb	%cl, -16(%rbp)
.LBB88_12:
	movq	-24(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	56(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	movzbl	-16(%rbp), %ecx
	cvtsi2sd	%ecx, %xmm1
	callq	_ZN8MEMORY_T10WRITEUBYTEEdd
	movzbl	-16(%rbp), %ecx
	movl	%ecx, %eax
	cvtsi2sd	%rax, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB88_13
	jp	.LBB88_13
	jmp	.LBB88_14
.LBB88_13:
	jmp	.LBB88_15
.LBB88_14:
	movsd	.LCPI88_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -48(%rbp)
	jmp	.LBB88_16
.LBB88_15:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -48(%rbp)
.LBB88_16:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-3, %eax
	movl	%eax, %edx
	movsd	-48(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -80(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI88_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$1, %rdx
	movq	-80(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-24(%rbp), %rdx
	movb	%sil, (%rdx)
	movsbq	-16(%rbp), %rdx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jb	.LBB88_18
# %bb.17:
	jmp	.LBB88_19
.LBB88_18:
	movsd	.LCPI88_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -56(%rbp)
	jmp	.LBB88_20
.LBB88_19:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -56(%rbp)
.LBB88_20:
	movq	-24(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$127, %eax
	movl	%eax, %edx
	movsd	-56(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -88(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI88_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$7, %rdx
	movq	-88(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-24(%rbp), %rdx
	movb	%sil, (%rdx)
# %bb.21:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB88_23
# %bb.22:                               # %SP_return
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB88_23:                              # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end88:
	.size	INS_ROR, .Lfunc_end88-INS_ROR
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_RORA
.LCPI89_0:
	.quad	4607182418800017408     # double 1
.LCPI89_1:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
	.text
	.globl	INS_RORA
	.p2align	4, 0x90
	.type	INS_RORA,@function
INS_RORA:                               # @INS_RORA
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movsd	.LCPI89_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	andl	$1, %ecx
	cvtsi2sd	%ecx, %xmm1
	ucomisd	%xmm0, %xmm1
	jne	.LBB89_2
	jp	.LBB89_2
	jmp	.LBB89_3
.LBB89_2:
	jmp	.LBB89_4
.LBB89_3:
	movsd	.LCPI89_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB89_5
.LBB89_4:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -16(%rbp)
.LBB89_5:
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movsd	%xmm0, CARY$(%rip)
	movq	-8(%rbp), %rax
	movzbl	1(%rax), %ecx
	movl	%ecx, %eax
	andq	$1, %rax
	cmpq	$0, %rax
	jne	.LBB89_7
# %bb.6:
	jmp	.LBB89_8
.LBB89_7:
	movsd	.LCPI89_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -24(%rbp)
	jmp	.LBB89_9
.LBB89_8:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -24(%rbp)
.LBB89_9:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-2, %eax
	movl	%eax, %edx
	movsd	-24(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI89_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	movq	-48(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
	movq	-8(%rbp), %rdx
	movzbl	1(%rdx), %eax
	movl	%eax, %edx
	sarq	$1, %rdx
                                        # kill: def $dl killed $dl killed $rdx
	movq	-8(%rbp), %rdi
	movb	%dl, 1(%rdi)
	movsd	CARY$(%rip), %xmm0      # xmm0 = mem[0],zero
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB89_11
	jp	.LBB89_11
# %bb.10:
	jmp	.LBB89_12
.LBB89_11:
	movq	-8(%rbp), %rax
	movzbl	1(%rax), %ecx
	movl	%ecx, %eax
	orq	$128, %rax
                                        # kill: def $al killed $al killed $rax
	movq	-8(%rbp), %rdx
	movb	%al, 1(%rdx)
.LBB89_12:
	movq	-8(%rbp), %rax
	movzbl	1(%rax), %ecx
	movl	%ecx, %eax
	cmpq	$0, %rax
	je	.LBB89_14
# %bb.13:
	jmp	.LBB89_15
.LBB89_14:
	movq	$1, -32(%rbp)
	jmp	.LBB89_16
.LBB89_15:
	movq	$0, -32(%rbp)
.LBB89_16:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
	andq	$-3, %rax
	movq	-32(%rbp), %rdx
	andq	$1, %rdx
	shlq	$1, %rdx
	orq	%rdx, %rax
                                        # kill: def $al killed $al killed $rax
	movq	-8(%rbp), %rdx
	movb	%al, (%rdx)
	movq	-8(%rbp), %rdx
	movsbq	1(%rdx), %rdx
	cmpq	$0, %rdx
	jl	.LBB89_18
# %bb.17:
	jmp	.LBB89_19
.LBB89_18:
	movq	$1, -40(%rbp)
	jmp	.LBB89_20
.LBB89_19:
	movq	$0, -40(%rbp)
.LBB89_20:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
	andq	$-129, %rax
	movq	-40(%rbp), %rdx
	andq	$1, %rdx
	shlq	$7, %rdx
	orq	%rdx, %rax
                                        # kill: def $al killed $al killed $rax
	movq	-8(%rbp), %rdx
	movb	%al, (%rdx)
# %bb.21:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end89:
	.size	INS_RORA, .Lfunc_end89-INS_RORA
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_RTI
.LCPI90_0:
	.quad	4607182418800017408     # double 1
	.text
	.globl	INS_RTI
	.p2align	4, 0x90
	.type	INS_RTI,@function
INS_RTI:                                # @INS_RTI
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rdi
	callq	_ZN7CPU65104PULLEv
	movsd	%xmm0, -16(%rbp)
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %eax
                                        # kill: def $al killed $al killed $eax
	movq	-8(%rbp), %rcx
	movb	%al, (%rcx)
	movq	-8(%rbp), %rdi
	callq	_ZN7CPU65104PULLEv
	movsd	%xmm0, -24(%rbp)
	movsd	-24(%rbp), %xmm0        # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %edx
                                        # kill: def $dl killed $dl killed $edx
	movq	-8(%rbp), %rcx
	movb	%dl, 4(%rcx)
	movq	-8(%rbp), %rdi
	callq	_ZN7CPU65104PULLEv
	movsd	.LCPI90_0(%rip), %xmm1  # xmm1 = mem[0],zero
	movsd	%xmm0, -32(%rbp)
	movsd	-32(%rbp), %xmm0        # xmm0 = mem[0],zero
	movsd	%xmm1, -40(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %esi
                                        # kill: def $sil killed $sil killed $esi
	movq	-8(%rbp), %rcx
	movb	%sil, 5(%rcx)
	movq	-8(%rbp), %rcx
	movzwl	4(%rcx), %r8d
	movl	%r8d, %ecx
	cvtsi2sd	%rcx, %xmm0
	movsd	-40(%rbp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	addsd	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %r8d
                                        # kill: def $r8w killed $r8w killed $r8d
	movq	-8(%rbp), %rcx
	movw	%r8w, 4(%rcx)
# %bb.2:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end90:
	.size	INS_RTI, .Lfunc_end90-INS_RTI
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_RTS
.LCPI91_0:
	.quad	4607182418800017408     # double 1
	.text
	.globl	INS_RTS
	.p2align	4, 0x90
	.type	INS_RTS,@function
INS_RTS:                                # @INS_RTS
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rdi
	callq	_ZN7CPU65104PULLEv
	movsd	%xmm0, -16(%rbp)
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %eax
                                        # kill: def $al killed $al killed $eax
	movq	-8(%rbp), %rcx
	movb	%al, 4(%rcx)
	movq	-8(%rbp), %rdi
	callq	_ZN7CPU65104PULLEv
	movsd	.LCPI91_0(%rip), %xmm1  # xmm1 = mem[0],zero
	movsd	%xmm0, -24(%rbp)
	movsd	-24(%rbp), %xmm0        # xmm0 = mem[0],zero
	movsd	%xmm1, -32(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %edx
                                        # kill: def $dl killed $dl killed $edx
	movq	-8(%rbp), %rcx
	movb	%dl, 5(%rcx)
	movq	-8(%rbp), %rcx
	movzwl	4(%rcx), %esi
	movl	%esi, %ecx
	cvtsi2sd	%rcx, %xmm0
	movsd	-32(%rbp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	addsd	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %esi
                                        # kill: def $si killed $si killed $esi
	movq	-8(%rbp), %rcx
	movw	%si, 4(%rcx)
# %bb.2:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end91:
	.size	INS_RTS, .Lfunc_end91-INS_RTS
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_SBC
.LCPI92_0:
	.quad	-4616189618054758400    # double -1
.LCPI92_1:
	.quad	4607182418800017408     # double 1
.LCPI92_2:
	.quad	4643176031446892544     # double 255
.LCPI92_3:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
	.text
	.globl	INS_SBC
	.p2align	4, 0x90
	.type	INS_SBC,@function
INS_SBC:                                # @INS_SBC
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$112, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
# %bb.1:
	movq	$0, -16(%rbp)
	movq	$0, -24(%rbp)
	movq	-32(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	56(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	callq	_ZN8MEMORY_T9READUBYTEEd
	movb	%al, -65(%rbp)
	movb	-65(%rbp), %al
	movb	%al, -24(%rbp)
	movq	-32(%rbp), %rdx
	movzbl	1(%rdx), %ecx
	movzbl	-24(%rbp), %esi
	subl	%esi, %ecx
                                        # kill: def $cx killed $cx killed $ecx
	movw	%cx, -16(%rbp)
	movq	-32(%rbp), %rdx
	movzbl	(%rdx), %esi
	andl	$1, %esi
	cvtsi2sd	%esi, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB92_2
	jp	.LBB92_2
	jmp	.LBB92_3
.LBB92_2:
	jmp	.LBB92_4
.LBB92_3:
	movsd	.LCPI92_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movswq	-16(%rbp), %rax
	cvtsi2sd	%rax, %xmm1
	addsd	%xmm0, %xmm1
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %ecx
                                        # kill: def $cx killed $cx killed $ecx
	movw	%cx, -16(%rbp)
.LBB92_4:
	movq	-32(%rbp), %rax
	movzbl	1(%rax), %ecx
	movl	%ecx, %eax
	movzbl	-24(%rbp), %ecx
	movl	%ecx, %edx
	xorq	%rdx, %rax
	andq	$128, %rax
	movq	-32(%rbp), %rdx
	movzbl	1(%rdx), %ecx
	movl	%ecx, %edx
	movzbl	-16(%rbp), %ecx
	movl	%ecx, %esi
	xorq	%rsi, %rdx
	andq	$128, %rdx
	andq	%rdx, %rax
	cmpq	$0, %rax
	jne	.LBB92_6
# %bb.5:
	jmp	.LBB92_7
.LBB92_6:
	movsd	.LCPI92_1(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -40(%rbp)
	jmp	.LBB92_8
.LBB92_7:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -40(%rbp)
.LBB92_8:
	movsd	.LCPI92_2(%rip), %xmm0  # xmm0 = mem[0],zero
	movq	-32(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-65, %eax
	movl	%eax, %edx
	movsd	-40(%rbp), %xmm1        # xmm1 = mem[0],zero
	movsd	%xmm0, -80(%rbp)        # 8-byte Spill
	movaps	%xmm1, %xmm0
	movq	%rdx, -88(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI92_3(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$6, %rdx
	movq	-88(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-32(%rbp), %rdx
	movb	%sil, (%rdx)
	movb	-16(%rbp), %sil
	movq	-32(%rbp), %rdx
	movb	%sil, 1(%rdx)
	movzwl	-16(%rbp), %eax
	movl	%eax, %edx
	cvtsi2sd	%rdx, %xmm0
	movsd	-80(%rbp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	ucomisd	%xmm1, %xmm0
	jbe	.LBB92_10
# %bb.9:
	jmp	.LBB92_11
.LBB92_10:
	movsd	.LCPI92_1(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -48(%rbp)
	jmp	.LBB92_12
.LBB92_11:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -48(%rbp)
.LBB92_12:
	movq	-32(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-2, %eax
	movl	%eax, %edx
	movsd	-48(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -96(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI92_3(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	movq	-96(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-32(%rbp), %rdx
	movb	%sil, (%rdx)
	movzbl	-16(%rbp), %eax
	movl	%eax, %edx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB92_13
	jp	.LBB92_13
	jmp	.LBB92_14
.LBB92_13:
	jmp	.LBB92_15
.LBB92_14:
	movsd	.LCPI92_1(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -56(%rbp)
	jmp	.LBB92_16
.LBB92_15:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -56(%rbp)
.LBB92_16:
	movq	-32(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-3, %eax
	movl	%eax, %edx
	movsd	-56(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -104(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI92_3(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$1, %rdx
	movq	-104(%rbp), %rsi        # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-32(%rbp), %rdx
	movb	%sil, (%rdx)
	movsbq	-16(%rbp), %rdx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jb	.LBB92_18
# %bb.17:
	jmp	.LBB92_19
.LBB92_18:
	movsd	.LCPI92_1(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -64(%rbp)
	jmp	.LBB92_20
.LBB92_19:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -64(%rbp)
.LBB92_20:
	movq	-32(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$127, %eax
	movl	%eax, %edx
	movsd	-64(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -112(%rbp)        # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI92_3(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$7, %rdx
	movq	-112(%rbp), %rsi        # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-32(%rbp), %rdx
	movb	%sil, (%rdx)
# %bb.21:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB92_23
# %bb.22:                               # %SP_return
	addq	$112, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB92_23:                              # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end92:
	.size	INS_SBC, .Lfunc_end92-INS_SBC
	.cfi_endproc
                                        # -- End function
	.globl	INS_SEC                 # -- Begin function INS_SEC
	.p2align	4, 0x90
	.type	INS_SEC,@function
INS_SEC:                                # @INS_SEC
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
	andq	$-2, %rax
	orq	$1, %rax
                                        # kill: def $al killed $al killed $rax
	movq	-8(%rbp), %rdx
	movb	%al, (%rdx)
# %bb.2:
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end93:
	.size	INS_SEC, .Lfunc_end93-INS_SEC
	.cfi_endproc
                                        # -- End function
	.globl	INS_SED                 # -- Begin function INS_SED
	.p2align	4, 0x90
	.type	INS_SED,@function
INS_SED:                                # @INS_SED
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
	andq	$-9, %rax
	orq	$8, %rax
                                        # kill: def $al killed $al killed $rax
	movq	-8(%rbp), %rdx
	movb	%al, (%rdx)
# %bb.2:
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end94:
	.size	INS_SED, .Lfunc_end94-INS_SED
	.cfi_endproc
                                        # -- End function
	.globl	INS_SEI                 # -- Begin function INS_SEI
	.p2align	4, 0x90
	.type	INS_SEI,@function
INS_SEI:                                # @INS_SEI
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
	andq	$-5, %rax
	orq	$4, %rax
                                        # kill: def $al killed $al killed $rax
	movq	-8(%rbp), %rdx
	movb	%al, (%rdx)
# %bb.2:
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end95:
	.size	INS_SEI, .Lfunc_end95-INS_SEI
	.cfi_endproc
                                        # -- End function
	.globl	INS_STA                 # -- Begin function INS_STA
	.p2align	4, 0x90
	.type	INS_STA,@function
INS_STA:                                # @INS_STA
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	56(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	movzbl	1(%rax), %ecx
	cvtsi2sd	%ecx, %xmm1
	callq	_ZN8MEMORY_T10WRITEUBYTEEdd
# %bb.2:
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end96:
	.size	INS_STA, .Lfunc_end96-INS_STA
	.cfi_endproc
                                        # -- End function
	.globl	INS_STX                 # -- Begin function INS_STX
	.p2align	4, 0x90
	.type	INS_STX,@function
INS_STX:                                # @INS_STX
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	56(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	movzbl	2(%rax), %ecx
	cvtsi2sd	%ecx, %xmm1
	callq	_ZN8MEMORY_T10WRITEUBYTEEdd
# %bb.2:
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end97:
	.size	INS_STX, .Lfunc_end97-INS_STX
	.cfi_endproc
                                        # -- End function
	.globl	INS_STY                 # -- Begin function INS_STY
	.p2align	4, 0x90
	.type	INS_STY,@function
INS_STY:                                # @INS_STY
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movq	8(%rax), %rdi
	movzwl	56(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	movzbl	3(%rax), %ecx
	cvtsi2sd	%ecx, %xmm1
	callq	_ZN8MEMORY_T10WRITEUBYTEEdd
# %bb.2:
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end98:
	.size	INS_STY, .Lfunc_end98-INS_STY
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_TAX
.LCPI99_0:
	.quad	4607182418800017408     # double 1
.LCPI99_1:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
	.text
	.globl	INS_TAX
	.p2align	4, 0x90
	.type	INS_TAX,@function
INS_TAX:                                # @INS_TAX
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movb	1(%rax), %cl
	movq	-8(%rbp), %rax
	movb	%cl, 2(%rax)
	movq	-8(%rbp), %rax
	movzbl	2(%rax), %edx
	movl	%edx, %eax
	cvtsi2sd	%rax, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB99_2
	jp	.LBB99_2
	jmp	.LBB99_3
.LBB99_2:
	jmp	.LBB99_4
.LBB99_3:
	movsd	.LCPI99_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB99_5
.LBB99_4:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -16(%rbp)
.LBB99_5:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-3, %eax
	movl	%eax, %edx
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI99_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$1, %rdx
	movq	-32(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
	movq	-8(%rbp), %rdx
	movsbq	2(%rdx), %rdx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jb	.LBB99_7
# %bb.6:
	jmp	.LBB99_8
.LBB99_7:
	movsd	.LCPI99_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	%xmm0, -24(%rbp)
	jmp	.LBB99_9
.LBB99_8:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -24(%rbp)
.LBB99_9:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$127, %eax
	movl	%eax, %edx
	movsd	-24(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -40(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI99_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$7, %rdx
	movq	-40(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
# %bb.10:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end99:
	.size	INS_TAX, .Lfunc_end99-INS_TAX
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_TAY
.LCPI100_0:
	.quad	4607182418800017408     # double 1
.LCPI100_1:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
	.text
	.globl	INS_TAY
	.p2align	4, 0x90
	.type	INS_TAY,@function
INS_TAY:                                # @INS_TAY
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movb	1(%rax), %cl
	movq	-8(%rbp), %rax
	movb	%cl, 3(%rax)
	movq	-8(%rbp), %rax
	movzbl	3(%rax), %edx
	movl	%edx, %eax
	cvtsi2sd	%rax, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB100_2
	jp	.LBB100_2
	jmp	.LBB100_3
.LBB100_2:
	jmp	.LBB100_4
.LBB100_3:
	movsd	.LCPI100_0(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB100_5
.LBB100_4:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -16(%rbp)
.LBB100_5:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-3, %eax
	movl	%eax, %edx
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI100_1(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$1, %rdx
	movq	-32(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
	movq	-8(%rbp), %rdx
	movsbq	3(%rdx), %rdx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jb	.LBB100_7
# %bb.6:
	jmp	.LBB100_8
.LBB100_7:
	movsd	.LCPI100_0(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -24(%rbp)
	jmp	.LBB100_9
.LBB100_8:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -24(%rbp)
.LBB100_9:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$127, %eax
	movl	%eax, %edx
	movsd	-24(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -40(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI100_1(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$7, %rdx
	movq	-40(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
# %bb.10:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end100:
	.size	INS_TAY, .Lfunc_end100-INS_TAY
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_TSX
.LCPI101_0:
	.quad	4607182418800017408     # double 1
.LCPI101_1:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
	.text
	.globl	INS_TSX
	.p2align	4, 0x90
	.type	INS_TSX,@function
INS_TSX:                                # @INS_TSX
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movb	6(%rax), %cl
	movq	-8(%rbp), %rax
	movb	%cl, 2(%rax)
	movq	-8(%rbp), %rax
	movzbl	2(%rax), %edx
	movl	%edx, %eax
	cvtsi2sd	%rax, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB101_2
	jp	.LBB101_2
	jmp	.LBB101_3
.LBB101_2:
	jmp	.LBB101_4
.LBB101_3:
	movsd	.LCPI101_0(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB101_5
.LBB101_4:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -16(%rbp)
.LBB101_5:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-3, %eax
	movl	%eax, %edx
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI101_1(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$1, %rdx
	movq	-32(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
	movq	-8(%rbp), %rdx
	movsbq	2(%rdx), %rdx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jb	.LBB101_7
# %bb.6:
	jmp	.LBB101_8
.LBB101_7:
	movsd	.LCPI101_0(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -24(%rbp)
	jmp	.LBB101_9
.LBB101_8:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -24(%rbp)
.LBB101_9:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$127, %eax
	movl	%eax, %edx
	movsd	-24(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -40(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI101_1(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$7, %rdx
	movq	-40(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
# %bb.10:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end101:
	.size	INS_TSX, .Lfunc_end101-INS_TSX
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_TXA
.LCPI102_0:
	.quad	4607182418800017408     # double 1
.LCPI102_1:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
	.text
	.globl	INS_TXA
	.p2align	4, 0x90
	.type	INS_TXA,@function
INS_TXA:                                # @INS_TXA
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movb	2(%rax), %cl
	movq	-8(%rbp), %rax
	movb	%cl, 1(%rax)
	movq	-8(%rbp), %rax
	movzbl	1(%rax), %edx
	movl	%edx, %eax
	cvtsi2sd	%rax, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB102_2
	jp	.LBB102_2
	jmp	.LBB102_3
.LBB102_2:
	jmp	.LBB102_4
.LBB102_3:
	movsd	.LCPI102_0(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB102_5
.LBB102_4:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -16(%rbp)
.LBB102_5:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-3, %eax
	movl	%eax, %edx
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI102_1(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$1, %rdx
	movq	-32(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
	movq	-8(%rbp), %rdx
	movsbq	1(%rdx), %rdx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jb	.LBB102_7
# %bb.6:
	jmp	.LBB102_8
.LBB102_7:
	movsd	.LCPI102_0(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -24(%rbp)
	jmp	.LBB102_9
.LBB102_8:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -24(%rbp)
.LBB102_9:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$127, %eax
	movl	%eax, %edx
	movsd	-24(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -40(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI102_1(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$7, %rdx
	movq	-40(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
# %bb.10:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end102:
	.size	INS_TXA, .Lfunc_end102-INS_TXA
	.cfi_endproc
                                        # -- End function
	.globl	INS_TXS                 # -- Begin function INS_TXS
	.p2align	4, 0x90
	.type	INS_TXS,@function
INS_TXS:                                # @INS_TXS
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movb	2(%rax), %cl
	movq	-8(%rbp), %rax
	movb	%cl, 6(%rax)
# %bb.2:
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end103:
	.size	INS_TXS, .Lfunc_end103-INS_TXS
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INS_TYA
.LCPI104_0:
	.quad	4607182418800017408     # double 1
.LCPI104_1:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
	.text
	.globl	INS_TYA
	.p2align	4, 0x90
	.type	INS_TYA,@function
INS_TYA:                                # @INS_TYA
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movb	3(%rax), %cl
	movq	-8(%rbp), %rax
	movb	%cl, 1(%rax)
	movq	-8(%rbp), %rax
	movzbl	1(%rax), %edx
	movl	%edx, %eax
	cvtsi2sd	%rax, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB104_2
	jp	.LBB104_2
	jmp	.LBB104_3
.LBB104_2:
	jmp	.LBB104_4
.LBB104_3:
	movsd	.LCPI104_0(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -16(%rbp)
	jmp	.LBB104_5
.LBB104_4:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -16(%rbp)
.LBB104_5:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$-3, %eax
	movl	%eax, %edx
	movsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -32(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI104_1(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$1, %rdx
	movq	-32(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
	movq	-8(%rbp), %rdx
	movsbq	1(%rdx), %rdx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jb	.LBB104_7
# %bb.6:
	jmp	.LBB104_8
.LBB104_7:
	movsd	.LCPI104_0(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, -24(%rbp)
	jmp	.LBB104_9
.LBB104_8:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -24(%rbp)
.LBB104_9:
	movq	-8(%rbp), %rax
	movzbl	(%rax), %ecx
	movl	%ecx, %eax
                                        # kill: def $eax killed $eax killed $rax
	andl	$127, %eax
	movl	%eax, %edx
	movsd	-24(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rdx, -40(%rbp)         # 8-byte Spill
	callq	nearbyint@PLT
	movsd	.LCPI104_1(%rip), %xmm1 # xmm1 = mem[0],zero
	movaps	%xmm0, %xmm2
	subsd	%xmm1, %xmm2
	cvttsd2si	%xmm2, %rdx
	movabsq	$-9223372036854775808, %rsi # imm = 0x8000000000000000
	xorq	%rsi, %rdx
	cvttsd2si	%xmm0, %rsi
	ucomisd	%xmm1, %xmm0
	cmovbq	%rsi, %rdx
	andq	$1, %rdx
	shlq	$7, %rdx
	movq	-40(%rbp), %rsi         # 8-byte Reload
	orq	%rdx, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-8(%rbp), %rdx
	movb	%sil, (%rdx)
# %bb.10:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end104:
	.size	INS_TYA, .Lfunc_end104-INS_TYA
	.cfi_endproc
                                        # -- End function
	.globl	INS_R32                 # -- Begin function INS_R32
	.p2align	4, 0x90
	.type	INS_R32,@function
INS_R32:                                # @INS_R32
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
# %bb.1:
	movq	$0, -16(%rbp)
	movq	-24(%rbp), %rax
	movq	8(%rax), %rdi
	movl	56(%rax), %ecx
	movl	%ecx, %eax
	cvtsi2sd	%rax, %xmm0
	callq	_ZN8MEMORY_T6PEEK64Ed
	movsd	%xmm0, -32(%rbp)
	movsd	-32(%rbp), %xmm0        # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	movq	-24(%rbp), %rax
	movb	%cl, 1(%rax)
# %bb.2:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB105_4
# %bb.3:                                # %SP_return
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB105_4:                              # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end105:
	.size	INS_R32, .Lfunc_end105-INS_R32
	.cfi_endproc
                                        # -- End function
	.globl	INS_W32                 # -- Begin function INS_W32
	.p2align	4, 0x90
	.type	INS_W32,@function
INS_W32:                                # @INS_W32
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movq	8(%rax), %rdi
	movl	56(%rax), %ecx
	movl	%ecx, %edx
	cvtsi2sd	%rdx, %xmm0
	movzbl	1(%rax), %ecx
	cvtsi2sd	%ecx, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
# %bb.2:
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end106:
	.size	INS_W32, .Lfunc_end106-INS_W32
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4               # -- Begin function INS_R64
.LCPI107_0:
	.long	1127219200              # 0x43300000
	.long	1160773632              # 0x45300000
	.long	0                       # 0x0
	.long	0                       # 0x0
.LCPI107_1:
	.quad	4841369599423283200     # double 4503599627370496
	.quad	4985484787499139072     # double 1.9342813113834067E+25
	.text
	.globl	INS_R64
	.p2align	4, 0x90
	.type	INS_R64,@function
INS_R64:                                # @INS_R64
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
# %bb.1:
	movq	$0, -16(%rbp)
	movq	-24(%rbp), %rax
	movq	8(%rax), %rdi
	movq	56(%rax), %xmm0         # xmm0 = mem[0],zero
	movaps	.LCPI107_0(%rip), %xmm1 # xmm1 = [1127219200,1160773632,0,0]
	punpckldq	%xmm1, %xmm0    # xmm0 = xmm0[0],xmm1[0],xmm0[1],xmm1[1]
	movapd	.LCPI107_1(%rip), %xmm1 # xmm1 = [4.503599627370496E+15,1.9342813113834067E+25]
	subpd	%xmm1, %xmm0
	movaps	%xmm0, %xmm1
	unpckhpd	%xmm0, %xmm0    # xmm0 = xmm0[1,1]
	addsd	%xmm1, %xmm0
	callq	_ZN8MEMORY_T6PEEK64Ed
	movsd	%xmm0, -32(%rbp)
	movsd	-32(%rbp), %xmm0        # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %ecx
                                        # kill: def $cl killed $cl killed $ecx
	movq	-24(%rbp), %rax
	movb	%cl, 1(%rax)
# %bb.2:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB107_4
# %bb.3:                                # %SP_return
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB107_4:                              # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end107:
	.size	INS_R64, .Lfunc_end107-INS_R64
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4               # -- Begin function INS_W64
.LCPI108_0:
	.long	1127219200              # 0x43300000
	.long	1160773632              # 0x45300000
	.long	0                       # 0x0
	.long	0                       # 0x0
.LCPI108_1:
	.quad	4841369599423283200     # double 4503599627370496
	.quad	4985484787499139072     # double 1.9342813113834067E+25
	.text
	.globl	INS_W64
	.p2align	4, 0x90
	.type	INS_W64,@function
INS_W64:                                # @INS_W64
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movq	8(%rax), %rdi
	movq	56(%rax), %xmm0         # xmm0 = mem[0],zero
	movaps	.LCPI108_0(%rip), %xmm1 # xmm1 = [1127219200,1160773632,0,0]
	punpckldq	%xmm1, %xmm0    # xmm0 = xmm0[0],xmm1[0],xmm0[1],xmm1[1]
	movapd	.LCPI108_1(%rip), %xmm1 # xmm1 = [4.503599627370496E+15,1.9342813113834067E+25]
	subpd	%xmm1, %xmm0
	movaps	%xmm0, %xmm1
	unpckhpd	%xmm0, %xmm0    # xmm0 = xmm0[1,1]
	addsd	%xmm1, %xmm0
	movzbl	1(%rax), %ecx
	cvtsi2sd	%ecx, %xmm1
	callq	_ZN8MEMORY_T6POKE64Edd
# %bb.2:
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end108:
	.size	INS_W64, .Lfunc_end108-INS_W64
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function INTERRUPTSERVICE
.LCPI109_0:
	.quad	4641170522237829120     # double 198
.LCPI109_1:
	.quad	4631530004285489152     # double 45
.LCPI109_4:
	.quad	4679239875398991872     # double 65535
.LCPI109_5:
	.quad	4679239737960038400     # double 65534
.LCPI109_6:
	.quad	9218868437227405312     # double +Inf
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2
.LCPI109_2:
	.long	1146601472              # float 863
.LCPI109_3:
	.long	1088421888              # float 7
	.text
	.globl	INTERRUPTSERVICE
	.p2align	4, 0x90
	.type	INTERRUPTSERVICE,@function
INTERRUPTSERVICE:                       # @INTERRUPTSERVICE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$608, %rsp              # imm = 0x260
	xorl	%esi, %esi
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -144(%rbp)
	leaq	-16(%rbp), %rax
	movq	%rax, %rdi
	movl	$8, %edx
	callq	memset@PLT
# %bb.1:
	xorl	%eax, %eax
	leaq	-24(%rbp), %rcx
	movq	%rcx, %rdi
	movl	%eax, %esi
	movl	$8, %ecx
	movq	%rcx, %rdx
	movl	%eax, -396(%rbp)        # 4-byte Spill
	movq	%rcx, -408(%rbp)        # 8-byte Spill
	callq	memset@PLT
	leaq	-32(%rbp), %rcx
	movq	%rcx, %rdi
	movl	-396(%rbp), %esi        # 4-byte Reload
	movq	-408(%rbp), %rdx        # 8-byte Reload
	callq	memset@PLT
	movq	-144(%rbp), %rcx
	movzbl	(%rcx), %eax
	movl	%eax, %ecx
	sarq	$2, %rcx
	andq	$1, %rcx
	cmpq	$1, %rcx
	je	.LBB109_3
# %bb.2:
	jmp	.LBB109_4
.LBB109_3:
	movq	$0, -16(%rbp)
	jmp	.LBB109_102
.LBB109_4:
	movsd	.LCPI109_0(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-144(%rbp), %rax
	movq	8(%rax), %rdi
	callq	_ZN8MEMORY_T9READUBYTEEd
	movb	%al, -153(%rbp)
	movzbl	-153(%rbp), %ecx
	movl	%ecx, %edx
	movq	%rdx, -152(%rbp)
	cmpq	$10, -152(%rbp)
	jl	.LBB109_6
# %bb.5:
	jmp	.LBB109_92
.LBB109_6:
	callq	fb_Inkey@PLT
	xorl	%r8d, %r8d
	movq	%rax, -168(%rbp)
	leaq	-56(%rbp), %rax
	movq	-168(%rbp), %rcx
	movq	%rax, %rdi
	movq	$-1, %rax
	movq	%rax, %rsi
	movq	%rcx, %rdx
	movq	%rax, %rcx
	callq	fb_StrInit@PLT
	movq	%rax, -176(%rbp)
	leaq	-56(%rbp), %rax
	movq	%rax, %rdi
	movq	$-1, %rsi
	callq	fb_StrLen@PLT
	movq	%rax, -184(%rbp)
	movq	-184(%rbp), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -24(%rbp)
	jne	.LBB109_8
# %bb.7:
	jmp	.LBB109_90
.LBB109_8:
	movq	-56(%rbp), %rax
	movq	-24(%rbp), %rcx
	movzbl	-1(%rax,%rcx), %edx
	movl	%edx, %eax
	movq	-24(%rbp), %rcx
	shlq	$8, %rcx
	addq	%rcx, %rax
	addq	$-256, %rax
	movq	%rax, -24(%rbp)
	cmpq	$27, -24(%rbp)
	je	.LBB109_10
# %bb.9:
	jmp	.LBB109_12
.LBB109_10:
	jmp	.LBB109_11
.LBB109_11:
	xorl	%edi, %edi
	callq	fb_End@PLT
	jmp	.LBB109_85
.LBB109_12:
	cmpq	$65, -24(%rbp)
	jge	.LBB109_14
# %bb.13:
	jmp	.LBB109_18
.LBB109_14:
	cmpq	$90, -24(%rbp)
	jle	.LBB109_16
# %bb.15:
	jmp	.LBB109_18
.LBB109_16:
	jmp	.LBB109_17
.LBB109_17:
	movq	-24(%rbp), %rax
	addq	$32, %rax
	movq	%rax, -24(%rbp)
	movq	-24(%rbp), %rsi
	movl	$1, %edi
	movb	$0, %al
	callq	fb_CHR@PLT
	leaq	INTERRUPTSERVICE.S$1(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rax, -192(%rbp)
	movq	-192(%rbp), %rax
	movq	%rcx, %rdi
	movq	$-1, %rcx
	movq	%rcx, %rsi
	movq	%rax, %rdx
	callq	fb_StrConcatAssign@PLT
	movq	%rax, -200(%rbp)
	jmp	.LBB109_85
.LBB109_18:
	cmpq	$97, -24(%rbp)
	jge	.LBB109_20
# %bb.19:
	jmp	.LBB109_24
.LBB109_20:
	cmpq	$122, -24(%rbp)
	jle	.LBB109_22
# %bb.21:
	jmp	.LBB109_24
.LBB109_22:
	jmp	.LBB109_23
.LBB109_23:
	movq	-24(%rbp), %rax
	addq	$-32, %rax
	movq	%rax, -24(%rbp)
	movq	-24(%rbp), %rsi
	movl	$1, %edi
	movb	$0, %al
	callq	fb_CHR@PLT
	leaq	INTERRUPTSERVICE.S$1(%rip), %rcx
	xorl	%r8d, %r8d
	movq	%rax, -208(%rbp)
	movq	-208(%rbp), %rax
	movq	%rcx, %rdi
	movq	$-1, %rcx
	movq	%rcx, %rsi
	movq	%rax, %rdx
	callq	fb_StrConcatAssign@PLT
	movq	%rax, -216(%rbp)
	jmp	.LBB109_85
.LBB109_24:
	cmpq	$316, -24(%rbp)         # imm = 0x13C
	je	.LBB109_26
# %bb.25:
	jmp	.LBB109_42
.LBB109_26:
	jmp	.LBB109_27
.LBB109_27:
	xorl	%eax, %eax
	movl	$1, %ecx
	movl	%ecx, %edi
	movl	%ecx, %esi
	movl	$4294967295, %edx       # imm = 0xFFFFFFFF
	movl	%eax, %ecx
	movl	%eax, %r8d
	callq	fb_Locate@PLT
	movl	$48, %edi
	movl	%eax, -412(%rbp)        # 4-byte Spill
	callq	fb_SPACE@PLT
	xorl	%edi, %edi
	movq	%rax, -224(%rbp)
	movq	-224(%rbp), %rsi
	movl	$1, %edx
	callq	fb_PrintString@PLT
	xorl	%ecx, %ecx
	movl	$1, %edx
	movl	%edx, %edi
	movl	%edx, %esi
	movl	$4294967295, %edx       # imm = 0xFFFFFFFF
	movl	%ecx, -416(%rbp)        # 4-byte Spill
	movl	-416(%rbp), %r8d        # 4-byte Reload
	callq	fb_Locate@PLT
	leaq	.L.str.1693(%rip), %rdi
	movl	$14, %esi
	movl	%eax, -420(%rbp)        # 4-byte Spill
	callq	fb_StrAllocTempDescZEx@PLT
	movq	%rax, -232(%rbp)
	movq	-232(%rbp), %rdi
	movl	$4294967295, %ecx       # imm = 0xFFFFFFFF
	movl	%ecx, %esi
	movl	%ecx, %edx
	callq	fb_ConsoleInput@PLT
	xorl	%edx, %edx
	leaq	-56(%rbp), %rdi
	movq	$-1, %rsi
	movl	%eax, -424(%rbp)        # 4-byte Spill
	callq	fb_InputString@PLT
	leaq	-56(%rbp), %rsi
	movq	%rsi, %rdi
	movq	$-1, %rsi
	movl	%eax, -428(%rbp)        # 4-byte Spill
	callq	fb_StrLen@PLT
	movq	%rax, -240(%rbp)
	cmpq	$0, -240(%rbp)
	jne	.LBB109_29
# %bb.28:
	jmp	.LBB109_40
.LBB109_29:
	callq	fb_FileFree@PLT
	xorl	%ecx, %ecx
	movl	%eax, -244(%rbp)
	movslq	-244(%rbp), %rdx
	movq	%rdx, -24(%rbp)
	movq	-24(%rbp), %rdx
                                        # kill: def $edx killed $edx killed $rdx
	leaq	-56(%rbp), %rdi
	movl	%ecx, %esi
	movl	$2, %eax
	movl	%edx, -432(%rbp)        # 4-byte Spill
	movl	%eax, %edx
	movl	%ecx, -436(%rbp)        # 4-byte Spill
	movl	-432(%rbp), %r8d        # 4-byte Reload
	movl	-436(%rbp), %r9d        # 4-byte Reload
	callq	fb_FileOpen@PLT
	movl	%eax, -248(%rbp)
	movslq	-248(%rbp), %rdi
	cmpq	$0, %rdi
	je	.LBB109_31
# %bb.30:
	jmp	.LBB109_38
.LBB109_31:
	movsd	.LCPI109_1(%rip), %xmm0 # xmm0 = mem[0],zero
	xorl	%esi, %esi
	leaq	-57(%rbp), %rdi
	movl	$1, %edx
	movsd	%xmm0, -448(%rbp)       # 8-byte Spill
	callq	memset@PLT
	movq	-144(%rbp), %rax
	movq	8(%rax), %rdi
	movsd	-448(%rbp), %xmm0       # 8-byte Reload
                                        # xmm0 = mem[0],zero
	callq	_ZN8MEMORY_T10READUSHORTEd
	xorl	%ecx, %ecx
	movl	%ecx, %esi
	movw	%ax, -250(%rbp)
	movzwl	-250(%rbp), %ecx
	movl	%ecx, %edx
	movq	%rdx, -72(%rbp)
	movq	-72(%rbp), %rdx
	addq	$-2048, %rdx            # imm = 0xF800
	movq	%rdx, -72(%rbp)
	movq	-24(%rbp), %rdx
                                        # kill: def $edx killed $edx killed $rdx
	leaq	-72(%rbp), %rdi
	movq	%rdi, -456(%rbp)        # 8-byte Spill
	movl	%edx, %edi
	movq	-456(%rbp), %rdx        # 8-byte Reload
	movl	$8, %ecx
	callq	fb_FilePutLarge@PLT
	movq	$0, -264(%rbp)
	movq	-72(%rbp), %rcx
	addq	$-1, %rcx
	movq	%rcx, -272(%rbp)
	jmp	.LBB109_34
.LBB109_32:                             #   in Loop: Header=BB109_34 Depth=1
	movq	-144(%rbp), %rax
	movq	8(%rax), %rdi
	movq	-264(%rbp), %rax
	addq	$2048, %rax             # imm = 0x800
	cvtsi2sd	%rax, %xmm0
	callq	_ZN8MEMORY_T9READUBYTEEd
	xorl	%ecx, %ecx
	movl	%ecx, %esi
	movb	%al, -273(%rbp)
	movb	-273(%rbp), %al
	movb	%al, -57(%rbp)
	movq	-24(%rbp), %rdx
                                        # kill: def $edx killed $edx killed $rdx
	movl	%edx, %edi
	leaq	-57(%rbp), %rdx
	movl	$1, %ecx
	callq	fb_FilePutLarge@PLT
# %bb.33:                               #   in Loop: Header=BB109_34 Depth=1
	movq	-264(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -264(%rbp)
.LBB109_34:                             # =>This Inner Loop Header: Depth=1
	movq	-264(%rbp), %rax
	cmpq	-272(%rbp), %rax
	jg	.LBB109_36
# %bb.35:                               #   in Loop: Header=BB109_34 Depth=1
	jmp	.LBB109_32
.LBB109_36:
	jmp	.LBB109_37
.LBB109_37:
	movq	-24(%rbp), %rax
                                        # kill: def $eax killed $eax killed $rax
	movl	%eax, %edi
	callq	fb_FileClose@PLT
	jmp	.LBB109_39
.LBB109_38:
	xorl	%eax, %eax
	movl	$1, %ecx
	movl	%ecx, %edi
	movl	%ecx, %esi
	movl	$4294967295, %edx       # imm = 0xFFFFFFFF
	movl	%eax, %ecx
	movl	%eax, %r8d
	callq	fb_Locate@PLT
	movl	$48, %edi
	movl	%eax, -460(%rbp)        # 4-byte Spill
	callq	fb_SPACE@PLT
	xorl	%edi, %edi
	movq	%rax, -288(%rbp)
	movq	-288(%rbp), %rsi
	movl	$1, %edx
	callq	fb_PrintString@PLT
	xorl	%ecx, %ecx
	movl	$1, %edx
	movl	%edx, %edi
	movl	%edx, %esi
	movl	$4294967295, %edx       # imm = 0xFFFFFFFF
	movl	%ecx, -464(%rbp)        # 4-byte Spill
	movl	-464(%rbp), %r8d        # 4-byte Reload
	callq	fb_Locate@PLT
	xorl	%esi, %esi
	leaq	-96(%rbp), %r9
	movq	%r9, %r10
	movq	%r10, %rdi
	movl	$24, %edx
	movl	%eax, -468(%rbp)        # 4-byte Spill
	movq	%r9, -480(%rbp)         # 8-byte Spill
	callq	memset@PLT
	leaq	-56(%rbp), %rdx
	movq	-480(%rbp), %rdi        # 8-byte Reload
	leaq	.L.str.1694(%rip), %rsi
	movl	$15, %r9d
	movq	%rdx, -488(%rbp)        # 8-byte Spill
	movq	%r9, %rdx
	movq	-488(%rbp), %rcx        # 8-byte Reload
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%edi, %edi
	movq	%rax, -296(%rbp)
	movq	-296(%rbp), %rsi
	movl	$1, %edx
	callq	fb_PrintString@PLT
	callq	fb_Beep@PLT
	movl	$4294967295, %edi       # imm = 0xFFFFFFFF
	callq	fb_Sleep@PLT
.LBB109_39:
	jmp	.LBB109_40
.LBB109_40:
	jmp	.LBB109_41
.LBB109_41:
	xorl	%eax, %eax
	movl	%eax, %edi
	movss	.LCPI109_2(%rip), %xmm2 # xmm2 = mem[0],zero,zero,zero
	movss	.LCPI109_3(%rip), %xmm3 # xmm3 = mem[0],zero,zero,zero
	xorl	%r8d, %r8d
	xorps	%xmm0, %xmm0
	movss	%xmm0, -492(%rbp)       # 4-byte Spill
	movss	-492(%rbp), %xmm1       # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movl	$3, %esi
	movl	$2, %edx
	movl	$65535, %ecx            # imm = 0xFFFF
	callq	fb_GfxLine@PLT
	movq	$0, -24(%rbp)
	jmp	.LBB109_85
.LBB109_42:
	cmpq	$317, -24(%rbp)         # imm = 0x13D
	je	.LBB109_44
# %bb.43:
	jmp	.LBB109_60
.LBB109_44:
	jmp	.LBB109_45
.LBB109_45:
	xorl	%eax, %eax
	movl	$1, %ecx
	movl	%ecx, %edi
	movl	%ecx, %esi
	movl	$4294967295, %edx       # imm = 0xFFFFFFFF
	movl	%eax, %ecx
	movl	%eax, %r8d
	callq	fb_Locate@PLT
	movl	$48, %edi
	movl	%eax, -496(%rbp)        # 4-byte Spill
	callq	fb_SPACE@PLT
	xorl	%edi, %edi
	movq	%rax, -304(%rbp)
	movq	-304(%rbp), %rsi
	movl	$1, %edx
	callq	fb_PrintString@PLT
	xorl	%ecx, %ecx
	movl	$1, %edx
	movl	%edx, %edi
	movl	%edx, %esi
	movl	$4294967295, %edx       # imm = 0xFFFFFFFF
	movl	%ecx, -500(%rbp)        # 4-byte Spill
	movl	-500(%rbp), %r8d        # 4-byte Reload
	callq	fb_Locate@PLT
	leaq	.L.str.1695(%rip), %rdi
	movl	$14, %esi
	movl	%eax, -504(%rbp)        # 4-byte Spill
	callq	fb_StrAllocTempDescZEx@PLT
	movq	%rax, -312(%rbp)
	movq	-312(%rbp), %rdi
	movl	$4294967295, %ecx       # imm = 0xFFFFFFFF
	movl	%ecx, %esi
	movl	%ecx, %edx
	callq	fb_ConsoleInput@PLT
	xorl	%edx, %edx
	leaq	-56(%rbp), %rdi
	movq	$-1, %rsi
	movl	%eax, -508(%rbp)        # 4-byte Spill
	callq	fb_InputString@PLT
	leaq	-56(%rbp), %rsi
	movq	%rsi, %rdi
	movq	$-1, %rsi
	movl	%eax, -512(%rbp)        # 4-byte Spill
	callq	fb_StrLen@PLT
	movq	%rax, -320(%rbp)
	cmpq	$0, -320(%rbp)
	jne	.LBB109_47
# %bb.46:
	jmp	.LBB109_58
.LBB109_47:
	callq	fb_FileFree@PLT
	xorl	%ecx, %ecx
	movl	%eax, -324(%rbp)
	movslq	-324(%rbp), %rdx
	movq	%rdx, -24(%rbp)
	movq	-24(%rbp), %rdx
                                        # kill: def $edx killed $edx killed $rdx
	leaq	-56(%rbp), %rdi
	movl	%ecx, %esi
	movl	$1, %eax
	movl	%edx, -516(%rbp)        # 4-byte Spill
	movl	%eax, %edx
	movl	%ecx, -520(%rbp)        # 4-byte Spill
	movl	-516(%rbp), %r8d        # 4-byte Reload
	movl	-520(%rbp), %r9d        # 4-byte Reload
	callq	fb_FileOpen@PLT
	movl	%eax, -328(%rbp)
	movslq	-328(%rbp), %rdi
	cmpq	$0, %rdi
	je	.LBB109_49
# %bb.48:
	jmp	.LBB109_56
.LBB109_49:
	xorl	%eax, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	leaq	-97(%rbp), %rdi
	movq	%rsi, -528(%rbp)        # 8-byte Spill
	movl	%eax, %esi
	movl	$1, %edx
	movl	%eax, -532(%rbp)        # 4-byte Spill
	callq	memset@PLT
	leaq	-112(%rbp), %rcx
	movq	%rcx, %rdx
	movq	%rdx, %rdi
	movl	-532(%rbp), %esi        # 4-byte Reload
	movl	$8, %edx
	movq	%rdx, -544(%rbp)        # 8-byte Spill
	movq	%rcx, -552(%rbp)        # 8-byte Spill
	callq	memset@PLT
	movq	-24(%rbp), %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	movq	-552(%rbp), %rdx        # 8-byte Reload
	movl	%ecx, %edi
	movq	-528(%rbp), %rsi        # 8-byte Reload
	movq	-544(%rbp), %rcx        # 8-byte Reload
	callq	fb_FileGetLarge@PLT
	movq	$0, -336(%rbp)
	movq	-112(%rbp), %rcx
	addq	$-1, %rcx
	movq	%rcx, -344(%rbp)
	jmp	.LBB109_52
.LBB109_50:                             #   in Loop: Header=BB109_52 Depth=1
	movl	-24(%rbp), %edi
	xorl	%eax, %eax
	movl	%eax, %esi
	leaq	-97(%rbp), %rdx
	movl	$1, %ecx
	callq	fb_FileGetLarge@PLT
	movq	-144(%rbp), %rcx
	movq	8(%rcx), %rdi
	movq	-336(%rbp), %rcx
	addq	$2048, %rcx             # imm = 0x800
	cvtsi2sd	%rcx, %xmm0
	movzbl	-97(%rbp), %r8d
	cvtsi2sd	%r8d, %xmm1
	movl	%eax, -556(%rbp)        # 4-byte Spill
	callq	_ZN8MEMORY_T10WRITEUBYTEEdd
# %bb.51:                               #   in Loop: Header=BB109_52 Depth=1
	movq	-336(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -336(%rbp)
.LBB109_52:                             # =>This Inner Loop Header: Depth=1
	movq	-336(%rbp), %rax
	cmpq	-344(%rbp), %rax
	jg	.LBB109_54
# %bb.53:                               #   in Loop: Header=BB109_52 Depth=1
	jmp	.LBB109_50
.LBB109_54:
	jmp	.LBB109_55
.LBB109_55:
	movq	-24(%rbp), %rax
                                        # kill: def $eax killed $eax killed $rax
	movl	%eax, %edi
	callq	fb_FileClose@PLT
	movsd	.LCPI109_1(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-112(%rbp), %rcx
	addq	$2048, %rcx             # imm = 0x800
	movq	%rcx, -112(%rbp)
	movq	-144(%rbp), %rcx
	movq	8(%rcx), %rdi
	cvtsi2sdq	-112(%rbp), %xmm1
	movl	%eax, -560(%rbp)        # 4-byte Spill
	callq	_ZN8MEMORY_T11WRITEUSHORTEdd
	movq	-144(%rbp), %rcx
	movw	$-23254, 4(%rcx)        # imm = 0xA52A
	jmp	.LBB109_57
.LBB109_56:
	xorl	%eax, %eax
	movl	$1, %ecx
	movl	%ecx, %edi
	movl	%ecx, %esi
	movl	$4294967295, %edx       # imm = 0xFFFFFFFF
	movl	%eax, %ecx
	movl	%eax, %r8d
	callq	fb_Locate@PLT
	movl	$48, %edi
	movl	%eax, -564(%rbp)        # 4-byte Spill
	callq	fb_SPACE@PLT
	xorl	%edi, %edi
	movq	%rax, -352(%rbp)
	movq	-352(%rbp), %rsi
	movl	$1, %edx
	callq	fb_PrintString@PLT
	xorl	%ecx, %ecx
	movl	$1, %edx
	movl	%edx, %edi
	movl	%edx, %esi
	movl	$4294967295, %edx       # imm = 0xFFFFFFFF
	movl	%ecx, -568(%rbp)        # 4-byte Spill
	movl	-568(%rbp), %r8d        # 4-byte Reload
	callq	fb_Locate@PLT
	xorl	%esi, %esi
	leaq	-136(%rbp), %r9
	movq	%r9, %r10
	movq	%r10, %rdi
	movl	$24, %edx
	movl	%eax, -572(%rbp)        # 4-byte Spill
	movq	%r9, -584(%rbp)         # 8-byte Spill
	callq	memset@PLT
	leaq	-56(%rbp), %rdx
	movq	-584(%rbp), %rdi        # 8-byte Reload
	leaq	.L.str.1696(%rip), %rsi
	movl	$13, %r9d
	movq	%rdx, -592(%rbp)        # 8-byte Spill
	movq	%r9, %rdx
	movq	-592(%rbp), %rcx        # 8-byte Reload
	movq	$-1, %r8
	callq	fb_StrConcat@PLT
	xorl	%edi, %edi
	movq	%rax, -360(%rbp)
	movq	-360(%rbp), %rsi
	movl	$1, %edx
	callq	fb_PrintString@PLT
	callq	fb_Beep@PLT
	movl	$4294967295, %edi       # imm = 0xFFFFFFFF
	callq	fb_Sleep@PLT
.LBB109_57:
	jmp	.LBB109_58
.LBB109_58:
	jmp	.LBB109_59
.LBB109_59:
	xorl	%eax, %eax
	movl	%eax, %edi
	movss	.LCPI109_2(%rip), %xmm2 # xmm2 = mem[0],zero,zero,zero
	movss	.LCPI109_3(%rip), %xmm3 # xmm3 = mem[0],zero,zero,zero
	xorl	%r8d, %r8d
	xorps	%xmm0, %xmm0
	movss	%xmm0, -596(%rbp)       # 4-byte Spill
	movss	-596(%rbp), %xmm1       # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movl	$3, %esi
	movl	$2, %edx
	movl	$65535, %ecx            # imm = 0xFFFF
	callq	fb_GfxLine@PLT
	movq	$0, -24(%rbp)
	jmp	.LBB109_85
.LBB109_60:
	cmpq	$327, -24(%rbp)         # imm = 0x147
	je	.LBB109_62
# %bb.61:
	jmp	.LBB109_64
.LBB109_62:
	jmp	.LBB109_63
.LBB109_63:
	movq	$19, -24(%rbp)
	jmp	.LBB109_85
.LBB109_64:
	cmpq	$8, -24(%rbp)
	je	.LBB109_66
# %bb.65:
	jmp	.LBB109_68
.LBB109_66:
	jmp	.LBB109_67
.LBB109_67:
	movq	$20, -24(%rbp)
	jmp	.LBB109_85
.LBB109_68:
	cmpq	$331, -24(%rbp)         # imm = 0x14B
	je	.LBB109_70
# %bb.69:
	jmp	.LBB109_72
.LBB109_70:
	jmp	.LBB109_71
.LBB109_71:
	movq	$157, -24(%rbp)
	jmp	.LBB109_85
.LBB109_72:
	cmpq	$328, -24(%rbp)         # imm = 0x148
	je	.LBB109_74
# %bb.73:
	jmp	.LBB109_76
.LBB109_74:
	jmp	.LBB109_75
.LBB109_75:
	movq	$145, -24(%rbp)
	jmp	.LBB109_85
.LBB109_76:
	cmpq	$333, -24(%rbp)         # imm = 0x14D
	je	.LBB109_78
# %bb.77:
	jmp	.LBB109_80
.LBB109_78:
	jmp	.LBB109_79
.LBB109_79:
	movq	$29, -24(%rbp)
	jmp	.LBB109_85
.LBB109_80:
	cmpq	$336, -24(%rbp)         # imm = 0x150
	je	.LBB109_82
# %bb.81:
	jmp	.LBB109_84
.LBB109_82:
	jmp	.LBB109_83
.LBB109_83:
	movq	$17, -24(%rbp)
.LBB109_84:
	jmp	.LBB109_85
.LBB109_85:
	cmpq	$0, -24(%rbp)
	jne	.LBB109_87
# %bb.86:
	jmp	.LBB109_88
.LBB109_87:
	movq	-144(%rbp), %rax
	movq	8(%rax), %rdi
	movq	-152(%rbp), %rax
	addq	$631, %rax              # imm = 0x277
	cvtsi2sd	%rax, %xmm0
	cvtsi2sdq	-24(%rbp), %xmm1
	callq	_ZN8MEMORY_T10WRITEUBYTEEdd
	movsd	.LCPI109_0(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-144(%rbp), %rax
	movq	8(%rax), %rdi
	movq	-152(%rbp), %rax
	addq	$1, %rax
	cvtsi2sd	%rax, %xmm1
	callq	_ZN8MEMORY_T10WRITEUBYTEEdd
.LBB109_88:
	jmp	.LBB109_89
.LBB109_89:
	jmp	.LBB109_90
.LBB109_90:
	jmp	.LBB109_91
.LBB109_91:
	leaq	-56(%rbp), %rdi
	callq	fb_StrDelete@PLT
.LBB109_92:
	jmp	.LBB109_93
.LBB109_93:
	movq	-144(%rbp), %rax
	movzbl	5(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	movq	%rax, %rdi
	callq	_ZN7CPU65104PUSHEd
	movq	-144(%rbp), %rax
	movzbl	4(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	movq	%rax, %rdi
	callq	_ZN7CPU65104PUSHEd
	movq	-144(%rbp), %rax
	movzbl	(%rax), %ecx
	cvtsi2sd	%ecx, %xmm0
	movq	%rax, %rdi
	callq	_ZN7CPU65104PUSHEd
	movsd	.LCPI109_5(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-144(%rbp), %rax
	movq	8(%rax), %rdi
	callq	_ZN8MEMORY_T9READUBYTEEd
	movsd	.LCPI109_4(%rip), %xmm0 # xmm0 = mem[0],zero
	movb	%al, -361(%rbp)
	movb	-361(%rbp), %al
	movq	-144(%rbp), %rdx
	movb	%al, 5(%rdx)
	movq	-144(%rbp), %rdx
	movq	8(%rdx), %rdi
	callq	_ZN8MEMORY_T9READUBYTEEd
	movb	%al, -362(%rbp)
	movb	-362(%rbp), %al
	movq	-144(%rbp), %rdx
	movb	%al, 4(%rdx)
	movq	-144(%rbp), %rdx
	movzbl	(%rdx), %ecx
	movl	%ecx, %edx
	andq	$-17, %rdx
                                        # kill: def $dl killed $dl killed $rdx
	movq	-144(%rbp), %rsi
	movb	%dl, (%rsi)
	movq	-144(%rbp), %rsi
	movzbl	(%rsi), %ecx
	movl	%ecx, %esi
	andq	$-5, %rsi
	orq	$4, %rsi
                                        # kill: def $sil killed $sil killed $rsi
	movq	-144(%rbp), %rdi
	movb	%sil, (%rdi)
.LBB109_94:                             # =>This Inner Loop Header: Depth=1
	movq	-144(%rbp), %rax
	cmpq	$64, 16(%rax)
	jne	.LBB109_96
# %bb.95:
	jmp	.LBB109_97
.LBB109_96:                             #   in Loop: Header=BB109_94 Depth=1
	movsd	.LCPI109_6(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-144(%rbp), %rdi
	callq	_ZN7CPU65104TICKEd
	movq	-32(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -32(%rbp)
	jmp	.LBB109_94
.LBB109_97:
	movq	-144(%rbp), %rdi
	callq	_ZN7CPU65104PULLEv
	movsd	%xmm0, -376(%rbp)
	movsd	-376(%rbp), %xmm0       # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %eax
                                        # kill: def $al killed $al killed $eax
	movq	-144(%rbp), %rcx
	movb	%al, (%rcx)
	movq	-144(%rbp), %rdi
	callq	_ZN7CPU65104PULLEv
	movsd	%xmm0, -384(%rbp)
	movsd	-384(%rbp), %xmm0       # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %edx
                                        # kill: def $dl killed $dl killed $edx
	movq	-144(%rbp), %rcx
	movb	%dl, 4(%rcx)
	movq	-144(%rbp), %rdi
	callq	_ZN7CPU65104PULLEv
	movsd	%xmm0, -392(%rbp)
	movsd	-392(%rbp), %xmm0       # xmm0 = mem[0],zero
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %esi
                                        # kill: def $sil killed $sil killed $esi
	movq	-144(%rbp), %rcx
	movb	%sil, 5(%rcx)
	cmpq	$13, -24(%rbp)
	je	.LBB109_99
# %bb.98:
	jmp	.LBB109_100
.LBB109_99:
	movq	$1, FLAG$(%rip)
	jmp	.LBB109_101
.LBB109_100:
	movq	$0, FLAG$(%rip)
.LBB109_101:
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
.LBB109_102:
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -608(%rbp)        # 8-byte Spill
	jne	.LBB109_104
# %bb.103:                              # %SP_return
	movq	-608(%rbp), %rax        # 8-byte Reload
	addq	$608, %rsp              # imm = 0x260
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB109_104:                            # %CallStackCheckFailBlk
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end109:
	.size	INTERRUPTSERVICE, .Lfunc_end109-INTERRUPTSERVICE
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function main
.LCPI110_0:
	.quad	4607182418800017408     # double 1
.LCPI110_1:
	.quad	9218868437227405312     # double +Inf
	.text
	.globl	main
	.p2align	4, 0x90
	.type	main,@function
main:                                   # @main
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$176, %rsp
	xorl	%eax, %eax
	movl	$0, -4(%rbp)
	movl	%edi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	leaq	-20(%rbp), %rcx
	movq	%rcx, %rdi
	movl	%eax, %esi
	movl	$4, %edx
	movl	%eax, -68(%rbp)         # 4-byte Spill
	callq	memset@PLT
	movl	-8(%rbp), %edi
	movq	-16(%rbp), %rsi
	movl	-68(%rbp), %edx         # 4-byte Reload
	callq	fb_Init@PLT
	leaq	label$5073(%rip), %rcx
	movq	%rcx, %rdi
	callq	fb_DataRestore@PLT
# %bb.1:
	leaq	EOL$(%rip), %rax
	xorl	%r8d, %r8d
	movq	%rax, %rdi
	movq	$-1, %rsi
	leaq	.L.str.701(%rip), %rdx
	movl	$3, %ecx
	callq	fb_StrAssign@PLT
# %bb.2:
	jmp	.LBB110_3
.LBB110_3:
	leaq	-40(%rbp), %rdi
	callq	_ZN5C64_TC1Ev
	movq	$0, -48(%rbp)
	movq	$0, -56(%rbp)
.LBB110_4:                              # =>This Inner Loop Header: Depth=1
	movsd	.LCPI110_0(%rip), %xmm0 # xmm0 = mem[0],zero
	cvtsi2sdq	-48(%rbp), %xmm1
	addsd	%xmm0, %xmm1
	movsd	%xmm0, -80(%rbp)        # 8-byte Spill
	movaps	%xmm1, %xmm0
	callq	nearbyint@PLT
	cvttsd2si	%xmm0, %rax
	movq	%rax, -48(%rbp)
	cvtsi2sdq	FLAG$(%rip), %xmm0
	movsd	-80(%rbp), %xmm1        # 8-byte Reload
                                        # xmm1 = mem[0],zero
	ucomisd	%xmm1, %xmm0
	jne	.LBB110_5
	jp	.LBB110_5
	jmp	.LBB110_6
.LBB110_5:                              #   in Loop: Header=BB110_4 Depth=1
	jmp	.LBB110_7
.LBB110_6:                              #   in Loop: Header=BB110_4 Depth=1
	movq	-32(%rbp), %rdi
	cvtsi2sdq	-48(%rbp), %xmm0
	callq	_ZN7CPU65104TICKEd
	jmp	.LBB110_8
.LBB110_7:                              #   in Loop: Header=BB110_4 Depth=1
	movsd	.LCPI110_1(%rip), %xmm0 # xmm0 = mem[0],zero
	movq	-32(%rbp), %rdi
	callq	_ZN7CPU65104TICKEd
.LBB110_8:                              #   in Loop: Header=BB110_4 Depth=1
	movq	-48(%rbp), %rax
	cqto
	movl	$24000, %ecx            # imm = 0x5DC0
	idivq	%rcx
	cvtsi2sd	%rdx, %xmm0
	xorps	%xmm1, %xmm1
	ucomisd	%xmm1, %xmm0
	jne	.LBB110_9
	jp	.LBB110_9
	jmp	.LBB110_10
.LBB110_9:                              #   in Loop: Header=BB110_4 Depth=1
	jmp	.LBB110_11
.LBB110_10:                             #   in Loop: Header=BB110_4 Depth=1
	movq	-32(%rbp), %rdi
	callq	INTERRUPTSERVICE
	movq	%rax, -64(%rbp)
	movq	-48(%rbp), %rax
	addq	-64(%rbp), %rax
	movq	%rax, -48(%rbp)
	callq	fb_GfxLock@PLT
	xorl	%ecx, %ecx
	movl	%ecx, %edi
	xorl	%ecx, %ecx
	movq	fb_hPutPSet@GOTPCREL(%rip), %rax
	movq	BGIMAGE$(%rip), %rsi
	xorps	%xmm0, %xmm0
	movss	%xmm0, -84(%rbp)        # 4-byte Spill
	movss	-84(%rbp), %xmm1        # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movl	$4294901760, %edx       # imm = 0xFFFF0000
	movl	%edx, -88(%rbp)         # 4-byte Spill
	movl	-88(%rbp), %r8d         # 4-byte Reload
	movl	%ecx, -92(%rbp)         # 4-byte Spill
	movl	%r8d, %ecx
	movl	-88(%rbp), %r9d         # 4-byte Reload
	movl	$0, (%rsp)
	movl	$1, 8(%rsp)
	movq	%rax, 16(%rsp)
	movl	$-1, 24(%rsp)
	movq	$0, 32(%rsp)
	movq	$0, 40(%rsp)
	callq	fb_GfxPut@PLT
	xorl	%ecx, %ecx
	movl	%ecx, %edi
	xorl	%ecx, %ecx
	movq	fb_hPutOr@GOTPCREL(%rip), %rsi
	movq	FGIMAGE$(%rip), %r10
	xorps	%xmm0, %xmm0
	movss	%xmm0, -96(%rbp)        # 4-byte Spill
	movss	-96(%rbp), %xmm1        # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movq	%rsi, -104(%rbp)        # 8-byte Spill
	movq	%r10, %rsi
	movl	$4294901760, %edx       # imm = 0xFFFF0000
	movl	%edx, -108(%rbp)        # 4-byte Spill
	movl	-108(%rbp), %r8d        # 4-byte Reload
	movl	%ecx, -112(%rbp)        # 4-byte Spill
	movl	%r8d, %ecx
	movl	-108(%rbp), %r9d        # 4-byte Reload
	movl	$0, (%rsp)
	movl	$4, 8(%rsp)
	movq	-104(%rbp), %r10        # 8-byte Reload
	movq	%r10, 16(%rsp)
	movl	$-1, 24(%rsp)
	movq	$0, 32(%rsp)
	movq	$0, 40(%rsp)
	movl	%eax, -116(%rbp)        # 4-byte Spill
	callq	fb_GfxPut@PLT
	movl	$4294967295, %ecx       # imm = 0xFFFFFFFF
	movl	%ecx, %edi
	movl	%ecx, %esi
	movl	%eax, -120(%rbp)        # 4-byte Spill
	callq	fb_GfxUnlock@PLT
.LBB110_11:                             #   in Loop: Header=BB110_4 Depth=1
	jmp	.LBB110_12
.LBB110_12:                             #   in Loop: Header=BB110_4 Depth=1
	jmp	.LBB110_13
.LBB110_13:                             #   in Loop: Header=BB110_4 Depth=1
	jmp	.LBB110_4
.Lfunc_end110:
	.size	main, .Lfunc_end110-main
	.cfi_endproc
                                        # -- End function
	.type	.L.str,@object          # @.str
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str:
	.asciz	"press any key ..."
	.size	.L.str, 18

	.type	.L.str.1,@object        # @.str.1
.L.str.1:
	.zero	1
	.size	.L.str.1, 1

	.type	.L.str.2,@object        # @.str.2
.L.str.2:
	.asciz	"screenres("
	.size	.L.str.2, 11

	.type	.L.str.3,@object        # @.str.3
.L.str.3:
	.asciz	","
	.size	.L.str.3, 2

	.type	.L.str.4,@object        # @.str.4
.L.str.4:
	.asciz	") failed !"
	.size	.L.str.4, 11

	.type	.L.str.5,@object        # @.str.5
.L.str.5:
	.asciz	"glCreateShader"
	.size	.L.str.5, 15

	.type	GLCREATESHADER$,@object # @"GLCREATESHADER$"
	.local	GLCREATESHADER$
	.comm	GLCREATESHADER$,8,8
	.type	.L.str.6,@object        # @.str.6
.L.str.6:
	.asciz	"glDeleteShader"
	.size	.L.str.6, 15

	.type	GLDELETESHADER$,@object # @"GLDELETESHADER$"
	.local	GLDELETESHADER$
	.comm	GLDELETESHADER$,8,8
	.type	.L.str.7,@object        # @.str.7
.L.str.7:
	.asciz	"glShaderSource"
	.size	.L.str.7, 15

	.type	GLSHADERSOURCE$,@object # @"GLSHADERSOURCE$"
	.local	GLSHADERSOURCE$
	.comm	GLSHADERSOURCE$,8,8
	.type	.L.str.8,@object        # @.str.8
.L.str.8:
	.asciz	"glCompileShader"
	.size	.L.str.8, 16

	.type	GLCOMPILESHADER$,@object # @"GLCOMPILESHADER$"
	.local	GLCOMPILESHADER$
	.comm	GLCOMPILESHADER$,8,8
	.type	.L.str.9,@object        # @.str.9
.L.str.9:
	.asciz	"glGetShaderiv"
	.size	.L.str.9, 14

	.type	GLGETSHADERIV$,@object  # @"GLGETSHADERIV$"
	.local	GLGETSHADERIV$
	.comm	GLGETSHADERIV$,8,8
	.type	.L.str.10,@object       # @.str.10
.L.str.10:
	.asciz	"glGetShaderInfoLog"
	.size	.L.str.10, 19

	.type	GLGETSHADERINFOLOG$,@object # @"GLGETSHADERINFOLOG$"
	.local	GLGETSHADERINFOLOG$
	.comm	GLGETSHADERINFOLOG$,8,8
	.type	.L.str.11,@object       # @.str.11
.L.str.11:
	.asciz	"glCreateProgram"
	.size	.L.str.11, 16

	.type	GLCREATEPROGRAM$,@object # @"GLCREATEPROGRAM$"
	.local	GLCREATEPROGRAM$
	.comm	GLCREATEPROGRAM$,8,8
	.type	.L.str.12,@object       # @.str.12
.L.str.12:
	.asciz	"glDeleteProgram"
	.size	.L.str.12, 16

	.type	GLDELETEPROGRAM$,@object # @"GLDELETEPROGRAM$"
	.local	GLDELETEPROGRAM$
	.comm	GLDELETEPROGRAM$,8,8
	.type	.L.str.13,@object       # @.str.13
.L.str.13:
	.asciz	"glAttachShader"
	.size	.L.str.13, 15

	.type	GLATTACHSHADER$,@object # @"GLATTACHSHADER$"
	.local	GLATTACHSHADER$
	.comm	GLATTACHSHADER$,8,8
	.type	.L.str.14,@object       # @.str.14
.L.str.14:
	.asciz	"glDetachShader"
	.size	.L.str.14, 15

	.type	GLDETACHSHADER$,@object # @"GLDETACHSHADER$"
	.local	GLDETACHSHADER$
	.comm	GLDETACHSHADER$,8,8
	.type	.L.str.15,@object       # @.str.15
.L.str.15:
	.asciz	"glLinkProgram"
	.size	.L.str.15, 14

	.type	GLLINKPROGRAM$,@object  # @"GLLINKPROGRAM$"
	.local	GLLINKPROGRAM$
	.comm	GLLINKPROGRAM$,8,8
	.type	.L.str.16,@object       # @.str.16
.L.str.16:
	.asciz	"glGetProgramiv"
	.size	.L.str.16, 15

	.type	GLGETPROGRAMIV$,@object # @"GLGETPROGRAMIV$"
	.local	GLGETPROGRAMIV$
	.comm	GLGETPROGRAMIV$,8,8
	.type	.L.str.17,@object       # @.str.17
.L.str.17:
	.asciz	"glGetProgramInfoLog"
	.size	.L.str.17, 20

	.type	GLGETPROGRAMINFOLOG$,@object # @"GLGETPROGRAMINFOLOG$"
	.local	GLGETPROGRAMINFOLOG$
	.comm	GLGETPROGRAMINFOLOG$,8,8
	.type	.L.str.18,@object       # @.str.18
.L.str.18:
	.asciz	"glUseProgram"
	.size	.L.str.18, 13

	.type	GLUSEPROGRAM$,@object   # @"GLUSEPROGRAM$"
	.local	GLUSEPROGRAM$
	.comm	GLUSEPROGRAM$,8,8
	.type	.L.str.19,@object       # @.str.19
.L.str.19:
	.asciz	"glGetUniformLocation"
	.size	.L.str.19, 21

	.type	GLGETUNIFORMLOCATION$,@object # @"GLGETUNIFORMLOCATION$"
	.local	GLGETUNIFORMLOCATION$
	.comm	GLGETUNIFORMLOCATION$,8,8
	.type	.L.str.20,@object       # @.str.20
.L.str.20:
	.asciz	"glUniform1i"
	.size	.L.str.20, 12

	.type	GLUNIFORM1I$,@object    # @"GLUNIFORM1I$"
	.local	GLUNIFORM1I$
	.comm	GLUNIFORM1I$,8,8
	.type	.L.str.21,@object       # @.str.21
.L.str.21:
	.asciz	"glUniform1f"
	.size	.L.str.21, 12

	.type	GLUNIFORM1F$,@object    # @"GLUNIFORM1F$"
	.local	GLUNIFORM1F$
	.comm	GLUNIFORM1F$,8,8
	.type	.L.str.22,@object       # @.str.22
.L.str.22:
	.asciz	"glUniform3f"
	.size	.L.str.22, 12

	.type	GLUNIFORM3F$,@object    # @"GLUNIFORM3F$"
	.local	GLUNIFORM3F$
	.comm	GLUNIFORM3F$,8,8
	.type	.L.str.23,@object       # @.str.23
.L.str.23:
	.asciz	"glUniform3fv"
	.size	.L.str.23, 13

	.type	GLUNIFORM3FV$,@object   # @"GLUNIFORM3FV$"
	.local	GLUNIFORM3FV$
	.comm	GLUNIFORM3FV$,8,8
	.type	.L.str.24,@object       # @.str.24
.L.str.24:
	.asciz	"glUniform4f"
	.size	.L.str.24, 12

	.type	GLUNIFORM4F$,@object    # @"GLUNIFORM4F$"
	.local	GLUNIFORM4F$
	.comm	GLUNIFORM4F$,8,8
	.type	.L.str.25,@object       # @.str.25
.L.str.25:
	.asciz	"glUniform4fv"
	.size	.L.str.25, 13

	.type	GLUNIFORM4FV$,@object   # @"GLUNIFORM4FV$"
	.local	GLUNIFORM4FV$
	.comm	GLUNIFORM4FV$,8,8
	.type	.L.str.26,@object       # @.str.26
.L.str.26:
	.asciz	"load and compile shader pese wait ..."
	.size	.L.str.26, 38

	.type	.L.str.27,@object       # @.str.27
.L.str.27:
	.asciz	"can't read shader: \""
	.size	.L.str.27, 21

	.type	.L.str.28,@object       # @.str.28
.L.str.28:
	.asciz	"\""
	.size	.L.str.28, 2

	.type	.L.str.29,@object       # @.str.29
.L.str.29:
	.asciz	" !"
	.size	.L.str.29, 3

	.type	.L.str.30,@object       # @.str.30
.L.str.30:
	.asciz	"\n"
	.size	.L.str.30, 2

	.type	.L.str.31,@object       # @.str.31
.L.str.31:
	.asciz	"#version 460\n"
	.size	.L.str.31, 14

	.type	.L.str.32,@object       # @.str.32
.L.str.32:
	.asciz	"uniform float     iGlobalTime;\n"
	.size	.L.str.32, 32

	.type	.L.str.33,@object       # @.str.33
.L.str.33:
	.asciz	"uniform float     iTime;\n"
	.size	.L.str.33, 26

	.type	.L.str.34,@object       # @.str.34
.L.str.34:
	.asciz	"uniform vec3      iResolution;\n"
	.size	.L.str.34, 32

	.type	.L.str.35,@object       # @.str.35
.L.str.35:
	.asciz	"uniform float     iTimeDelta;\n"
	.size	.L.str.35, 31

	.type	.L.str.36,@object       # @.str.36
.L.str.36:
	.asciz	"uniform float     iFrameRate;\n"
	.size	.L.str.36, 31

	.type	.L.str.37,@object       # @.str.37
.L.str.37:
	.asciz	"uniform int       iFrame;\n"
	.size	.L.str.37, 27

	.type	.L.str.38,@object       # @.str.38
.L.str.38:
	.asciz	"uniform float     iChannelTime[4];\n"
	.size	.L.str.38, 36

	.type	.L.str.39,@object       # @.str.39
.L.str.39:
	.asciz	"uniform vec3      iChannelResolution[4];\n"
	.size	.L.str.39, 42

	.type	.L.str.40,@object       # @.str.40
.L.str.40:
	.asciz	"uniform float     iSampleRate;\n"
	.size	.L.str.40, 32

	.type	.L.str.41,@object       # @.str.41
.L.str.41:
	.asciz	"uniform vec4      iMouse;\n"
	.size	.L.str.41, 27

	.type	.L.str.42,@object       # @.str.42
.L.str.42:
	.asciz	"uniform vec4      iDate;\n"
	.size	.L.str.42, 26

	.type	.L.str.43,@object       # @.str.43
.L.str.43:
	.asciz	"uniform sampler2D iChannel0;\n"
	.size	.L.str.43, 30

	.type	.L.str.44,@object       # @.str.44
.L.str.44:
	.asciz	"uniform sampler2D iChannel1;\n"
	.size	.L.str.44, 30

	.type	.L.str.45,@object       # @.str.45
.L.str.45:
	.asciz	"uniform sampler2D iChannel2;\n"
	.size	.L.str.45, 30

	.type	.L.str.46,@object       # @.str.46
.L.str.46:
	.asciz	"uniform sampler2D iChannel3;\n"
	.size	.L.str.46, 30

	.type	.L.str.47,@object       # @.str.47
.L.str.47:
	.asciz	"uniform samplerCube iCube;\n"
	.size	.L.str.47, 28

	.type	SWCH$,@object           # @"SWCH$"
	.comm	SWCH$,8,8
	.type	.L.str.48,@object       # @.str.48
.L.str.48:
	.asciz	"void main() {\n"
	.size	.L.str.48, 15

	.type	.L.str.49,@object       # @.str.49
.L.str.49:
	.asciz	"  vec4 color;\n"
	.size	.L.str.49, 15

	.type	.L.str.50,@object       # @.str.50
.L.str.50:
	.asciz	"  // call user shader\n"
	.size	.L.str.50, 23

	.type	.L.str.51,@object       # @.str.51
.L.str.51:
	.asciz	"  mainImage(color, gl_FragCoord.xy);\n"
	.size	.L.str.51, 38

	.type	.L.str.52,@object       # @.str.52
.L.str.52:
	.asciz	"  color.w = 1.0;\n"
	.size	.L.str.52, 18

	.type	.L.str.53,@object       # @.str.53
.L.str.53:
	.asciz	"  gl_FragColor = color;\n"
	.size	.L.str.53, 25

	.type	.L.str.54,@object       # @.str.54
.L.str.54:
	.asciz	"}\n"
	.size	.L.str.54, 3

	.type	.L.str.55,@object       # @.str.55
.L.str.55:
	.asciz	"#define main_image mainImage"
	.size	.L.str.55, 29

	.type	.L.str.56,@object       # @.str.56
.L.str.56:
	.asciz	"#define frag_color fragColor"
	.size	.L.str.56, 29

	.type	.L.str.57,@object       # @.str.57
.L.str.57:
	.asciz	"#define frag_coord fragCoord"
	.size	.L.str.57, 29

	.type	.L.str.58,@object       # @.str.58
.L.str.58:
	.asciz	"#define i_resolution iResolution"
	.size	.L.str.58, 33

	.type	.L.str.59,@object       # @.str.59
.L.str.59:
	.asciz	"#define i_time iTime"
	.size	.L.str.59, 21

	.type	.L.str.60,@object       # @.str.60
.L.str.60:
	.asciz	"  main_image(color, gl_FragCoord.xy);\n"
	.size	.L.str.60, 39

	.type	.L.str.61,@object       # @.str.61
.L.str.61:
	.asciz	"glCreateShader(GL_FRAGMENT_SHADER) failed !"
	.size	.L.str.61, 44

	.type	.L.str.62,@object       # @.str.62
.L.str.62:
	.asciz	"glCompileShader(FragmentShader) failed !\n"
	.size	.L.str.62, 42

	.type	.L.str.63,@object       # @.str.63
.L.str.63:
	.asciz	"glCreateProgram() failed !"
	.size	.L.str.63, 27

	.type	.L.str.64,@object       # @.str.64
.L.str.64:
	.asciz	"glLinkProgram() failed !\n"
	.size	.L.str.64, 26

	.type	SCR_W$,@object          # @"SCR_W$"
	.comm	SCR_W$,8,8
	.type	SCR_H$,@object          # @"SCR_H$"
	.comm	SCR_H$,8,8
	.type	BGIMAGE$,@object        # @"BGIMAGE$"
	.comm	BGIMAGE$,8,8
	.type	FGIMAGE$,@object        # @"FGIMAGE$"
	.comm	FGIMAGE$,8,8
	.type	RASTER$,@object         # @"RASTER$"
	.comm	RASTER$,8,8
	.type	RENDER$,@object         # @"RENDER$"
	.comm	RENDER$,8,8
	.type	SYS_OFFSET$,@object     # @"SYS_OFFSET$"
	.comm	SYS_OFFSET$,8,8
	.type	.L.str.65,@object       # @.str.65
.L.str.65:
	.asciz	"64c.251913-01.bin"
	.size	.L.str.65, 18

	.type	.L.str.66,@object       # @.str.66
.L.str.66:
	.asciz	"./chargen/2.c64"
	.size	.L.str.66, 16

	.type	.L.str.67,@object       # @.str.67
.L.str.67:
	.asciz	"BYTES"
	.size	.L.str.67, 6

	.type	.L.str.68,@object       # @.str.68
.L.str.68:
	.asciz	"FREE"
	.size	.L.str.68, 5

	.type	.L.str.69,@object       # @.str.69
.L.str.69:
	.asciz	"MICROSOFT"
	.size	.L.str.69, 10

	.type	.L.str.70,@object       # @.str.70
.L.str.70:
	.asciz	"BASIC"
	.size	.L.str.70, 6

	.type	.L.str.71,@object       # @.str.71
.L.str.71:
	.asciz	" RAM SYSTEM"
	.size	.L.str.71, 12

	.type	.L.str.72,@object       # @.str.72
.L.str.72:
	.asciz	" "
	.size	.L.str.72, 2

	.type	.L.str.73,@object       # @.str.73
.L.str.73:
	.asciz	"!"
	.size	.L.str.73, 2

	.type	.L.str.74,@object       # @.str.74
.L.str.74:
	.asciz	"\026"
	.size	.L.str.74, 2

	.type	.L.str.75,@object       # @.str.75
.L.str.75:
	.asciz	"#"
	.size	.L.str.75, 2

	.type	.L.str.76,@object       # @.str.76
.L.str.76:
	.asciz	"$"
	.size	.L.str.76, 2

	.type	.L.str.77,@object       # @.str.77
.L.str.77:
	.asciz	"%"
	.size	.L.str.77, 2

	.type	.L.str.78,@object       # @.str.78
.L.str.78:
	.asciz	"&"
	.size	.L.str.78, 2

	.type	.L.str.79,@object       # @.str.79
.L.str.79:
	.asciz	"'"
	.size	.L.str.79, 2

	.type	.L.str.80,@object       # @.str.80
.L.str.80:
	.asciz	"("
	.size	.L.str.80, 2

	.type	.L.str.81,@object       # @.str.81
.L.str.81:
	.asciz	")"
	.size	.L.str.81, 2

	.type	.L.str.82,@object       # @.str.82
.L.str.82:
	.asciz	"*"
	.size	.L.str.82, 2

	.type	.L.str.83,@object       # @.str.83
.L.str.83:
	.asciz	"+"
	.size	.L.str.83, 2

	.type	.L.str.84,@object       # @.str.84
.L.str.84:
	.asciz	"-"
	.size	.L.str.84, 2

	.type	.L.str.85,@object       # @.str.85
.L.str.85:
	.asciz	"."
	.size	.L.str.85, 2

	.type	.L.str.86,@object       # @.str.86
.L.str.86:
	.asciz	"/"
	.size	.L.str.86, 2

	.type	.L.str.87,@object       # @.str.87
.L.str.87:
	.asciz	"0"
	.size	.L.str.87, 2

	.type	.L.str.88,@object       # @.str.88
.L.str.88:
	.asciz	"1"
	.size	.L.str.88, 2

	.type	.L.str.89,@object       # @.str.89
.L.str.89:
	.asciz	"2"
	.size	.L.str.89, 2

	.type	.L.str.90,@object       # @.str.90
.L.str.90:
	.asciz	"3"
	.size	.L.str.90, 2

	.type	.L.str.91,@object       # @.str.91
.L.str.91:
	.asciz	"4"
	.size	.L.str.91, 2

	.type	.L.str.92,@object       # @.str.92
.L.str.92:
	.asciz	"5"
	.size	.L.str.92, 2

	.type	.L.str.93,@object       # @.str.93
.L.str.93:
	.asciz	"6"
	.size	.L.str.93, 2

	.type	.L.str.94,@object       # @.str.94
.L.str.94:
	.asciz	"7"
	.size	.L.str.94, 2

	.type	.L.str.95,@object       # @.str.95
.L.str.95:
	.asciz	"8"
	.size	.L.str.95, 2

	.type	.L.str.96,@object       # @.str.96
.L.str.96:
	.asciz	"9"
	.size	.L.str.96, 2

	.type	.L.str.97,@object       # @.str.97
.L.str.97:
	.asciz	":"
	.size	.L.str.97, 2

	.type	.L.str.98,@object       # @.str.98
.L.str.98:
	.asciz	";"
	.size	.L.str.98, 2

	.type	.L.str.99,@object       # @.str.99
.L.str.99:
	.asciz	"<"
	.size	.L.str.99, 2

	.type	.L.str.100,@object      # @.str.100
.L.str.100:
	.asciz	"="
	.size	.L.str.100, 2

	.type	.L.str.101,@object      # @.str.101
.L.str.101:
	.asciz	">"
	.size	.L.str.101, 2

	.type	.L.str.102,@object      # @.str.102
.L.str.102:
	.asciz	"?"
	.size	.L.str.102, 2

	.type	.L.str.103,@object      # @.str.103
.L.str.103:
	.asciz	"@"
	.size	.L.str.103, 2

	.type	.L.str.104,@object      # @.str.104
.L.str.104:
	.asciz	"A"
	.size	.L.str.104, 2

	.type	.L.str.105,@object      # @.str.105
.L.str.105:
	.asciz	"B"
	.size	.L.str.105, 2

	.type	.L.str.106,@object      # @.str.106
.L.str.106:
	.asciz	"C"
	.size	.L.str.106, 2

	.type	.L.str.107,@object      # @.str.107
.L.str.107:
	.asciz	"D"
	.size	.L.str.107, 2

	.type	.L.str.108,@object      # @.str.108
.L.str.108:
	.asciz	"E"
	.size	.L.str.108, 2

	.type	.L.str.109,@object      # @.str.109
.L.str.109:
	.asciz	"F"
	.size	.L.str.109, 2

	.type	.L.str.110,@object      # @.str.110
.L.str.110:
	.asciz	"G"
	.size	.L.str.110, 2

	.type	.L.str.111,@object      # @.str.111
.L.str.111:
	.asciz	"H"
	.size	.L.str.111, 2

	.type	.L.str.112,@object      # @.str.112
.L.str.112:
	.asciz	"I"
	.size	.L.str.112, 2

	.type	.L.str.113,@object      # @.str.113
.L.str.113:
	.asciz	"J"
	.size	.L.str.113, 2

	.type	.L.str.114,@object      # @.str.114
.L.str.114:
	.asciz	"K"
	.size	.L.str.114, 2

	.type	.L.str.115,@object      # @.str.115
.L.str.115:
	.asciz	"L"
	.size	.L.str.115, 2

	.type	.L.str.116,@object      # @.str.116
.L.str.116:
	.asciz	"M"
	.size	.L.str.116, 2

	.type	.L.str.117,@object      # @.str.117
.L.str.117:
	.asciz	"N"
	.size	.L.str.117, 2

	.type	.L.str.118,@object      # @.str.118
.L.str.118:
	.asciz	"O"
	.size	.L.str.118, 2

	.type	.L.str.119,@object      # @.str.119
.L.str.119:
	.asciz	"P"
	.size	.L.str.119, 2

	.type	.L.str.120,@object      # @.str.120
.L.str.120:
	.asciz	"Q"
	.size	.L.str.120, 2

	.type	.L.str.121,@object      # @.str.121
.L.str.121:
	.asciz	"R"
	.size	.L.str.121, 2

	.type	.L.str.122,@object      # @.str.122
.L.str.122:
	.asciz	"S"
	.size	.L.str.122, 2

	.type	.L.str.123,@object      # @.str.123
.L.str.123:
	.asciz	"T"
	.size	.L.str.123, 2

	.type	.L.str.124,@object      # @.str.124
.L.str.124:
	.asciz	"U"
	.size	.L.str.124, 2

	.type	.L.str.125,@object      # @.str.125
.L.str.125:
	.asciz	"V"
	.size	.L.str.125, 2

	.type	.L.str.126,@object      # @.str.126
.L.str.126:
	.asciz	"W"
	.size	.L.str.126, 2

	.type	.L.str.127,@object      # @.str.127
.L.str.127:
	.asciz	"X"
	.size	.L.str.127, 2

	.type	.L.str.128,@object      # @.str.128
.L.str.128:
	.asciz	"Y"
	.size	.L.str.128, 2

	.type	.L.str.129,@object      # @.str.129
.L.str.129:
	.asciz	"Z"
	.size	.L.str.129, 2

	.type	.L.str.130,@object      # @.str.130
.L.str.130:
	.asciz	"["
	.size	.L.str.130, 2

	.type	.L.str.131,@object      # @.str.131
.L.str.131:
	.asciz	"\\"
	.size	.L.str.131, 2

	.type	.L.str.132,@object      # @.str.132
.L.str.132:
	.asciz	"]"
	.size	.L.str.132, 2

	.type	.L.str.133,@object      # @.str.133
.L.str.133:
	.asciz	"^"
	.size	.L.str.133, 2

	.type	.L.str.134,@object      # @.str.134
.L.str.134:
	.asciz	"_"
	.size	.L.str.134, 2

	.type	.L.str.135,@object      # @.str.135
.L.str.135:
	.asciz	"`"
	.size	.L.str.135, 2

	.type	.L.str.136,@object      # @.str.136
.L.str.136:
	.asciz	"a"
	.size	.L.str.136, 2

	.type	.L.str.137,@object      # @.str.137
.L.str.137:
	.asciz	"b"
	.size	.L.str.137, 2

	.type	.L.str.138,@object      # @.str.138
.L.str.138:
	.asciz	"c"
	.size	.L.str.138, 2

	.type	.L.str.139,@object      # @.str.139
.L.str.139:
	.asciz	"d"
	.size	.L.str.139, 2

	.type	.L.str.140,@object      # @.str.140
.L.str.140:
	.asciz	"e"
	.size	.L.str.140, 2

	.type	.L.str.141,@object      # @.str.141
.L.str.141:
	.asciz	"f"
	.size	.L.str.141, 2

	.type	.L.str.142,@object      # @.str.142
.L.str.142:
	.asciz	"g"
	.size	.L.str.142, 2

	.type	.L.str.143,@object      # @.str.143
.L.str.143:
	.asciz	"h"
	.size	.L.str.143, 2

	.type	.L.str.144,@object      # @.str.144
.L.str.144:
	.asciz	"i"
	.size	.L.str.144, 2

	.type	.L.str.145,@object      # @.str.145
.L.str.145:
	.asciz	"j"
	.size	.L.str.145, 2

	.type	.L.str.146,@object      # @.str.146
.L.str.146:
	.asciz	"k"
	.size	.L.str.146, 2

	.type	.L.str.147,@object      # @.str.147
.L.str.147:
	.asciz	"l"
	.size	.L.str.147, 2

	.type	.L.str.148,@object      # @.str.148
.L.str.148:
	.asciz	"m"
	.size	.L.str.148, 2

	.type	.L.str.149,@object      # @.str.149
.L.str.149:
	.asciz	"n"
	.size	.L.str.149, 2

	.type	.L.str.150,@object      # @.str.150
.L.str.150:
	.asciz	"o"
	.size	.L.str.150, 2

	.type	.L.str.151,@object      # @.str.151
.L.str.151:
	.asciz	"p"
	.size	.L.str.151, 2

	.type	.L.str.152,@object      # @.str.152
.L.str.152:
	.asciz	"q"
	.size	.L.str.152, 2

	.type	.L.str.153,@object      # @.str.153
.L.str.153:
	.asciz	"r"
	.size	.L.str.153, 2

	.type	.L.str.154,@object      # @.str.154
.L.str.154:
	.asciz	"s"
	.size	.L.str.154, 2

	.type	.L.str.155,@object      # @.str.155
.L.str.155:
	.asciz	"t"
	.size	.L.str.155, 2

	.type	.L.str.156,@object      # @.str.156
.L.str.156:
	.asciz	"u"
	.size	.L.str.156, 2

	.type	.L.str.157,@object      # @.str.157
.L.str.157:
	.asciz	"v"
	.size	.L.str.157, 2

	.type	.L.str.158,@object      # @.str.158
.L.str.158:
	.asciz	"w"
	.size	.L.str.158, 2

	.type	.L.str.159,@object      # @.str.159
.L.str.159:
	.asciz	"x"
	.size	.L.str.159, 2

	.type	.L.str.160,@object      # @.str.160
.L.str.160:
	.asciz	"y"
	.size	.L.str.160, 2

	.type	.L.str.161,@object      # @.str.161
.L.str.161:
	.asciz	"z"
	.size	.L.str.161, 2

	.type	.L.str.162,@object      # @.str.162
.L.str.162:
	.asciz	"{"
	.size	.L.str.162, 2

	.type	.L.str.163,@object      # @.str.163
.L.str.163:
	.asciz	"|"
	.size	.L.str.163, 2

	.type	.L.str.164,@object      # @.str.164
.L.str.164:
	.asciz	"}"
	.size	.L.str.164, 2

	.type	.L.str.165,@object      # @.str.165
.L.str.165:
	.asciz	"~"
	.size	.L.str.165, 2

	.type	CHAR_H$,@object         # @"CHAR_H$"
	.data
	.p2align	2
CHAR_H$:
	.long	1119092736              # float 90
	.size	CHAR_H$, 4

	.type	CHAR_W$,@object         # @"CHAR_W$"
	.p2align	2
CHAR_W$:
	.long	1119092736              # float 90
	.size	CHAR_W$, 4

	.type	CHAR_PTR$,@object       # @"CHAR_PTR$"
	.local	CHAR_PTR$
	.comm	CHAR_PTR$,4,4
	.type	CHAR_BUFFER$,@object    # @"CHAR_BUFFER$"
	.p2align	2
CHAR_BUFFER$:
	.long	16384                   # 0x4000
	.size	CHAR_BUFFER$, 4

	.type	BITMASK$,@object        # @"BITMASK$"
	.p2align	2
BITMASK$:
	.long	255                     # 0xff
	.size	BITMASK$, 4

	.type	PIXEL_SIZE$,@object     # @"PIXEL_SIZE$"
	.local	PIXEL_SIZE$
	.comm	PIXEL_SIZE$,4,4
	.type	RADIUS$,@object         # @"RADIUS$"
	.local	RADIUS$
	.comm	RADIUS$,8,8
	.type	STRING_ADR$,@object     # @"STRING_ADR$"
	.local	STRING_ADR$
	.comm	STRING_ADR$,4,4
	.type	STRING_LEN$,@object     # @"STRING_LEN$"
	.local	STRING_LEN$
	.comm	STRING_LEN$,4,4
	.type	A1$,@object             # @"A1$"
	.local	A1$
	.comm	A1$,4,4
	.type	A2$,@object             # @"A2$"
	.local	A2$
	.comm	A2$,4,4
	.type	A3$,@object             # @"A3$"
	.local	A3$
	.comm	A3$,4,4
	.type	A4$,@object             # @"A4$"
	.local	A4$
	.comm	A4$,4,4
	.type	A5$,@object             # @"A5$"
	.local	A5$
	.comm	A5$,4,4
	.type	A6$,@object             # @"A6$"
	.local	A6$
	.comm	A6$,4,4
	.type	A7$,@object             # @"A7$"
	.local	A7$
	.comm	A7$,4,4
	.type	A8$,@object             # @"A8$"
	.local	A8$
	.comm	A8$,4,4
	.type	PC$,@object             # @"PC$"
	.local	PC$
	.comm	PC$,8,8
	.type	.L.str.166,@object      # @.str.166
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.166:
	.asciz	"cobc -x -free tmp.cob"
	.size	.L.str.166, 22

	.type	.L.str.167,@object      # @.str.167
.L.str.167:
	.asciz	"./tmp > tmp.txt"
	.size	.L.str.167, 16

	.type	.L.str.168,@object      # @.str.168
.L.str.168:
	.asciz	"tmp.txt"
	.size	.L.str.168, 8

	.type	.L.str.169,@object      # @.str.169
.L.str.169:
	.asciz	"press any key to contiune."
	.size	.L.str.169, 27

	.type	STRING_DATA$,@object    # @"STRING_DATA$"
	.local	STRING_DATA$
	.comm	STRING_DATA$,24,8
	.type	R3$,@object             # @"R3$"
	.local	R3$
	.comm	R3$,4,4
	.type	ADR0$,@object           # @"ADR0$"
	.local	ADR0$
	.comm	ADR0$,8,8
	.type	C$,@object              # @"C$"
	.local	C$
	.comm	C$,8,8
	.type	XS$,@object             # @"XS$"
	.local	XS$
	.comm	XS$,8,8
	.type	YS$,@object             # @"YS$"
	.local	YS$
	.comm	YS$,8,8
	.type	RVS$,@object            # @"RVS$"
	.data
	.p2align	1
RVS$:
	.short	199                     # 0xc7
	.size	RVS$, 2

	.type	Y$,@object              # @"Y$"
	.local	Y$
	.comm	Y$,8,8
	.type	X$,@object              # @"X$"
	.local	X$
	.comm	X$,8,8
	.type	X_AXIS0$,@object        # @"X_AXIS0$"
	.local	X_AXIS0$
	.comm	X_AXIS0$,4,4
	.type	Y_AXIS0$,@object        # @"Y_AXIS0$"
	.local	Y_AXIS0$
	.comm	Y_AXIS0$,4,4
	.type	RED2$,@object           # @"RED2$"
	.p2align	2
RED2$:
	.long	255                     # 0xff
	.size	RED2$, 4

	.type	GREEN2$,@object         # @"GREEN2$"
	.p2align	2
GREEN2$:
	.long	255                     # 0xff
	.size	GREEN2$, 4

	.type	BLUE2$,@object          # @"BLUE2$"
	.p2align	2
BLUE2$:
	.long	255                     # 0xff
	.size	BLUE2$, 4

	.type	XALPHA2$,@object        # @"XALPHA2$"
	.p2align	2
XALPHA2$:
	.long	255                     # 0xff
	.size	XALPHA2$, 4

	.type	X_AXIS1$,@object        # @"X_AXIS1$"
	.local	X_AXIS1$
	.comm	X_AXIS1$,4,4
	.type	Y_AXIS1$,@object        # @"Y_AXIS1$"
	.local	Y_AXIS1$
	.comm	Y_AXIS1$,4,4
	.type	GET_DATA$,@object       # @"GET_DATA$"
	.local	GET_DATA$
	.comm	GET_DATA$,24,8
	.type	FCOLOR$,@object         # @"FCOLOR$"
	.p2align	1
FCOLOR$:
	.short	646                     # 0x286
	.size	FCOLOR$, 2

	.type	VMCSB$,@object          # @"VMCSB$"
	.p2align	1
VMCSB$:
	.short	53272                   # 0xd018
	.size	VMCSB$, 2

	.type	HIBASE$,@object         # @"HIBASE$"
	.p2align	1
HIBASE$:
	.short	648                     # 0x288
	.size	HIBASE$, 2

	.type	_ZN8MEMORY_T6POKE64Edd.tmp$2479,@object # @"_ZN8MEMORY_T6POKE64Edd.tmp$2479"
	.p2align	4
_ZN8MEMORY_T6POKE64Edd.tmp$2479:
	.quad	.Ltmp0
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp1
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp2
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp3
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp4
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp5
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp6
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp7
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp8
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp9
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp10
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp11
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp12
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp13
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp14
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp16
	.quad	.Ltmp15
	.size	_ZN8MEMORY_T6POKE64Edd.tmp$2479, 1928

	.type	SP0X$,@object           # @"SP0X$"
	.p2align	1
SP0X$:
	.short	53248                   # 0xd000
	.size	SP0X$, 2

	.type	SP1X$,@object           # @"SP1X$"
	.p2align	1
SP1X$:
	.short	53250                   # 0xd002
	.size	SP1X$, 2

	.type	SP2X$,@object           # @"SP2X$"
	.p2align	1
SP2X$:
	.short	53252                   # 0xd004
	.size	SP2X$, 2

	.type	SP3X$,@object           # @"SP3X$"
	.p2align	1
SP3X$:
	.short	53254                   # 0xd006
	.size	SP3X$, 2

	.type	SP4X$,@object           # @"SP4X$"
	.p2align	1
SP4X$:
	.short	53256                   # 0xd008
	.size	SP4X$, 2

	.type	SP5X$,@object           # @"SP5X$"
	.p2align	1
SP5X$:
	.short	53258                   # 0xd00a
	.size	SP5X$, 2

	.type	SP6X$,@object           # @"SP6X$"
	.p2align	1
SP6X$:
	.short	53260                   # 0xd00c
	.size	SP6X$, 2

	.type	SP7X$,@object           # @"SP7X$"
	.p2align	1
SP7X$:
	.short	53262                   # 0xd00e
	.size	SP7X$, 2

	.type	SP0Y$,@object           # @"SP0Y$"
	.p2align	1
SP0Y$:
	.short	53249                   # 0xd001
	.size	SP0Y$, 2

	.type	SP1Y$,@object           # @"SP1Y$"
	.p2align	1
SP1Y$:
	.short	53251                   # 0xd003
	.size	SP1Y$, 2

	.type	SP2Y$,@object           # @"SP2Y$"
	.p2align	1
SP2Y$:
	.short	53253                   # 0xd005
	.size	SP2Y$, 2

	.type	SP3Y$,@object           # @"SP3Y$"
	.p2align	1
SP3Y$:
	.short	53255                   # 0xd007
	.size	SP3Y$, 2

	.type	SP4Y$,@object           # @"SP4Y$"
	.p2align	1
SP4Y$:
	.short	53257                   # 0xd009
	.size	SP4Y$, 2

	.type	SP5Y$,@object           # @"SP5Y$"
	.p2align	1
SP5Y$:
	.short	53259                   # 0xd00b
	.size	SP5Y$, 2

	.type	SP6Y$,@object           # @"SP6Y$"
	.p2align	1
SP6Y$:
	.short	53261                   # 0xd00d
	.size	SP6Y$, 2

	.type	SP7Y$,@object           # @"SP7Y$"
	.p2align	1
SP7Y$:
	.short	53263                   # 0xd00f
	.size	SP7Y$, 2

	.type	SP0COL$,@object         # @"SP0COL$"
	.p2align	1
SP0COL$:
	.short	53287                   # 0xd027
	.size	SP0COL$, 2

	.type	SP1COL$,@object         # @"SP1COL$"
	.p2align	1
SP1COL$:
	.short	53288                   # 0xd028
	.size	SP1COL$, 2

	.type	SP2COL$,@object         # @"SP2COL$"
	.p2align	1
SP2COL$:
	.short	53289                   # 0xd029
	.size	SP2COL$, 2

	.type	SP3COL$,@object         # @"SP3COL$"
	.p2align	1
SP3COL$:
	.short	53290                   # 0xd02a
	.size	SP3COL$, 2

	.type	SP4COL$,@object         # @"SP4COL$"
	.p2align	1
SP4COL$:
	.short	53291                   # 0xd02b
	.size	SP4COL$, 2

	.type	SP5COL$,@object         # @"SP5COL$"
	.p2align	1
SP5COL$:
	.short	53309                   # 0xd03d
	.size	SP5COL$, 2

	.type	SP6COL$,@object         # @"SP6COL$"
	.p2align	1
SP6COL$:
	.short	53310                   # 0xd03e
	.size	SP6COL$, 2

	.type	SP7COL$,@object         # @"SP7COL$"
	.p2align	1
SP7COL$:
	.short	53311                   # 0xd03f
	.size	SP7COL$, 2

	.type	SPENA$,@object          # @"SPENA$"
	.p2align	1
SPENA$:
	.short	53269                   # 0xd015
	.size	SPENA$, 2

	.type	RASTR$,@object          # @"RASTR$"
	.p2align	1
RASTR$:
	.short	53266                   # 0xd012
	.size	RASTR$, 2

	.type	EXTCOL$,@object         # @"EXTCOL$"
	.p2align	1
EXTCOL$:
	.short	53280                   # 0xd020
	.size	EXTCOL$, 2

	.type	_ZN8MEMORY_T6POKE64Edd.tmp$2480,@object # @"_ZN8MEMORY_T6POKE64Edd.tmp$2480"
	.p2align	4
_ZN8MEMORY_T6POKE64Edd.tmp$2480:
	.quad	.Ltmp17
	.quad	.Ltmp18
	.quad	.Ltmp19
	.quad	.Ltmp20
	.quad	.Ltmp21
	.quad	.Ltmp22
	.quad	.Ltmp23
	.quad	.Ltmp24
	.quad	.Ltmp25
	.quad	.Ltmp26
	.quad	.Ltmp27
	.quad	.Ltmp28
	.quad	.Ltmp29
	.quad	.Ltmp30
	.quad	.Ltmp31
	.quad	.Ltmp32
	.quad	.Ltmp33
	.quad	.Ltmp34
	.quad	.Ltmp35
	.quad	.Ltmp36
	.quad	.Ltmp37
	.quad	.Ltmp38
	.quad	.Ltmp39
	.quad	.Ltmp40
	.quad	.Ltmp41
	.quad	.Ltmp42
	.quad	.Ltmp43
	.quad	.Ltmp44
	.quad	.Ltmp45
	.quad	.Ltmp46
	.quad	.Ltmp47
	.quad	.Ltmp48
	.quad	.Ltmp49
	.quad	.Ltmp50
	.quad	.Ltmp51
	.quad	.Ltmp52
	.quad	.Ltmp53
	.quad	.Ltmp54
	.quad	.Ltmp55
	.quad	.Ltmp56
	.quad	.Ltmp57
	.quad	.Ltmp58
	.quad	.Ltmp59
	.quad	.Ltmp60
	.quad	.Ltmp61
	.quad	.Ltmp62
	.quad	.Ltmp63
	.quad	.Ltmp64
	.quad	.Ltmp65
	.quad	.Ltmp66
	.quad	.Ltmp67
	.quad	.Ltmp68
	.quad	.Ltmp69
	.quad	.Ltmp70
	.quad	.Ltmp71
	.quad	.Ltmp72
	.quad	.Ltmp73
	.quad	.Ltmp74
	.quad	.Ltmp75
	.quad	.Ltmp76
	.quad	.Ltmp77
	.quad	.Ltmp78
	.quad	.Ltmp79
	.quad	.Ltmp80
	.quad	.Ltmp81
	.quad	.Ltmp82
	.quad	.Ltmp83
	.quad	.Ltmp84
	.quad	.Ltmp85
	.quad	.Ltmp86
	.quad	.Ltmp87
	.quad	.Ltmp88
	.quad	.Ltmp89
	.quad	.Ltmp90
	.quad	.Ltmp91
	.quad	.Ltmp92
	.quad	.Ltmp93
	.quad	.Ltmp94
	.quad	.Ltmp95
	.quad	.Ltmp96
	.quad	.Ltmp97
	.quad	.Ltmp98
	.quad	.Ltmp99
	.quad	.Ltmp100
	.quad	.Ltmp101
	.quad	.Ltmp102
	.quad	.Ltmp103
	.quad	.Ltmp104
	.quad	.Ltmp105
	.quad	.Ltmp106
	.quad	.Ltmp107
	.quad	.Ltmp108
	.quad	.Ltmp109
	.quad	.Ltmp110
	.quad	.Ltmp111
	.quad	.Ltmp112
	.quad	.Ltmp113
	.quad	.Ltmp114
	.quad	.Ltmp115
	.quad	.Ltmp116
	.quad	.Ltmp117
	.quad	.Ltmp118
	.quad	.Ltmp119
	.quad	.Ltmp120
	.quad	.Ltmp121
	.quad	.Ltmp122
	.quad	.Ltmp123
	.quad	.Ltmp124
	.quad	.Ltmp125
	.quad	.Ltmp126
	.quad	.Ltmp127
	.quad	.Ltmp128
	.quad	.Ltmp129
	.quad	.Ltmp130
	.quad	.Ltmp131
	.quad	.Ltmp132
	.quad	.Ltmp133
	.quad	.Ltmp134
	.quad	.Ltmp135
	.quad	.Ltmp136
	.quad	.Ltmp137
	.quad	.Ltmp138
	.quad	.Ltmp139
	.quad	.Ltmp140
	.quad	.Ltmp141
	.quad	.Ltmp142
	.quad	.Ltmp143
	.quad	.Ltmp144
	.quad	.Ltmp145
	.quad	.Ltmp146
	.quad	.Ltmp147
	.quad	.Ltmp148
	.quad	.Ltmp149
	.quad	.Ltmp150
	.quad	.Ltmp151
	.quad	.Ltmp152
	.quad	.Ltmp153
	.quad	.Ltmp154
	.quad	.Ltmp155
	.quad	.Ltmp156
	.quad	.Ltmp157
	.quad	.Ltmp158
	.quad	.Ltmp159
	.quad	.Ltmp160
	.quad	.Ltmp161
	.quad	.Ltmp162
	.quad	.Ltmp163
	.quad	.Ltmp164
	.quad	.Ltmp165
	.quad	.Ltmp166
	.quad	.Ltmp167
	.quad	.Ltmp168
	.quad	.Ltmp169
	.quad	.Ltmp170
	.quad	.Ltmp171
	.quad	.Ltmp172
	.quad	.Ltmp173
	.quad	.Ltmp174
	.quad	.Ltmp175
	.quad	.Ltmp176
	.quad	.Ltmp177
	.quad	.Ltmp178
	.quad	.Ltmp179
	.quad	.Ltmp180
	.quad	.Ltmp181
	.quad	.Ltmp182
	.quad	.Ltmp183
	.quad	.Ltmp184
	.quad	.Ltmp185
	.quad	.Ltmp186
	.quad	.Ltmp187
	.quad	.Ltmp188
	.quad	.Ltmp189
	.quad	.Ltmp190
	.quad	.Ltmp191
	.quad	.Ltmp192
	.quad	.Ltmp193
	.quad	.Ltmp194
	.quad	.Ltmp195
	.quad	.Ltmp196
	.quad	.Ltmp197
	.quad	.Ltmp198
	.quad	.Ltmp199
	.quad	.Ltmp200
	.quad	.Ltmp201
	.quad	.Ltmp202
	.quad	.Ltmp203
	.quad	.Ltmp204
	.quad	.Ltmp205
	.quad	.Ltmp206
	.quad	.Ltmp207
	.quad	.Ltmp208
	.quad	.Ltmp209
	.quad	.Ltmp210
	.quad	.Ltmp211
	.quad	.Ltmp212
	.quad	.Ltmp213
	.quad	.Ltmp214
	.quad	.Ltmp215
	.quad	.Ltmp216
	.quad	.Ltmp217
	.quad	.Ltmp218
	.quad	.Ltmp219
	.quad	.Ltmp220
	.quad	.Ltmp221
	.quad	.Ltmp222
	.quad	.Ltmp223
	.quad	.Ltmp224
	.quad	.Ltmp225
	.quad	.Ltmp226
	.quad	.Ltmp227
	.quad	.Ltmp228
	.quad	.Ltmp229
	.quad	.Ltmp230
	.quad	.Ltmp231
	.quad	.Ltmp232
	.quad	.Ltmp233
	.quad	.Ltmp234
	.quad	.Ltmp235
	.quad	.Ltmp236
	.quad	.Ltmp237
	.quad	.Ltmp238
	.quad	.Ltmp239
	.quad	.Ltmp240
	.quad	.Ltmp241
	.quad	.Ltmp242
	.quad	.Ltmp243
	.quad	.Ltmp244
	.quad	.Ltmp245
	.quad	.Ltmp246
	.quad	.Ltmp247
	.quad	.Ltmp248
	.quad	.Ltmp249
	.quad	.Ltmp250
	.quad	.Ltmp251
	.quad	.Ltmp252
	.quad	.Ltmp253
	.quad	.Ltmp254
	.quad	.Ltmp255
	.quad	.Ltmp256
	.quad	.Ltmp257
	.quad	.Ltmp258
	.quad	.Ltmp259
	.quad	.Ltmp260
	.quad	.Ltmp261
	.quad	.Ltmp262
	.quad	.Ltmp263
	.quad	.Ltmp264
	.quad	.Ltmp265
	.quad	.Ltmp266
	.quad	.Ltmp267
	.quad	.Ltmp268
	.quad	.Ltmp269
	.quad	.Ltmp270
	.quad	.Ltmp271
	.quad	.Ltmp272
	.size	_ZN8MEMORY_T6POKE64Edd.tmp$2480, 2048

	.type	BGCOL0$,@object         # @"BGCOL0$"
	.p2align	1
BGCOL0$:
	.short	53281                   # 0xd021
	.size	BGCOL0$, 2

	.type	BGCOL1$,@object         # @"BGCOL1$"
	.p2align	1
BGCOL1$:
	.short	53282                   # 0xd022
	.size	BGCOL1$, 2

	.type	BGCOL2$,@object         # @"BGCOL2$"
	.p2align	1
BGCOL2$:
	.short	53283                   # 0xd023
	.size	BGCOL2$, 2

	.type	BGCOL3$,@object         # @"BGCOL3$"
	.p2align	1
BGCOL3$:
	.short	53284                   # 0xd024
	.size	BGCOL3$, 2

	.type	.L.str.170,@object      # @.str.170
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.170:
	.asciz	"mplayer -vo xv -fs -alang en dvd://"
	.size	.L.str.170, 36

	.type	.L.str.171,@object      # @.str.171
.L.str.171:
	.asciz	" -dvd-device /dev/sr0"
	.size	.L.str.171, 22

	.type	.L.str.172,@object      # @.str.172
.L.str.172:
	.asciz	"mplayer -vo xv -fs dvdnav:// -mouse-movements -dvd-device /dev/sr0"
	.size	.L.str.172, 67

	.type	FILENAME$,@object       # @"FILENAME$"
	.comm	FILENAME$,24,8
	.type	.L.str.173,@object      # @.str.173
.L.str.173:
	.asciz	"./shaders/pc/demo.glsl"
	.size	.L.str.173, 23

	.type	.L.str.174,@object      # @.str.174
.L.str.174:
	.asciz	"file: "
	.size	.L.str.174, 7

	.type	.L.str.175,@object      # @.str.175
.L.str.175:
	.asciz	"\n\n"
	.size	.L.str.175, 3

	.type	.L.str.176,@object      # @.str.176
.L.str.176:
	.asciz	" ok ..."
	.size	.L.str.176, 8

	.type	.L.str.177,@object      # @.str.177
.L.str.177:
	.asciz	"FreeBASIC"
	.size	.L.str.177, 10

	.type	.L.str.178,@object      # @.str.178
.L.str.178:
	.asciz	"Shadertoy.com"
	.size	.L.str.178, 14

	.type	.L.str.179,@object      # @.str.179
.L.str.179:
	.asciz	"iChannel0"
	.size	.L.str.179, 10

	.type	.L.str.180,@object      # @.str.180
.L.str.180:
	.asciz	"iGlobalTime"
	.size	.L.str.180, 12

	.type	.L.str.181,@object      # @.str.181
.L.str.181:
	.asciz	"iTime"
	.size	.L.str.181, 6

	.type	.L.str.182,@object      # @.str.182
.L.str.182:
	.asciz	"iResolution"
	.size	.L.str.182, 12

	.type	.L.str.183,@object      # @.str.183
.L.str.183:
	.asciz	"iMouse"
	.size	.L.str.183, 7

	.type	.L.str.184,@object      # @.str.184
.L.str.184:
	.asciz	"iFrame"
	.size	.L.str.184, 7

	.type	.L.str.185,@object      # @.str.185
.L.str.185:
	.asciz	" fps: "
	.size	.L.str.185, 7

	.type	STRCODE$,@object        # @"STRCODE$"
	.comm	STRCODE$,24,8
	.type	OFFSET$,@object         # @"OFFSET$"
	.comm	OFFSET$,8,8
	.type	.L.str.186,@object      # @.str.186
.L.str.186:
	.asciz	"tmp.pov"
	.size	.L.str.186, 8

	.type	.L.str.187,@object      # @.str.187
.L.str.187:
	.asciz	"// Start of file"
	.size	.L.str.187, 17

	.type	.L.str.188,@object      # @.str.188
.L.str.188:
	.asciz	"// End of file"
	.size	.L.str.188, 15

	.type	.L.str.189,@object      # @.str.189
.L.str.189:
	.asciz	"povray -d -H600 -W800 tmp.pov"
	.size	.L.str.189, 30

	.type	.L.str.190,@object      # @.str.190
.L.str.190:
	.asciz	"convert tmp.png -w --o tmp.bmp"
	.size	.L.str.190, 31

	.type	.L.str.191,@object      # @.str.191
.L.str.191:
	.asciz	"cp tmp.bmp ./vram/"
	.size	.L.str.191, 19

	.type	.L.str.192,@object      # @.str.192
.L.str.192:
	.asciz	".bmp"
	.size	.L.str.192, 5

	.type	.L.str.193,@object      # @.str.193
.L.str.193:
	.asciz	"rm tmp.pov tmp.png"
	.size	.L.str.193, 19

	.type	.L.str.194,@object      # @.str.194
.L.str.194:
	.asciz	"./vram/"
	.size	.L.str.194, 8

	.type	.L.str.195,@object      # @.str.195
.L.str.195:
	.asciz	".\\vram\\"
	.size	.L.str.195, 8

	.type	.L.str.196,@object      # @.str.196
.L.str.196:
	.asciz	"aa_level"
	.size	.L.str.196, 9

	.type	.L.str.197,@object      # @.str.197
.L.str.197:
	.asciz	"aastep"
	.size	.L.str.197, 7

	.type	.L.str.198,@object      # @.str.198
.L.str.198:
	.asciz	"aa_threshold"
	.size	.L.str.198, 13

	.type	.L.str.199,@object      # @.str.199
.L.str.199:
	.asciz	"abs"
	.size	.L.str.199, 4

	.type	.L.str.200,@object      # @.str.200
.L.str.200:
	.asciz	"absolute"
	.size	.L.str.200, 9

	.type	.L.str.201,@object      # @.str.201
.L.str.201:
	.asciz	"absorption"
	.size	.L.str.201, 11

	.type	.L.str.202,@object      # @.str.202
.L.str.202:
	.asciz	"abstract"
	.size	.L.str.202, 9

	.type	.L.str.203,@object      # @.str.203
.L.str.203:
	.asciz	"accept"
	.size	.L.str.203, 7

	.type	.L.str.204,@object      # @.str.204
.L.str.204:
	.asciz	"access"
	.size	.L.str.204, 7

	.type	.L.str.205,@object      # @.str.205
.L.str.205:
	.asciz	"accuracy"
	.size	.L.str.205, 9

	.type	.L.str.206,@object      # @.str.206
.L.str.206:
	.asciz	"acos"
	.size	.L.str.206, 5

	.type	.L.str.207,@object      # @.str.207
.L.str.207:
	.asciz	"acosh"
	.size	.L.str.207, 6

	.type	.L.str.208,@object      # @.str.208
.L.str.208:
	.asciz	"active"
	.size	.L.str.208, 7

	.type	.L.str.209,@object      # @.str.209
.L.str.209:
	.asciz	"adaptive"
	.size	.L.str.209, 9

	.type	.L.str.210,@object      # @.str.210
.L.str.210:
	.asciz	"adc_bailout"
	.size	.L.str.210, 12

	.type	.L.str.211,@object      # @.str.211
.L.str.211:
	.asciz	"add"
	.size	.L.str.211, 4

	.type	.L.str.212,@object      # @.str.212
.L.str.212:
	.asciz	"address"
	.size	.L.str.212, 8

	.type	.L.str.213,@object      # @.str.213
.L.str.213:
	.asciz	"advancing"
	.size	.L.str.213, 10

	.type	.L.str.214,@object      # @.str.214
.L.str.214:
	.asciz	"after"
	.size	.L.str.214, 6

	.type	.L.str.215,@object      # @.str.215
.L.str.215:
	.asciz	"agate"
	.size	.L.str.215, 6

	.type	.L.str.216,@object      # @.str.216
.L.str.216:
	.asciz	"agate_turb"
	.size	.L.str.216, 11

	.type	.L.str.217,@object      # @.str.217
.L.str.217:
	.asciz	"alias"
	.size	.L.str.217, 6

	.type	.L.str.218,@object      # @.str.218
.L.str.218:
	.asciz	"all"
	.size	.L.str.218, 4

	.type	.L.str.219,@object      # @.str.219
.L.str.219:
	.asciz	"all_intersections"
	.size	.L.str.219, 18

	.type	.L.str.220,@object      # @.str.220
.L.str.220:
	.asciz	"alpha"
	.size	.L.str.220, 6

	.type	.L.str.221,@object      # @.str.221
.L.str.221:
	.asciz	"alphabet"
	.size	.L.str.221, 9

	.type	.L.str.222,@object      # @.str.222
.L.str.222:
	.asciz	"alphabetic"
	.size	.L.str.222, 11

	.type	.L.str.223,@object      # @.str.223
.L.str.223:
	.asciz	"alphabetic-lower"
	.size	.L.str.223, 17

	.type	.L.str.224,@object      # @.str.224
.L.str.224:
	.asciz	"alphabetic-upper"
	.size	.L.str.224, 17

	.type	.L.str.225,@object      # @.str.225
.L.str.225:
	.asciz	"alphanumeric"
	.size	.L.str.225, 13

	.type	.L.str.226,@object      # @.str.226
.L.str.226:
	.asciz	"alphanumeric-edited"
	.size	.L.str.226, 20

	.type	.L.str.227,@object      # @.str.227
.L.str.227:
	.asciz	"also"
	.size	.L.str.227, 5

	.type	.L.str.228,@object      # @.str.228
.L.str.228:
	.asciz	"alter"
	.size	.L.str.228, 6

	.type	.L.str.229,@object      # @.str.229
.L.str.229:
	.asciz	"alternate"
	.size	.L.str.229, 10

	.type	.L.str.230,@object      # @.str.230
.L.str.230:
	.asciz	"altitude"
	.size	.L.str.230, 9

	.type	.L.str.231,@object      # @.str.231
.L.str.231:
	.asciz	"always_sample"
	.size	.L.str.231, 14

	.type	.L.str.232,@object      # @.str.232
.L.str.232:
	.asciz	"ambient"
	.size	.L.str.232, 8

	.type	.L.str.233,@object      # @.str.233
.L.str.233:
	.asciz	"ambient_light"
	.size	.L.str.233, 14

	.type	.L.str.234,@object      # @.str.234
.L.str.234:
	.asciz	"and"
	.size	.L.str.234, 4

	.type	.L.str.235,@object      # @.str.235
.L.str.235:
	.asciz	"and_bits"
	.size	.L.str.235, 9

	.type	.L.str.236,@object      # @.str.236
.L.str.236:
	.asciz	"angle"
	.size	.L.str.236, 6

	.type	.L.str.237,@object      # @.str.237
.L.str.237:
	.asciz	"any"
	.size	.L.str.237, 4

	.type	.L.str.238,@object      # @.str.238
.L.str.238:
	.asciz	"aperture"
	.size	.L.str.238, 9

	.type	.L.str.239,@object      # @.str.239
.L.str.239:
	.asciz	"append"
	.size	.L.str.239, 7

	.type	.L.str.240,@object      # @.str.240
.L.str.240:
	.asciz	"apply"
	.size	.L.str.240, 6

	.type	.L.str.241,@object      # @.str.241
.L.str.241:
	.asciz	"arc_angle"
	.size	.L.str.241, 10

	.type	.L.str.242,@object      # @.str.242
.L.str.242:
	.asciz	"are"
	.size	.L.str.242, 4

	.type	.L.str.243,@object      # @.str.243
.L.str.243:
	.asciz	"area"
	.size	.L.str.243, 5

	.type	.L.str.244,@object      # @.str.244
.L.str.244:
	.asciz	"area_light"
	.size	.L.str.244, 11

	.type	.L.str.245,@object      # @.str.245
.L.str.245:
	.asciz	"areas"
	.size	.L.str.245, 6

	.type	.L.str.246,@object      # @.str.246
.L.str.246:
	.asciz	"array"
	.size	.L.str.246, 6

	.type	.L.str.247,@object      # @.str.247
.L.str.247:
	.asciz	"arraylength"
	.size	.L.str.247, 12

	.type	.L.str.248,@object      # @.str.248
.L.str.248:
	.asciz	"as"
	.size	.L.str.248, 3

	.type	.L.str.249,@object      # @.str.249
.L.str.249:
	.asciz	"asc"
	.size	.L.str.249, 4

	.type	.L.str.250,@object      # @.str.250
.L.str.250:
	.asciz	"ascending"
	.size	.L.str.250, 10

	.type	.L.str.251,@object      # @.str.251
.L.str.251:
	.asciz	"ascii"
	.size	.L.str.251, 6

	.type	.L.str.252,@object      # @.str.252
.L.str.252:
	.asciz	"asin"
	.size	.L.str.252, 5

	.type	.L.str.253,@object      # @.str.253
.L.str.253:
	.asciz	"asinh"
	.size	.L.str.253, 6

	.type	.L.str.254,@object      # @.str.254
.L.str.254:
	.asciz	"asm"
	.size	.L.str.254, 4

	.type	.L.str.255,@object      # @.str.255
.L.str.255:
	.asciz	"assembler"
	.size	.L.str.255, 10

	.type	.L.str.256,@object      # @.str.256
.L.str.256:
	.asciz	"assert"
	.size	.L.str.256, 7

	.type	.L.str.257,@object      # @.str.257
.L.str.257:
	.asciz	"assign"
	.size	.L.str.257, 7

	.type	.L.str.258,@object      # @.str.258
.L.str.258:
	.asciz	"assumed_gamma"
	.size	.L.str.258, 14

	.type	.L.str.259,@object      # @.str.259
.L.str.259:
	.asciz	"async"
	.size	.L.str.259, 6

	.type	.L.str.260,@object      # @.str.260
.L.str.260:
	.asciz	"at"
	.size	.L.str.260, 3

	.type	.L.str.261,@object      # @.str.261
.L.str.261:
	.asciz	"atan"
	.size	.L.str.261, 5

	.type	.L.str.262,@object      # @.str.262
.L.str.262:
	.asciz	"atan2"
	.size	.L.str.262, 6

	.type	.L.str.263,@object      # @.str.263
.L.str.263:
	.asciz	"atanh"
	.size	.L.str.263, 6

	.type	.L.str.264,@object      # @.str.264
.L.str.264:
	.asciz	"atn"
	.size	.L.str.264, 4

	.type	.L.str.265,@object      # @.str.265
.L.str.265:
	.asciz	"attribute"
	.size	.L.str.265, 10

	.type	.L.str.266,@object      # @.str.266
.L.str.266:
	.asciz	"author"
	.size	.L.str.266, 7

	.type	.L.str.267,@object      # @.str.267
.L.str.267:
	.asciz	"auto"
	.size	.L.str.267, 5

	.type	.L.str.268,@object      # @.str.268
.L.str.268:
	.asciz	"automatic"
	.size	.L.str.268, 10

	.type	.L.str.269,@object      # @.str.269
.L.str.269:
	.asciz	"autostop"
	.size	.L.str.269, 9

	.type	.L.str.270,@object      # @.str.270
.L.str.270:
	.asciz	"average"
	.size	.L.str.270, 8

	.type	.L.str.271,@object      # @.str.271
.L.str.271:
	.asciz	"avg"
	.size	.L.str.271, 4

	.type	.L.str.272,@object      # @.str.272
.L.str.272:
	.asciz	"await"
	.size	.L.str.272, 6

	.type	.L.str.273,@object      # @.str.273
.L.str.273:
	.asciz	"backfacing"
	.size	.L.str.273, 11

	.type	.L.str.274,@object      # @.str.274
.L.str.274:
	.asciz	"background"
	.size	.L.str.274, 11

	.type	.L.str.275,@object      # @.str.275
.L.str.275:
	.asciz	"backspace"
	.size	.L.str.275, 10

	.type	.L.str.276,@object      # @.str.276
.L.str.276:
	.asciz	"basis"
	.size	.L.str.276, 6

	.type	.L.str.277,@object      # @.str.277
.L.str.277:
	.asciz	"beep"
	.size	.L.str.277, 5

	.type	.L.str.278,@object      # @.str.278
.L.str.278:
	.asciz	"before"
	.size	.L.str.278, 7

	.type	.L.str.279,@object      # @.str.279
.L.str.279:
	.asciz	"begin"
	.size	.L.str.279, 6

	.type	.L.str.280,@object      # @.str.280
.L.str.280:
	.asciz	"beginning"
	.size	.L.str.280, 10

	.type	.L.str.281,@object      # @.str.281
.L.str.281:
	.asciz	"between"
	.size	.L.str.281, 8

	.type	.L.str.282,@object      # @.str.282
.L.str.282:
	.asciz	"bezier_spline"
	.size	.L.str.282, 14

	.type	.L.str.283,@object      # @.str.283
.L.str.283:
	.asciz	"bicubic_patch"
	.size	.L.str.283, 14

	.type	.L.str.284,@object      # @.str.284
.L.str.284:
	.asciz	"binary"
	.size	.L.str.284, 7

	.type	.L.str.285,@object      # @.str.285
.L.str.285:
	.asciz	"bind"
	.size	.L.str.285, 5

	.type	.L.str.286,@object      # @.str.286
.L.str.286:
	.asciz	"blackbody"
	.size	.L.str.286, 10

	.type	.L.str.287,@object      # @.str.287
.L.str.287:
	.asciz	"black_hole"
	.size	.L.str.287, 11

	.type	.L.str.288,@object      # @.str.288
.L.str.288:
	.asciz	"blank"
	.size	.L.str.288, 6

	.type	.L.str.289,@object      # @.str.289
.L.str.289:
	.asciz	"bload"
	.size	.L.str.289, 6

	.type	.L.str.290,@object      # @.str.290
.L.str.290:
	.asciz	"blob"
	.size	.L.str.290, 5

	.type	.L.str.291,@object      # @.str.291
.L.str.291:
	.asciz	"block"
	.size	.L.str.291, 6

	.type	.L.str.292,@object      # @.str.292
.L.str.292:
	.asciz	"blue"
	.size	.L.str.292, 5

	.type	.L.str.293,@object      # @.str.293
.L.str.293:
	.asciz	"blur_samples"
	.size	.L.str.293, 13

	.type	.L.str.294,@object      # @.str.294
.L.str.294:
	.asciz	"bool"
	.size	.L.str.294, 5

	.type	.L.str.295,@object      # @.str.295
.L.str.295:
	.asciz	"both"
	.size	.L.str.295, 5

	.type	.L.str.296,@object      # @.str.296
.L.str.296:
	.asciz	"bottom"
	.size	.L.str.296, 7

	.type	.L.str.297,@object      # @.str.297
.L.str.297:
	.asciz	"bounded_by"
	.size	.L.str.297, 11

	.type	.L.str.298,@object      # @.str.298
.L.str.298:
	.asciz	"box"
	.size	.L.str.298, 4

	.type	.L.str.299,@object      # @.str.299
.L.str.299:
	.asciz	"boxed"
	.size	.L.str.299, 6

	.type	.L.str.300,@object      # @.str.300
.L.str.300:
	.asciz	"bozo"
	.size	.L.str.300, 5

	.type	.L.str.301,@object      # @.str.301
.L.str.301:
	.asciz	"break"
	.size	.L.str.301, 6

	.type	.L.str.302,@object      # @.str.302
.L.str.302:
	.asciz	"brick"
	.size	.L.str.302, 6

	.type	.L.str.303,@object      # @.str.303
.L.str.303:
	.asciz	"brick_size"
	.size	.L.str.303, 11

	.type	.L.str.304,@object      # @.str.304
.L.str.304:
	.asciz	"brightness"
	.size	.L.str.304, 11

	.type	.L.str.305,@object      # @.str.305
.L.str.305:
	.asciz	"brilliance"
	.size	.L.str.305, 11

	.type	.L.str.306,@object      # @.str.306
.L.str.306:
	.asciz	"bsave"
	.size	.L.str.306, 6

	.type	.L.str.307,@object      # @.str.307
.L.str.307:
	.asciz	"b_spline"
	.size	.L.str.307, 9

	.type	.L.str.308,@object      # @.str.308
.L.str.308:
	.asciz	"bump"
	.size	.L.str.308, 5

	.type	.L.str.309,@object      # @.str.309
.L.str.309:
	.asciz	"bump_map"
	.size	.L.str.309, 9

	.type	.L.str.310,@object      # @.str.310
.L.str.310:
	.asciz	"bumps"
	.size	.L.str.310, 6

	.type	.L.str.311,@object      # @.str.311
.L.str.311:
	.asciz	"bump_size"
	.size	.L.str.311, 10

	.type	.L.str.312,@object      # @.str.312
.L.str.312:
	.asciz	"bvec2"
	.size	.L.str.312, 6

	.type	.L.str.313,@object      # @.str.313
.L.str.313:
	.asciz	"bvec3"
	.size	.L.str.313, 6

	.type	.L.str.314,@object      # @.str.314
.L.str.314:
	.asciz	"bvec4"
	.size	.L.str.314, 6

	.type	.L.str.315,@object      # @.str.315
.L.str.315:
	.asciz	"by"
	.size	.L.str.315, 3

	.type	.L.str.316,@object      # @.str.316
.L.str.316:
	.asciz	"byte"
	.size	.L.str.316, 5

	.type	.L.str.317,@object      # @.str.317
.L.str.317:
	.asciz	"cache"
	.size	.L.str.317, 6

	.type	.L.str.318,@object      # @.str.318
.L.str.318:
	.asciz	"calculatenormal"
	.size	.L.str.318, 16

	.type	.L.str.319,@object      # @.str.319
.L.str.319:
	.asciz	"call"
	.size	.L.str.319, 5

	.type	.L.str.320,@object      # @.str.320
.L.str.320:
	.asciz	"calls"
	.size	.L.str.320, 6

	.type	.L.str.321,@object      # @.str.321
.L.str.321:
	.asciz	"camera"
	.size	.L.str.321, 7

	.type	.L.str.322,@object      # @.str.322
.L.str.322:
	.asciz	"cancel"
	.size	.L.str.322, 7

	.type	.L.str.323,@object      # @.str.323
.L.str.323:
	.asciz	"cardinality"
	.size	.L.str.323, 12

	.type	.L.str.324,@object      # @.str.324
.L.str.324:
	.asciz	"case"
	.size	.L.str.324, 5

	.type	.L.str.325,@object      # @.str.325
.L.str.325:
	.asciz	"cast"
	.size	.L.str.325, 5

	.type	.L.str.326,@object      # @.str.326
.L.str.326:
	.asciz	"castnamespace"
	.size	.L.str.326, 14

	.type	.L.str.327,@object      # @.str.327
.L.str.327:
	.asciz	"caustics"
	.size	.L.str.327, 9

	.type	.L.str.328,@object      # @.str.328
.L.str.328:
	.asciz	"cbl"
	.size	.L.str.328, 4

	.type	.L.str.329,@object      # @.str.329
.L.str.329:
	.asciz	"cbrt"
	.size	.L.str.329, 5

	.type	.L.str.330,@object      # @.str.330
.L.str.330:
	.asciz	"cd"
	.size	.L.str.330, 3

	.type	.L.str.331,@object      # @.str.331
.L.str.331:
	.asciz	"cdbl"
	.size	.L.str.331, 5

	.type	.L.str.332,@object      # @.str.332
.L.str.332:
	.asciz	"cdecl"
	.size	.L.str.332, 6

	.type	.L.str.333,@object      # @.str.333
.L.str.333:
	.asciz	"ceil"
	.size	.L.str.333, 5

	.type	.L.str.334,@object      # @.str.334
.L.str.334:
	.asciz	"cellnoise"
	.size	.L.str.334, 10

	.type	.L.str.335,@object      # @.str.335
.L.str.335:
	.asciz	"cells"
	.size	.L.str.335, 6

	.type	.L.str.336,@object      # @.str.336
.L.str.336:
	.asciz	"centroid"
	.size	.L.str.336, 9

	.type	.L.str.337,@object      # @.str.337
.L.str.337:
	.asciz	"cf"
	.size	.L.str.337, 3

	.type	.L.str.338,@object      # @.str.338
.L.str.338:
	.asciz	"ch"
	.size	.L.str.338, 3

	.type	.L.str.339,@object      # @.str.339
.L.str.339:
	.asciz	"chain"
	.size	.L.str.339, 6

	.type	.L.str.340,@object      # @.str.340
.L.str.340:
	.asciz	"char"
	.size	.L.str.340, 5

	.type	.L.str.341,@object      # @.str.341
.L.str.341:
	.asciz	"character"
	.size	.L.str.341, 10

	.type	.L.str.342,@object      # @.str.342
.L.str.342:
	.asciz	"character_length"
	.size	.L.str.342, 17

	.type	.L.str.343,@object      # @.str.343
.L.str.343:
	.asciz	"character_length_b"
	.size	.L.str.343, 19

	.type	.L.str.344,@object      # @.str.344
.L.str.344:
	.asciz	"character_length_mb"
	.size	.L.str.344, 20

	.type	.L.str.345,@object      # @.str.345
.L.str.345:
	.asciz	"characters"
	.size	.L.str.345, 11

	.type	.L.str.346,@object      # @.str.346
.L.str.346:
	.asciz	"char_length"
	.size	.L.str.346, 12

	.type	.L.str.347,@object      # @.str.347
.L.str.347:
	.asciz	"char_length_b"
	.size	.L.str.347, 14

	.type	.L.str.348,@object      # @.str.348
.L.str.348:
	.asciz	"char_length_mb"
	.size	.L.str.348, 15

	.type	.L.str.349,@object      # @.str.349
.L.str.349:
	.asciz	"charset"
	.size	.L.str.349, 8

	.type	.L.str.350,@object      # @.str.350
.L.str.350:
	.asciz	"chdir"
	.size	.L.str.350, 6

	.type	.L.str.351,@object      # @.str.351
.L.str.351:
	.asciz	"check"
	.size	.L.str.351, 6

	.type	.L.str.352,@object      # @.str.352
.L.str.352:
	.asciz	"checker"
	.size	.L.str.352, 8

	.type	.L.str.353,@object      # @.str.353
.L.str.353:
	.asciz	"chr"
	.size	.L.str.353, 4

	.type	.L.str.354,@object      # @.str.354
.L.str.354:
	.asciz	"cint"
	.size	.L.str.354, 5

	.type	.L.str.355,@object      # @.str.355
.L.str.355:
	.asciz	"circle"
	.size	.L.str.355, 7

	.type	.L.str.356,@object      # @.str.356
.L.str.356:
	.asciz	"circular"
	.size	.L.str.356, 9

	.type	.L.str.357,@object      # @.str.357
.L.str.357:
	.asciz	"clamp"
	.size	.L.str.357, 6

	.type	.L.str.358,@object      # @.str.358
.L.str.358:
	.asciz	"class"
	.size	.L.str.358, 6

	.type	.L.str.359,@object      # @.str.359
.L.str.359:
	.asciz	"class-id"
	.size	.L.str.359, 9

	.type	.L.str.360,@object      # @.str.360
.L.str.360:
	.asciz	"clear"
	.size	.L.str.360, 6

	.type	.L.str.361,@object      # @.str.361
.L.str.361:
	.asciz	"clipped_by"
	.size	.L.str.361, 11

	.type	.L.str.362,@object      # @.str.362
.L.str.362:
	.asciz	"clock"
	.size	.L.str.362, 6

	.type	.L.str.363,@object      # @.str.363
.L.str.363:
	.asciz	"clock_delta"
	.size	.L.str.363, 12

	.type	.L.str.364,@object      # @.str.364
.L.str.364:
	.asciz	"clock_on"
	.size	.L.str.364, 9

	.type	.L.str.365,@object      # @.str.365
.L.str.365:
	.asciz	"clock-units"
	.size	.L.str.365, 12

	.type	.L.str.366,@object      # @.str.366
.L.str.366:
	.asciz	"close"
	.size	.L.str.366, 6

	.type	.L.str.367,@object      # @.str.367
.L.str.367:
	.asciz	"closure"
	.size	.L.str.367, 8

	.type	.L.str.368,@object      # @.str.368
.L.str.368:
	.asciz	"cls"
	.size	.L.str.368, 4

	.type	.L.str.369,@object      # @.str.369
.L.str.369:
	.asciz	"cobol"
	.size	.L.str.369, 6

	.type	.L.str.370,@object      # @.str.370
.L.str.370:
	.asciz	"code"
	.size	.L.str.370, 5

	.type	.L.str.371,@object      # @.str.371
.L.str.371:
	.asciz	"code-set"
	.size	.L.str.371, 9

	.type	.L.str.372,@object      # @.str.372
.L.str.372:
	.asciz	"collating"
	.size	.L.str.372, 10

	.type	.L.str.373,@object      # @.str.373
.L.str.373:
	.asciz	"collect"
	.size	.L.str.373, 8

	.type	.L.str.374,@object      # @.str.374
.L.str.374:
	.asciz	"color"
	.size	.L.str.374, 6

	.type	.L.str.375,@object      # @.str.375
.L.str.375:
	.asciz	"color_map"
	.size	.L.str.375, 10

	.type	.L.str.376,@object      # @.str.376
.L.str.376:
	.asciz	"color.w"
	.size	.L.str.376, 8

	.type	.L.str.377,@object      # @.str.377
.L.str.377:
	.asciz	"colour"
	.size	.L.str.377, 7

	.type	.L.str.378,@object      # @.str.378
.L.str.378:
	.asciz	"colour_map"
	.size	.L.str.378, 11

	.type	.L.str.379,@object      # @.str.379
.L.str.379:
	.asciz	"column"
	.size	.L.str.379, 7

	.type	.L.str.380,@object      # @.str.380
.L.str.380:
	.asciz	"com"
	.size	.L.str.380, 4

	.type	.L.str.381,@object      # @.str.381
.L.str.381:
	.asciz	"comma"
	.size	.L.str.381, 6

	.type	.L.str.382,@object      # @.str.382
.L.str.382:
	.asciz	"comment"
	.size	.L.str.382, 8

	.type	.L.str.383,@object      # @.str.383
.L.str.383:
	.asciz	"commit"
	.size	.L.str.383, 7

	.type	.L.str.384,@object      # @.str.384
.L.str.384:
	.asciz	"common"
	.size	.L.str.384, 7

	.type	.L.str.385,@object      # @.str.385
.L.str.385:
	.asciz	"communication"
	.size	.L.str.385, 14

	.type	.L.str.386,@object      # @.str.386
.L.str.386:
	.asciz	"comp"
	.size	.L.str.386, 5

	.type	.L.str.387,@object      # @.str.387
.L.str.387:
	.asciz	"comp-1"
	.size	.L.str.387, 7

	.type	.L.str.388,@object      # @.str.388
.L.str.388:
	.asciz	"comp-2"
	.size	.L.str.388, 7

	.type	.L.str.389,@object      # @.str.389
.L.str.389:
	.asciz	"comp-3"
	.size	.L.str.389, 7

	.type	.L.str.390,@object      # @.str.390
.L.str.390:
	.asciz	"comp-4"
	.size	.L.str.390, 7

	.type	.L.str.391,@object      # @.str.391
.L.str.391:
	.asciz	"comp-5"
	.size	.L.str.391, 7

	.type	.L.str.392,@object      # @.str.392
.L.str.392:
	.asciz	"complex"
	.size	.L.str.392, 8

	.type	.L.str.393,@object      # @.str.393
.L.str.393:
	.asciz	"component"
	.size	.L.str.393, 10

	.type	.L.str.394,@object      # @.str.394
.L.str.394:
	.asciz	"composite"
	.size	.L.str.394, 10

	.type	.L.str.395,@object      # @.str.395
.L.str.395:
	.asciz	"computational"
	.size	.L.str.395, 14

	.type	.L.str.396,@object      # @.str.396
.L.str.396:
	.asciz	"computational-1"
	.size	.L.str.396, 16

	.type	.L.str.397,@object      # @.str.397
.L.str.397:
	.asciz	"computational-2"
	.size	.L.str.397, 16

	.type	.L.str.398,@object      # @.str.398
.L.str.398:
	.asciz	"computational-3"
	.size	.L.str.398, 16

	.type	.L.str.399,@object      # @.str.399
.L.str.399:
	.asciz	"computational-4"
	.size	.L.str.399, 16

	.type	.L.str.400,@object      # @.str.400
.L.str.400:
	.asciz	"computational-5"
	.size	.L.str.400, 16

	.type	.L.str.401,@object      # @.str.401
.L.str.401:
	.asciz	"compute"
	.size	.L.str.401, 8

	.type	.L.str.402,@object      # @.str.402
.L.str.402:
	.asciz	"com-reg"
	.size	.L.str.402, 8

	.type	.L.str.403,@object      # @.str.403
.L.str.403:
	.asciz	"concat"
	.size	.L.str.403, 7

	.type	.L.str.404,@object      # @.str.404
.L.str.404:
	.asciz	"concatenate"
	.size	.L.str.404, 12

	.type	.L.str.405,@object      # @.str.405
.L.str.405:
	.asciz	"cond"
	.size	.L.str.405, 5

	.type	.L.str.406,@object      # @.str.406
.L.str.406:
	.asciz	"cone"
	.size	.L.str.406, 5

	.type	.L.str.407,@object      # @.str.407
.L.str.407:
	.asciz	"confidence"
	.size	.L.str.407, 11

	.type	.L.str.408,@object      # @.str.408
.L.str.408:
	.asciz	"configuration"
	.size	.L.str.408, 14

	.type	.L.str.409,@object      # @.str.409
.L.str.409:
	.asciz	"conic_sweep"
	.size	.L.str.409, 12

	.type	.L.str.410,@object      # @.str.410
.L.str.410:
	.asciz	"conserve_energy"
	.size	.L.str.410, 16

	.type	.L.str.411,@object      # @.str.411
.L.str.411:
	.asciz	"const"
	.size	.L.str.411, 6

	.type	.L.str.412,@object      # @.str.412
.L.str.412:
	.asciz	"constref"
	.size	.L.str.412, 9

	.type	.L.str.413,@object      # @.str.413
.L.str.413:
	.asciz	"constructor"
	.size	.L.str.413, 12

	.type	.L.str.414,@object      # @.str.414
.L.str.414:
	.asciz	"cont"
	.size	.L.str.414, 5

	.type	.L.str.415,@object      # @.str.415
.L.str.415:
	.asciz	"contained_by"
	.size	.L.str.415, 13

	.type	.L.str.416,@object      # @.str.416
.L.str.416:
	.asciz	"contains"
	.size	.L.str.416, 9

	.type	.L.str.417,@object      # @.str.417
.L.str.417:
	.asciz	"content"
	.size	.L.str.417, 8

	.type	.L.str.418,@object      # @.str.418
.L.str.418:
	.asciz	"continue"
	.size	.L.str.418, 9

	.type	.L.str.419,@object      # @.str.419
.L.str.419:
	.asciz	"control"
	.size	.L.str.419, 8

	.type	.L.str.420,@object      # @.str.420
.L.str.420:
	.asciz	"control0"
	.size	.L.str.420, 9

	.type	.L.str.421,@object      # @.str.421
.L.str.421:
	.asciz	"control1"
	.size	.L.str.421, 9

	.type	.L.str.422,@object      # @.str.422
.L.str.422:
	.asciz	"controls"
	.size	.L.str.422, 9

	.type	.L.str.423,@object      # @.str.423
.L.str.423:
	.asciz	"converting"
	.size	.L.str.423, 11

	.type	.L.str.424,@object      # @.str.424
.L.str.424:
	.asciz	"coords"
	.size	.L.str.424, 7

	.type	.L.str.425,@object      # @.str.425
.L.str.425:
	.asciz	"corr"
	.size	.L.str.425, 5

	.type	.L.str.426,@object      # @.str.426
.L.str.426:
	.asciz	"corresponding"
	.size	.L.str.426, 14

	.type	.L.str.427,@object      # @.str.427
.L.str.427:
	.asciz	"cos"
	.size	.L.str.427, 4

	.type	.L.str.428,@object      # @.str.428
.L.str.428:
	.asciz	"cosh"
	.size	.L.str.428, 5

	.type	.L.str.429,@object      # @.str.429
.L.str.429:
	.asciz	"count"
	.size	.L.str.429, 6

	.type	.L.str.430,@object      # @.str.430
.L.str.430:
	.asciz	"cppdecl"
	.size	.L.str.430, 8

	.type	.L.str.431,@object      # @.str.431
.L.str.431:
	.asciz	"crackle"
	.size	.L.str.431, 8

	.type	.L.str.432,@object      # @.str.432
.L.str.432:
	.asciz	"crand"
	.size	.L.str.432, 6

	.type	.L.str.433,@object      # @.str.433
.L.str.433:
	.asciz	"cross"
	.size	.L.str.433, 6

	.type	.L.str.434,@object      # @.str.434
.L.str.434:
	.asciz	"csng"
	.size	.L.str.434, 5

	.type	.L.str.435,@object      # @.str.435
.L.str.435:
	.asciz	"csrlin"
	.size	.L.str.435, 7

	.type	.L.str.436,@object      # @.str.436
.L.str.436:
	.asciz	"cube"
	.size	.L.str.436, 5

	.type	.L.str.437,@object      # @.str.437
.L.str.437:
	.asciz	"cubic"
	.size	.L.str.437, 6

	.type	.L.str.438,@object      # @.str.438
.L.str.438:
	.asciz	"cubic_spline"
	.size	.L.str.438, 13

	.type	.L.str.439,@object      # @.str.439
.L.str.439:
	.asciz	"cubic_wave"
	.size	.L.str.439, 11

	.type	.L.str.440,@object      # @.str.440
.L.str.440:
	.asciz	"currency"
	.size	.L.str.440, 9

	.type	.L.str.441,@object      # @.str.441
.L.str.441:
	.asciz	"current_date"
	.size	.L.str.441, 13

	.type	.L.str.442,@object      # @.str.442
.L.str.442:
	.asciz	"current_time"
	.size	.L.str.442, 13

	.type	.L.str.443,@object      # @.str.443
.L.str.443:
	.asciz	"current_timestamp"
	.size	.L.str.443, 18

	.type	.L.str.444,@object      # @.str.444
.L.str.444:
	.asciz	"cursor"
	.size	.L.str.444, 7

	.type	.L.str.445,@object      # @.str.445
.L.str.445:
	.asciz	"cutaway_textures"
	.size	.L.str.445, 17

	.type	.L.str.446,@object      # @.str.446
.L.str.446:
	.asciz	"cvd"
	.size	.L.str.446, 4

	.type	.L.str.447,@object      # @.str.447
.L.str.447:
	.asciz	"cvi"
	.size	.L.str.447, 4

	.type	.L.str.448,@object      # @.str.448
.L.str.448:
	.asciz	"cvs"
	.size	.L.str.448, 4

	.type	_ZN8MEMORY_T6POKE64Edd.tmp$2481,@object # @"_ZN8MEMORY_T6POKE64Edd.tmp$2481"
	.data
	.p2align	4
_ZN8MEMORY_T6POKE64Edd.tmp$2481:
	.quad	.Ltmp280
	.quad	.Ltmp281
	.quad	.Ltmp282
	.quad	.Ltmp283
	.quad	.Ltmp284
	.quad	.Ltmp285
	.quad	.Ltmp286
	.quad	.Ltmp287
	.quad	.Ltmp288
	.quad	.Ltmp289
	.quad	.Ltmp290
	.quad	.Ltmp291
	.quad	.Ltmp292
	.quad	.Ltmp293
	.quad	.Ltmp294
	.quad	.Ltmp295
	.quad	.Ltmp296
	.quad	.Ltmp297
	.quad	.Ltmp298
	.quad	.Ltmp299
	.quad	.Ltmp300
	.quad	.Ltmp301
	.quad	.Ltmp302
	.quad	.Ltmp303
	.quad	.Ltmp304
	.quad	.Ltmp305
	.quad	.Ltmp306
	.quad	.Ltmp307
	.quad	.Ltmp308
	.quad	.Ltmp309
	.quad	.Ltmp310
	.quad	.Ltmp311
	.quad	.Ltmp312
	.quad	.Ltmp313
	.quad	.Ltmp314
	.quad	.Ltmp315
	.quad	.Ltmp316
	.quad	.Ltmp317
	.quad	.Ltmp318
	.quad	.Ltmp319
	.quad	.Ltmp320
	.quad	.Ltmp321
	.quad	.Ltmp322
	.quad	.Ltmp323
	.quad	.Ltmp324
	.quad	.Ltmp325
	.quad	.Ltmp326
	.quad	.Ltmp327
	.quad	.Ltmp328
	.quad	.Ltmp329
	.quad	.Ltmp330
	.quad	.Ltmp331
	.quad	.Ltmp332
	.quad	.Ltmp333
	.quad	.Ltmp334
	.quad	.Ltmp335
	.quad	.Ltmp336
	.quad	.Ltmp337
	.quad	.Ltmp338
	.quad	.Ltmp339
	.quad	.Ltmp340
	.quad	.Ltmp341
	.quad	.Ltmp342
	.quad	.Ltmp343
	.quad	.Ltmp344
	.quad	.Ltmp345
	.quad	.Ltmp346
	.quad	.Ltmp347
	.quad	.Ltmp348
	.quad	.Ltmp349
	.quad	.Ltmp350
	.quad	.Ltmp351
	.quad	.Ltmp352
	.quad	.Ltmp353
	.quad	.Ltmp354
	.quad	.Ltmp355
	.quad	.Ltmp356
	.quad	.Ltmp357
	.quad	.Ltmp358
	.quad	.Ltmp359
	.quad	.Ltmp360
	.quad	.Ltmp361
	.quad	.Ltmp362
	.quad	.Ltmp363
	.quad	.Ltmp364
	.quad	.Ltmp365
	.quad	.Ltmp366
	.quad	.Ltmp367
	.quad	.Ltmp368
	.quad	.Ltmp369
	.quad	.Ltmp370
	.quad	.Ltmp371
	.quad	.Ltmp372
	.quad	.Ltmp373
	.quad	.Ltmp374
	.quad	.Ltmp375
	.quad	.Ltmp376
	.quad	.Ltmp377
	.quad	.Ltmp378
	.quad	.Ltmp379
	.quad	.Ltmp380
	.quad	.Ltmp381
	.quad	.Ltmp382
	.quad	.Ltmp383
	.quad	.Ltmp384
	.quad	.Ltmp385
	.quad	.Ltmp386
	.quad	.Ltmp387
	.quad	.Ltmp388
	.quad	.Ltmp389
	.quad	.Ltmp390
	.quad	.Ltmp391
	.quad	.Ltmp392
	.quad	.Ltmp393
	.quad	.Ltmp394
	.quad	.Ltmp395
	.quad	.Ltmp396
	.quad	.Ltmp397
	.quad	.Ltmp398
	.quad	.Ltmp399
	.quad	.Ltmp400
	.quad	.Ltmp401
	.quad	.Ltmp402
	.quad	.Ltmp403
	.quad	.Ltmp404
	.quad	.Ltmp405
	.quad	.Ltmp406
	.quad	.Ltmp407
	.quad	.Ltmp408
	.quad	.Ltmp409
	.quad	.Ltmp410
	.quad	.Ltmp411
	.quad	.Ltmp412
	.quad	.Ltmp413
	.quad	.Ltmp414
	.quad	.Ltmp415
	.quad	.Ltmp416
	.quad	.Ltmp417
	.quad	.Ltmp418
	.quad	.Ltmp419
	.quad	.Ltmp420
	.quad	.Ltmp421
	.quad	.Ltmp422
	.quad	.Ltmp423
	.quad	.Ltmp424
	.quad	.Ltmp425
	.quad	.Ltmp426
	.quad	.Ltmp427
	.quad	.Ltmp428
	.quad	.Ltmp429
	.quad	.Ltmp430
	.quad	.Ltmp431
	.quad	.Ltmp432
	.quad	.Ltmp433
	.quad	.Ltmp434
	.quad	.Ltmp435
	.quad	.Ltmp436
	.quad	.Ltmp437
	.quad	.Ltmp438
	.quad	.Ltmp439
	.quad	.Ltmp440
	.quad	.Ltmp441
	.quad	.Ltmp442
	.quad	.Ltmp443
	.quad	.Ltmp444
	.quad	.Ltmp445
	.quad	.Ltmp446
	.quad	.Ltmp447
	.quad	.Ltmp448
	.quad	.Ltmp449
	.quad	.Ltmp450
	.quad	.Ltmp451
	.quad	.Ltmp452
	.quad	.Ltmp453
	.quad	.Ltmp454
	.quad	.Ltmp455
	.quad	.Ltmp456
	.quad	.Ltmp457
	.quad	.Ltmp458
	.quad	.Ltmp459
	.quad	.Ltmp460
	.quad	.Ltmp461
	.quad	.Ltmp462
	.quad	.Ltmp463
	.quad	.Ltmp464
	.quad	.Ltmp465
	.quad	.Ltmp466
	.quad	.Ltmp467
	.quad	.Ltmp468
	.quad	.Ltmp469
	.quad	.Ltmp470
	.quad	.Ltmp471
	.quad	.Ltmp472
	.quad	.Ltmp473
	.quad	.Ltmp474
	.quad	.Ltmp475
	.quad	.Ltmp476
	.quad	.Ltmp477
	.quad	.Ltmp478
	.quad	.Ltmp479
	.quad	.Ltmp480
	.quad	.Ltmp481
	.quad	.Ltmp482
	.quad	.Ltmp483
	.quad	.Ltmp484
	.quad	.Ltmp485
	.quad	.Ltmp486
	.quad	.Ltmp487
	.quad	.Ltmp488
	.quad	.Ltmp489
	.quad	.Ltmp490
	.quad	.Ltmp491
	.quad	.Ltmp492
	.quad	.Ltmp493
	.quad	.Ltmp494
	.quad	.Ltmp495
	.quad	.Ltmp496
	.quad	.Ltmp497
	.quad	.Ltmp498
	.quad	.Ltmp499
	.quad	.Ltmp500
	.quad	.Ltmp501
	.quad	.Ltmp502
	.quad	.Ltmp503
	.quad	.Ltmp504
	.quad	.Ltmp505
	.quad	.Ltmp506
	.quad	.Ltmp507
	.quad	.Ltmp508
	.quad	.Ltmp509
	.quad	.Ltmp510
	.quad	.Ltmp511
	.quad	.Ltmp512
	.quad	.Ltmp513
	.quad	.Ltmp514
	.quad	.Ltmp515
	.quad	.Ltmp516
	.quad	.Ltmp517
	.quad	.Ltmp518
	.quad	.Ltmp519
	.quad	.Ltmp520
	.quad	.Ltmp521
	.quad	.Ltmp522
	.quad	.Ltmp523
	.quad	.Ltmp524
	.quad	.Ltmp525
	.quad	.Ltmp526
	.quad	.Ltmp527
	.quad	.Ltmp528
	.quad	.Ltmp529
	.quad	.Ltmp530
	.quad	.Ltmp531
	.quad	.Ltmp532
	.quad	.Ltmp533
	.quad	.Ltmp534
	.quad	.Ltmp535
	.size	_ZN8MEMORY_T6POKE64Edd.tmp$2481, 2048

	.type	.L.str.449,@object      # @.str.449
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.449:
	.asciz	"cylinder"
	.size	.L.str.449, 9

	.type	.L.str.450,@object      # @.str.450
.L.str.450:
	.asciz	"cylindrical"
	.size	.L.str.450, 12

	.type	.L.str.451,@object      # @.str.451
.L.str.451:
	.asciz	"data"
	.size	.L.str.451, 5

	.type	.L.str.452,@object      # @.str.452
.L.str.452:
	.asciz	"dataxel"
	.size	.L.str.452, 8

	.type	.L.str.453,@object      # @.str.453
.L.str.453:
	.asciz	"date"
	.size	.L.str.453, 5

	.type	.L.str.454,@object      # @.str.454
.L.str.454:
	.asciz	"date-compiled"
	.size	.L.str.454, 14

	.type	.L.str.455,@object      # @.str.455
.L.str.455:
	.asciz	"date-written"
	.size	.L.str.455, 13

	.type	.L.str.456,@object      # @.str.456
.L.str.456:
	.asciz	"day"
	.size	.L.str.456, 4

	.type	.L.str.457,@object      # @.str.457
.L.str.457:
	.asciz	"day-of-week"
	.size	.L.str.457, 12

	.type	.L.str.458,@object      # @.str.458
.L.str.458:
	.asciz	"dbcs"
	.size	.L.str.458, 5

	.type	.L.str.459,@object      # @.str.459
.L.str.459:
	.asciz	"dbms_in_memory"
	.size	.L.str.459, 15

	.type	.L.str.460,@object      # @.str.460
.L.str.460:
	.asciz	"de"
	.size	.L.str.460, 3

	.type	.L.str.461,@object      # @.str.461
.L.str.461:
	.asciz	"debug"
	.size	.L.str.461, 6

	.type	.L.str.462,@object      # @.str.462
.L.str.462:
	.asciz	"debug-contents"
	.size	.L.str.462, 15

	.type	.L.str.463,@object      # @.str.463
.L.str.463:
	.asciz	"debugging"
	.size	.L.str.463, 10

	.type	.L.str.464,@object      # @.str.464
.L.str.464:
	.asciz	"debug-item"
	.size	.L.str.464, 11

	.type	.L.str.465,@object      # @.str.465
.L.str.465:
	.asciz	"debug-line"
	.size	.L.str.465, 11

	.type	.L.str.466,@object      # @.str.466
.L.str.466:
	.asciz	"debug-name"
	.size	.L.str.466, 11

	.type	.L.str.467,@object      # @.str.467
.L.str.467:
	.asciz	"debug-sub-1"
	.size	.L.str.467, 12

	.type	.L.str.468,@object      # @.str.468
.L.str.468:
	.asciz	"debug-sub-2"
	.size	.L.str.468, 12

	.type	.L.str.469,@object      # @.str.469
.L.str.469:
	.asciz	"debug-sub-3"
	.size	.L.str.469, 12

	.type	.L.str.470,@object      # @.str.470
.L.str.470:
	.asciz	"dec"
	.size	.L.str.470, 4

	.type	.L.str.471,@object      # @.str.471
.L.str.471:
	.asciz	"decimal"
	.size	.L.str.471, 8

	.type	.L.str.472,@object      # @.str.472
.L.str.472:
	.asciz	"decimal-point"
	.size	.L.str.472, 14

	.type	.L.str.473,@object      # @.str.473
.L.str.473:
	.asciz	"declaratives"
	.size	.L.str.473, 13

	.type	.L.str.474,@object      # @.str.474
.L.str.474:
	.asciz	"declare"
	.size	.L.str.474, 8

	.type	.L.str.475,@object      # @.str.475
.L.str.475:
	.asciz	"decode"
	.size	.L.str.475, 7

	.type	.L.str.476,@object      # @.str.476
.L.str.476:
	.asciz	"def"
	.size	.L.str.476, 4

	.type	.L.str.477,@object      # @.str.477
.L.str.477:
	.asciz	"default"
	.size	.L.str.477, 8

	.type	.L.str.478,@object      # @.str.478
.L.str.478:
	.asciz	"defdbl"
	.size	.L.str.478, 7

	.type	.L.str.479,@object      # @.str.479
.L.str.479:
	.asciz	"define"
	.size	.L.str.479, 7

	.type	.L.str.480,@object      # @.str.480
.L.str.480:
	.asciz	"defined"
	.size	.L.str.480, 8

	.type	.L.str.481,@object      # @.str.481
.L.str.481:
	.asciz	"defint"
	.size	.L.str.481, 7

	.type	.L.str.482,@object      # @.str.482
.L.str.482:
	.asciz	"defsng"
	.size	.L.str.482, 7

	.type	.L.str.483,@object      # @.str.483
.L.str.483:
	.asciz	"defstr"
	.size	.L.str.483, 7

	.type	.L.str.484,@object      # @.str.484
.L.str.484:
	.asciz	"degrees"
	.size	.L.str.484, 8

	.type	.L.str.485,@object      # @.str.485
.L.str.485:
	.asciz	"delete"
	.size	.L.str.485, 7

	.type	.L.str.486,@object      # @.str.486
.L.str.486:
	.asciz	"delimited"
	.size	.L.str.486, 10

	.type	.L.str.487,@object      # @.str.487
.L.str.487:
	.asciz	"delimiter"
	.size	.L.str.487, 10

	.type	.L.str.488,@object      # @.str.488
.L.str.488:
	.asciz	"density"
	.size	.L.str.488, 8

	.type	.L.str.489,@object      # @.str.489
.L.str.489:
	.asciz	"density_file"
	.size	.L.str.489, 13

	.type	.L.str.490,@object      # @.str.490
.L.str.490:
	.asciz	"density_map"
	.size	.L.str.490, 12

	.type	.L.str.491,@object      # @.str.491
.L.str.491:
	.asciz	"dents"
	.size	.L.str.491, 6

	.type	.L.str.492,@object      # @.str.492
.L.str.492:
	.asciz	"depending"
	.size	.L.str.492, 10

	.type	.L.str.493,@object      # @.str.493
.L.str.493:
	.asciz	"desc"
	.size	.L.str.493, 5

	.type	.L.str.494,@object      # @.str.494
.L.str.494:
	.asciz	"descending"
	.size	.L.str.494, 11

	.type	.L.str.495,@object      # @.str.495
.L.str.495:
	.asciz	"destination"
	.size	.L.str.495, 12

	.type	.L.str.496,@object      # @.str.496
.L.str.496:
	.asciz	"destructor"
	.size	.L.str.496, 11

	.type	.L.str.497,@object      # @.str.497
.L.str.497:
	.asciz	"detail"
	.size	.L.str.497, 7

	.type	.L.str.498,@object      # @.str.498
.L.str.498:
	.asciz	"determinant"
	.size	.L.str.498, 12

	.type	.L.str.499,@object      # @.str.499
.L.str.499:
	.asciz	"df3"
	.size	.L.str.499, 4

	.type	.L.str.500,@object      # @.str.500
.L.str.500:
	.asciz	"dict_find"
	.size	.L.str.500, 10

	.type	.L.str.501,@object      # @.str.501
.L.str.501:
	.asciz	"dict_next"
	.size	.L.str.501, 10

	.type	.L.str.502,@object      # @.str.502
.L.str.502:
	.asciz	"dict_value"
	.size	.L.str.502, 11

	.type	.L.str.503,@object      # @.str.503
.L.str.503:
	.asciz	"difference"
	.size	.L.str.503, 11

	.type	.L.str.504,@object      # @.str.504
.L.str.504:
	.asciz	"diffuse"
	.size	.L.str.504, 8

	.type	.L.str.505,@object      # @.str.505
.L.str.505:
	.asciz	"dim"
	.size	.L.str.505, 4

	.type	.L.str.506,@object      # @.str.506
.L.str.506:
	.asciz	"dimension"
	.size	.L.str.506, 10

	.type	.L.str.507,@object      # @.str.507
.L.str.507:
	.asciz	"dimensions"
	.size	.L.str.507, 11

	.type	.L.str.508,@object      # @.str.508
.L.str.508:
	.asciz	"dimension_size"
	.size	.L.str.508, 15

	.type	.L.str.509,@object      # @.str.509
.L.str.509:
	.asciz	"direction"
	.size	.L.str.509, 10

	.type	.L.str.510,@object      # @.str.510
.L.str.510:
	.asciz	"directive_error"
	.size	.L.str.510, 16

	.type	.L.str.511,@object      # @.str.511
.L.str.511:
	.asciz	"disc"
	.size	.L.str.511, 5

	.type	.L.str.512,@object      # @.str.512
.L.str.512:
	.asciz	"discard"
	.size	.L.str.512, 8

	.type	.L.str.513,@object      # @.str.513
.L.str.513:
	.asciz	"dispersion"
	.size	.L.str.513, 11

	.type	.L.str.514,@object      # @.str.514
.L.str.514:
	.asciz	"dispersion_samples"
	.size	.L.str.514, 19

	.type	.L.str.515,@object      # @.str.515
.L.str.515:
	.asciz	"displace"
	.size	.L.str.515, 9

	.type	.L.str.516,@object      # @.str.516
.L.str.516:
	.asciz	"display"
	.size	.L.str.516, 8

	.type	.L.str.517,@object      # @.str.517
.L.str.517:
	.asciz	"display-1"
	.size	.L.str.517, 10

	.type	.L.str.518,@object      # @.str.518
.L.str.518:
	.asciz	"dispose"
	.size	.L.str.518, 8

	.type	.L.str.519,@object      # @.str.519
.L.str.519:
	.asciz	"distance"
	.size	.L.str.519, 9

	.type	.L.str.520,@object      # @.str.520
.L.str.520:
	.asciz	"dist_exp"
	.size	.L.str.520, 9

	.type	.L.str.521,@object      # @.str.521
.L.str.521:
	.asciz	"distinct"
	.size	.L.str.521, 9

	.type	.L.str.522,@object      # @.str.522
.L.str.522:
	.asciz	"div"
	.size	.L.str.522, 4

	.type	.L.str.523,@object      # @.str.523
.L.str.523:
	.asciz	"divide"
	.size	.L.str.523, 7

	.type	.L.str.524,@object      # @.str.524
.L.str.524:
	.asciz	"division"
	.size	.L.str.524, 9

	.type	.L.str.525,@object      # @.str.525
.L.str.525:
	.asciz	"do"
	.size	.L.str.525, 3

	.type	.L.str.526,@object      # @.str.526
.L.str.526:
	.asciz	"dot"
	.size	.L.str.526, 4

	.type	.L.str.527,@object      # @.str.527
.L.str.527:
	.asciz	"double"
	.size	.L.str.527, 7

	.type	.L.str.528,@object      # @.str.528
.L.str.528:
	.asciz	"doublegreatethan"
	.size	.L.str.528, 17

	.type	.L.str.529,@object      # @.str.529
.L.str.529:
	.asciz	"double_illuminate"
	.size	.L.str.529, 18

	.type	.L.str.530,@object      # @.str.530
.L.str.530:
	.asciz	"down"
	.size	.L.str.530, 5

	.type	.L.str.531,@object      # @.str.531
.L.str.531:
	.asciz	"downto"
	.size	.L.str.531, 7

	.type	.L.str.532,@object      # @.str.532
.L.str.532:
	.asciz	"draw"
	.size	.L.str.532, 5

	.type	.L.str.533,@object      # @.str.533
.L.str.533:
	.asciz	"duplicates"
	.size	.L.str.533, 11

	.type	.L.str.534,@object      # @.str.534
.L.str.534:
	.asciz	"dvec2"
	.size	.L.str.534, 6

	.type	.L.str.535,@object      # @.str.535
.L.str.535:
	.asciz	"dvec3"
	.size	.L.str.535, 6

	.type	.L.str.536,@object      # @.str.536
.L.str.536:
	.asciz	"dvec4"
	.size	.L.str.536, 6

	.type	.L.str.537,@object      # @.str.537
.L.str.537:
	.asciz	"dx"
	.size	.L.str.537, 3

	.type	.L.str.538,@object      # @.str.538
.L.str.538:
	.asciz	"dy"
	.size	.L.str.538, 3

	.type	.L.str.539,@object      # @.str.539
.L.str.539:
	.asciz	"dynamic"
	.size	.L.str.539, 8

	.type	.L.str.540,@object      # @.str.540
.L.str.540:
	.asciz	"dz"
	.size	.L.str.540, 3

	.type	.L.str.541,@object      # @.str.541
.L.str.541:
	.asciz	"eccentricity"
	.size	.L.str.541, 13

	.type	.L.str.542,@object      # @.str.542
.L.str.542:
	.asciz	"edit"
	.size	.L.str.542, 5

	.type	.L.str.543,@object      # @.str.543
.L.str.543:
	.asciz	"egcs"
	.size	.L.str.543, 5

	.type	.L.str.544,@object      # @.str.544
.L.str.544:
	.asciz	"egi"
	.size	.L.str.544, 4

	.type	.L.str.545,@object      # @.str.545
.L.str.545:
	.asciz	"eject"
	.size	.L.str.545, 6

	.type	.L.str.546,@object      # @.str.546
.L.str.546:
	.asciz	"elif"
	.size	.L.str.546, 5

	.type	.L.str.547,@object      # @.str.547
.L.str.547:
	.asciz	"else"
	.size	.L.str.547, 5

	.type	.L.str.548,@object      # @.str.548
.L.str.548:
	.asciz	"elseif"
	.size	.L.str.548, 7

	.type	.L.str.549,@object      # @.str.549
.L.str.549:
	.asciz	"emi"
	.size	.L.str.549, 4

	.type	.L.str.550,@object      # @.str.550
.L.str.550:
	.asciz	"emission"
	.size	.L.str.550, 9

	.type	.L.str.551,@object      # @.str.551
.L.str.551:
	.asciz	"enable"
	.size	.L.str.551, 7

	.type	.L.str.552,@object      # @.str.552
.L.str.552:
	.asciz	"encode"
	.size	.L.str.552, 7

	.type	.L.str.553,@object      # @.str.553
.L.str.553:
	.asciz	"end"
	.size	.L.str.553, 4

	.type	.L.str.554,@object      # @.str.554
.L.str.554:
	.asciz	"end-add"
	.size	.L.str.554, 8

	.type	.L.str.555,@object      # @.str.555
.L.str.555:
	.asciz	"end-call"
	.size	.L.str.555, 9

	.type	.L.str.556,@object      # @.str.556
.L.str.556:
	.asciz	"end-compute"
	.size	.L.str.556, 12

	.type	.L.str.557,@object      # @.str.557
.L.str.557:
	.asciz	"end-delete"
	.size	.L.str.557, 11

	.type	.L.str.558,@object      # @.str.558
.L.str.558:
	.asciz	"end-divide"
	.size	.L.str.558, 11

	.type	.L.str.559,@object      # @.str.559
.L.str.559:
	.asciz	"end-evaluate"
	.size	.L.str.559, 13

	.type	.L.str.560,@object      # @.str.560
.L.str.560:
	.asciz	"end-if"
	.size	.L.str.560, 7

	.type	.L.str.561,@object      # @.str.561
.L.str.561:
	.asciz	"ending"
	.size	.L.str.561, 7

	.type	.L.str.562,@object      # @.str.562
.L.str.562:
	.asciz	"end-invoke"
	.size	.L.str.562, 11

	.type	.L.str.563,@object      # @.str.563
.L.str.563:
	.asciz	"end-multiply"
	.size	.L.str.563, 13

	.type	.L.str.564,@object      # @.str.564
.L.str.564:
	.asciz	"endofdata"
	.size	.L.str.564, 10

	.type	.L.str.565,@object      # @.str.565
.L.str.565:
	.asciz	"end-of-page"
	.size	.L.str.565, 12

	.type	.L.str.566,@object      # @.str.566
.L.str.566:
	.asciz	"end-perform"
	.size	.L.str.566, 12

	.type	.L.str.567,@object      # @.str.567
.L.str.567:
	.asciz	"end-read"
	.size	.L.str.567, 9

	.type	.L.str.568,@object      # @.str.568
.L.str.568:
	.asciz	"end-receive"
	.size	.L.str.568, 12

	.type	.L.str.569,@object      # @.str.569
.L.str.569:
	.asciz	"end-return"
	.size	.L.str.569, 11

	.type	.L.str.570,@object      # @.str.570
.L.str.570:
	.asciz	"end-rewrite"
	.size	.L.str.570, 12

	.type	.L.str.571,@object      # @.str.571
.L.str.571:
	.asciz	"end-search"
	.size	.L.str.571, 11

	.type	.L.str.572,@object      # @.str.572
.L.str.572:
	.asciz	"end-start"
	.size	.L.str.572, 10

	.type	.L.str.573,@object      # @.str.573
.L.str.573:
	.asciz	"end-string"
	.size	.L.str.573, 11

	.type	.L.str.574,@object      # @.str.574
.L.str.574:
	.asciz	"end-subtract"
	.size	.L.str.574, 13

	.type	.L.str.575,@object      # @.str.575
.L.str.575:
	.asciz	"endswith"
	.size	.L.str.575, 9

	.type	.L.str.576,@object      # @.str.576
.L.str.576:
	.asciz	"end-unstring"
	.size	.L.str.576, 13

	.type	.L.str.577,@object      # @.str.577
.L.str.577:
	.asciz	"end-write"
	.size	.L.str.577, 10

	.type	.L.str.578,@object      # @.str.578
.L.str.578:
	.asciz	"enter"
	.size	.L.str.578, 6

	.type	.L.str.579,@object      # @.str.579
.L.str.579:
	.asciz	"entry"
	.size	.L.str.579, 6

	.type	.L.str.580,@object      # @.str.580
.L.str.580:
	.asciz	"enum"
	.size	.L.str.580, 5

	.type	.L.str.581,@object      # @.str.581
.L.str.581:
	.asciz	"environ"
	.size	.L.str.581, 8

	.type	.L.str.582,@object      # @.str.582
.L.str.582:
	.asciz	"environment"
	.size	.L.str.582, 12

	.type	.L.str.583,@object      # @.str.583
.L.str.583:
	.asciz	"eof"
	.size	.L.str.583, 4

	.type	.L.str.584,@object      # @.str.584
.L.str.584:
	.asciz	"eop"
	.size	.L.str.584, 4

	.type	.L.str.585,@object      # @.str.585
.L.str.585:
	.asciz	"equal"
	.size	.L.str.585, 6

	.type	.L.str.586,@object      # @.str.586
.L.str.586:
	.asciz	"equivalence"
	.size	.L.str.586, 12

	.type	.L.str.587,@object      # @.str.587
.L.str.587:
	.asciz	"eqv"
	.size	.L.str.587, 4

	.type	.L.str.588,@object      # @.str.588
.L.str.588:
	.asciz	"erase"
	.size	.L.str.588, 6

	.type	.L.str.589,@object      # @.str.589
.L.str.589:
	.asciz	"erdev"
	.size	.L.str.589, 6

	.type	.L.str.590,@object      # @.str.590
.L.str.590:
	.asciz	"erf"
	.size	.L.str.590, 4

	.type	.L.str.591,@object      # @.str.591
.L.str.591:
	.asciz	"erfc"
	.size	.L.str.591, 5

	.type	.L.str.592,@object      # @.str.592
.L.str.592:
	.asciz	"erl"
	.size	.L.str.592, 4

	.type	.L.str.593,@object      # @.str.593
.L.str.593:
	.asciz	"err"
	.size	.L.str.593, 4

	.type	.L.str.594,@object      # @.str.594
.L.str.594:
	.asciz	"error"
	.size	.L.str.594, 6

	.type	.L.str.595,@object      # @.str.595
.L.str.595:
	.asciz	"error_bound"
	.size	.L.str.595, 12

	.type	.L.str.596,@object      # @.str.596
.L.str.596:
	.asciz	"escape"
	.size	.L.str.596, 7

	.type	.L.str.597,@object      # @.str.597
.L.str.597:
	.asciz	"esi"
	.size	.L.str.597, 4

	.type	.L.str.598,@object      # @.str.598
.L.str.598:
	.asciz	"evaluate"
	.size	.L.str.598, 9

	.type	.L.str.599,@object      # @.str.599
.L.str.599:
	.asciz	"every"
	.size	.L.str.599, 6

	.type	.L.str.600,@object      # @.str.600
.L.str.600:
	.asciz	"except"
	.size	.L.str.600, 7

	.type	.L.str.601,@object      # @.str.601
.L.str.601:
	.asciz	"exception"
	.size	.L.str.601, 10

	.type	.L.str.602,@object      # @.str.602
.L.str.602:
	.asciz	"exit"
	.size	.L.str.602, 5

	.type	.L.str.603,@object      # @.str.603
.L.str.603:
	.asciz	"exp"
	.size	.L.str.603, 4

	.type	.L.str.604,@object      # @.str.604
.L.str.604:
	.asciz	"exp2"
	.size	.L.str.604, 5

	.type	.L.str.605,@object      # @.str.605
.L.str.605:
	.asciz	"expand"
	.size	.L.str.605, 7

	.type	.L.str.606,@object      # @.str.606
.L.str.606:
	.asciz	"expand_thresholds"
	.size	.L.str.606, 18

	.type	.L.str.607,@object      # @.str.607
.L.str.607:
	.asciz	"expm1"
	.size	.L.str.607, 6

	.type	.L.str.608,@object      # @.str.608
.L.str.608:
	.asciz	"exponent"
	.size	.L.str.608, 9

	.type	.L.str.609,@object      # @.str.609
.L.str.609:
	.asciz	"export"
	.size	.L.str.609, 7

	.type	.L.str.610,@object      # @.str.610
.L.str.610:
	.asciz	"exports"
	.size	.L.str.610, 8

	.type	.L.str.611,@object      # @.str.611
.L.str.611:
	.asciz	"extend"
	.size	.L.str.611, 7

	.type	.L.str.612,@object      # @.str.612
.L.str.612:
	.asciz	"exterior"
	.size	.L.str.612, 9

	.type	.L.str.613,@object      # @.str.613
.L.str.613:
	.asciz	"extern"
	.size	.L.str.613, 7

	.type	.L.str.614,@object      # @.str.614
.L.str.614:
	.asciz	"external"
	.size	.L.str.614, 9

	.type	.L.str.615,@object      # @.str.615
.L.str.615:
	.asciz	"exterr"
	.size	.L.str.615, 7

	.type	.L.str.616,@object      # @.str.616
.L.str.616:
	.asciz	"extinction"
	.size	.L.str.616, 11

	.type	.L.str.617,@object      # @.str.617
.L.str.617:
	.asciz	"extract"
	.size	.L.str.617, 8

	.type	.L.str.618,@object      # @.str.618
.L.str.618:
	.asciz	"fabs"
	.size	.L.str.618, 5

	.type	.L.str.619,@object      # @.str.619
.L.str.619:
	.asciz	"faceforward"
	.size	.L.str.619, 12

	.type	.L.str.620,@object      # @.str.620
.L.str.620:
	.asciz	"face_indices"
	.size	.L.str.620, 13

	.type	.L.str.621,@object      # @.str.621
.L.str.621:
	.asciz	"facets"
	.size	.L.str.621, 7

	.type	.L.str.622,@object      # @.str.622
.L.str.622:
	.asciz	"fade_color"
	.size	.L.str.622, 11

	.type	.L.str.623,@object      # @.str.623
.L.str.623:
	.asciz	"fade_colour"
	.size	.L.str.623, 12

	.type	.L.str.624,@object      # @.str.624
.L.str.624:
	.asciz	"fade_distance"
	.size	.L.str.624, 14

	.type	.L.str.625,@object      # @.str.625
.L.str.625:
	.asciz	"fade_power"
	.size	.L.str.625, 11

	.type	.L.str.626,@object      # @.str.626
.L.str.626:
	.asciz	"falloff"
	.size	.L.str.626, 8

	.type	.L.str.627,@object      # @.str.627
.L.str.627:
	.asciz	"falloff_angle"
	.size	.L.str.627, 14

	.type	.L.str.628,@object      # @.str.628
.L.str.628:
	.asciz	"false"
	.size	.L.str.628, 6

	.type	.L.str.629,@object      # @.str.629
.L.str.629:
	.asciz	"far"
	.size	.L.str.629, 4

	.type	.L.str.630,@object      # @.str.630
.L.str.630:
	.asciz	"fclose"
	.size	.L.str.630, 7

	.type	.L.str.631,@object      # @.str.631
.L.str.631:
	.asciz	"fd"
	.size	.L.str.631, 3

	.type	.L.str.632,@object      # @.str.632
.L.str.632:
	.asciz	"field"
	.size	.L.str.632, 6

	.type	.L.str.633,@object      # @.str.633
.L.str.633:
	.asciz	"file"
	.size	.L.str.633, 5

	.type	.L.str.634,@object      # @.str.634
.L.str.634:
	.asciz	"file-control"
	.size	.L.str.634, 13

	.type	.L.str.635,@object      # @.str.635
.L.str.635:
	.asciz	"file_exists"
	.size	.L.str.635, 12

	.type	.L.str.636,@object      # @.str.636
.L.str.636:
	.asciz	"files"
	.size	.L.str.636, 6

	.type	.L.str.637,@object      # @.str.637
.L.str.637:
	.asciz	"filler"
	.size	.L.str.637, 7

	.type	.L.str.638,@object      # @.str.638
.L.str.638:
	.asciz	"filter"
	.size	.L.str.638, 7

	.type	.L.str.639,@object      # @.str.639
.L.str.639:
	.asciz	"filterwidth"
	.size	.L.str.639, 12

	.type	.L.str.640,@object      # @.str.640
.L.str.640:
	.asciz	"final"
	.size	.L.str.640, 6

	.type	.L.str.641,@object      # @.str.641
.L.str.641:
	.asciz	"final_clock"
	.size	.L.str.641, 12

	.type	.L.str.642,@object      # @.str.642
.L.str.642:
	.asciz	"final_frame"
	.size	.L.str.642, 12

	.type	.L.str.643,@object      # @.str.643
.L.str.643:
	.asciz	"finalization"
	.size	.L.str.643, 13

	.type	.L.str.644,@object      # @.str.644
.L.str.644:
	.asciz	"finally"
	.size	.L.str.644, 8

	.type	.L.str.645,@object      # @.str.645
.L.str.645:
	.asciz	"finish"
	.size	.L.str.645, 7

	.type	.L.str.646,@object      # @.str.646
.L.str.646:
	.asciz	"first"
	.size	.L.str.646, 6

	.type	.L.str.647,@object      # @.str.647
.L.str.647:
	.asciz	"fisheye"
	.size	.L.str.647, 8

	.type	.L.str.648,@object      # @.str.648
.L.str.648:
	.asciz	"fix"
	.size	.L.str.648, 4

	.type	.L.str.649,@object      # @.str.649
.L.str.649:
	.asciz	"fixed"
	.size	.L.str.649, 6

	.type	.L.str.650,@object      # @.str.650
.L.str.650:
	.asciz	"flat"
	.size	.L.str.650, 5

	.type	.L.str.651,@object      # @.str.651
.L.str.651:
	.asciz	"flatness"
	.size	.L.str.651, 9

	.type	.L.str.652,@object      # @.str.652
.L.str.652:
	.asciz	"flip"
	.size	.L.str.652, 5

	.type	.L.str.653,@object      # @.str.653
.L.str.653:
	.asciz	"float"
	.size	.L.str.653, 6

	.type	.L.str.654,@object      # @.str.654
.L.str.654:
	.asciz	"floor"
	.size	.L.str.654, 6

	.type	.L.str.655,@object      # @.str.655
.L.str.655:
	.asciz	"fmod"
	.size	.L.str.655, 5

	.type	.L.str.656,@object      # @.str.656
.L.str.656:
	.asciz	"fn"
	.size	.L.str.656, 3

	.type	.L.str.657,@object      # @.str.657
.L.str.657:
	.asciz	"focal_point"
	.size	.L.str.657, 12

	.type	.L.str.658,@object      # @.str.658
.L.str.658:
	.asciz	"fog"
	.size	.L.str.658, 4

	.type	.L.str.659,@object      # @.str.659
.L.str.659:
	.asciz	"fog_alt"
	.size	.L.str.659, 8

	.type	.L.str.660,@object      # @.str.660
.L.str.660:
	.asciz	"fog_offset"
	.size	.L.str.660, 11

	.type	.L.str.661,@object      # @.str.661
.L.str.661:
	.asciz	"fog_type"
	.size	.L.str.661, 9

	.type	.L.str.662,@object      # @.str.662
.L.str.662:
	.asciz	"footing"
	.size	.L.str.662, 8

	.type	.L.str.663,@object      # @.str.663
.L.str.663:
	.asciz	"fopen"
	.size	.L.str.663, 6

	.type	.L.str.664,@object      # @.str.664
.L.str.664:
	.asciz	"for"
	.size	.L.str.664, 4

	.type	.L.str.665,@object      # @.str.665
.L.str.665:
	.asciz	"form"
	.size	.L.str.665, 5

	.type	.L.str.666,@object      # @.str.666
.L.str.666:
	.asciz	"format"
	.size	.L.str.666, 7

	.type	.L.str.667,@object      # @.str.667
.L.str.667:
	.asciz	"forward"
	.size	.L.str.667, 8

	.type	.L.str.668,@object      # @.str.668
.L.str.668:
	.asciz	"fprintf"
	.size	.L.str.668, 8

	.type	.L.str.669,@object      # @.str.669
.L.str.669:
	.asciz	"frag_color"
	.size	.L.str.669, 11

	.type	.L.str.670,@object      # @.str.670
.L.str.670:
	.asciz	"fragcolor"
	.size	.L.str.670, 10

	.type	.L.str.671,@object      # @.str.671
.L.str.671:
	.asciz	"frag_coord"
	.size	.L.str.671, 11

	.type	.L.str.672,@object      # @.str.672
.L.str.672:
	.asciz	"fragcoord"
	.size	.L.str.672, 10

	.type	.L.str.673,@object      # @.str.673
.L.str.673:
	.asciz	"frame_number"
	.size	.L.str.673, 13

	.type	.L.str.674,@object      # @.str.674
.L.str.674:
	.asciz	"fre"
	.size	.L.str.674, 4

	.type	.L.str.675,@object      # @.str.675
.L.str.675:
	.asciz	"frequency"
	.size	.L.str.675, 10

	.type	.L.str.676,@object      # @.str.676
.L.str.676:
	.asciz	"fresnel"
	.size	.L.str.676, 8

	.type	.L.str.677,@object      # @.str.677
.L.str.677:
	.asciz	"from"
	.size	.L.str.677, 5

	.type	.L.str.678,@object      # @.str.678
.L.str.678:
	.asciz	"full"
	.size	.L.str.678, 5

	.type	.L.str.679,@object      # @.str.679
.L.str.679:
	.asciz	"function"
	.size	.L.str.679, 9

	.type	.L.str.680,@object      # @.str.680
.L.str.680:
	.asciz	"fvec2"
	.size	.L.str.680, 6

	.type	.L.str.681,@object      # @.str.681
.L.str.681:
	.asciz	"fvec3"
	.size	.L.str.681, 6

	.type	.L.str.682,@object      # @.str.682
.L.str.682:
	.asciz	"fvec4"
	.size	.L.str.682, 6

	.type	.L.str.683,@object      # @.str.683
.L.str.683:
	.asciz	"gather"
	.size	.L.str.683, 7

	.type	.L.str.684,@object      # @.str.684
.L.str.684:
	.asciz	"generate"
	.size	.L.str.684, 9

	.type	.L.str.685,@object      # @.str.685
.L.str.685:
	.asciz	"generic"
	.size	.L.str.685, 8

	.type	.L.str.686,@object      # @.str.686
.L.str.686:
	.asciz	"get"
	.size	.L.str.686, 4

	.type	.L.str.687,@object      # @.str.687
.L.str.687:
	.asciz	"getattribute"
	.size	.L.str.687, 13

	.type	.L.str.688,@object      # @.str.688
.L.str.688:
	.asciz	"getchar"
	.size	.L.str.688, 8

	.type	.L.str.689,@object      # @.str.689
.L.str.689:
	.asciz	"getmatrix"
	.size	.L.str.689, 10

	.type	.L.str.690,@object      # @.str.690
.L.str.690:
	.asciz	"getmessage"
	.size	.L.str.690, 11

	.type	.L.str.691,@object      # @.str.691
.L.str.691:
	.asciz	"gettextureinfo"
	.size	.L.str.691, 15

	.type	.L.str.692,@object      # @.str.692
.L.str.692:
	.asciz	"gif"
	.size	.L.str.692, 4

	.type	.L.str.693,@object      # @.str.693
.L.str.693:
	.asciz	"giving"
	.size	.L.str.693, 7

	.type	.L.str.694,@object      # @.str.694
.L.str.694:
	.asciz	"gl_fragcolor"
	.size	.L.str.694, 13

	.type	.L.str.695,@object      # @.str.695
.L.str.695:
	.asciz	"gl_fragcoord.xy"
	.size	.L.str.695, 16

	.type	.L.str.696,@object      # @.str.696
.L.str.696:
	.asciz	"global"
	.size	.L.str.696, 7

	.type	.L.str.697,@object      # @.str.697
.L.str.697:
	.asciz	"global_lights"
	.size	.L.str.697, 14

	.type	.L.str.698,@object      # @.str.698
.L.str.698:
	.asciz	"global_settings"
	.size	.L.str.698, 16

	.type	.L.str.699,@object      # @.str.699
.L.str.699:
	.asciz	"go"
	.size	.L.str.699, 3

	.type	.L.str.700,@object      # @.str.700
.L.str.700:
	.asciz	"goback"
	.size	.L.str.700, 7

	.type	_ZN8MEMORY_T6POKE64Edd.tmp$2482,@object # @"_ZN8MEMORY_T6POKE64Edd.tmp$2482"
	.data
	.p2align	4
_ZN8MEMORY_T6POKE64Edd.tmp$2482:
	.quad	.Ltmp537
	.quad	.Ltmp538
	.quad	.Ltmp539
	.quad	.Ltmp540
	.quad	.Ltmp541
	.quad	.Ltmp542
	.quad	.Ltmp543
	.quad	.Ltmp544
	.quad	.Ltmp545
	.quad	.Ltmp546
	.quad	.Ltmp547
	.quad	.Ltmp548
	.quad	.Ltmp549
	.quad	.Ltmp550
	.quad	.Ltmp551
	.quad	.Ltmp552
	.quad	.Ltmp553
	.quad	.Ltmp554
	.quad	.Ltmp555
	.quad	.Ltmp556
	.quad	.Ltmp557
	.quad	.Ltmp558
	.quad	.Ltmp559
	.quad	.Ltmp560
	.quad	.Ltmp561
	.quad	.Ltmp562
	.quad	.Ltmp563
	.quad	.Ltmp564
	.quad	.Ltmp565
	.quad	.Ltmp566
	.quad	.Ltmp567
	.quad	.Ltmp568
	.quad	.Ltmp569
	.quad	.Ltmp570
	.quad	.Ltmp571
	.quad	.Ltmp572
	.quad	.Ltmp573
	.quad	.Ltmp574
	.quad	.Ltmp575
	.quad	.Ltmp576
	.quad	.Ltmp577
	.quad	.Ltmp578
	.quad	.Ltmp579
	.quad	.Ltmp580
	.quad	.Ltmp581
	.quad	.Ltmp582
	.quad	.Ltmp583
	.quad	.Ltmp584
	.quad	.Ltmp585
	.quad	.Ltmp586
	.quad	.Ltmp587
	.quad	.Ltmp588
	.quad	.Ltmp589
	.quad	.Ltmp590
	.quad	.Ltmp591
	.quad	.Ltmp592
	.quad	.Ltmp593
	.quad	.Ltmp594
	.quad	.Ltmp595
	.quad	.Ltmp596
	.quad	.Ltmp597
	.quad	.Ltmp598
	.quad	.Ltmp599
	.quad	.Ltmp600
	.quad	.Ltmp601
	.quad	.Ltmp602
	.quad	.Ltmp603
	.quad	.Ltmp604
	.quad	.Ltmp605
	.quad	.Ltmp606
	.quad	.Ltmp607
	.quad	.Ltmp608
	.quad	.Ltmp609
	.quad	.Ltmp610
	.quad	.Ltmp611
	.quad	.Ltmp612
	.quad	.Ltmp613
	.quad	.Ltmp614
	.quad	.Ltmp615
	.quad	.Ltmp616
	.quad	.Ltmp617
	.quad	.Ltmp618
	.quad	.Ltmp619
	.quad	.Ltmp620
	.quad	.Ltmp621
	.quad	.Ltmp622
	.quad	.Ltmp623
	.quad	.Ltmp624
	.quad	.Ltmp625
	.quad	.Ltmp626
	.quad	.Ltmp627
	.quad	.Ltmp628
	.quad	.Ltmp629
	.quad	.Ltmp630
	.quad	.Ltmp631
	.quad	.Ltmp632
	.quad	.Ltmp633
	.quad	.Ltmp634
	.quad	.Ltmp635
	.quad	.Ltmp636
	.quad	.Ltmp637
	.quad	.Ltmp638
	.quad	.Ltmp639
	.quad	.Ltmp640
	.quad	.Ltmp641
	.quad	.Ltmp642
	.quad	.Ltmp643
	.quad	.Ltmp644
	.quad	.Ltmp645
	.quad	.Ltmp646
	.quad	.Ltmp647
	.quad	.Ltmp648
	.quad	.Ltmp649
	.quad	.Ltmp650
	.quad	.Ltmp651
	.quad	.Ltmp652
	.quad	.Ltmp653
	.quad	.Ltmp654
	.quad	.Ltmp655
	.quad	.Ltmp656
	.quad	.Ltmp657
	.quad	.Ltmp658
	.quad	.Ltmp659
	.quad	.Ltmp660
	.quad	.Ltmp661
	.quad	.Ltmp662
	.quad	.Ltmp663
	.quad	.Ltmp664
	.quad	.Ltmp665
	.quad	.Ltmp666
	.quad	.Ltmp667
	.quad	.Ltmp668
	.quad	.Ltmp669
	.quad	.Ltmp670
	.quad	.Ltmp671
	.quad	.Ltmp672
	.quad	.Ltmp673
	.quad	.Ltmp674
	.quad	.Ltmp675
	.quad	.Ltmp676
	.quad	.Ltmp677
	.quad	.Ltmp678
	.quad	.Ltmp679
	.quad	.Ltmp680
	.quad	.Ltmp681
	.quad	.Ltmp682
	.quad	.Ltmp683
	.quad	.Ltmp684
	.quad	.Ltmp685
	.quad	.Ltmp686
	.quad	.Ltmp687
	.quad	.Ltmp688
	.quad	.Ltmp689
	.quad	.Ltmp690
	.quad	.Ltmp691
	.quad	.Ltmp692
	.quad	.Ltmp693
	.quad	.Ltmp694
	.quad	.Ltmp695
	.quad	.Ltmp696
	.quad	.Ltmp697
	.quad	.Ltmp698
	.quad	.Ltmp699
	.quad	.Ltmp700
	.quad	.Ltmp701
	.quad	.Ltmp702
	.quad	.Ltmp703
	.quad	.Ltmp704
	.quad	.Ltmp705
	.quad	.Ltmp706
	.quad	.Ltmp707
	.quad	.Ltmp708
	.quad	.Ltmp709
	.quad	.Ltmp710
	.quad	.Ltmp711
	.quad	.Ltmp712
	.quad	.Ltmp713
	.quad	.Ltmp714
	.quad	.Ltmp715
	.quad	.Ltmp716
	.quad	.Ltmp717
	.quad	.Ltmp718
	.quad	.Ltmp719
	.quad	.Ltmp720
	.quad	.Ltmp721
	.quad	.Ltmp722
	.quad	.Ltmp723
	.quad	.Ltmp724
	.quad	.Ltmp725
	.quad	.Ltmp726
	.quad	.Ltmp727
	.quad	.Ltmp728
	.quad	.Ltmp729
	.quad	.Ltmp730
	.quad	.Ltmp731
	.quad	.Ltmp732
	.quad	.Ltmp733
	.quad	.Ltmp734
	.quad	.Ltmp735
	.quad	.Ltmp736
	.quad	.Ltmp737
	.quad	.Ltmp738
	.quad	.Ltmp739
	.quad	.Ltmp740
	.quad	.Ltmp741
	.quad	.Ltmp742
	.quad	.Ltmp743
	.quad	.Ltmp744
	.quad	.Ltmp745
	.quad	.Ltmp746
	.quad	.Ltmp747
	.quad	.Ltmp748
	.quad	.Ltmp749
	.quad	.Ltmp750
	.quad	.Ltmp751
	.quad	.Ltmp752
	.quad	.Ltmp753
	.quad	.Ltmp754
	.quad	.Ltmp755
	.quad	.Ltmp756
	.quad	.Ltmp757
	.quad	.Ltmp758
	.quad	.Ltmp759
	.quad	.Ltmp760
	.quad	.Ltmp761
	.quad	.Ltmp762
	.quad	.Ltmp763
	.quad	.Ltmp764
	.quad	.Ltmp765
	.quad	.Ltmp766
	.quad	.Ltmp767
	.quad	.Ltmp768
	.quad	.Ltmp769
	.quad	.Ltmp770
	.quad	.Ltmp771
	.quad	.Ltmp772
	.quad	.Ltmp773
	.quad	.Ltmp774
	.quad	.Ltmp775
	.quad	.Ltmp776
	.quad	.Ltmp777
	.quad	.Ltmp778
	.quad	.Ltmp779
	.quad	.Ltmp780
	.quad	.Ltmp781
	.quad	.Ltmp782
	.quad	.Ltmp783
	.quad	.Ltmp784
	.quad	.Ltmp785
	.quad	.Ltmp786
	.quad	.Ltmp787
	.quad	.Ltmp788
	.quad	.Ltmp789
	.quad	.Ltmp790
	.quad	.Ltmp791
	.quad	.Ltmp792
	.size	_ZN8MEMORY_T6POKE64Edd.tmp$2482, 2048

	.type	.L.str.701,@object      # @.str.701
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.701:
	.asciz	"\r\n"
	.size	.L.str.701, 3

	.type	_ZN8MEMORY_T6POKE64Edd.tmp$2483,@object # @"_ZN8MEMORY_T6POKE64Edd.tmp$2483"
	.data
	.p2align	4
_ZN8MEMORY_T6POKE64Edd.tmp$2483:
	.quad	.Ltmp794
	.quad	.Ltmp795
	.quad	.Ltmp796
	.quad	.Ltmp797
	.quad	.Ltmp798
	.quad	.Ltmp799
	.quad	.Ltmp800
	.quad	.Ltmp801
	.quad	.Ltmp802
	.quad	.Ltmp803
	.quad	.Ltmp804
	.size	_ZN8MEMORY_T6POKE64Edd.tmp$2483, 88

	.type	MSG$,@object            # @"MSG$"
	.comm	MSG$,24,8
	.type	.L.str.702,@object      # @.str.702
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.702:
	.asciz	"CHARS.INC"
	.size	.L.str.702, 10

	.type	.L.str.703,@object      # @.str.703
.L.str.703:
	.asciz	"#include \r"
	.size	.L.str.703, 11

	.type	.L.str.704,@object      # @.str.704
.L.str.704:
	.asciz	"\r"
	.size	.L.str.704, 2

	.type	.L.str.705,@object      # @.str.705
.L.str.705:
	.asciz	"COLORS.INC"
	.size	.L.str.705, 11

	.type	.L.str.706,@object      # @.str.706
.L.str.706:
	.asciz	"CONSTS.INC"
	.size	.L.str.706, 11

	.type	.L.str.707,@object      # @.str.707
.L.str.707:
	.asciz	"DEBUG.INC"
	.size	.L.str.707, 10

	.type	.L.str.708,@object      # @.str.708
.L.str.708:
	.asciz	"FINISH.INC"
	.size	.L.str.708, 11

	.type	.L.str.709,@object      # @.str.709
.L.str.709:
	.asciz	"GLASS.INC"
	.size	.L.str.709, 10

	.type	.L.str.710,@object      # @.str.710
.L.str.710:
	.asciz	"GOLDS.INC"
	.size	.L.str.710, 10

	.type	.L.str.711,@object      # @.str.711
.L.str.711:
	.asciz	"METALS.INC"
	.size	.L.str.711, 11

	.type	.L.str.712,@object      # @.str.712
.L.str.712:
	.asciz	"RAD_DEF.INC"
	.size	.L.str.712, 12

	.type	.L.str.713,@object      # @.str.713
.L.str.713:
	.asciz	"SHAPES2.INC"
	.size	.L.str.713, 12

	.type	.L.str.714,@object      # @.str.714
.L.str.714:
	.asciz	"SHAPES.INC"
	.size	.L.str.714, 11

	.type	.L.str.715,@object      # @.str.715
.L.str.715:
	.asciz	"SHAPESQ.INC"
	.size	.L.str.715, 12

	.type	.L.str.716,@object      # @.str.716
.L.str.716:
	.asciz	"SKIES.INC"
	.size	.L.str.716, 10

	.type	.L.str.717,@object      # @.str.717
.L.str.717:
	.asciz	"STAGE1.INC"
	.size	.L.str.717, 11

	.type	.L.str.718,@object      # @.str.718
.L.str.718:
	.asciz	"STARS.INC"
	.size	.L.str.718, 10

	.type	.L.str.719,@object      # @.str.719
.L.str.719:
	.asciz	"STDCAM.INC"
	.size	.L.str.719, 11

	.type	.L.str.720,@object      # @.str.720
.L.str.720:
	.asciz	"STONEOLD.INC"
	.size	.L.str.720, 13

	.type	.L.str.721,@object      # @.str.721
.L.str.721:
	.asciz	"STONES1.INC"
	.size	.L.str.721, 12

	.type	.L.str.722,@object      # @.str.722
.L.str.722:
	.asciz	"STONES2.INC"
	.size	.L.str.722, 12

	.type	.L.str.723,@object      # @.str.723
.L.str.723:
	.asciz	"STONES.INC"
	.size	.L.str.723, 11

	.type	.L.str.724,@object      # @.str.724
.L.str.724:
	.asciz	"TEXTURES.INC"
	.size	.L.str.724, 13

	.type	.L.str.725,@object      # @.str.725
.L.str.725:
	.asciz	"WOODMAPS.INC"
	.size	.L.str.725, 13

	.type	.L.str.726,@object      # @.str.726
.L.str.726:
	.asciz	"WOODS.INC"
	.size	.L.str.726, 10

	.type	_ZN8MEMORY_T6POKE64Edd.tmp$2484,@object # @"_ZN8MEMORY_T6POKE64Edd.tmp$2484"
	.data
	.p2align	4
_ZN8MEMORY_T6POKE64Edd.tmp$2484:
	.quad	.Ltmp812
	.quad	.Ltmp813
	.quad	.Ltmp814
	.quad	.Ltmp815
	.quad	.Ltmp816
	.quad	.Ltmp817
	.quad	.Ltmp818
	.quad	.Ltmp819
	.quad	.Ltmp820
	.quad	.Ltmp821
	.quad	.Ltmp822
	.quad	.Ltmp823
	.quad	.Ltmp824
	.quad	.Ltmp825
	.quad	.Ltmp826
	.quad	.Ltmp827
	.quad	.Ltmp828
	.quad	.Ltmp829
	.quad	.Ltmp830
	.quad	.Ltmp831
	.quad	.Ltmp832
	.quad	.Ltmp833
	.quad	.Ltmp834
	.size	_ZN8MEMORY_T6POKE64Edd.tmp$2484, 184

	.type	.L.str.727,@object      # @.str.727
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.727:
	.asciz	"gosub"
	.size	.L.str.727, 6

	.type	.L.str.728,@object      # @.str.728
.L.str.728:
	.asciz	"goto"
	.size	.L.str.728, 5

	.type	.L.str.729,@object      # @.str.729
.L.str.729:
	.asciz	"gradient"
	.size	.L.str.729, 9

	.type	.L.str.730,@object      # @.str.730
.L.str.730:
	.asciz	"granite"
	.size	.L.str.730, 8

	.type	.L.str.731,@object      # @.str.731
.L.str.731:
	.asciz	"gray"
	.size	.L.str.731, 5

	.type	.L.str.732,@object      # @.str.732
.L.str.732:
	.asciz	"gray_threshold"
	.size	.L.str.732, 15

	.type	.L.str.733,@object      # @.str.733
.L.str.733:
	.asciz	"greateeq"
	.size	.L.str.733, 9

	.type	.L.str.734,@object      # @.str.734
.L.str.734:
	.asciz	"greater"
	.size	.L.str.734, 8

	.type	.L.str.735,@object      # @.str.735
.L.str.735:
	.asciz	"green"
	.size	.L.str.735, 6

	.type	.L.str.736,@object      # @.str.736
.L.str.736:
	.asciz	"group"
	.size	.L.str.736, 6

	.type	.L.str.737,@object      # @.str.737
.L.str.737:
	.asciz	"group_by"
	.size	.L.str.737, 9

	.type	.L.str.738,@object      # @.str.738
.L.str.738:
	.asciz	"half"
	.size	.L.str.738, 5

	.type	.L.str.739,@object      # @.str.739
.L.str.739:
	.asciz	"hash"
	.size	.L.str.739, 5

	.type	.L.str.740,@object      # @.str.740
.L.str.740:
	.asciz	"hashnoise"
	.size	.L.str.740, 10

	.type	.L.str.741,@object      # @.str.741
.L.str.741:
	.asciz	"having"
	.size	.L.str.741, 7

	.type	.L.str.742,@object      # @.str.742
.L.str.742:
	.asciz	"header"
	.size	.L.str.742, 7

	.type	.L.str.743,@object      # @.str.743
.L.str.743:
	.asciz	"heading"
	.size	.L.str.743, 8

	.type	.L.str.744,@object      # @.str.744
.L.str.744:
	.asciz	"height_field"
	.size	.L.str.744, 13

	.type	.L.str.745,@object      # @.str.745
.L.str.745:
	.asciz	"henyey_greenstein"
	.size	.L.str.745, 18

	.type	.L.str.746,@object      # @.str.746
.L.str.746:
	.asciz	"hex"
	.size	.L.str.746, 4

	.type	.L.str.747,@object      # @.str.747
.L.str.747:
	.asciz	"hexagon"
	.size	.L.str.747, 8

	.type	.L.str.748,@object      # @.str.748
.L.str.748:
	.asciz	"hf_gray_16"
	.size	.L.str.748, 11

	.type	.L.str.749,@object      # @.str.749
.L.str.749:
	.asciz	"hierarchy"
	.size	.L.str.749, 10

	.type	.L.str.750,@object      # @.str.750
.L.str.750:
	.asciz	"highp"
	.size	.L.str.750, 6

	.type	.L.str.751,@object      # @.str.751
.L.str.751:
	.asciz	"high-value"
	.size	.L.str.751, 11

	.type	.L.str.752,@object      # @.str.752
.L.str.752:
	.asciz	"high-values"
	.size	.L.str.752, 12

	.type	.L.str.753,@object      # @.str.753
.L.str.753:
	.asciz	"high_values"
	.size	.L.str.753, 12

	.type	.L.str.754,@object      # @.str.754
.L.str.754:
	.asciz	"hintend"
	.size	.L.str.754, 8

	.type	.L.str.755,@object      # @.str.755
.L.str.755:
	.asciz	"hint_error"
	.size	.L.str.755, 11

	.type	.L.str.756,@object      # @.str.756
.L.str.756:
	.asciz	"hintstart"
	.size	.L.str.756, 10

	.type	.L.str.757,@object      # @.str.757
.L.str.757:
	.asciz	"holdout"
	.size	.L.str.757, 8

	.type	.L.str.758,@object      # @.str.758
.L.str.758:
	.asciz	"hollow"
	.size	.L.str.758, 7

	.type	.L.str.759,@object      # @.str.759
.L.str.759:
	.asciz	"hour"
	.size	.L.str.759, 5

	.type	.L.str.760,@object      # @.str.760
.L.str.760:
	.asciz	"hvec2"
	.size	.L.str.760, 6

	.type	.L.str.761,@object      # @.str.761
.L.str.761:
	.asciz	"hvec3"
	.size	.L.str.761, 6

	.type	.L.str.762,@object      # @.str.762
.L.str.762:
	.asciz	"hvec4"
	.size	.L.str.762, 6

	.type	.L.str.763,@object      # @.str.763
.L.str.763:
	.asciz	"hypercomplex"
	.size	.L.str.763, 13

	.type	.L.str.764,@object      # @.str.764
.L.str.764:
	.asciz	"hypot"
	.size	.L.str.764, 6

	.type	.L.str.765,@object      # @.str.765
.L.str.765:
	.asciz	"iChannel1"
	.size	.L.str.765, 10

	.type	.L.str.766,@object      # @.str.766
.L.str.766:
	.asciz	"iChannel2"
	.size	.L.str.766, 10

	.type	.L.str.767,@object      # @.str.767
.L.str.767:
	.asciz	"iChannel3"
	.size	.L.str.767, 10

	.type	.L.str.768,@object      # @.str.768
.L.str.768:
	.asciz	"iChannelResolution"
	.size	.L.str.768, 19

	.type	.L.str.769,@object      # @.str.769
.L.str.769:
	.asciz	"iChannelTime"
	.size	.L.str.769, 13

	.type	.L.str.770,@object      # @.str.770
.L.str.770:
	.asciz	"iCube"
	.size	.L.str.770, 6

	.type	.L.str.771,@object      # @.str.771
.L.str.771:
	.asciz	"id"
	.size	.L.str.771, 3

	.type	.L.str.772,@object      # @.str.772
.L.str.772:
	.asciz	"iDate"
	.size	.L.str.772, 6

	.type	.L.str.773,@object      # @.str.773
.L.str.773:
	.asciz	"identification"
	.size	.L.str.773, 15

	.type	.L.str.774,@object      # @.str.774
.L.str.774:
	.asciz	"if"
	.size	.L.str.774, 3

	.type	.L.str.775,@object      # @.str.775
.L.str.775:
	.asciz	"ifdef"
	.size	.L.str.775, 6

	.type	.L.str.776,@object      # @.str.776
.L.str.776:
	.asciz	"ifelse"
	.size	.L.str.776, 7

	.type	.L.str.777,@object      # @.str.777
.L.str.777:
	.asciz	"iff"
	.size	.L.str.777, 4

	.type	.L.str.778,@object      # @.str.778
.L.str.778:
	.asciz	"ifndef"
	.size	.L.str.778, 7

	.type	.L.str.779,@object      # @.str.779
.L.str.779:
	.asciz	"iframe"
	.size	.L.str.779, 7

	.type	.L.str.780,@object      # @.str.780
.L.str.780:
	.asciz	"iframerate"
	.size	.L.str.780, 11

	.type	.L.str.781,@object      # @.str.781
.L.str.781:
	.asciz	"iimage1d"
	.size	.L.str.781, 9

	.type	.L.str.782,@object      # @.str.782
.L.str.782:
	.asciz	"iimage1darray"
	.size	.L.str.782, 14

	.type	.L.str.783,@object      # @.str.783
.L.str.783:
	.asciz	"iimage2d"
	.size	.L.str.783, 9

	.type	.L.str.784,@object      # @.str.784
.L.str.784:
	.asciz	"iimage2darray"
	.size	.L.str.784, 14

	.type	.L.str.785,@object      # @.str.785
.L.str.785:
	.asciz	"iimage3d"
	.size	.L.str.785, 9

	.type	.L.str.786,@object      # @.str.786
.L.str.786:
	.asciz	"iimagebuffer"
	.size	.L.str.786, 13

	.type	.L.str.787,@object      # @.str.787
.L.str.787:
	.asciz	"iimagecube"
	.size	.L.str.787, 11

	.type	.L.str.788,@object      # @.str.788
.L.str.788:
	.asciz	"image"
	.size	.L.str.788, 6

	.type	.L.str.789,@object      # @.str.789
.L.str.789:
	.asciz	"image1d"
	.size	.L.str.789, 8

	.type	.L.str.790,@object      # @.str.790
.L.str.790:
	.asciz	"image1darray"
	.size	.L.str.790, 13

	.type	.L.str.791,@object      # @.str.791
.L.str.791:
	.asciz	"image1darrayshadow"
	.size	.L.str.791, 19

	.type	.L.str.792,@object      # @.str.792
.L.str.792:
	.asciz	"image1dshadow"
	.size	.L.str.792, 14

	.type	.L.str.793,@object      # @.str.793
.L.str.793:
	.asciz	"image2d"
	.size	.L.str.793, 8

	.type	.L.str.794,@object      # @.str.794
.L.str.794:
	.asciz	"image2darray"
	.size	.L.str.794, 13

	.type	.L.str.795,@object      # @.str.795
.L.str.795:
	.asciz	"image2darrayshadow"
	.size	.L.str.795, 19

	.type	.L.str.796,@object      # @.str.796
.L.str.796:
	.asciz	"image2dshadow"
	.size	.L.str.796, 14

	.type	.L.str.797,@object      # @.str.797
.L.str.797:
	.asciz	"image3d"
	.size	.L.str.797, 8

	.type	.L.str.798,@object      # @.str.798
.L.str.798:
	.asciz	"imagebuffer"
	.size	.L.str.798, 12

	.type	.L.str.799,@object      # @.str.799
.L.str.799:
	.asciz	"imagecube"
	.size	.L.str.799, 10

	.type	.L.str.800,@object      # @.str.800
.L.str.800:
	.asciz	"image_height"
	.size	.L.str.800, 13

	.type	.L.str.801,@object      # @.str.801
.L.str.801:
	.asciz	"image_map"
	.size	.L.str.801, 10

	.type	.L.str.802,@object      # @.str.802
.L.str.802:
	.asciz	"image_pattern"
	.size	.L.str.802, 14

	.type	.L.str.803,@object      # @.str.803
.L.str.803:
	.asciz	"image_width"
	.size	.L.str.803, 12

	.type	.L.str.804,@object      # @.str.804
.L.str.804:
	.asciz	"imouse"
	.size	.L.str.804, 7

	.type	.L.str.805,@object      # @.str.805
.L.str.805:
	.asciz	"imp"
	.size	.L.str.805, 4

	.type	.L.str.806,@object      # @.str.806
.L.str.806:
	.asciz	"implementation"
	.size	.L.str.806, 15

	.type	.L.str.807,@object      # @.str.807
.L.str.807:
	.asciz	"import"
	.size	.L.str.807, 7

	.type	.L.str.808,@object      # @.str.808
.L.str.808:
	.asciz	"in"
	.size	.L.str.808, 3

	.type	.L.str.809,@object      # @.str.809
.L.str.809:
	.asciz	"include"
	.size	.L.str.809, 8

	.type	.L.str.810,@object      # @.str.810
.L.str.810:
	.asciz	"index"
	.size	.L.str.810, 6

	.type	.L.str.811,@object      # @.str.811
.L.str.811:
	.asciz	"indexed"
	.size	.L.str.811, 8

	.type	.L.str.812,@object      # @.str.812
.L.str.812:
	.asciz	"indicate"
	.size	.L.str.812, 9

	.type	.L.str.813,@object      # @.str.813
.L.str.813:
	.asciz	"inherited"
	.size	.L.str.813, 10

	.type	.L.str.814,@object      # @.str.814
.L.str.814:
	.asciz	"inherits"
	.size	.L.str.814, 9

	.type	.L.str.815,@object      # @.str.815
.L.str.815:
	.asciz	"initial"
	.size	.L.str.815, 8

	.type	.L.str.816,@object      # @.str.816
.L.str.816:
	.asciz	"initial_clock"
	.size	.L.str.816, 14

	.type	.L.str.817,@object      # @.str.817
.L.str.817:
	.asciz	"initial_frame"
	.size	.L.str.817, 14

	.type	.L.str.818,@object      # @.str.818
.L.str.818:
	.asciz	"initialization"
	.size	.L.str.818, 15

	.type	.L.str.819,@object      # @.str.819
.L.str.819:
	.asciz	"initialize"
	.size	.L.str.819, 11

	.type	.L.str.820,@object      # @.str.820
.L.str.820:
	.asciz	"initiate"
	.size	.L.str.820, 9

	.type	.L.str.821,@object      # @.str.821
.L.str.821:
	.asciz	"inkey"
	.size	.L.str.821, 6

	.type	.L.str.822,@object      # @.str.822
.L.str.822:
	.asciz	"inline"
	.size	.L.str.822, 7

	.type	.L.str.823,@object      # @.str.823
.L.str.823:
	.asciz	"inlinenoinline"
	.size	.L.str.823, 15

	.type	.L.str.824,@object      # @.str.824
.L.str.824:
	.asciz	"in_memory"
	.size	.L.str.824, 10

	.type	.L.str.825,@object      # @.str.825
.L.str.825:
	.asciz	"inner"
	.size	.L.str.825, 6

	.type	.L.str.826,@object      # @.str.826
.L.str.826:
	.asciz	"inout"
	.size	.L.str.826, 6

	.type	.L.str.827,@object      # @.str.827
.L.str.827:
	.asciz	"inp"
	.size	.L.str.827, 4

	.type	.L.str.828,@object      # @.str.828
.L.str.828:
	.asciz	"input"
	.size	.L.str.828, 6

	.type	.L.str.829,@object      # @.str.829
.L.str.829:
	.asciz	"input-output"
	.size	.L.str.829, 13

	.type	.L.str.830,@object      # @.str.830
.L.str.830:
	.asciz	"inquire"
	.size	.L.str.830, 8

	.type	.L.str.831,@object      # @.str.831
.L.str.831:
	.asciz	"insert"
	.size	.L.str.831, 7

	.type	.L.str.832,@object      # @.str.832
.L.str.832:
	.asciz	"inside"
	.size	.L.str.832, 7

	.type	.L.str.833,@object      # @.str.833
.L.str.833:
	.asciz	"inside_vector"
	.size	.L.str.833, 14

	.type	.L.str.834,@object      # @.str.834
.L.str.834:
	.asciz	"inspect"
	.size	.L.str.834, 8

	.type	.L.str.835,@object      # @.str.835
.L.str.835:
	.asciz	"installation"
	.size	.L.str.835, 13

	.type	.L.str.836,@object      # @.str.836
.L.str.836:
	.asciz	"instr"
	.size	.L.str.836, 6

	.type	.L.str.837,@object      # @.str.837
.L.str.837:
	.asciz	"int"
	.size	.L.str.837, 4

	.type	.L.str.838,@object      # @.str.838
.L.str.838:
	.asciz	"integer"
	.size	.L.str.838, 8

	.type	.L.str.839,@object      # @.str.839
.L.str.839:
	.asciz	"interface"
	.size	.L.str.839, 10

	.type	.L.str.840,@object      # @.str.840
.L.str.840:
	.asciz	"interior"
	.size	.L.str.840, 9

	.type	.L.str.841,@object      # @.str.841
.L.str.841:
	.asciz	"interior_texture"
	.size	.L.str.841, 17

	.type	.L.str.842,@object      # @.str.842
.L.str.842:
	.asciz	"internal"
	.size	.L.str.842, 9

	.type	.L.str.843,@object      # @.str.843
.L.str.843:
	.asciz	"interpolate"
	.size	.L.str.843, 12

	.type	.L.str.844,@object      # @.str.844
.L.str.844:
	.asciz	"intersect"
	.size	.L.str.844, 10

	.type	.L.str.845,@object      # @.str.845
.L.str.845:
	.asciz	"intersection"
	.size	.L.str.845, 13

	.type	.L.str.846,@object      # @.str.846
.L.str.846:
	.asciz	"interval"
	.size	.L.str.846, 9

	.type	.L.str.847,@object      # @.str.847
.L.str.847:
	.asciz	"intervals"
	.size	.L.str.847, 10

	.type	.L.str.848,@object      # @.str.848
.L.str.848:
	.asciz	"into"
	.size	.L.str.848, 5

	.type	.L.str.849,@object      # @.str.849
.L.str.849:
	.asciz	"intrinsic"
	.size	.L.str.849, 10

	.type	.L.str.850,@object      # @.str.850
.L.str.850:
	.asciz	"invalid"
	.size	.L.str.850, 8

	.type	.L.str.851,@object      # @.str.851
.L.str.851:
	.asciz	"invariant"
	.size	.L.str.851, 10

	.type	.L.str.852,@object      # @.str.852
.L.str.852:
	.asciz	"inverse"
	.size	.L.str.852, 8

	.type	.L.str.853,@object      # @.str.853
.L.str.853:
	.asciz	"inversesqr"
	.size	.L.str.853, 11

	.type	.L.str.854,@object      # @.str.854
.L.str.854:
	.asciz	"invoke"
	.size	.L.str.854, 7

	.type	.L.str.855,@object      # @.str.855
.L.str.855:
	.asciz	"i-o"
	.size	.L.str.855, 4

	.type	.L.str.856,@object      # @.str.856
.L.str.856:
	.asciz	"i-o-control"
	.size	.L.str.856, 12

	.type	.L.str.857,@object      # @.str.857
.L.str.857:
	.asciz	"ioctl"
	.size	.L.str.857, 6

	.type	.L.str.858,@object      # @.str.858
.L.str.858:
	.asciz	"ior"
	.size	.L.str.858, 4

	.type	.L.str.859,@object      # @.str.859
.L.str.859:
	.asciz	"i_resolution"
	.size	.L.str.859, 13

	.type	.L.str.860,@object      # @.str.860
.L.str.860:
	.asciz	"irid"
	.size	.L.str.860, 5

	.type	.L.str.861,@object      # @.str.861
.L.str.861:
	.asciz	"irid_wavelength"
	.size	.L.str.861, 16

	.type	.L.str.862,@object      # @.str.862
.L.str.862:
	.asciz	"is"
	.size	.L.str.862, 3

	.type	.L.str.863,@object      # @.str.863
.L.str.863:
	.asciz	"isampler1D"
	.size	.L.str.863, 11

	.type	.L.str.864,@object      # @.str.864
.L.str.864:
	.asciz	"isampler1darray"
	.size	.L.str.864, 16

	.type	.L.str.865,@object      # @.str.865
.L.str.865:
	.asciz	"isampler2D"
	.size	.L.str.865, 11

	.type	.L.str.866,@object      # @.str.866
.L.str.866:
	.asciz	"isampler2darray"
	.size	.L.str.866, 16

	.type	.L.str.867,@object      # @.str.867
.L.str.867:
	.asciz	"isampler2drect"
	.size	.L.str.867, 15

	.type	.L.str.868,@object      # @.str.868
.L.str.868:
	.asciz	"isampler3D"
	.size	.L.str.868, 11

	.type	.L.str.869,@object      # @.str.869
.L.str.869:
	.asciz	"isamplerate"
	.size	.L.str.869, 12

	.type	.L.str.870,@object      # @.str.870
.L.str.870:
	.asciz	"isamplerbuffer"
	.size	.L.str.870, 15

	.type	.L.str.871,@object      # @.str.871
.L.str.871:
	.asciz	"isamplercube"
	.size	.L.str.871, 13

	.type	.L.str.872,@object      # @.str.872
.L.str.872:
	.asciz	"isconnected"
	.size	.L.str.872, 12

	.type	.L.str.873,@object      # @.str.873
.L.str.873:
	.asciz	"isconstant"
	.size	.L.str.873, 11

	.type	.L.str.874,@object      # @.str.874
.L.str.874:
	.asciz	"isfinite"
	.size	.L.str.874, 9

	.type	.L.str.875,@object      # @.str.875
.L.str.875:
	.asciz	"isinf"
	.size	.L.str.875, 6

	.type	.L.str.876,@object      # @.str.876
.L.str.876:
	.asciz	"isnan"
	.size	.L.str.876, 6

	.type	.L.str.877,@object      # @.str.877
.L.str.877:
	.asciz	"isosurface"
	.size	.L.str.877, 11

	.type	.L.str.878,@object      # @.str.878
.L.str.878:
	.asciz	"isotropic"
	.size	.L.str.878, 10

	.type	.L.str.879,@object      # @.str.879
.L.str.879:
	.asciz	"iterate"
	.size	.L.str.879, 8

	.type	.L.str.880,@object      # @.str.880
.L.str.880:
	.asciz	"i_time"
	.size	.L.str.880, 7

	.type	.L.str.881,@object      # @.str.881
.L.str.881:
	.asciz	"itime"
	.size	.L.str.881, 6

	.type	.L.str.882,@object      # @.str.882
.L.str.882:
	.asciz	"itimedelta"
	.size	.L.str.882, 11

	.type	.L.str.883,@object      # @.str.883
.L.str.883:
	.asciz	"ivec2"
	.size	.L.str.883, 6

	.type	.L.str.884,@object      # @.str.884
.L.str.884:
	.asciz	"ivec3"
	.size	.L.str.884, 6

	.type	.L.str.885,@object      # @.str.885
.L.str.885:
	.asciz	"ivec4"
	.size	.L.str.885, 6

	.type	.L.str.886,@object      # @.str.886
.L.str.886:
	.asciz	"jitter"
	.size	.L.str.886, 7

	.type	.L.str.887,@object      # @.str.887
.L.str.887:
	.asciz	"join"
	.size	.L.str.887, 5

	.type	.L.str.888,@object      # @.str.888
.L.str.888:
	.asciz	"jpeg"
	.size	.L.str.888, 5

	.type	.L.str.889,@object      # @.str.889
.L.str.889:
	.asciz	"julia"
	.size	.L.str.889, 6

	.type	.L.str.890,@object      # @.str.890
.L.str.890:
	.asciz	"julia_fractal"
	.size	.L.str.890, 14

	.type	.L.str.891,@object      # @.str.891
.L.str.891:
	.asciz	"just"
	.size	.L.str.891, 5

	.type	.L.str.892,@object      # @.str.892
.L.str.892:
	.asciz	"justified"
	.size	.L.str.892, 10

	.type	.L.str.893,@object      # @.str.893
.L.str.893:
	.asciz	"kanji"
	.size	.L.str.893, 6

	.type	.L.str.894,@object      # @.str.894
.L.str.894:
	.asciz	"key"
	.size	.L.str.894, 4

	.type	.L.str.895,@object      # @.str.895
.L.str.895:
	.asciz	"kill"
	.size	.L.str.895, 5

	.type	.L.str.896,@object      # @.str.896
.L.str.896:
	.asciz	"label"
	.size	.L.str.896, 6

	.type	.L.str.897,@object      # @.str.897
.L.str.897:
	.asciz	"lambda"
	.size	.L.str.897, 7

	.type	.L.str.898,@object      # @.str.898
.L.str.898:
	.asciz	"last"
	.size	.L.str.898, 5

	.type	.L.str.899,@object      # @.str.899
.L.str.899:
	.asciz	"lathe"
	.size	.L.str.899, 6

	.type	.L.str.900,@object      # @.str.900
.L.str.900:
	.asciz	"layout"
	.size	.L.str.900, 7

	.type	.L.str.901,@object      # @.str.901
.L.str.901:
	.asciz	"lcopy"
	.size	.L.str.901, 6

	.type	.L.str.902,@object      # @.str.902
.L.str.902:
	.asciz	"leading"
	.size	.L.str.902, 8

	.type	.L.str.903,@object      # @.str.903
.L.str.903:
	.asciz	"leave"
	.size	.L.str.903, 6

	.type	.L.str.904,@object      # @.str.904
.L.str.904:
	.asciz	"left"
	.size	.L.str.904, 5

	.type	.L.str.905,@object      # @.str.905
.L.str.905:
	.asciz	"len"
	.size	.L.str.905, 4

	.type	.L.str.906,@object      # @.str.906
.L.str.906:
	.asciz	"length"
	.size	.L.str.906, 7

	.type	.L.str.907,@object      # @.str.907
.L.str.907:
	.asciz	"leopard"
	.size	.L.str.907, 8

	.type	.L.str.908,@object      # @.str.908
.L.str.908:
	.asciz	"less"
	.size	.L.str.908, 5

	.type	.L.str.909,@object      # @.str.909
.L.str.909:
	.asciz	"lesseq"
	.size	.L.str.909, 7

	.type	.L.str.910,@object      # @.str.910
.L.str.910:
	.asciz	"let"
	.size	.L.str.910, 4

	.type	.L.str.911,@object      # @.str.911
.L.str.911:
	.asciz	"libraryt"
	.size	.L.str.911, 9

	.type	.L.str.912,@object      # @.str.912
.L.str.912:
	.asciz	"light_group"
	.size	.L.str.912, 12

	.type	.L.str.913,@object      # @.str.913
.L.str.913:
	.asciz	"light_source"
	.size	.L.str.913, 13

	.type	.L.str.914,@object      # @.str.914
.L.str.914:
	.asciz	"like"
	.size	.L.str.914, 5

	.type	.L.str.915,@object      # @.str.915
.L.str.915:
	.asciz	"limit"
	.size	.L.str.915, 6

	.type	.L.str.916,@object      # @.str.916
.L.str.916:
	.asciz	"limits"
	.size	.L.str.916, 7

	.type	.L.str.917,@object      # @.str.917
.L.str.917:
	.asciz	"linage"
	.size	.L.str.917, 7

	.type	.L.str.918,@object      # @.str.918
.L.str.918:
	.asciz	"linage-counter"
	.size	.L.str.918, 15

	.type	.L.str.919,@object      # @.str.919
.L.str.919:
	.asciz	"line"
	.size	.L.str.919, 5

	.type	.L.str.920,@object      # @.str.920
.L.str.920:
	.asciz	"linear_spline"
	.size	.L.str.920, 14

	.type	.L.str.921,@object      # @.str.921
.L.str.921:
	.asciz	"linearstep"
	.size	.L.str.921, 11

	.type	.L.str.922,@object      # @.str.922
.L.str.922:
	.asciz	"linear_sweep"
	.size	.L.str.922, 13

	.type	.L.str.923,@object      # @.str.923
.L.str.923:
	.asciz	"line-counter"
	.size	.L.str.923, 13

	.type	.L.str.924,@object      # @.str.924
.L.str.924:
	.asciz	"lines"
	.size	.L.str.924, 6

	.type	.L.str.925,@object      # @.str.925
.L.str.925:
	.asciz	"linkage"
	.size	.L.str.925, 8

	.type	.L.str.926,@object      # @.str.926
.L.str.926:
	.asciz	"list"
	.size	.L.str.926, 5

	.type	.L.str.927,@object      # @.str.927
.L.str.927:
	.asciz	"llist"
	.size	.L.str.927, 6

	.type	.L.str.928,@object      # @.str.928
.L.str.928:
	.asciz	"ln"
	.size	.L.str.928, 3

	.type	.L.str.929,@object      # @.str.929
.L.str.929:
	.asciz	"load"
	.size	.L.str.929, 5

	.type	.L.str.930,@object      # @.str.930
.L.str.930:
	.asciz	"load_file"
	.size	.L.str.930, 10

	.type	.L.str.931,@object      # @.str.931
.L.str.931:
	.asciz	"loc"
	.size	.L.str.931, 4

	.type	.L.str.932,@object      # @.str.932
.L.str.932:
	.asciz	"local"
	.size	.L.str.932, 6

	.type	.L.str.933,@object      # @.str.933
.L.str.933:
	.asciz	"local-storage"
	.size	.L.str.933, 14

	.type	.L.str.934,@object      # @.str.934
.L.str.934:
	.asciz	"locate"
	.size	.L.str.934, 7

	.type	.L.str.935,@object      # @.str.935
.L.str.935:
	.asciz	"location"
	.size	.L.str.935, 9

	.type	.L.str.936,@object      # @.str.936
.L.str.936:
	.asciz	"lock"
	.size	.L.str.936, 5

	.type	.L.str.937,@object      # @.str.937
.L.str.937:
	.asciz	"lof"
	.size	.L.str.937, 4

	.type	.L.str.938,@object      # @.str.938
.L.str.938:
	.asciz	"log"
	.size	.L.str.938, 4

	.type	.L.str.939,@object      # @.str.939
.L.str.939:
	.asciz	"log10"
	.size	.L.str.939, 6

	.type	.L.str.940,@object      # @.str.940
.L.str.940:
	.asciz	"log2"
	.size	.L.str.940, 5

	.type	.L.str.941,@object      # @.str.941
.L.str.941:
	.asciz	"logb"
	.size	.L.str.941, 5

	.type	.L.str.942,@object      # @.str.942
.L.str.942:
	.asciz	"logical"
	.size	.L.str.942, 8

	.type	.L.str.943,@object      # @.str.943
.L.str.943:
	.asciz	"long"
	.size	.L.str.943, 5

	.type	.L.str.944,@object      # @.str.944
.L.str.944:
	.asciz	"look_at"
	.size	.L.str.944, 8

	.type	.L.str.945,@object      # @.str.945
.L.str.945:
	.asciz	"looks_like"
	.size	.L.str.945, 11

	.type	.L.str.946,@object      # @.str.946
.L.str.946:
	.asciz	"loop"
	.size	.L.str.946, 5

	.type	.L.str.947,@object      # @.str.947
.L.str.947:
	.asciz	"lower"
	.size	.L.str.947, 6

	.type	.L.str.948,@object      # @.str.948
.L.str.948:
	.asciz	"lower_mb"
	.size	.L.str.948, 9

	.type	.L.str.949,@object      # @.str.949
.L.str.949:
	.asciz	"low_error_factor"
	.size	.L.str.949, 17

	.type	.L.str.950,@object      # @.str.950
.L.str.950:
	.asciz	"lowp"
	.size	.L.str.950, 5

	.type	.L.str.951,@object      # @.str.951
.L.str.951:
	.asciz	"low-value"
	.size	.L.str.951, 10

	.type	.L.str.952,@object      # @.str.952
.L.str.952:
	.asciz	"low-values"
	.size	.L.str.952, 11

	.type	.L.str.953,@object      # @.str.953
.L.str.953:
	.asciz	"lpad"
	.size	.L.str.953, 5

	.type	.L.str.954,@object      # @.str.954
.L.str.954:
	.asciz	"lpos"
	.size	.L.str.954, 5

	.type	.L.str.955,@object      # @.str.955
.L.str.955:
	.asciz	"lprint"
	.size	.L.str.955, 7

	.type	.L.str.956,@object      # @.str.956
.L.str.956:
	.asciz	"lset"
	.size	.L.str.956, 5

	.type	.L.str.957,@object      # @.str.957
.L.str.957:
	.asciz	"luminance"
	.size	.L.str.957, 10

	.type	.L.str.958,@object      # @.str.958
.L.str.958:
	.asciz	"m_2_pi"
	.size	.L.str.958, 7

	.type	.L.str.959,@object      # @.str.959
.L.str.959:
	.asciz	"m_2_sqrtpi"
	.size	.L.str.959, 11

	.type	.L.str.960,@object      # @.str.960
.L.str.960:
	.asciz	"m_4_pi"
	.size	.L.str.960, 7

	.type	.L.str.961,@object      # @.str.961
.L.str.961:
	.asciz	"macro"
	.size	.L.str.961, 6

	.type	.L.str.962,@object      # @.str.962
.L.str.962:
	.asciz	"magnet"
	.size	.L.str.962, 7

	.type	.L.str.963,@object      # @.str.963
.L.str.963:
	.asciz	"main"
	.size	.L.str.963, 5

	.type	.L.str.964,@object      # @.str.964
.L.str.964:
	.asciz	"main_image"
	.size	.L.str.964, 11

	.type	.L.str.965,@object      # @.str.965
.L.str.965:
	.asciz	"mainImage"
	.size	.L.str.965, 10

	.type	.L.str.966,@object      # @.str.966
.L.str.966:
	.asciz	"major_radius"
	.size	.L.str.966, 13

	.type	.L.str.967,@object      # @.str.967
.L.str.967:
	.asciz	"mandel"
	.size	.L.str.967, 7

	.type	.L.str.968,@object      # @.str.968
.L.str.968:
	.asciz	"map"
	.size	.L.str.968, 4

	.type	.L.str.969,@object      # @.str.969
.L.str.969:
	.asciz	"map_type"
	.size	.L.str.969, 9

	.type	.L.str.970,@object      # @.str.970
.L.str.970:
	.asciz	"marble"
	.size	.L.str.970, 7

	.type	.L.str.971,@object      # @.str.971
.L.str.971:
	.asciz	"mat2"
	.size	.L.str.971, 5

	.type	.L.str.972,@object      # @.str.972
.L.str.972:
	.asciz	"mat2x2"
	.size	.L.str.972, 7

	.type	_ZN8MEMORY_T6POKE64Edd.tmp$2485,@object # @"_ZN8MEMORY_T6POKE64Edd.tmp$2485"
	.data
	.p2align	4
_ZN8MEMORY_T6POKE64Edd.tmp$2485:
	.quad	.Ltmp836
	.quad	.Ltmp837
	.quad	.Ltmp838
	.quad	.Ltmp839
	.quad	.Ltmp840
	.quad	.Ltmp841
	.quad	.Ltmp842
	.quad	.Ltmp843
	.quad	.Ltmp844
	.quad	.Ltmp845
	.quad	.Ltmp846
	.quad	.Ltmp847
	.quad	.Ltmp848
	.quad	.Ltmp849
	.quad	.Ltmp850
	.quad	.Ltmp851
	.quad	.Ltmp852
	.quad	.Ltmp853
	.quad	.Ltmp854
	.quad	.Ltmp855
	.quad	.Ltmp856
	.quad	.Ltmp857
	.quad	.Ltmp858
	.quad	.Ltmp859
	.quad	.Ltmp860
	.quad	.Ltmp861
	.quad	.Ltmp862
	.quad	.Ltmp863
	.quad	.Ltmp864
	.quad	.Ltmp865
	.quad	.Ltmp866
	.quad	.Ltmp867
	.quad	.Ltmp868
	.quad	.Ltmp869
	.quad	.Ltmp870
	.quad	.Ltmp871
	.quad	.Ltmp872
	.quad	.Ltmp873
	.quad	.Ltmp874
	.quad	.Ltmp875
	.quad	.Ltmp876
	.quad	.Ltmp877
	.quad	.Ltmp878
	.quad	.Ltmp879
	.quad	.Ltmp880
	.quad	.Ltmp881
	.quad	.Ltmp882
	.quad	.Ltmp883
	.quad	.Ltmp884
	.quad	.Ltmp885
	.quad	.Ltmp886
	.quad	.Ltmp887
	.quad	.Ltmp888
	.quad	.Ltmp889
	.quad	.Ltmp890
	.quad	.Ltmp891
	.quad	.Ltmp892
	.quad	.Ltmp893
	.quad	.Ltmp894
	.quad	.Ltmp895
	.quad	.Ltmp896
	.quad	.Ltmp897
	.quad	.Ltmp898
	.quad	.Ltmp899
	.quad	.Ltmp900
	.quad	.Ltmp901
	.quad	.Ltmp902
	.quad	.Ltmp903
	.quad	.Ltmp904
	.quad	.Ltmp905
	.quad	.Ltmp906
	.quad	.Ltmp907
	.quad	.Ltmp908
	.quad	.Ltmp909
	.quad	.Ltmp910
	.quad	.Ltmp911
	.quad	.Ltmp912
	.quad	.Ltmp913
	.quad	.Ltmp914
	.quad	.Ltmp915
	.quad	.Ltmp916
	.quad	.Ltmp917
	.quad	.Ltmp918
	.quad	.Ltmp919
	.quad	.Ltmp920
	.quad	.Ltmp921
	.quad	.Ltmp922
	.quad	.Ltmp923
	.quad	.Ltmp924
	.quad	.Ltmp925
	.quad	.Ltmp926
	.quad	.Ltmp927
	.quad	.Ltmp928
	.quad	.Ltmp929
	.quad	.Ltmp930
	.quad	.Ltmp931
	.quad	.Ltmp932
	.quad	.Ltmp933
	.quad	.Ltmp934
	.quad	.Ltmp935
	.quad	.Ltmp936
	.quad	.Ltmp937
	.quad	.Ltmp938
	.quad	.Ltmp939
	.quad	.Ltmp940
	.quad	.Ltmp941
	.quad	.Ltmp942
	.quad	.Ltmp943
	.quad	.Ltmp944
	.quad	.Ltmp945
	.quad	.Ltmp946
	.quad	.Ltmp947
	.quad	.Ltmp948
	.quad	.Ltmp949
	.quad	.Ltmp950
	.quad	.Ltmp951
	.quad	.Ltmp952
	.quad	.Ltmp953
	.quad	.Ltmp954
	.quad	.Ltmp955
	.quad	.Ltmp956
	.quad	.Ltmp957
	.quad	.Ltmp958
	.quad	.Ltmp959
	.quad	.Ltmp960
	.quad	.Ltmp961
	.quad	.Ltmp962
	.quad	.Ltmp963
	.quad	.Ltmp964
	.quad	.Ltmp965
	.quad	.Ltmp966
	.quad	.Ltmp967
	.quad	.Ltmp968
	.quad	.Ltmp969
	.quad	.Ltmp970
	.quad	.Ltmp971
	.quad	.Ltmp972
	.quad	.Ltmp973
	.quad	.Ltmp974
	.quad	.Ltmp975
	.quad	.Ltmp976
	.quad	.Ltmp977
	.quad	.Ltmp978
	.quad	.Ltmp979
	.quad	.Ltmp980
	.quad	.Ltmp981
	.quad	.Ltmp982
	.quad	.Ltmp983
	.quad	.Ltmp984
	.quad	.Ltmp985
	.quad	.Ltmp986
	.quad	.Ltmp987
	.quad	.Ltmp988
	.quad	.Ltmp989
	.quad	.Ltmp990
	.quad	.Ltmp991
	.quad	.Ltmp992
	.quad	.Ltmp993
	.quad	.Ltmp994
	.quad	.Ltmp995
	.quad	.Ltmp996
	.quad	.Ltmp997
	.quad	.Ltmp998
	.quad	.Ltmp999
	.quad	.Ltmp1000
	.quad	.Ltmp1001
	.quad	.Ltmp1002
	.quad	.Ltmp1003
	.quad	.Ltmp1004
	.quad	.Ltmp1005
	.quad	.Ltmp1006
	.quad	.Ltmp1007
	.quad	.Ltmp1008
	.quad	.Ltmp1009
	.quad	.Ltmp1010
	.quad	.Ltmp1011
	.quad	.Ltmp1012
	.quad	.Ltmp1013
	.quad	.Ltmp1014
	.quad	.Ltmp1015
	.quad	.Ltmp1016
	.quad	.Ltmp1017
	.quad	.Ltmp1018
	.quad	.Ltmp1019
	.quad	.Ltmp1020
	.quad	.Ltmp1021
	.quad	.Ltmp1022
	.quad	.Ltmp1023
	.quad	.Ltmp1024
	.quad	.Ltmp1025
	.quad	.Ltmp1026
	.quad	.Ltmp1027
	.quad	.Ltmp1028
	.quad	.Ltmp1029
	.quad	.Ltmp1030
	.quad	.Ltmp1031
	.quad	.Ltmp1032
	.quad	.Ltmp1033
	.quad	.Ltmp1034
	.quad	.Ltmp1035
	.quad	.Ltmp1036
	.quad	.Ltmp1037
	.quad	.Ltmp1038
	.quad	.Ltmp1039
	.quad	.Ltmp1040
	.quad	.Ltmp1041
	.quad	.Ltmp1042
	.quad	.Ltmp1043
	.quad	.Ltmp1044
	.quad	.Ltmp1045
	.quad	.Ltmp1046
	.quad	.Ltmp1047
	.quad	.Ltmp1048
	.quad	.Ltmp1049
	.quad	.Ltmp1050
	.quad	.Ltmp1051
	.quad	.Ltmp1052
	.quad	.Ltmp1053
	.quad	.Ltmp1054
	.quad	.Ltmp1055
	.quad	.Ltmp1056
	.quad	.Ltmp1057
	.quad	.Ltmp1058
	.quad	.Ltmp1059
	.quad	.Ltmp1060
	.quad	.Ltmp1061
	.quad	.Ltmp1062
	.quad	.Ltmp1063
	.quad	.Ltmp1064
	.quad	.Ltmp1065
	.quad	.Ltmp1066
	.quad	.Ltmp1067
	.quad	.Ltmp1068
	.quad	.Ltmp1069
	.quad	.Ltmp1070
	.quad	.Ltmp1071
	.quad	.Ltmp1072
	.quad	.Ltmp1073
	.quad	.Ltmp1074
	.quad	.Ltmp1075
	.quad	.Ltmp1076
	.quad	.Ltmp1077
	.quad	.Ltmp1078
	.quad	.Ltmp1079
	.quad	.Ltmp1080
	.quad	.Ltmp1081
	.quad	.Ltmp1082
	.quad	.Ltmp1083
	.quad	.Ltmp1084
	.quad	.Ltmp1085
	.quad	.Ltmp1086
	.quad	.Ltmp1087
	.quad	.Ltmp1088
	.quad	.Ltmp1089
	.quad	.Ltmp1090
	.quad	.Ltmp1091
	.size	_ZN8MEMORY_T6POKE64Edd.tmp$2485, 2048

	.type	.L.str.973,@object      # @.str.973
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.973:
	.asciz	"mat2x3"
	.size	.L.str.973, 7

	.type	.L.str.974,@object      # @.str.974
.L.str.974:
	.asciz	"mat2x4"
	.size	.L.str.974, 7

	.type	.L.str.975,@object      # @.str.975
.L.str.975:
	.asciz	"mat3"
	.size	.L.str.975, 5

	.type	.L.str.976,@object      # @.str.976
.L.str.976:
	.asciz	"mat3x2"
	.size	.L.str.976, 7

	.type	.L.str.977,@object      # @.str.977
.L.str.977:
	.asciz	"mat3x3"
	.size	.L.str.977, 7

	.type	.L.str.978,@object      # @.str.978
.L.str.978:
	.asciz	"mat3x4"
	.size	.L.str.978, 7

	.type	.L.str.979,@object      # @.str.979
.L.str.979:
	.asciz	"mat4"
	.size	.L.str.979, 5

	.type	.L.str.980,@object      # @.str.980
.L.str.980:
	.asciz	"mat4x2"
	.size	.L.str.980, 7

	.type	.L.str.981,@object      # @.str.981
.L.str.981:
	.asciz	"mat4x3"
	.size	.L.str.981, 7

	.type	.L.str.982,@object      # @.str.982
.L.str.982:
	.asciz	"mat4x4"
	.size	.L.str.982, 7

	.type	.L.str.983,@object      # @.str.983
.L.str.983:
	.asciz	"material"
	.size	.L.str.983, 9

	.type	.L.str.984,@object      # @.str.984
.L.str.984:
	.asciz	"material_map"
	.size	.L.str.984, 13

	.type	.L.str.985,@object      # @.str.985
.L.str.985:
	.asciz	"matrix"
	.size	.L.str.985, 7

	.type	.L.str.986,@object      # @.str.986
.L.str.986:
	.asciz	"max"
	.size	.L.str.986, 4

	.type	.L.str.987,@object      # @.str.987
.L.str.987:
	.asciz	"max_extent"
	.size	.L.str.987, 11

	.type	.L.str.988,@object      # @.str.988
.L.str.988:
	.asciz	"max_gradient"
	.size	.L.str.988, 13

	.type	.L.str.989,@object      # @.str.989
.L.str.989:
	.asciz	"max_intersections"
	.size	.L.str.989, 18

	.type	.L.str.990,@object      # @.str.990
.L.str.990:
	.asciz	"max_iteration"
	.size	.L.str.990, 14

	.type	.L.str.991,@object      # @.str.991
.L.str.991:
	.asciz	"max_sample"
	.size	.L.str.991, 11

	.type	.L.str.992,@object      # @.str.992
.L.str.992:
	.asciz	"max_trace"
	.size	.L.str.992, 10

	.type	.L.str.993,@object      # @.str.993
.L.str.993:
	.asciz	"max_trace_level"
	.size	.L.str.993, 16

	.type	.L.str.994,@object      # @.str.994
.L.str.994:
	.asciz	"m_e"
	.size	.L.str.994, 4

	.type	.L.str.995,@object      # @.str.995
.L.str.995:
	.asciz	"media"
	.size	.L.str.995, 6

	.type	.L.str.996,@object      # @.str.996
.L.str.996:
	.asciz	"media_attenuation"
	.size	.L.str.996, 18

	.type	.L.str.997,@object      # @.str.997
.L.str.997:
	.asciz	"media_interaction"
	.size	.L.str.997, 18

	.type	.L.str.998,@object      # @.str.998
.L.str.998:
	.asciz	"mediump"
	.size	.L.str.998, 8

	.type	.L.str.999,@object      # @.str.999
.L.str.999:
	.asciz	"memory"
	.size	.L.str.999, 7

	.type	.L.str.1000,@object     # @.str.1000
.L.str.1000:
	.asciz	"memory_size"
	.size	.L.str.1000, 12

	.type	.L.str.1001,@object     # @.str.1001
.L.str.1001:
	.asciz	"merge"
	.size	.L.str.1001, 6

	.type	.L.str.1002,@object     # @.str.1002
.L.str.1002:
	.asciz	"mesh"
	.size	.L.str.1002, 5

	.type	.L.str.1003,@object     # @.str.1003
.L.str.1003:
	.asciz	"mesh2"
	.size	.L.str.1003, 6

	.type	.L.str.1004,@object     # @.str.1004
.L.str.1004:
	.asciz	"message"
	.size	.L.str.1004, 8

	.type	.L.str.1005,@object     # @.str.1005
.L.str.1005:
	.asciz	"metaclass"
	.size	.L.str.1005, 10

	.type	.L.str.1006,@object     # @.str.1006
.L.str.1006:
	.asciz	"meta_hint"
	.size	.L.str.1006, 10

	.type	.L.str.1007,@object     # @.str.1007
.L.str.1007:
	.asciz	"metallic"
	.size	.L.str.1007, 9

	.type	.L.str.1008,@object     # @.str.1008
.L.str.1008:
	.asciz	"method"
	.size	.L.str.1008, 7

	.type	.L.str.1009,@object     # @.str.1009
.L.str.1009:
	.asciz	"method-id"
	.size	.L.str.1009, 10

	.type	.L.str.1010,@object     # @.str.1010
.L.str.1010:
	.asciz	"metric"
	.size	.L.str.1010, 7

	.type	.L.str.1011,@object     # @.str.1011
.L.str.1011:
	.asciz	"microfacet"
	.size	.L.str.1011, 11

	.type	.L.str.1012,@object     # @.str.1012
.L.str.1012:
	.asciz	"mid"
	.size	.L.str.1012, 4

	.type	.L.str.1013,@object     # @.str.1013
.L.str.1013:
	.asciz	"min"
	.size	.L.str.1013, 4

	.type	.L.str.1014,@object     # @.str.1014
.L.str.1014:
	.asciz	"min_extentv"
	.size	.L.str.1014, 12

	.type	.L.str.1015,@object     # @.str.1015
.L.str.1015:
	.asciz	"minimum_reuse"
	.size	.L.str.1015, 14

	.type	.L.str.1016,@object     # @.str.1016
.L.str.1016:
	.asciz	"minute"
	.size	.L.str.1016, 7

	.type	.L.str.1017,@object     # @.str.1017
.L.str.1017:
	.asciz	"mkd"
	.size	.L.str.1017, 4

	.type	.L.str.1018,@object     # @.str.1018
.L.str.1018:
	.asciz	"mkdir"
	.size	.L.str.1018, 6

	.type	.L.str.1019,@object     # @.str.1019
.L.str.1019:
	.asciz	"mki"
	.size	.L.str.1019, 4

	.type	.L.str.1020,@object     # @.str.1020
.L.str.1020:
	.asciz	"mks"
	.size	.L.str.1020, 4

	.type	.L.str.1021,@object     # @.str.1021
.L.str.1021:
	.asciz	"m_ln"
	.size	.L.str.1021, 5

	.type	.L.str.1022,@object     # @.str.1022
.L.str.1022:
	.asciz	"m_ln2"
	.size	.L.str.1022, 6

	.type	.L.str.1023,@object     # @.str.1023
.L.str.1023:
	.asciz	"m_log10e"
	.size	.L.str.1023, 9

	.type	.L.str.1024,@object     # @.str.1024
.L.str.1024:
	.asciz	"m_log2e"
	.size	.L.str.1024, 8

	.type	.L.str.1025,@object     # @.str.1025
.L.str.1025:
	.asciz	"mod"
	.size	.L.str.1025, 4

	.type	.L.str.1026,@object     # @.str.1026
.L.str.1026:
	.asciz	"mode"
	.size	.L.str.1026, 5

	.type	.L.str.1027,@object     # @.str.1027
.L.str.1027:
	.asciz	"modules"
	.size	.L.str.1027, 8

	.type	.L.str.1028,@object     # @.str.1028
.L.str.1028:
	.asciz	"month"
	.size	.L.str.1028, 6

	.type	.L.str.1029,@object     # @.str.1029
.L.str.1029:
	.asciz	"more-labels"
	.size	.L.str.1029, 12

	.type	.L.str.1030,@object     # @.str.1030
.L.str.1030:
	.asciz	"mortar"
	.size	.L.str.1030, 7

	.type	.L.str.1031,@object     # @.str.1031
.L.str.1031:
	.asciz	"motor"
	.size	.L.str.1031, 6

	.type	.L.str.1032,@object     # @.str.1032
.L.str.1032:
	.asciz	"move"
	.size	.L.str.1032, 5

	.type	.L.str.1033,@object     # @.str.1033
.L.str.1033:
	.asciz	"m_pi"
	.size	.L.str.1033, 5

	.type	.L.str.1034,@object     # @.str.1034
.L.str.1034:
	.asciz	"m_pi_2"
	.size	.L.str.1034, 7

	.type	.L.str.1035,@object     # @.str.1035
.L.str.1035:
	.asciz	"m_pi_4"
	.size	.L.str.1035, 7

	.type	.L.str.1036,@object     # @.str.1036
.L.str.1036:
	.asciz	"m_sqrt"
	.size	.L.str.1036, 7

	.type	.L.str.1037,@object     # @.str.1037
.L.str.1037:
	.asciz	"m_sqrt2"
	.size	.L.str.1037, 8

	.type	.L.str.1038,@object     # @.str.1038
.L.str.1038:
	.asciz	"multiple"
	.size	.L.str.1038, 9

	.type	.L.str.1039,@object     # @.str.1039
.L.str.1039:
	.asciz	"multiply"
	.size	.L.str.1039, 9

	.type	.L.str.1040,@object     # @.str.1040
.L.str.1040:
	.asciz	"name"
	.size	.L.str.1040, 5

	.type	.L.str.1041,@object     # @.str.1041
.L.str.1041:
	.asciz	"namelist"
	.size	.L.str.1041, 9

	.type	.L.str.1042,@object     # @.str.1042
.L.str.1042:
	.asciz	"native"
	.size	.L.str.1042, 7

	.type	.L.str.1043,@object     # @.str.1043
.L.str.1043:
	.asciz	"native_binary"
	.size	.L.str.1043, 14

	.type	.L.str.1044,@object     # @.str.1044
.L.str.1044:
	.asciz	"natural"
	.size	.L.str.1044, 8

	.type	.L.str.1045,@object     # @.str.1045
.L.str.1045:
	.asciz	"natural_spline"
	.size	.L.str.1045, 15

	.type	.L.str.1046,@object     # @.str.1046
.L.str.1046:
	.asciz	"nchar"
	.size	.L.str.1046, 6

	.type	.L.str.1047,@object     # @.str.1047
.L.str.1047:
	.asciz	"near"
	.size	.L.str.1047, 5

	.type	.L.str.1048,@object     # @.str.1048
.L.str.1048:
	.asciz	"nearest_count"
	.size	.L.str.1048, 14

	.type	.L.str.1049,@object     # @.str.1049
.L.str.1049:
	.asciz	"negative"
	.size	.L.str.1049, 9

	.type	.L.str.1050,@object     # @.str.1050
.L.str.1050:
	.asciz	"nested_loop"
	.size	.L.str.1050, 12

	.type	.L.str.1051,@object     # @.str.1051
.L.str.1051:
	.asciz	"new"
	.size	.L.str.1051, 4

	.type	.L.str.1052,@object     # @.str.1052
.L.str.1052:
	.asciz	"next"
	.size	.L.str.1052, 5

	.type	.L.str.1053,@object     # @.str.1053
.L.str.1053:
	.asciz	"nil"
	.size	.L.str.1053, 4

	.type	.L.str.1054,@object     # @.str.1054
.L.str.1054:
	.asciz	"no"
	.size	.L.str.1054, 3

	.type	.L.str.1055,@object     # @.str.1055
.L.str.1055:
	.asciz	"no_bump_scale"
	.size	.L.str.1055, 14

	.type	.L.str.1056,@object     # @.str.1056
.L.str.1056:
	.asciz	"no_cache"
	.size	.L.str.1056, 9

	.type	.L.str.1057,@object     # @.str.1057
.L.str.1057:
	.asciz	"no_image"
	.size	.L.str.1057, 9

	.type	.L.str.1058,@object     # @.str.1058
.L.str.1058:
	.asciz	"noise"
	.size	.L.str.1058, 6

	.type	.L.str.1059,@object     # @.str.1059
.L.str.1059:
	.asciz	"noise_generator"
	.size	.L.str.1059, 16

	.type	.L.str.1060,@object     # @.str.1060
.L.str.1060:
	.asciz	"none"
	.size	.L.str.1060, 5

	.type	.L.str.1061,@object     # @.str.1061
.L.str.1061:
	.asciz	"nonlocal"
	.size	.L.str.1061, 9

	.type	.L.str.1062,@object     # @.str.1062
.L.str.1062:
	.asciz	"noperspective"
	.size	.L.str.1062, 14

	.type	.L.str.1063,@object     # @.str.1063
.L.str.1063:
	.asciz	"no_reflection"
	.size	.L.str.1063, 14

	.type	.L.str.1064,@object     # @.str.1064
.L.str.1064:
	.asciz	"normal"
	.size	.L.str.1064, 7

	.type	.L.str.1065,@object     # @.str.1065
.L.str.1065:
	.asciz	"normal_indices"
	.size	.L.str.1065, 15

	.type	.L.str.1066,@object     # @.str.1066
.L.str.1066:
	.asciz	"normalize"
	.size	.L.str.1066, 10

	.type	.L.str.1067,@object     # @.str.1067
.L.str.1067:
	.asciz	"normal_map"
	.size	.L.str.1067, 11

	.type	.L.str.1068,@object     # @.str.1068
.L.str.1068:
	.asciz	"normal_vectors"
	.size	.L.str.1068, 15

	.type	.L.str.1069,@object     # @.str.1069
.L.str.1069:
	.asciz	"no_shadow"
	.size	.L.str.1069, 10

	.type	.L.str.1070,@object     # @.str.1070
.L.str.1070:
	.asciz	"nostackframe"
	.size	.L.str.1070, 13

	.type	.L.str.1071,@object     # @.str.1071
.L.str.1071:
	.asciz	"not"
	.size	.L.str.1071, 4

	.type	.L.str.1072,@object     # @.str.1072
.L.str.1072:
	.asciz	"noteq"
	.size	.L.str.1072, 6

	.type	.L.str.1073,@object     # @.str.1073
.L.str.1073:
	.asciz	"null"
	.size	.L.str.1073, 5

	.type	.L.str.1074,@object     # @.str.1074
.L.str.1074:
	.asciz	"nulls"
	.size	.L.str.1074, 6

	.type	.L.str.1075,@object     # @.str.1075
.L.str.1075:
	.asciz	"number"
	.size	.L.str.1075, 7

	.type	.L.str.1076,@object     # @.str.1076
.L.str.1076:
	.asciz	"number_of_waves"
	.size	.L.str.1076, 16

	.type	.L.str.1077,@object     # @.str.1077
.L.str.1077:
	.asciz	"numeric"
	.size	.L.str.1077, 8

	.type	.L.str.1078,@object     # @.str.1078
.L.str.1078:
	.asciz	"numeric-edited"
	.size	.L.str.1078, 15

	.type	.L.str.1079,@object     # @.str.1079
.L.str.1079:
	.asciz	"object"
	.size	.L.str.1079, 7

	.type	.L.str.1080,@object     # @.str.1080
.L.str.1080:
	.asciz	"object-computer"
	.size	.L.str.1080, 16

	.type	.L.str.1081,@object     # @.str.1081
.L.str.1081:
	.asciz	"occurs"
	.size	.L.str.1081, 7

	.type	.L.str.1082,@object     # @.str.1082
.L.str.1082:
	.asciz	"oct"
	.size	.L.str.1082, 4

	.type	.L.str.1083,@object     # @.str.1083
.L.str.1083:
	.asciz	"octaves"
	.size	.L.str.1083, 8

	.type	.L.str.1084,@object     # @.str.1084
.L.str.1084:
	.asciz	"octet_length"
	.size	.L.str.1084, 13

	.type	.L.str.1085,@object     # @.str.1085
.L.str.1085:
	.asciz	"of"
	.size	.L.str.1085, 3

	.type	.L.str.1086,@object     # @.str.1086
.L.str.1086:
	.asciz	"off"
	.size	.L.str.1086, 4

	.type	.L.str.1087,@object     # @.str.1087
.L.str.1087:
	.asciz	"offset"
	.size	.L.str.1087, 7

	.type	.L.str.1088,@object     # @.str.1088
.L.str.1088:
	.asciz	"oldfpccall"
	.size	.L.str.1088, 11

	.type	.L.str.1089,@object     # @.str.1089
.L.str.1089:
	.asciz	"omega"
	.size	.L.str.1089, 6

	.type	.L.str.1090,@object     # @.str.1090
.L.str.1090:
	.asciz	"omitted"
	.size	.L.str.1090, 8

	.type	.L.str.1091,@object     # @.str.1091
.L.str.1091:
	.asciz	"omnimax"
	.size	.L.str.1091, 8

	.type	.L.str.1092,@object     # @.str.1092
.L.str.1092:
	.asciz	"on"
	.size	.L.str.1092, 3

	.type	.L.str.1093,@object     # @.str.1093
.L.str.1093:
	.asciz	"once"
	.size	.L.str.1093, 5

	.type	.L.str.1094,@object     # @.str.1094
.L.str.1094:
	.asciz	"onion"
	.size	.L.str.1094, 6

	.type	.L.str.1095,@object     # @.str.1095
.L.str.1095:
	.asciz	"open"
	.size	.L.str.1095, 5

	.type	.L.str.1096,@object     # @.str.1096
.L.str.1096:
	.asciz	"operator"
	.size	.L.str.1096, 9

	.type	.L.str.1097,@object     # @.str.1097
.L.str.1097:
	.asciz	"option"
	.size	.L.str.1097, 7

	.type	.L.str.1098,@object     # @.str.1098
.L.str.1098:
	.asciz	"optional"
	.size	.L.str.1098, 9

	.type	.L.str.1099,@object     # @.str.1099
.L.str.1099:
	.asciz	"options"
	.size	.L.str.1099, 8

	.type	.L.str.1100,@object     # @.str.1100
.L.str.1100:
	.asciz	"or"
	.size	.L.str.1100, 3

	.type	.L.str.1101,@object     # @.str.1101
.L.str.1101:
	.asciz	"or_bits"
	.size	.L.str.1101, 8

	.type	.L.str.1102,@object     # @.str.1102
.L.str.1102:
	.asciz	"order"
	.size	.L.str.1102, 6

	.type	.L.str.1103,@object     # @.str.1103
.L.str.1103:
	.asciz	"ordered"
	.size	.L.str.1103, 8

	.type	.L.str.1104,@object     # @.str.1104
.L.str.1104:
	.asciz	"oren_nayar"
	.size	.L.str.1104, 11

	.type	.L.str.1105,@object     # @.str.1105
.L.str.1105:
	.asciz	"organization"
	.size	.L.str.1105, 13

	.type	.L.str.1106,@object     # @.str.1106
.L.str.1106:
	.asciz	"orient"
	.size	.L.str.1106, 7

	.type	.L.str.1107,@object     # @.str.1107
.L.str.1107:
	.asciz	"orientation"
	.size	.L.str.1107, 12

	.type	.L.str.1108,@object     # @.str.1108
.L.str.1108:
	.asciz	"orthographic"
	.size	.L.str.1108, 13

	.type	.L.str.1109,@object     # @.str.1109
.L.str.1109:
	.asciz	"other"
	.size	.L.str.1109, 6

	.type	.L.str.1110,@object     # @.str.1110
.L.str.1110:
	.asciz	"out"
	.size	.L.str.1110, 4

	.type	.L.str.1111,@object     # @.str.1111
.L.str.1111:
	.asciz	"outer"
	.size	.L.str.1111, 6

	.type	.L.str.1112,@object     # @.str.1112
.L.str.1112:
	.asciz	"output"
	.size	.L.str.1112, 7

	.type	.L.str.1113,@object     # @.str.1113
.L.str.1113:
	.asciz	"overflow"
	.size	.L.str.1113, 9

	.type	.L.str.1114,@object     # @.str.1114
.L.str.1114:
	.asciz	"overlaps"
	.size	.L.str.1114, 9

	.type	.L.str.1115,@object     # @.str.1115
.L.str.1115:
	.asciz	"override"
	.size	.L.str.1115, 9

	.type	.L.str.1116,@object     # @.str.1116
.L.str.1116:
	.asciz	"packed"
	.size	.L.str.1116, 7

	.type	.L.str.1117,@object     # @.str.1117
.L.str.1117:
	.asciz	"packed-decimal"
	.size	.L.str.1117, 15

	.type	.L.str.1118,@object     # @.str.1118
.L.str.1118:
	.asciz	"padding"
	.size	.L.str.1118, 8

	.type	.L.str.1119,@object     # @.str.1119
.L.str.1119:
	.asciz	"page"
	.size	.L.str.1119, 5

	.type	.L.str.1120,@object     # @.str.1120
.L.str.1120:
	.asciz	"page-counter"
	.size	.L.str.1120, 13

	.type	.L.str.1121,@object     # @.str.1121
.L.str.1121:
	.asciz	"paint"
	.size	.L.str.1121, 6

	.type	.L.str.1122,@object     # @.str.1122
.L.str.1122:
	.asciz	"palette"
	.size	.L.str.1122, 8

	.type	.L.str.1123,@object     # @.str.1123
.L.str.1123:
	.asciz	"panoramic"
	.size	.L.str.1123, 10

	.type	.L.str.1124,@object     # @.str.1124
.L.str.1124:
	.asciz	"parallel"
	.size	.L.str.1124, 9

	.type	.L.str.1125,@object     # @.str.1125
.L.str.1125:
	.asciz	"parameter"
	.size	.L.str.1125, 10

	.type	.L.str.1126,@object     # @.str.1126
.L.str.1126:
	.asciz	"parametric"
	.size	.L.str.1126, 11

	.type	.L.str.1127,@object     # @.str.1127
.L.str.1127:
	.asciz	"partition"
	.size	.L.str.1127, 10

	.type	.L.str.1128,@object     # @.str.1128
.L.str.1128:
	.asciz	"pascal"
	.size	.L.str.1128, 7

	.type	.L.str.1129,@object     # @.str.1129
.L.str.1129:
	.asciz	"pass"
	.size	.L.str.1129, 5

	.type	.L.str.1130,@object     # @.str.1130
.L.str.1130:
	.asciz	"pass_through"
	.size	.L.str.1130, 13

	.type	.L.str.1131,@object     # @.str.1131
.L.str.1131:
	.asciz	"password"
	.size	.L.str.1131, 9

	.type	.L.str.1132,@object     # @.str.1132
.L.str.1132:
	.asciz	"pattern"
	.size	.L.str.1132, 8

	.type	.L.str.1133,@object     # @.str.1133
.L.str.1133:
	.asciz	"pause"
	.size	.L.str.1133, 6

	.type	.L.str.1134,@object     # @.str.1134
.L.str.1134:
	.asciz	"pcopy"
	.size	.L.str.1134, 6

	.type	.L.str.1135,@object     # @.str.1135
.L.str.1135:
	.asciz	"peek"
	.size	.L.str.1135, 5

	.type	.L.str.1136,@object     # @.str.1136
.L.str.1136:
	.asciz	"pen"
	.size	.L.str.1136, 4

	.type	.L.str.1137,@object     # @.str.1137
.L.str.1137:
	.asciz	"perform"
	.size	.L.str.1137, 8

	.type	.L.str.1138,@object     # @.str.1138
.L.str.1138:
	.asciz	"perspective"
	.size	.L.str.1138, 12

	.type	.L.str.1139,@object     # @.str.1139
.L.str.1139:
	.asciz	"pf"
	.size	.L.str.1139, 3

	.type	.L.str.1140,@object     # @.str.1140
.L.str.1140:
	.asciz	"pgm"
	.size	.L.str.1140, 4

	.type	.L.str.1141,@object     # @.str.1141
.L.str.1141:
	.asciz	"ph"
	.size	.L.str.1141, 3

	.type	.L.str.1142,@object     # @.str.1142
.L.str.1142:
	.asciz	"phase"
	.size	.L.str.1142, 6

	.type	.L.str.1143,@object     # @.str.1143
.L.str.1143:
	.asciz	"phong"
	.size	.L.str.1143, 6

	.type	.L.str.1144,@object     # @.str.1144
.L.str.1144:
	.asciz	"phong_size"
	.size	.L.str.1144, 11

	.type	.L.str.1145,@object     # @.str.1145
.L.str.1145:
	.asciz	"photons"
	.size	.L.str.1145, 8

	.type	.L.str.1146,@object     # @.str.1146
.L.str.1146:
	.asciz	"pi"
	.size	.L.str.1146, 3

	.type	.L.str.1147,@object     # @.str.1147
.L.str.1147:
	.asciz	"pic"
	.size	.L.str.1147, 4

	.type	.L.str.1148,@object     # @.str.1148
.L.str.1148:
	.asciz	"picture"
	.size	.L.str.1148, 8

	.type	.L.str.1149,@object     # @.str.1149
.L.str.1149:
	.asciz	"pigment"
	.size	.L.str.1149, 8

	.type	.L.str.1150,@object     # @.str.1150
.L.str.1150:
	.asciz	"pigment_map"
	.size	.L.str.1150, 12

	.type	.L.str.1151,@object     # @.str.1151
.L.str.1151:
	.asciz	"pigment_pattern"
	.size	.L.str.1151, 16

	.type	.L.str.1152,@object     # @.str.1152
.L.str.1152:
	.asciz	"planar"
	.size	.L.str.1152, 7

	.type	.L.str.1153,@object     # @.str.1153
.L.str.1153:
	.asciz	"plane"
	.size	.L.str.1153, 6

	.type	.L.str.1154,@object     # @.str.1154
.L.str.1154:
	.asciz	"play"
	.size	.L.str.1154, 5

	.type	.L.str.1155,@object     # @.str.1155
.L.str.1155:
	.asciz	"plus"
	.size	.L.str.1155, 5

	.type	.L.str.1156,@object     # @.str.1156
.L.str.1156:
	.asciz	"pmap"
	.size	.L.str.1156, 5

	.type	.L.str.1157,@object     # @.str.1157
.L.str.1157:
	.asciz	"png"
	.size	.L.str.1157, 4

	.type	.L.str.1158,@object     # @.str.1158
.L.str.1158:
	.asciz	"pnoise"
	.size	.L.str.1158, 7

	.type	.L.str.1159,@object     # @.str.1159
.L.str.1159:
	.asciz	"point"
	.size	.L.str.1159, 6

	.type	.L.str.1160,@object     # @.str.1160
.L.str.1160:
	.asciz	"point_at"
	.size	.L.str.1160, 9

	.type	.L.str.1161,@object     # @.str.1161
.L.str.1161:
	.asciz	"pointcloud_get"
	.size	.L.str.1161, 15

	.type	.L.str.1162,@object     # @.str.1162
.L.str.1162:
	.asciz	"pointcloud_search"
	.size	.L.str.1162, 18

	.type	.L.str.1163,@object     # @.str.1163
.L.str.1163:
	.asciz	"pointcloud_write"
	.size	.L.str.1163, 17

	.type	.L.str.1164,@object     # @.str.1164
.L.str.1164:
	.asciz	"pointer"
	.size	.L.str.1164, 8

	.type	.L.str.1165,@object     # @.str.1165
.L.str.1165:
	.asciz	"poke"
	.size	.L.str.1165, 5

	.type	.L.str.1166,@object     # @.str.1166
.L.str.1166:
	.asciz	"poly"
	.size	.L.str.1166, 5

	.type	.L.str.1167,@object     # @.str.1167
.L.str.1167:
	.asciz	"polygon"
	.size	.L.str.1167, 8

	.type	.L.str.1168,@object     # @.str.1168
.L.str.1168:
	.asciz	"poly_wave"
	.size	.L.str.1168, 10

	.type	.L.str.1169,@object     # @.str.1169
.L.str.1169:
	.asciz	"pos"
	.size	.L.str.1169, 4

	.type	.L.str.1170,@object     # @.str.1170
.L.str.1170:
	.asciz	"position"
	.size	.L.str.1170, 9

	.type	.L.str.1171,@object     # @.str.1171
.L.str.1171:
	.asciz	"position_b"
	.size	.L.str.1171, 11

	.type	.L.str.1172,@object     # @.str.1172
.L.str.1172:
	.asciz	"position_mb"
	.size	.L.str.1172, 12

	.type	.L.str.1173,@object     # @.str.1173
.L.str.1173:
	.asciz	"positive"
	.size	.L.str.1173, 9

	.type	.L.str.1174,@object     # @.str.1174
.L.str.1174:
	.asciz	"pot"
	.size	.L.str.1174, 4

	.type	.L.str.1175,@object     # @.str.1175
.L.str.1175:
	.asciz	"pow"
	.size	.L.str.1175, 4

	.type	.L.str.1176,@object     # @.str.1176
.L.str.1176:
	.asciz	"ppm"
	.size	.L.str.1176, 4

	.type	.L.str.1177,@object     # @.str.1177
.L.str.1177:
	.asciz	"precision"
	.size	.L.str.1177, 10

	.type	.L.str.1178,@object     # @.str.1178
.L.str.1178:
	.asciz	"precompute"
	.size	.L.str.1178, 11

	.type	.L.str.1179,@object     # @.str.1179
.L.str.1179:
	.asciz	"preset"
	.size	.L.str.1179, 7

	.type	.L.str.1180,@object     # @.str.1180
.L.str.1180:
	.asciz	"pretrace_end"
	.size	.L.str.1180, 13

	.type	.L.str.1181,@object     # @.str.1181
.L.str.1181:
	.asciz	"pretrace_start"
	.size	.L.str.1181, 15

	.type	.L.str.1182,@object     # @.str.1182
.L.str.1182:
	.asciz	"print"
	.size	.L.str.1182, 6

	.type	.L.str.1183,@object     # @.str.1183
.L.str.1183:
	.asciz	"printf"
	.size	.L.str.1183, 7

	.type	.L.str.1184,@object     # @.str.1184
.L.str.1184:
	.asciz	"printing"
	.size	.L.str.1184, 9

	.type	.L.str.1185,@object     # @.str.1185
.L.str.1185:
	.asciz	"prism"
	.size	.L.str.1185, 6

	.type	.L.str.1186,@object     # @.str.1186
.L.str.1186:
	.asciz	"private"
	.size	.L.str.1186, 8

	.type	.L.str.1187,@object     # @.str.1187
.L.str.1187:
	.asciz	"procedure"
	.size	.L.str.1187, 10

	.type	.L.str.1188,@object     # @.str.1188
.L.str.1188:
	.asciz	"procedure-pointer"
	.size	.L.str.1188, 18

	.type	.L.str.1189,@object     # @.str.1189
.L.str.1189:
	.asciz	"procedures"
	.size	.L.str.1189, 11

	.type	.L.str.1190,@object     # @.str.1190
.L.str.1190:
	.asciz	"proceed"
	.size	.L.str.1190, 8

	.type	.L.str.1191,@object     # @.str.1191
.L.str.1191:
	.asciz	"processing"
	.size	.L.str.1191, 11

	.type	.L.str.1192,@object     # @.str.1192
.L.str.1192:
	.asciz	"prod"
	.size	.L.str.1192, 5

	.type	.L.str.1193,@object     # @.str.1193
.L.str.1193:
	.asciz	"program"
	.size	.L.str.1193, 8

	.type	.L.str.1194,@object     # @.str.1194
.L.str.1194:
	.asciz	"program-id"
	.size	.L.str.1194, 11

	.type	.L.str.1195,@object     # @.str.1195
.L.str.1195:
	.asciz	"projected_through"
	.size	.L.str.1195, 18

	.type	.L.str.1196,@object     # @.str.1196
.L.str.1196:
	.asciz	"property"
	.size	.L.str.1196, 9

	.type	.L.str.1197,@object     # @.str.1197
.L.str.1197:
	.asciz	"protected"
	.size	.L.str.1197, 10

	.type	.L.str.1198,@object     # @.str.1198
.L.str.1198:
	.asciz	"pset"
	.size	.L.str.1198, 5

	.type	.L.str.1199,@object     # @.str.1199
.L.str.1199:
	.asciz	"psnoise"
	.size	.L.str.1199, 8

	.type	.L.str.1200,@object     # @.str.1200
.L.str.1200:
	.asciz	"ptype"
	.size	.L.str.1200, 6

	.type	.L.str.1201,@object     # @.str.1201
.L.str.1201:
	.asciz	"public"
	.size	.L.str.1201, 7

	.type	.L.str.1202,@object     # @.str.1202
.L.str.1202:
	.asciz	"published"
	.size	.L.str.1202, 10

	.type	.L.str.1203,@object     # @.str.1203
.L.str.1203:
	.asciz	"purge"
	.size	.L.str.1203, 6

	.type	.L.str.1204,@object     # @.str.1204
.L.str.1204:
	.asciz	"put"
	.size	.L.str.1204, 4

	.type	.L.str.1205,@object     # @.str.1205
.L.str.1205:
	.asciz	"pwr"
	.size	.L.str.1205, 4

	.type	.L.str.1206,@object     # @.str.1206
.L.str.1206:
	.asciz	"quadratic_spline"
	.size	.L.str.1206, 17

	.type	.L.str.1207,@object     # @.str.1207
.L.str.1207:
	.asciz	"quadric"
	.size	.L.str.1207, 8

	.type	.L.str.1208,@object     # @.str.1208
.L.str.1208:
	.asciz	"quartic"
	.size	.L.str.1208, 8

	.type	.L.str.1209,@object     # @.str.1209
.L.str.1209:
	.asciz	"quaternion"
	.size	.L.str.1209, 11

	.type	.L.str.1210,@object     # @.str.1210
.L.str.1210:
	.asciz	"queue"
	.size	.L.str.1210, 6

	.type	.L.str.1211,@object     # @.str.1211
.L.str.1211:
	.asciz	"quick_color"
	.size	.L.str.1211, 12

	.type	.L.str.1212,@object     # @.str.1212
.L.str.1212:
	.asciz	"quick_colour"
	.size	.L.str.1212, 13

	.type	.L.str.1213,@object     # @.str.1213
.L.str.1213:
	.asciz	"quilted"
	.size	.L.str.1213, 8

	.type	.L.str.1214,@object     # @.str.1214
.L.str.1214:
	.asciz	"quote"
	.size	.L.str.1214, 6

	.type	.L.str.1215,@object     # @.str.1215
.L.str.1215:
	.asciz	"quotes"
	.size	.L.str.1215, 7

	.type	.L.str.1216,@object     # @.str.1216
.L.str.1216:
	.asciz	"radial"
	.size	.L.str.1216, 7

	.type	.L.str.1217,@object     # @.str.1217
.L.str.1217:
	.asciz	"radians"
	.size	.L.str.1217, 8

	.type	.L.str.1218,@object     # @.str.1218
.L.str.1218:
	.asciz	"radiosity"
	.size	.L.str.1218, 10

	.type	.L.str.1219,@object     # @.str.1219
.L.str.1219:
	.asciz	"radius"
	.size	.L.str.1219, 7

	.type	.L.str.1220,@object     # @.str.1220
.L.str.1220:
	.asciz	"rainbow"
	.size	.L.str.1220, 8

	.type	.L.str.1221,@object     # @.str.1221
.L.str.1221:
	.asciz	"raise"
	.size	.L.str.1221, 6

	.type	.L.str.1222,@object     # @.str.1222
.L.str.1222:
	.asciz	"ramp_wave"
	.size	.L.str.1222, 10

	.type	.L.str.1223,@object     # @.str.1223
.L.str.1223:
	.asciz	"rand"
	.size	.L.str.1223, 5

	.type	_ZN8MEMORY_T6POKE64Edd.tmp$2486,@object # @"_ZN8MEMORY_T6POKE64Edd.tmp$2486"
	.data
	.p2align	4
_ZN8MEMORY_T6POKE64Edd.tmp$2486:
	.quad	.Ltmp1093
	.quad	.Ltmp1094
	.quad	.Ltmp1095
	.quad	.Ltmp1096
	.quad	.Ltmp1097
	.quad	.Ltmp1098
	.quad	.Ltmp1099
	.quad	.Ltmp1100
	.quad	.Ltmp1101
	.quad	.Ltmp1102
	.quad	.Ltmp1103
	.quad	.Ltmp1104
	.quad	.Ltmp1105
	.quad	.Ltmp1106
	.quad	.Ltmp1107
	.quad	.Ltmp1108
	.quad	.Ltmp1109
	.quad	.Ltmp1110
	.quad	.Ltmp1111
	.quad	.Ltmp1112
	.quad	.Ltmp1113
	.quad	.Ltmp1114
	.quad	.Ltmp1115
	.quad	.Ltmp1116
	.quad	.Ltmp1117
	.quad	.Ltmp1118
	.quad	.Ltmp1119
	.quad	.Ltmp1120
	.quad	.Ltmp1121
	.quad	.Ltmp1122
	.quad	.Ltmp1123
	.quad	.Ltmp1124
	.quad	.Ltmp1125
	.quad	.Ltmp1126
	.quad	.Ltmp1127
	.quad	.Ltmp1128
	.quad	.Ltmp1129
	.quad	.Ltmp1130
	.quad	.Ltmp1131
	.quad	.Ltmp1132
	.quad	.Ltmp1133
	.quad	.Ltmp1134
	.quad	.Ltmp1135
	.quad	.Ltmp1136
	.quad	.Ltmp1137
	.quad	.Ltmp1138
	.quad	.Ltmp1139
	.quad	.Ltmp1140
	.quad	.Ltmp1141
	.quad	.Ltmp1142
	.quad	.Ltmp1143
	.quad	.Ltmp1144
	.quad	.Ltmp1145
	.quad	.Ltmp1146
	.quad	.Ltmp1147
	.quad	.Ltmp1148
	.quad	.Ltmp1149
	.quad	.Ltmp1150
	.quad	.Ltmp1151
	.quad	.Ltmp1152
	.quad	.Ltmp1153
	.quad	.Ltmp1154
	.quad	.Ltmp1155
	.quad	.Ltmp1156
	.quad	.Ltmp1157
	.quad	.Ltmp1158
	.quad	.Ltmp1159
	.quad	.Ltmp1160
	.quad	.Ltmp1161
	.quad	.Ltmp1162
	.quad	.Ltmp1163
	.quad	.Ltmp1164
	.quad	.Ltmp1165
	.quad	.Ltmp1166
	.quad	.Ltmp1167
	.quad	.Ltmp1168
	.quad	.Ltmp1169
	.quad	.Ltmp1170
	.quad	.Ltmp1171
	.quad	.Ltmp1172
	.quad	.Ltmp1173
	.quad	.Ltmp1174
	.quad	.Ltmp1175
	.quad	.Ltmp1176
	.quad	.Ltmp1177
	.quad	.Ltmp1178
	.quad	.Ltmp1179
	.quad	.Ltmp1180
	.quad	.Ltmp1181
	.quad	.Ltmp1182
	.quad	.Ltmp1183
	.quad	.Ltmp1184
	.quad	.Ltmp1185
	.quad	.Ltmp1186
	.quad	.Ltmp1187
	.quad	.Ltmp1188
	.quad	.Ltmp1189
	.quad	.Ltmp1190
	.quad	.Ltmp1191
	.quad	.Ltmp1192
	.quad	.Ltmp1193
	.quad	.Ltmp1194
	.quad	.Ltmp1195
	.quad	.Ltmp1196
	.quad	.Ltmp1197
	.quad	.Ltmp1198
	.quad	.Ltmp1199
	.quad	.Ltmp1200
	.quad	.Ltmp1201
	.quad	.Ltmp1202
	.quad	.Ltmp1203
	.quad	.Ltmp1204
	.quad	.Ltmp1205
	.quad	.Ltmp1206
	.quad	.Ltmp1207
	.quad	.Ltmp1208
	.quad	.Ltmp1209
	.quad	.Ltmp1210
	.quad	.Ltmp1211
	.quad	.Ltmp1212
	.quad	.Ltmp1213
	.quad	.Ltmp1214
	.quad	.Ltmp1215
	.quad	.Ltmp1216
	.quad	.Ltmp1217
	.quad	.Ltmp1218
	.quad	.Ltmp1219
	.quad	.Ltmp1220
	.quad	.Ltmp1221
	.quad	.Ltmp1222
	.quad	.Ltmp1223
	.quad	.Ltmp1224
	.quad	.Ltmp1225
	.quad	.Ltmp1226
	.quad	.Ltmp1227
	.quad	.Ltmp1228
	.quad	.Ltmp1229
	.quad	.Ltmp1230
	.quad	.Ltmp1231
	.quad	.Ltmp1232
	.quad	.Ltmp1233
	.quad	.Ltmp1234
	.quad	.Ltmp1235
	.quad	.Ltmp1236
	.quad	.Ltmp1237
	.quad	.Ltmp1238
	.quad	.Ltmp1239
	.quad	.Ltmp1240
	.quad	.Ltmp1241
	.quad	.Ltmp1242
	.quad	.Ltmp1243
	.quad	.Ltmp1244
	.quad	.Ltmp1245
	.quad	.Ltmp1246
	.quad	.Ltmp1247
	.quad	.Ltmp1248
	.quad	.Ltmp1249
	.quad	.Ltmp1250
	.quad	.Ltmp1251
	.quad	.Ltmp1252
	.quad	.Ltmp1253
	.quad	.Ltmp1254
	.quad	.Ltmp1255
	.quad	.Ltmp1256
	.quad	.Ltmp1257
	.quad	.Ltmp1258
	.quad	.Ltmp1259
	.quad	.Ltmp1260
	.quad	.Ltmp1261
	.quad	.Ltmp1262
	.quad	.Ltmp1263
	.quad	.Ltmp1264
	.quad	.Ltmp1265
	.quad	.Ltmp1266
	.quad	.Ltmp1267
	.quad	.Ltmp1268
	.quad	.Ltmp1269
	.quad	.Ltmp1270
	.quad	.Ltmp1271
	.quad	.Ltmp1272
	.quad	.Ltmp1273
	.quad	.Ltmp1274
	.quad	.Ltmp1275
	.quad	.Ltmp1276
	.quad	.Ltmp1277
	.quad	.Ltmp1278
	.quad	.Ltmp1279
	.quad	.Ltmp1280
	.quad	.Ltmp1281
	.quad	.Ltmp1282
	.quad	.Ltmp1283
	.quad	.Ltmp1284
	.quad	.Ltmp1285
	.quad	.Ltmp1286
	.quad	.Ltmp1287
	.quad	.Ltmp1288
	.quad	.Ltmp1289
	.quad	.Ltmp1290
	.quad	.Ltmp1291
	.quad	.Ltmp1292
	.quad	.Ltmp1293
	.quad	.Ltmp1294
	.quad	.Ltmp1295
	.quad	.Ltmp1296
	.quad	.Ltmp1297
	.quad	.Ltmp1298
	.quad	.Ltmp1299
	.quad	.Ltmp1300
	.quad	.Ltmp1301
	.quad	.Ltmp1302
	.quad	.Ltmp1303
	.quad	.Ltmp1304
	.quad	.Ltmp1305
	.quad	.Ltmp1306
	.quad	.Ltmp1307
	.quad	.Ltmp1308
	.quad	.Ltmp1309
	.quad	.Ltmp1310
	.quad	.Ltmp1311
	.quad	.Ltmp1312
	.quad	.Ltmp1313
	.quad	.Ltmp1314
	.quad	.Ltmp1315
	.quad	.Ltmp1316
	.quad	.Ltmp1317
	.quad	.Ltmp1318
	.quad	.Ltmp1319
	.quad	.Ltmp1320
	.quad	.Ltmp1321
	.quad	.Ltmp1322
	.quad	.Ltmp1323
	.quad	.Ltmp1324
	.quad	.Ltmp1325
	.quad	.Ltmp1326
	.quad	.Ltmp1327
	.quad	.Ltmp1328
	.quad	.Ltmp1329
	.quad	.Ltmp1330
	.quad	.Ltmp1331
	.quad	.Ltmp1332
	.quad	.Ltmp1333
	.quad	.Ltmp1334
	.quad	.Ltmp1335
	.quad	.Ltmp1336
	.quad	.Ltmp1337
	.quad	.Ltmp1338
	.quad	.Ltmp1339
	.quad	.Ltmp1340
	.quad	.Ltmp1341
	.quad	.Ltmp1342
	.quad	.Ltmp1343
	.quad	.Ltmp1344
	.quad	.Ltmp1345
	.quad	.Ltmp1346
	.quad	.Ltmp1347
	.quad	.Ltmp1348
	.size	_ZN8MEMORY_T6POKE64Edd.tmp$2486, 2048

	.type	.L.str.1224,@object     # @.str.1224
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1224:
	.asciz	"random"
	.size	.L.str.1224, 7

	.type	.L.str.1225,@object     # @.str.1225
.L.str.1225:
	.asciz	"randomize"
	.size	.L.str.1225, 10

	.type	.L.str.1226,@object     # @.str.1226
.L.str.1226:
	.asciz	"range"
	.size	.L.str.1226, 6

	.type	.L.str.1227,@object     # @.str.1227
.L.str.1227:
	.asciz	"ratio"
	.size	.L.str.1227, 6

	.type	.L.str.1228,@object     # @.str.1228
.L.str.1228:
	.asciz	"raytype"
	.size	.L.str.1228, 8

	.type	.L.str.1229,@object     # @.str.1229
.L.str.1229:
	.asciz	"rd"
	.size	.L.str.1229, 3

	.type	.L.str.1230,@object     # @.str.1230
.L.str.1230:
	.asciz	"read"
	.size	.L.str.1230, 5

	.type	.L.str.1231,@object     # @.str.1231
.L.str.1231:
	.asciz	"ready"
	.size	.L.str.1231, 6

	.type	.L.str.1232,@object     # @.str.1232
.L.str.1232:
	.asciz	"real"
	.size	.L.str.1232, 5

	.type	.L.str.1233,@object     # @.str.1233
.L.str.1233:
	.asciz	"receive"
	.size	.L.str.1233, 8

	.type	.L.str.1234,@object     # @.str.1234
.L.str.1234:
	.asciz	"reciprocal"
	.size	.L.str.1234, 11

	.type	.L.str.1235,@object     # @.str.1235
.L.str.1235:
	.asciz	"record"
	.size	.L.str.1235, 7

	.type	.L.str.1236,@object     # @.str.1236
.L.str.1236:
	.asciz	"recording"
	.size	.L.str.1236, 10

	.type	.L.str.1237,@object     # @.str.1237
.L.str.1237:
	.asciz	"records"
	.size	.L.str.1237, 8

	.type	.L.str.1238,@object     # @.str.1238
.L.str.1238:
	.asciz	"recursion_limit"
	.size	.L.str.1238, 16

	.type	.L.str.1239,@object     # @.str.1239
.L.str.1239:
	.asciz	"recursive"
	.size	.L.str.1239, 10

	.type	.L.str.1240,@object     # @.str.1240
.L.str.1240:
	.asciz	"red"
	.size	.L.str.1240, 4

	.type	.L.str.1241,@object     # @.str.1241
.L.str.1241:
	.asciz	"redefines"
	.size	.L.str.1241, 10

	.type	.L.str.1242,@object     # @.str.1242
.L.str.1242:
	.asciz	"reel"
	.size	.L.str.1242, 5

	.type	.L.str.1243,@object     # @.str.1243
.L.str.1243:
	.asciz	"reference"
	.size	.L.str.1243, 10

	.type	.L.str.1244,@object     # @.str.1244
.L.str.1244:
	.asciz	"references"
	.size	.L.str.1244, 11

	.type	.L.str.1245,@object     # @.str.1245
.L.str.1245:
	.asciz	"reflect"
	.size	.L.str.1245, 8

	.type	.L.str.1246,@object     # @.str.1246
.L.str.1246:
	.asciz	"reflection"
	.size	.L.str.1246, 11

	.type	.L.str.1247,@object     # @.str.1247
.L.str.1247:
	.asciz	"reflection_exponent"
	.size	.L.str.1247, 20

	.type	.L.str.1248,@object     # @.str.1248
.L.str.1248:
	.asciz	"refract"
	.size	.L.str.1248, 8

	.type	.L.str.1249,@object     # @.str.1249
.L.str.1249:
	.asciz	"refraction"
	.size	.L.str.1249, 11

	.type	.L.str.1250,@object     # @.str.1250
.L.str.1250:
	.asciz	"regex_match"
	.size	.L.str.1250, 12

	.type	.L.str.1251,@object     # @.str.1251
.L.str.1251:
	.asciz	"regex_search"
	.size	.L.str.1251, 13

	.type	.L.str.1252,@object     # @.str.1252
.L.str.1252:
	.asciz	"register"
	.size	.L.str.1252, 9

	.type	.L.str.1253,@object     # @.str.1253
.L.str.1253:
	.asciz	"reintroduce"
	.size	.L.str.1253, 12

	.type	.L.str.1254,@object     # @.str.1254
.L.str.1254:
	.asciz	"relative"
	.size	.L.str.1254, 9

	.type	.L.str.1255,@object     # @.str.1255
.L.str.1255:
	.asciz	"release"
	.size	.L.str.1255, 8

	.type	.L.str.1256,@object     # @.str.1256
.L.str.1256:
	.asciz	"reload"
	.size	.L.str.1256, 7

	.type	.L.str.1257,@object     # @.str.1257
.L.str.1257:
	.asciz	"rem"
	.size	.L.str.1257, 4

	.type	.L.str.1258,@object     # @.str.1258
.L.str.1258:
	.asciz	"remainder"
	.size	.L.str.1258, 10

	.type	.L.str.1259,@object     # @.str.1259
.L.str.1259:
	.asciz	"removal"
	.size	.L.str.1259, 8

	.type	.L.str.1260,@object     # @.str.1260
.L.str.1260:
	.asciz	"renames"
	.size	.L.str.1260, 8

	.type	.L.str.1261,@object     # @.str.1261
.L.str.1261:
	.asciz	"render"
	.size	.L.str.1261, 7

	.type	.L.str.1262,@object     # @.str.1262
.L.str.1262:
	.asciz	"renum"
	.size	.L.str.1262, 6

	.type	.L.str.1263,@object     # @.str.1263
.L.str.1263:
	.asciz	"repeat"
	.size	.L.str.1263, 7

	.type	.L.str.1264,@object     # @.str.1264
.L.str.1264:
	.asciz	"replace"
	.size	.L.str.1264, 8

	.type	.L.str.1265,@object     # @.str.1265
.L.str.1265:
	.asciz	"replacing"
	.size	.L.str.1265, 10

	.type	.L.str.1266,@object     # @.str.1266
.L.str.1266:
	.asciz	"report"
	.size	.L.str.1266, 7

	.type	.L.str.1267,@object     # @.str.1267
.L.str.1267:
	.asciz	"reporting"
	.size	.L.str.1267, 10

	.type	.L.str.1268,@object     # @.str.1268
.L.str.1268:
	.asciz	"reports"
	.size	.L.str.1268, 8

	.type	.L.str.1269,@object     # @.str.1269
.L.str.1269:
	.asciz	"repository"
	.size	.L.str.1269, 11

	.type	.L.str.1270,@object     # @.str.1270
.L.str.1270:
	.asciz	"rerun"
	.size	.L.str.1270, 6

	.type	.L.str.1271,@object     # @.str.1271
.L.str.1271:
	.asciz	"reserve"
	.size	.L.str.1271, 8

	.type	.L.str.1272,@object     # @.str.1272
.L.str.1272:
	.asciz	"reset"
	.size	.L.str.1272, 6

	.type	.L.str.1273,@object     # @.str.1273
.L.str.1273:
	.asciz	"restore"
	.size	.L.str.1273, 8

	.type	.L.str.1274,@object     # @.str.1274
.L.str.1274:
	.asciz	"resume"
	.size	.L.str.1274, 7

	.type	.L.str.1275,@object     # @.str.1275
.L.str.1275:
	.asciz	"return"
	.size	.L.str.1275, 7

	.type	.L.str.1276,@object     # @.str.1276
.L.str.1276:
	.asciz	"return-code"
	.size	.L.str.1276, 12

	.type	.L.str.1277,@object     # @.str.1277
.L.str.1277:
	.asciz	"returning"
	.size	.L.str.1277, 10

	.type	.L.str.1278,@object     # @.str.1278
.L.str.1278:
	.asciz	"reversed"
	.size	.L.str.1278, 9

	.type	.L.str.1279,@object     # @.str.1279
.L.str.1279:
	.asciz	"rewind"
	.size	.L.str.1279, 7

	.type	.L.str.1280,@object     # @.str.1280
.L.str.1280:
	.asciz	"rewrite"
	.size	.L.str.1280, 8

	.type	.L.str.1281,@object     # @.str.1281
.L.str.1281:
	.asciz	"rf"
	.size	.L.str.1281, 3

	.type	.L.str.1282,@object     # @.str.1282
.L.str.1282:
	.asciz	"rgb"
	.size	.L.str.1282, 4

	.type	.L.str.1283,@object     # @.str.1283
.L.str.1283:
	.asciz	"rgbf"
	.size	.L.str.1283, 5

	.type	.L.str.1284,@object     # @.str.1284
.L.str.1284:
	.asciz	"rgbft"
	.size	.L.str.1284, 6

	.type	.L.str.1285,@object     # @.str.1285
.L.str.1285:
	.asciz	"rgbt"
	.size	.L.str.1285, 5

	.type	.L.str.1286,@object     # @.str.1286
.L.str.1286:
	.asciz	"rh"
	.size	.L.str.1286, 3

	.type	.L.str.1287,@object     # @.str.1287
.L.str.1287:
	.asciz	"right"
	.size	.L.str.1287, 6

	.type	.L.str.1288,@object     # @.str.1288
.L.str.1288:
	.asciz	"ripples"
	.size	.L.str.1288, 8

	.type	.L.str.1289,@object     # @.str.1289
.L.str.1289:
	.asciz	"rmdir"
	.size	.L.str.1289, 6

	.type	.L.str.1290,@object     # @.str.1290
.L.str.1290:
	.asciz	"rnd"
	.size	.L.str.1290, 4

	.type	.L.str.1291,@object     # @.str.1291
.L.str.1291:
	.asciz	"rotate"
	.size	.L.str.1291, 7

	.type	.L.str.1292,@object     # @.str.1292
.L.str.1292:
	.asciz	"roughness"
	.size	.L.str.1292, 10

	.type	.L.str.1293,@object     # @.str.1293
.L.str.1293:
	.asciz	"round"
	.size	.L.str.1293, 6

	.type	.L.str.1294,@object     # @.str.1294
.L.str.1294:
	.asciz	"rounded"
	.size	.L.str.1294, 8

	.type	.L.str.1295,@object     # @.str.1295
.L.str.1295:
	.asciz	"row"
	.size	.L.str.1295, 4

	.type	.L.str.1296,@object     # @.str.1296
.L.str.1296:
	.asciz	"row_major"
	.size	.L.str.1296, 10

	.type	.L.str.1297,@object     # @.str.1297
.L.str.1297:
	.asciz	"rpad"
	.size	.L.str.1297, 5

	.type	.L.str.1298,@object     # @.str.1298
.L.str.1298:
	.asciz	"rset"
	.size	.L.str.1298, 5

	.type	.L.str.1299,@object     # @.str.1299
.L.str.1299:
	.asciz	"run"
	.size	.L.str.1299, 4

	.type	.L.str.1300,@object     # @.str.1300
.L.str.1300:
	.asciz	"safecall"
	.size	.L.str.1300, 9

	.type	.L.str.1301,@object     # @.str.1301
.L.str.1301:
	.asciz	"same"
	.size	.L.str.1301, 5

	.type	.L.str.1302,@object     # @.str.1302
.L.str.1302:
	.asciz	"same_source"
	.size	.L.str.1302, 12

	.type	.L.str.1303,@object     # @.str.1303
.L.str.1303:
	.asciz	"sampler1d"
	.size	.L.str.1303, 10

	.type	.L.str.1304,@object     # @.str.1304
.L.str.1304:
	.asciz	"sampler1darray"
	.size	.L.str.1304, 15

	.type	.L.str.1305,@object     # @.str.1305
.L.str.1305:
	.asciz	"sampler1darrayshadow"
	.size	.L.str.1305, 21

	.type	.L.str.1306,@object     # @.str.1306
.L.str.1306:
	.asciz	"sampler1dshadow"
	.size	.L.str.1306, 16

	.type	.L.str.1307,@object     # @.str.1307
.L.str.1307:
	.asciz	"sampler2d"
	.size	.L.str.1307, 10

	.type	.L.str.1308,@object     # @.str.1308
.L.str.1308:
	.asciz	"sampler2darray"
	.size	.L.str.1308, 15

	.type	.L.str.1309,@object     # @.str.1309
.L.str.1309:
	.asciz	"sampler2darrayshadow"
	.size	.L.str.1309, 21

	.type	.L.str.1310,@object     # @.str.1310
.L.str.1310:
	.asciz	"sampler2drect"
	.size	.L.str.1310, 14

	.type	.L.str.1311,@object     # @.str.1311
.L.str.1311:
	.asciz	"sampler2drectshadow"
	.size	.L.str.1311, 20

	.type	.L.str.1312,@object     # @.str.1312
.L.str.1312:
	.asciz	"sampler2dshadow"
	.size	.L.str.1312, 16

	.type	.L.str.1313,@object     # @.str.1313
.L.str.1313:
	.asciz	"sampler3d"
	.size	.L.str.1313, 10

	.type	.L.str.1314,@object     # @.str.1314
.L.str.1314:
	.asciz	"sampler3drect"
	.size	.L.str.1314, 14

	.type	.L.str.1315,@object     # @.str.1315
.L.str.1315:
	.asciz	"samplerbuffer"
	.size	.L.str.1315, 14

	.type	.L.str.1316,@object     # @.str.1316
.L.str.1316:
	.asciz	"samplercube"
	.size	.L.str.1316, 12

	.type	.L.str.1317,@object     # @.str.1317
.L.str.1317:
	.asciz	"samplercubeshadow"
	.size	.L.str.1317, 18

	.type	.L.str.1318,@object     # @.str.1318
.L.str.1318:
	.asciz	"samples"
	.size	.L.str.1318, 8

	.type	.L.str.1319,@object     # @.str.1319
.L.str.1319:
	.asciz	"save"
	.size	.L.str.1319, 5

	.type	.L.str.1320,@object     # @.str.1320
.L.str.1320:
	.asciz	"save_file"
	.size	.L.str.1320, 10

	.type	.L.str.1321,@object     # @.str.1321
.L.str.1321:
	.asciz	"scale"
	.size	.L.str.1321, 6

	.type	.L.str.1322,@object     # @.str.1322
.L.str.1322:
	.asciz	"scallop_wave"
	.size	.L.str.1322, 13

	.type	.L.str.1323,@object     # @.str.1323
.L.str.1323:
	.asciz	"scattering"
	.size	.L.str.1323, 11

	.type	.L.str.1324,@object     # @.str.1324
.L.str.1324:
	.asciz	"screen"
	.size	.L.str.1324, 7

	.type	.L.str.1325,@object     # @.str.1325
.L.str.1325:
	.asciz	"sd"
	.size	.L.str.1325, 3

	.type	.L.str.1326,@object     # @.str.1326
.L.str.1326:
	.asciz	"search"
	.size	.L.str.1326, 7

	.type	.L.str.1327,@object     # @.str.1327
.L.str.1327:
	.asciz	"second"
	.size	.L.str.1327, 7

	.type	.L.str.1328,@object     # @.str.1328
.L.str.1328:
	.asciz	"section"
	.size	.L.str.1328, 8

	.type	.L.str.1329,@object     # @.str.1329
.L.str.1329:
	.asciz	"security"
	.size	.L.str.1329, 9

	.type	.L.str.1330,@object     # @.str.1330
.L.str.1330:
	.asciz	"seed"
	.size	.L.str.1330, 5

	.type	.L.str.1331,@object     # @.str.1331
.L.str.1331:
	.asciz	"segment"
	.size	.L.str.1331, 8

	.type	.L.str.1332,@object     # @.str.1332
.L.str.1332:
	.asciz	"segment-limit"
	.size	.L.str.1332, 14

	.type	.L.str.1333,@object     # @.str.1333
.L.str.1333:
	.asciz	"select"
	.size	.L.str.1333, 7

	.type	.L.str.1334,@object     # @.str.1334
.L.str.1334:
	.asciz	"selector"
	.size	.L.str.1334, 9

	.type	.L.str.1335,@object     # @.str.1335
.L.str.1335:
	.asciz	"selection"
	.size	.L.str.1335, 10

	.type	.L.str.1336,@object     # @.str.1336
.L.str.1336:
	.asciz	"self"
	.size	.L.str.1336, 5

	.type	.L.str.1337,@object     # @.str.1337
.L.str.1337:
	.asciz	"send"
	.size	.L.str.1337, 5

	.type	.L.str.1338,@object     # @.str.1338
.L.str.1338:
	.asciz	"sentence"
	.size	.L.str.1338, 9

	.type	.L.str.1339,@object     # @.str.1339
.L.str.1339:
	.asciz	"separate"
	.size	.L.str.1339, 9

	.type	.L.str.1340,@object     # @.str.1340
.L.str.1340:
	.asciz	"sequence"
	.size	.L.str.1340, 9

	.type	.L.str.1341,@object     # @.str.1341
.L.str.1341:
	.asciz	"sequential"
	.size	.L.str.1341, 11

	.type	.L.str.1342,@object     # @.str.1342
.L.str.1342:
	.asciz	"sequentially"
	.size	.L.str.1342, 13

	.type	.L.str.1343,@object     # @.str.1343
.L.str.1343:
	.asciz	"service"
	.size	.L.str.1343, 8

	.type	.L.str.1344,@object     # @.str.1344
.L.str.1344:
	.asciz	"set"
	.size	.L.str.1344, 4

	.type	.L.str.1345,@object     # @.str.1345
.L.str.1345:
	.asciz	"sgn"
	.size	.L.str.1345, 4

	.type	.L.str.1346,@object     # @.str.1346
.L.str.1346:
	.asciz	"shadowless"
	.size	.L.str.1346, 11

	.type	.L.str.1347,@object     # @.str.1347
.L.str.1347:
	.asciz	"shell"
	.size	.L.str.1347, 6

	.type	.L.str.1348,@object     # @.str.1348
.L.str.1348:
	.asciz	"shift-in"
	.size	.L.str.1348, 9

	.type	.L.str.1349,@object     # @.str.1349
.L.str.1349:
	.asciz	"shift-out"
	.size	.L.str.1349, 10

	.type	.L.str.1350,@object     # @.str.1350
.L.str.1350:
	.asciz	"shl"
	.size	.L.str.1350, 4

	.type	.L.str.1351,@object     # @.str.1351
.L.str.1351:
	.asciz	"short"
	.size	.L.str.1351, 6

	.type	.L.str.1352,@object     # @.str.1352
.L.str.1352:
	.asciz	"shr"
	.size	.L.str.1352, 4

	.type	.L.str.1353,@object     # @.str.1353
.L.str.1353:
	.asciz	"sign"
	.size	.L.str.1353, 5

	.type	.L.str.1354,@object     # @.str.1354
.L.str.1354:
	.asciz	"simple_nested_loop"
	.size	.L.str.1354, 19

	.type	.L.str.1355,@object     # @.str.1355
.L.str.1355:
	.asciz	"sin"
	.size	.L.str.1355, 4

	.type	.L.str.1356,@object     # @.str.1356
.L.str.1356:
	.asciz	"sine_wave"
	.size	.L.str.1356, 10

	.type	.L.str.1357,@object     # @.str.1357
.L.str.1357:
	.asciz	"sinh"
	.size	.L.str.1357, 5

	.type	.L.str.1358,@object     # @.str.1358
.L.str.1358:
	.asciz	"size"
	.size	.L.str.1358, 5

	.type	.L.str.1359,@object     # @.str.1359
.L.str.1359:
	.asciz	"sizeof"
	.size	.L.str.1359, 7

	.type	.L.str.1360,@object     # @.str.1360
.L.str.1360:
	.asciz	"skip1"
	.size	.L.str.1360, 6

	.type	.L.str.1361,@object     # @.str.1361
.L.str.1361:
	.asciz	"skip2"
	.size	.L.str.1361, 6

	.type	.L.str.1362,@object     # @.str.1362
.L.str.1362:
	.asciz	"skip3"
	.size	.L.str.1362, 6

	.type	.L.str.1363,@object     # @.str.1363
.L.str.1363:
	.asciz	"sky"
	.size	.L.str.1363, 4

	.type	.L.str.1364,@object     # @.str.1364
.L.str.1364:
	.asciz	"sky_sphere"
	.size	.L.str.1364, 11

	.type	.L.str.1365,@object     # @.str.1365
.L.str.1365:
	.asciz	"slice"
	.size	.L.str.1365, 6

	.type	.L.str.1366,@object     # @.str.1366
.L.str.1366:
	.asciz	"slope"
	.size	.L.str.1366, 6

	.type	.L.str.1367,@object     # @.str.1367
.L.str.1367:
	.asciz	"slope_map"
	.size	.L.str.1367, 10

	.type	.L.str.1368,@object     # @.str.1368
.L.str.1368:
	.asciz	"smallint"
	.size	.L.str.1368, 9

	.type	.L.str.1369,@object     # @.str.1369
.L.str.1369:
	.asciz	"smooth"
	.size	.L.str.1369, 7

	.type	.L.str.1370,@object     # @.str.1370
.L.str.1370:
	.asciz	"smooth_linearstep"
	.size	.L.str.1370, 18

	.type	.L.str.1371,@object     # @.str.1371
.L.str.1371:
	.asciz	"smoothstep"
	.size	.L.str.1371, 11

	.type	.L.str.1372,@object     # @.str.1372
.L.str.1372:
	.asciz	"smooth_triangle"
	.size	.L.str.1372, 16

	.type	.L.str.1373,@object     # @.str.1373
.L.str.1373:
	.asciz	"snoise"
	.size	.L.str.1373, 7

	.type	.L.str.1374,@object     # @.str.1374
.L.str.1374:
	.asciz	"softfloat"
	.size	.L.str.1374, 10

	.type	.L.str.1375,@object     # @.str.1375
.L.str.1375:
	.asciz	"solid"
	.size	.L.str.1375, 6

	.type	.L.str.1376,@object     # @.str.1376
.L.str.1376:
	.asciz	"sor"
	.size	.L.str.1376, 4

	.type	.L.str.1377,@object     # @.str.1377
.L.str.1377:
	.asciz	"sort"
	.size	.L.str.1377, 5

	.type	.L.str.1378,@object     # @.str.1378
.L.str.1378:
	.asciz	"sort-control"
	.size	.L.str.1378, 13

	.type	.L.str.1379,@object     # @.str.1379
.L.str.1379:
	.asciz	"sort-core-size"
	.size	.L.str.1379, 15

	.type	.L.str.1380,@object     # @.str.1380
.L.str.1380:
	.asciz	"sort-file-size"
	.size	.L.str.1380, 15

	.type	.L.str.1381,@object     # @.str.1381
.L.str.1381:
	.asciz	"sort-merge"
	.size	.L.str.1381, 11

	.type	.L.str.1382,@object     # @.str.1382
.L.str.1382:
	.asciz	"sort-message"
	.size	.L.str.1382, 13

	.type	.L.str.1383,@object     # @.str.1383
.L.str.1383:
	.asciz	"sort-mode-size"
	.size	.L.str.1383, 15

	.type	.L.str.1384,@object     # @.str.1384
.L.str.1384:
	.asciz	"sort-return"
	.size	.L.str.1384, 12

	.type	.L.str.1385,@object     # @.str.1385
.L.str.1385:
	.asciz	"sound"
	.size	.L.str.1385, 6

	.type	.L.str.1386,@object     # @.str.1386
.L.str.1386:
	.asciz	"source"
	.size	.L.str.1386, 7

	.type	.L.str.1387,@object     # @.str.1387
.L.str.1387:
	.asciz	"source-computer"
	.size	.L.str.1387, 16

	.type	.L.str.1388,@object     # @.str.1388
.L.str.1388:
	.asciz	"space"
	.size	.L.str.1388, 6

	.type	.L.str.1389,@object     # @.str.1389
.L.str.1389:
	.asciz	"spaces"
	.size	.L.str.1389, 7

	.type	.L.str.1390,@object     # @.str.1390
.L.str.1390:
	.asciz	"spacing"
	.size	.L.str.1390, 8

	.type	.L.str.1391,@object     # @.str.1391
.L.str.1391:
	.asciz	"spc"
	.size	.L.str.1391, 4

	.type	.L.str.1392,@object     # @.str.1392
.L.str.1392:
	.asciz	"specialize"
	.size	.L.str.1392, 11

	.type	.L.str.1393,@object     # @.str.1393
.L.str.1393:
	.asciz	"special-names"
	.size	.L.str.1393, 14

	.type	.L.str.1394,@object     # @.str.1394
.L.str.1394:
	.asciz	"specular"
	.size	.L.str.1394, 9

	.type	.L.str.1395,@object     # @.str.1395
.L.str.1395:
	.asciz	"sphere"
	.size	.L.str.1395, 7

	.type	.L.str.1396,@object     # @.str.1396
.L.str.1396:
	.asciz	"sphere_sweep"
	.size	.L.str.1396, 13

	.type	.L.str.1397,@object     # @.str.1397
.L.str.1397:
	.asciz	"spherical"
	.size	.L.str.1397, 10

	.type	.L.str.1398,@object     # @.str.1398
.L.str.1398:
	.asciz	"spiral1"
	.size	.L.str.1398, 8

	.type	.L.str.1399,@object     # @.str.1399
.L.str.1399:
	.asciz	"spiral2"
	.size	.L.str.1399, 8

	.type	.L.str.1400,@object     # @.str.1400
.L.str.1400:
	.asciz	"spline"
	.size	.L.str.1400, 7

	.type	.L.str.1401,@object     # @.str.1401
.L.str.1401:
	.asciz	"splineinverse"
	.size	.L.str.1401, 14

	.type	.L.str.1402,@object     # @.str.1402
.L.str.1402:
	.asciz	"split"
	.size	.L.str.1402, 6

	.type	.L.str.1403,@object     # @.str.1403
.L.str.1403:
	.asciz	"split_union"
	.size	.L.str.1403, 12

	.type	.L.str.1404,@object     # @.str.1404
.L.str.1404:
	.asciz	"spotlight"
	.size	.L.str.1404, 10

	.type	.L.str.1405,@object     # @.str.1405
.L.str.1405:
	.asciz	"spotted"
	.size	.L.str.1405, 8

	.type	.L.str.1406,@object     # @.str.1406
.L.str.1406:
	.asciz	"sqr"
	.size	.L.str.1406, 4

	.type	.L.str.1407,@object     # @.str.1407
.L.str.1407:
	.asciz	"sqrt"
	.size	.L.str.1407, 5

	.type	.L.str.1408,@object     # @.str.1408
.L.str.1408:
	.asciz	"standard"
	.size	.L.str.1408, 9

	.type	.L.str.1409,@object     # @.str.1409
.L.str.1409:
	.asciz	"standard-1"
	.size	.L.str.1409, 11

	.type	.L.str.1410,@object     # @.str.1410
.L.str.1410:
	.asciz	"standard-2"
	.size	.L.str.1410, 11

	.type	.L.str.1411,@object     # @.str.1411
.L.str.1411:
	.asciz	"start"
	.size	.L.str.1411, 6

	.type	.L.str.1412,@object     # @.str.1412
.L.str.1412:
	.asciz	"startswith"
	.size	.L.str.1412, 11

	.type	.L.str.1413,@object     # @.str.1413
.L.str.1413:
	.asciz	"static"
	.size	.L.str.1413, 7

	.type	.L.str.1414,@object     # @.str.1414
.L.str.1414:
	.asciz	"statistics"
	.size	.L.str.1414, 11

	.type	.L.str.1415,@object     # @.str.1415
.L.str.1415:
	.asciz	"status"
	.size	.L.str.1415, 7

	.type	.L.str.1416,@object     # @.str.1416
.L.str.1416:
	.asciz	"stdcall"
	.size	.L.str.1416, 8

	.type	.L.str.1417,@object     # @.str.1417
.L.str.1417:
	.asciz	"stdout"
	.size	.L.str.1417, 7

	.type	.L.str.1418,@object     # @.str.1418
.L.str.1418:
	.asciz	"step"
	.size	.L.str.1418, 5

	.type	.L.str.1419,@object     # @.str.1419
.L.str.1419:
	.asciz	"stick"
	.size	.L.str.1419, 6

	.type	.L.str.1420,@object     # @.str.1420
.L.str.1420:
	.asciz	"stof"
	.size	.L.str.1420, 5

	.type	.L.str.1421,@object     # @.str.1421
.L.str.1421:
	.asciz	"stoi"
	.size	.L.str.1421, 5

	.type	.L.str.1422,@object     # @.str.1422
.L.str.1422:
	.asciz	"stop"
	.size	.L.str.1422, 5

	.type	.L.str.1423,@object     # @.str.1423
.L.str.1423:
	.asciz	"str"
	.size	.L.str.1423, 4

	.type	.L.str.1424,@object     # @.str.1424
.L.str.1424:
	.asciz	"strcmp"
	.size	.L.str.1424, 7

	.type	.L.str.1425,@object     # @.str.1425
.L.str.1425:
	.asciz	"strength"
	.size	.L.str.1425, 9

	.type	.L.str.1426,@object     # @.str.1426
.L.str.1426:
	.asciz	"strig"
	.size	.L.str.1426, 6

	.type	.L.str.1427,@object     # @.str.1427
.L.str.1427:
	.asciz	"string"
	.size	.L.str.1427, 7

	.type	.L.str.1428,@object     # @.str.1428
.L.str.1428:
	.asciz	"strlen"
	.size	.L.str.1428, 7

	.type	.L.str.1429,@object     # @.str.1429
.L.str.1429:
	.asciz	"strlwr"
	.size	.L.str.1429, 7

	.type	.L.str.1430,@object     # @.str.1430
.L.str.1430:
	.asciz	"structure"
	.size	.L.str.1430, 10

	.type	.L.str.1431,@object     # @.str.1431
.L.str.1431:
	.asciz	"strupr"
	.size	.L.str.1431, 7

	.type	.L.str.1432,@object     # @.str.1432
.L.str.1432:
	.asciz	"sturm"
	.size	.L.str.1432, 6

	.type	.L.str.1433,@object     # @.str.1433
.L.str.1433:
	.asciz	"subarray"
	.size	.L.str.1433, 9

	.type	.L.str.1434,@object     # @.str.1434
.L.str.1434:
	.asciz	"sub-queue-1"
	.size	.L.str.1434, 12

	.type	.L.str.1435,@object     # @.str.1435
.L.str.1435:
	.asciz	"sub-queue-2"
	.size	.L.str.1435, 12

	.type	.L.str.1436,@object     # @.str.1436
.L.str.1436:
	.asciz	"sub-queue-3"
	.size	.L.str.1436, 12

	.type	.L.str.1437,@object     # @.str.1437
.L.str.1437:
	.asciz	"subroutine"
	.size	.L.str.1437, 11

	.type	.L.str.1438,@object     # @.str.1438
.L.str.1438:
	.asciz	"substr"
	.size	.L.str.1438, 7

	.type	.L.str.1439,@object     # @.str.1439
.L.str.1439:
	.asciz	"substring"
	.size	.L.str.1439, 10

	.type	.L.str.1440,@object     # @.str.1440
.L.str.1440:
	.asciz	"substring_mb"
	.size	.L.str.1440, 13

	.type	.L.str.1441,@object     # @.str.1441
.L.str.1441:
	.asciz	"subtract"
	.size	.L.str.1441, 9

	.type	.L.str.1442,@object     # @.str.1442
.L.str.1442:
	.asciz	"sum"
	.size	.L.str.1442, 4

	.type	.L.str.1443,@object     # @.str.1443
.L.str.1443:
	.asciz	"super"
	.size	.L.str.1443, 6

	.type	.L.str.1444,@object     # @.str.1444
.L.str.1444:
	.asciz	"superellipsoid"
	.size	.L.str.1444, 15

	.type	.L.str.1445,@object     # @.str.1445
.L.str.1445:
	.asciz	"superp"
	.size	.L.str.1445, 7

	.type	.L.str.1446,@object     # @.str.1446
.L.str.1446:
	.asciz	"suppress"
	.size	.L.str.1446, 9

	.type	.L.str.1447,@object     # @.str.1447
.L.str.1447:
	.asciz	"surfacearea"
	.size	.L.str.1447, 12

	.type	.L.str.1448,@object     # @.str.1448
.L.str.1448:
	.asciz	"swap"
	.size	.L.str.1448, 5

	.type	.L.str.1449,@object     # @.str.1449
.L.str.1449:
	.asciz	"switch"
	.size	.L.str.1449, 7

	.type	.L.str.1450,@object     # @.str.1450
.L.str.1450:
	.asciz	"symbolic"
	.size	.L.str.1450, 9

	.type	.L.str.1451,@object     # @.str.1451
.L.str.1451:
	.asciz	"sync"
	.size	.L.str.1451, 5

	.type	.L.str.1452,@object     # @.str.1452
.L.str.1452:
	.asciz	"synchronized"
	.size	.L.str.1452, 13

	.type	.L.str.1453,@object     # @.str.1453
.L.str.1453:
	.asciz	"sys"
	.size	.L.str.1453, 4

	.type	.L.str.1454,@object     # @.str.1454
.L.str.1454:
	.asciz	"system"
	.size	.L.str.1454, 7

	.type	.L.str.1455,@object     # @.str.1455
.L.str.1455:
	.asciz	"tab"
	.size	.L.str.1455, 4

	.type	.L.str.1456,@object     # @.str.1456
.L.str.1456:
	.asciz	"table"
	.size	.L.str.1456, 6

	.type	.L.str.1457,@object     # @.str.1457
.L.str.1457:
	.asciz	"tally"
	.size	.L.str.1457, 6

	.type	.L.str.1458,@object     # @.str.1458
.L.str.1458:
	.asciz	"tallying"
	.size	.L.str.1458, 9

	.type	.L.str.1459,@object     # @.str.1459
.L.str.1459:
	.asciz	"tan"
	.size	.L.str.1459, 4

	.type	.L.str.1460,@object     # @.str.1460
.L.str.1460:
	.asciz	"tanh"
	.size	.L.str.1460, 5

	.type	.L.str.1461,@object     # @.str.1461
.L.str.1461:
	.asciz	"tape"
	.size	.L.str.1461, 5

	.type	.L.str.1462,@object     # @.str.1462
.L.str.1462:
	.asciz	"target"
	.size	.L.str.1462, 7

	.type	.L.str.1463,@object     # @.str.1463
.L.str.1463:
	.asciz	"template"
	.size	.L.str.1463, 9

	.type	.L.str.1464,@object     # @.str.1464
.L.str.1464:
	.asciz	"term"
	.size	.L.str.1464, 5

	.type	.L.str.1465,@object     # @.str.1465
.L.str.1465:
	.asciz	"terminal"
	.size	.L.str.1465, 9

	.type	.L.str.1466,@object     # @.str.1466
.L.str.1466:
	.asciz	"terminate"
	.size	.L.str.1466, 10

	.type	.L.str.1467,@object     # @.str.1467
.L.str.1467:
	.asciz	"test"
	.size	.L.str.1467, 5

	.type	.L.str.1468,@object     # @.str.1468
.L.str.1468:
	.asciz	"text"
	.size	.L.str.1468, 5

	.type	.L.str.1469,@object     # @.str.1469
.L.str.1469:
	.asciz	"texture"
	.size	.L.str.1469, 8

	.type	.L.str.1470,@object     # @.str.1470
.L.str.1470:
	.asciz	"texture3d"
	.size	.L.str.1470, 10

	.type	.L.str.1471,@object     # @.str.1471
.L.str.1471:
	.asciz	"texture_list"
	.size	.L.str.1471, 13

	.type	.L.str.1472,@object     # @.str.1472
.L.str.1472:
	.asciz	"texture_map"
	.size	.L.str.1472, 12

	.type	.L.str.1473,@object     # @.str.1473
.L.str.1473:
	.asciz	"tga"
	.size	.L.str.1473, 4

	.type	.L.str.1474,@object     # @.str.1474
.L.str.1474:
	.asciz	"than"
	.size	.L.str.1474, 5

	.type	.L.str.1475,@object     # @.str.1475
.L.str.1475:
	.asciz	"then"
	.size	.L.str.1475, 5

	.type	.L.str.1476,@object     # @.str.1476
.L.str.1476:
	.asciz	"thickness"
	.size	.L.str.1476, 10

	.type	.L.str.1477,@object     # @.str.1477
.L.str.1477:
	.asciz	"this"
	.size	.L.str.1477, 5

	.type	.L.str.1478,@object     # @.str.1478
.L.str.1478:
	.asciz	"threadvar"
	.size	.L.str.1478, 10

	.type	.L.str.1479,@object     # @.str.1479
.L.str.1479:
	.asciz	"threshold"
	.size	.L.str.1479, 10

	.type	.L.str.1480,@object     # @.str.1480
.L.str.1480:
	.asciz	"through"
	.size	.L.str.1480, 8

	.type	.L.str.1481,@object     # @.str.1481
.L.str.1481:
	.asciz	"thru"
	.size	.L.str.1481, 5

	.type	.L.str.1482,@object     # @.str.1482
.L.str.1482:
	.asciz	"tiff"
	.size	.L.str.1482, 5

	.type	.L.str.1483,@object     # @.str.1483
.L.str.1483:
	.asciz	"tightness"
	.size	.L.str.1483, 10

	.type	.L.str.1484,@object     # @.str.1484
.L.str.1484:
	.asciz	"tile2"
	.size	.L.str.1484, 6

	.type	.L.str.1485,@object     # @.str.1485
.L.str.1485:
	.asciz	"tiles"
	.size	.L.str.1485, 6

	.type	.L.str.1486,@object     # @.str.1486
.L.str.1486:
	.asciz	"time"
	.size	.L.str.1486, 5

	.type	.L.str.1487,@object     # @.str.1487
.L.str.1487:
	.asciz	"timer"
	.size	.L.str.1487, 6

	.type	.L.str.1488,@object     # @.str.1488
.L.str.1488:
	.asciz	"times"
	.size	.L.str.1488, 6

	.type	.L.str.1489,@object     # @.str.1489
.L.str.1489:
	.asciz	"timestamp"
	.size	.L.str.1489, 10

	.type	.L.str.1490,@object     # @.str.1490
.L.str.1490:
	.asciz	"timesten"
	.size	.L.str.1490, 9

	.type	.L.str.1491,@object     # @.str.1491
.L.str.1491:
	.asciz	"title"
	.size	.L.str.1491, 6

	.type	.L.str.1492,@object     # @.str.1492
.L.str.1492:
	.asciz	"to"
	.size	.L.str.1492, 3

	.type	.L.str.1493,@object     # @.str.1493
.L.str.1493:
	.asciz	"tolerance"
	.size	.L.str.1493, 10

	.type	.L.str.1494,@object     # @.str.1494
.L.str.1494:
	.asciz	"top"
	.size	.L.str.1494, 4

	.type	.L.str.1495,@object     # @.str.1495
.L.str.1495:
	.asciz	"toroidal"
	.size	.L.str.1495, 9

	.type	.L.str.1496,@object     # @.str.1496
.L.str.1496:
	.asciz	"torus"
	.size	.L.str.1496, 6

	.type	.L.str.1497,@object     # @.str.1497
.L.str.1497:
	.asciz	"trace"
	.size	.L.str.1497, 6

	.type	.L.str.1498,@object     # @.str.1498
.L.str.1498:
	.asciz	"trailing"
	.size	.L.str.1498, 9

	.type	.L.str.1499,@object     # @.str.1499
.L.str.1499:
	.asciz	"transform"
	.size	.L.str.1499, 10

	.type	.L.str.1500,@object     # @.str.1500
.L.str.1500:
	.asciz	"transformc"
	.size	.L.str.1500, 11

	.type	.L.str.1501,@object     # @.str.1501
.L.str.1501:
	.asciz	"transformu"
	.size	.L.str.1501, 11

	.type	.L.str.1502,@object     # @.str.1502
.L.str.1502:
	.asciz	"translate"
	.size	.L.str.1502, 10

	.type	.L.str.1503,@object     # @.str.1503
.L.str.1503:
	.asciz	"translucent"
	.size	.L.str.1503, 12

	.type	.L.str.1504,@object     # @.str.1504
.L.str.1504:
	.asciz	"transmit"
	.size	.L.str.1504, 9

	.type	.L.str.1505,@object     # @.str.1505
.L.str.1505:
	.asciz	"transparent"
	.size	.L.str.1505, 12

	.type	.L.str.1506,@object     # @.str.1506
.L.str.1506:
	.asciz	"transpose"
	.size	.L.str.1506, 10

	.type	.L.str.1507,@object     # @.str.1507
.L.str.1507:
	.asciz	"triangle"
	.size	.L.str.1507, 9

	.type	.L.str.1508,@object     # @.str.1508
.L.str.1508:
	.asciz	"triangle_wave"
	.size	.L.str.1508, 14

	.type	.L.str.1509,@object     # @.str.1509
.L.str.1509:
	.asciz	"trim"
	.size	.L.str.1509, 5

	.type	.L.str.1510,@object     # @.str.1510
.L.str.1510:
	.asciz	"trim_b"
	.size	.L.str.1510, 7

	.type	.L.str.1511,@object     # @.str.1511
.L.str.1511:
	.asciz	"trim_mb"
	.size	.L.str.1511, 8

	.type	.L.str.1512,@object     # @.str.1512
.L.str.1512:
	.asciz	"troff"
	.size	.L.str.1512, 6

	.type	.L.str.1513,@object     # @.str.1513
.L.str.1513:
	.asciz	"tron"
	.size	.L.str.1513, 5

	.type	.L.str.1514,@object     # @.str.1514
.L.str.1514:
	.asciz	"true"
	.size	.L.str.1514, 5

	.type	.L.str.1515,@object     # @.str.1515
.L.str.1515:
	.asciz	"trunc"
	.size	.L.str.1515, 6

	.type	.L.str.1516,@object     # @.str.1516
.L.str.1516:
	.asciz	"try"
	.size	.L.str.1516, 4

	.type	.L.str.1517,@object     # @.str.1517
.L.str.1517:
	.asciz	"ttf"
	.size	.L.str.1517, 4

	.type	.L.str.1518,@object     # @.str.1518
.L.str.1518:
	.asciz	"turb_depth"
	.size	.L.str.1518, 11

	.type	.L.str.1519,@object     # @.str.1519
.L.str.1519:
	.asciz	"turbulence"
	.size	.L.str.1519, 11

	.type	.L.str.1520,@object     # @.str.1520
.L.str.1520:
	.asciz	"type"
	.size	.L.str.1520, 5

	.type	.L.str.1521,@object     # @.str.1521
.L.str.1521:
	.asciz	"typedef"
	.size	.L.str.1521, 8

	.type	.L.str.1522,@object     # @.str.1522
.L.str.1522:
	.asciz	"uimage1d"
	.size	.L.str.1522, 9

	.type	.L.str.1523,@object     # @.str.1523
.L.str.1523:
	.asciz	"uimage1darray"
	.size	.L.str.1523, 14

	.type	.L.str.1524,@object     # @.str.1524
.L.str.1524:
	.asciz	"uimage2d"
	.size	.L.str.1524, 9

	.type	.L.str.1525,@object     # @.str.1525
.L.str.1525:
	.asciz	"uimage2darray"
	.size	.L.str.1525, 14

	.type	.L.str.1526,@object     # @.str.1526
.L.str.1526:
	.asciz	"uimage3d"
	.size	.L.str.1526, 9

	.type	.L.str.1527,@object     # @.str.1527
.L.str.1527:
	.asciz	"uimagebuffer"
	.size	.L.str.1527, 13

	.type	.L.str.1528,@object     # @.str.1528
.L.str.1528:
	.asciz	"uimagecube"
	.size	.L.str.1528, 11

	.type	.L.str.1529,@object     # @.str.1529
.L.str.1529:
	.asciz	"uint"
	.size	.L.str.1529, 5

	.type	.L.str.1530,@object     # @.str.1530
.L.str.1530:
	.asciz	"ultra_wide_angle"
	.size	.L.str.1530, 17

	.type	.L.str.1531,@object     # @.str.1531
.L.str.1531:
	.asciz	"undef"
	.size	.L.str.1531, 6

	.type	.L.str.1532,@object     # @.str.1532
.L.str.1532:
	.asciz	"uniform"
	.size	.L.str.1532, 8

	.type	.L.str.1533,@object     # @.str.1533
.L.str.1533:
	.asciz	"union"
	.size	.L.str.1533, 6

	.type	.L.str.1534,@object     # @.str.1534
.L.str.1534:
	.asciz	"unit"
	.size	.L.str.1534, 5

	.type	.L.str.1535,@object     # @.str.1535
.L.str.1535:
	.asciz	"unknown"
	.size	.L.str.1535, 8

	.type	.L.str.1536,@object     # @.str.1536
.L.str.1536:
	.asciz	"unlock"
	.size	.L.str.1536, 7

	.type	.L.str.1537,@object     # @.str.1537
.L.str.1537:
	.asciz	"unsigned"
	.size	.L.str.1537, 9

	.type	.L.str.1538,@object     # @.str.1538
.L.str.1538:
	.asciz	"unstring"
	.size	.L.str.1538, 9

	.type	.L.str.1539,@object     # @.str.1539
.L.str.1539:
	.asciz	"until"
	.size	.L.str.1539, 6

	.type	.L.str.1540,@object     # @.str.1540
.L.str.1540:
	.asciz	"up"
	.size	.L.str.1540, 3

	.type	.L.str.1541,@object     # @.str.1541
.L.str.1541:
	.asciz	"update"
	.size	.L.str.1541, 7

	.type	.L.str.1542,@object     # @.str.1542
.L.str.1542:
	.asciz	"upon"
	.size	.L.str.1542, 5

	.type	.L.str.1543,@object     # @.str.1543
.L.str.1543:
	.asciz	"upper"
	.size	.L.str.1543, 6

	.type	.L.str.1544,@object     # @.str.1544
.L.str.1544:
	.asciz	"upper_mb"
	.size	.L.str.1544, 9

	.type	.L.str.1545,@object     # @.str.1545
.L.str.1545:
	.asciz	"usage"
	.size	.L.str.1545, 6

	.type	.L.str.1546,@object     # @.str.1546
.L.str.1546:
	.asciz	"usampler1d"
	.size	.L.str.1546, 11

	.type	.L.str.1547,@object     # @.str.1547
.L.str.1547:
	.asciz	"usampler1darray"
	.size	.L.str.1547, 16

	.type	.L.str.1548,@object     # @.str.1548
.L.str.1548:
	.asciz	"usampler2d"
	.size	.L.str.1548, 11

	.type	.L.str.1549,@object     # @.str.1549
.L.str.1549:
	.asciz	"usampler2darray"
	.size	.L.str.1549, 16

	.type	.L.str.1550,@object     # @.str.1550
.L.str.1550:
	.asciz	"usampler2drect"
	.size	.L.str.1550, 15

	.type	.L.str.1551,@object     # @.str.1551
.L.str.1551:
	.asciz	"usampler3d"
	.size	.L.str.1551, 11

	.type	.L.str.1552,@object     # @.str.1552
.L.str.1552:
	.asciz	"usamplerbufferstruct"
	.size	.L.str.1552, 21

	.type	.L.str.1553,@object     # @.str.1553
.L.str.1553:
	.asciz	"usamplercube"
	.size	.L.str.1553, 13

	.type	.L.str.1554,@object     # @.str.1554
.L.str.1554:
	.asciz	"use"
	.size	.L.str.1554, 4

	.type	.L.str.1555,@object     # @.str.1555
.L.str.1555:
	.asciz	"use_alpha"
	.size	.L.str.1555, 10

	.type	.L.str.1556,@object     # @.str.1556
.L.str.1556:
	.asciz	"use_color"
	.size	.L.str.1556, 10

	.type	.L.str.1557,@object     # @.str.1557
.L.str.1557:
	.asciz	"use_colour"
	.size	.L.str.1557, 11

	.type	.L.str.1558,@object     # @.str.1558
.L.str.1558:
	.asciz	"use_index"
	.size	.L.str.1558, 10

	.type	.L.str.1559,@object     # @.str.1559
.L.str.1559:
	.asciz	"uses"
	.size	.L.str.1559, 5

	.type	.L.str.1560,@object     # @.str.1560
.L.str.1560:
	.asciz	"using"
	.size	.L.str.1560, 6

	.type	.L.str.1561,@object     # @.str.1561
.L.str.1561:
	.asciz	"usr"
	.size	.L.str.1561, 4

	.type	.L.str.1562,@object     # @.str.1562
.L.str.1562:
	.asciz	"u_steps"
	.size	.L.str.1562, 8

	.type	.L.str.1563,@object     # @.str.1563
.L.str.1563:
	.asciz	"utf8"
	.size	.L.str.1563, 5

	.type	.L.str.1564,@object     # @.str.1564
.L.str.1564:
	.asciz	"utf16"
	.size	.L.str.1564, 6

	.type	.L.str.1565,@object     # @.str.1565
.L.str.1565:
	.asciz	"utf32"
	.size	.L.str.1565, 6

	.type	.L.str.1566,@object     # @.str.1566
.L.str.1566:
	.asciz	"uvec2"
	.size	.L.str.1566, 6

	.type	.L.str.1567,@object     # @.str.1567
.L.str.1567:
	.asciz	"uvec3"
	.size	.L.str.1567, 6

	.type	.L.str.1568,@object     # @.str.1568
.L.str.1568:
	.asciz	"uvec4"
	.size	.L.str.1568, 6

	.type	.L.str.1569,@object     # @.str.1569
.L.str.1569:
	.asciz	"uv_indices"
	.size	.L.str.1569, 11

	.type	.L.str.1570,@object     # @.str.1570
.L.str.1570:
	.asciz	"uv_mapping"
	.size	.L.str.1570, 11

	.type	.L.str.1571,@object     # @.str.1571
.L.str.1571:
	.asciz	"uv_vectors"
	.size	.L.str.1571, 11

	.type	.L.str.1572,@object     # @.str.1572
.L.str.1572:
	.asciz	"val"
	.size	.L.str.1572, 4

	.type	.L.str.1573,@object     # @.str.1573
.L.str.1573:
	.asciz	"value"
	.size	.L.str.1573, 6

	.type	.L.str.1574,@object     # @.str.1574
.L.str.1574:
	.asciz	"values"
	.size	.L.str.1574, 7

	.type	.L.str.1575,@object     # @.str.1575
.L.str.1575:
	.asciz	"var"
	.size	.L.str.1575, 4

	.type	.L.str.1576,@object     # @.str.1576
.L.str.1576:
	.asciz	"varchar"
	.size	.L.str.1576, 8

	.type	.L.str.1577,@object     # @.str.1577
.L.str.1577:
	.asciz	"variance"
	.size	.L.str.1577, 9

	.type	.L.str.1578,@object     # @.str.1578
.L.str.1578:
	.asciz	"varptr"
	.size	.L.str.1578, 7

	.type	.L.str.1579,@object     # @.str.1579
.L.str.1579:
	.asciz	"varying"
	.size	.L.str.1579, 8

	.type	.L.str.1580,@object     # @.str.1580
.L.str.1580:
	.asciz	"vaxis_rotate"
	.size	.L.str.1580, 13

	.type	.L.str.1581,@object     # @.str.1581
.L.str.1581:
	.asciz	"vcross"
	.size	.L.str.1581, 7

	.type	.L.str.1582,@object     # @.str.1582
.L.str.1582:
	.asciz	"vdot"
	.size	.L.str.1582, 5

	.type	.L.str.1583,@object     # @.str.1583
.L.str.1583:
	.asciz	"vec2"
	.size	.L.str.1583, 5

	.type	.L.str.1584,@object     # @.str.1584
.L.str.1584:
	.asciz	"vec3"
	.size	.L.str.1584, 5

	.type	.L.str.1585,@object     # @.str.1585
.L.str.1585:
	.asciz	"vec4"
	.size	.L.str.1585, 5

	.type	.L.str.1586,@object     # @.str.1586
.L.str.1586:
	.asciz	"vector"
	.size	.L.str.1586, 7

	.type	.L.str.1587,@object     # @.str.1587
.L.str.1587:
	.asciz	"version"
	.size	.L.str.1587, 8

	.type	.L.str.1588,@object     # @.str.1588
.L.str.1588:
	.asciz	"vertex_vectors"
	.size	.L.str.1588, 15

	.type	.L.str.1589,@object     # @.str.1589
.L.str.1589:
	.asciz	"view"
	.size	.L.str.1589, 5

	.type	.L.str.1590,@object     # @.str.1590
.L.str.1590:
	.asciz	"virtual"
	.size	.L.str.1590, 8

	.type	.L.str.1591,@object     # @.str.1591
.L.str.1591:
	.asciz	"vlength"
	.size	.L.str.1591, 8

	.type	.L.str.1592,@object     # @.str.1592
.L.str.1592:
	.asciz	"vnormalize"
	.size	.L.str.1592, 11

	.type	.L.str.1593,@object     # @.str.1593
.L.str.1593:
	.asciz	"void"
	.size	.L.str.1593, 5

	.type	.L.str.1594,@object     # @.str.1594
.L.str.1594:
	.asciz	"volatile"
	.size	.L.str.1594, 9

	.type	.L.str.1595,@object     # @.str.1595
.L.str.1595:
	.asciz	"vrotate"
	.size	.L.str.1595, 8

	.type	.L.str.1596,@object     # @.str.1596
.L.str.1596:
	.asciz	"v_steps"
	.size	.L.str.1596, 8

	.type	.L.str.1597,@object     # @.str.1597
.L.str.1597:
	.asciz	"vstr"
	.size	.L.str.1597, 5

	.type	.L.str.1598,@object     # @.str.1598
.L.str.1598:
	.asciz	"vturbulence"
	.size	.L.str.1598, 12

	.type	.L.str.1599,@object     # @.str.1599
.L.str.1599:
	.asciz	"wait"
	.size	.L.str.1599, 5

	.type	.L.str.1600,@object     # @.str.1600
.L.str.1600:
	.asciz	"ward"
	.size	.L.str.1600, 5

	.type	.L.str.1601,@object     # @.str.1601
.L.str.1601:
	.asciz	"warning"
	.size	.L.str.1601, 8

	.type	.L.str.1602,@object     # @.str.1602
.L.str.1602:
	.asciz	"warp"
	.size	.L.str.1602, 5

	.type	.L.str.1603,@object     # @.str.1603
.L.str.1603:
	.asciz	"water_level"
	.size	.L.str.1603, 12

	.type	.L.str.1604,@object     # @.str.1604
.L.str.1604:
	.asciz	"wavelength_color"
	.size	.L.str.1604, 17

	.type	.L.str.1605,@object     # @.str.1605
.L.str.1605:
	.asciz	"waves"
	.size	.L.str.1605, 6

	.type	.L.str.1606,@object     # @.str.1606
.L.str.1606:
	.asciz	"wend"
	.size	.L.str.1606, 5

	.type	.L.str.1607,@object     # @.str.1607
.L.str.1607:
	.asciz	"when"
	.size	.L.str.1607, 5

	.type	.L.str.1608,@object     # @.str.1608
.L.str.1608:
	.asciz	"when-compiled"
	.size	.L.str.1608, 14

	.type	.L.str.1609,@object     # @.str.1609
.L.str.1609:
	.asciz	"where"
	.size	.L.str.1609, 6

	.type	.L.str.1610,@object     # @.str.1610
.L.str.1610:
	.asciz	"while"
	.size	.L.str.1610, 6

	.type	.L.str.1611,@object     # @.str.1611
.L.str.1611:
	.asciz	"width"
	.size	.L.str.1611, 6

	.type	.L.str.1612,@object     # @.str.1612
.L.str.1612:
	.asciz	"window"
	.size	.L.str.1612, 7

	.type	.L.str.1613,@object     # @.str.1613
.L.str.1613:
	.asciz	"with"
	.size	.L.str.1613, 5

	.type	.L.str.1614,@object     # @.str.1614
.L.str.1614:
	.asciz	"wood"
	.size	.L.str.1614, 5

	.type	.L.str.1615,@object     # @.str.1615
.L.str.1615:
	.asciz	"words"
	.size	.L.str.1615, 6

	.type	.L.str.1616,@object     # @.str.1616
.L.str.1616:
	.asciz	"working-storage"
	.size	.L.str.1616, 16

	.type	.L.str.1617,@object     # @.str.1617
.L.str.1617:
	.asciz	"wrinkles"
	.size	.L.str.1617, 9

	.type	.L.str.1618,@object     # @.str.1618
.L.str.1618:
	.asciz	"write"
	.size	.L.str.1618, 6

	.type	.L.str.1619,@object     # @.str.1619
.L.str.1619:
	.asciz	"write-only"
	.size	.L.str.1619, 11

	.type	.L.str.1620,@object     # @.str.1620
.L.str.1620:
	.asciz	"xor"
	.size	.L.str.1620, 4

	.type	.L.str.1621,@object     # @.str.1621
.L.str.1621:
	.asciz	"xor_bits"
	.size	.L.str.1621, 9

	.type	.L.str.1622,@object     # @.str.1622
.L.str.1622:
	.asciz	"year"
	.size	.L.str.1622, 5

	.type	.L.str.1623,@object     # @.str.1623
.L.str.1623:
	.asciz	"yes"
	.size	.L.str.1623, 4

	.type	.L.str.1624,@object     # @.str.1624
.L.str.1624:
	.asciz	"yield"
	.size	.L.str.1624, 6

	.type	.L.str.1625,@object     # @.str.1625
.L.str.1625:
	.asciz	"zero"
	.size	.L.str.1625, 5

	.type	.L.str.1626,@object     # @.str.1626
.L.str.1626:
	.asciz	"zeroes"
	.size	.L.str.1626, 7

	.type	.L.str.1627,@object     # @.str.1627
.L.str.1627:
	.asciz	"zeros"
	.size	.L.str.1627, 6

	.type	_ZN8MEMORY_T6POKE64Edd.tmp$2487,@object # @"_ZN8MEMORY_T6POKE64Edd.tmp$2487"
	.data
	.p2align	4
_ZN8MEMORY_T6POKE64Edd.tmp$2487:
	.quad	.Ltmp1351
	.quad	.Ltmp1352
	.quad	.Ltmp1353
	.quad	.Ltmp1354
	.quad	.Ltmp1355
	.quad	.Ltmp1356
	.quad	.Ltmp1357
	.quad	.Ltmp1358
	.quad	.Ltmp1359
	.quad	.Ltmp1360
	.quad	.Ltmp1361
	.quad	.Ltmp1362
	.quad	.Ltmp1363
	.quad	.Ltmp1364
	.quad	.Ltmp1365
	.quad	.Ltmp1366
	.quad	.Ltmp1367
	.quad	.Ltmp1368
	.quad	.Ltmp1369
	.quad	.Ltmp1370
	.quad	.Ltmp1371
	.quad	.Ltmp1372
	.quad	.Ltmp1373
	.quad	.Ltmp1374
	.quad	.Ltmp1375
	.quad	.Ltmp1376
	.quad	.Ltmp1377
	.quad	.Ltmp1378
	.quad	.Ltmp1379
	.quad	.Ltmp1380
	.quad	.Ltmp1381
	.quad	.Ltmp1382
	.quad	.Ltmp1383
	.quad	.Ltmp1384
	.quad	.Ltmp1385
	.quad	.Ltmp1386
	.quad	.Ltmp1387
	.quad	.Ltmp1388
	.quad	.Ltmp1389
	.quad	.Ltmp1390
	.quad	.Ltmp1391
	.quad	.Ltmp1392
	.quad	.Ltmp1393
	.quad	.Ltmp1394
	.quad	.Ltmp1395
	.quad	.Ltmp1396
	.quad	.Ltmp1397
	.quad	.Ltmp1398
	.quad	.Ltmp1399
	.quad	.Ltmp1400
	.quad	.Ltmp1401
	.quad	.Ltmp1402
	.quad	.Ltmp1403
	.quad	.Ltmp1404
	.quad	.Ltmp1405
	.quad	.Ltmp1406
	.quad	.Ltmp1407
	.quad	.Ltmp1408
	.quad	.Ltmp1409
	.quad	.Ltmp1410
	.quad	.Ltmp1411
	.quad	.Ltmp1412
	.quad	.Ltmp1413
	.quad	.Ltmp1414
	.quad	.Ltmp1415
	.quad	.Ltmp1416
	.quad	.Ltmp1417
	.quad	.Ltmp1418
	.quad	.Ltmp1419
	.quad	.Ltmp1420
	.quad	.Ltmp1421
	.quad	.Ltmp1422
	.quad	.Ltmp1423
	.quad	.Ltmp1424
	.quad	.Ltmp1425
	.quad	.Ltmp1426
	.quad	.Ltmp1427
	.quad	.Ltmp1428
	.quad	.Ltmp1429
	.quad	.Ltmp1430
	.quad	.Ltmp1431
	.quad	.Ltmp1432
	.quad	.Ltmp1433
	.quad	.Ltmp1434
	.quad	.Ltmp1435
	.quad	.Ltmp1436
	.quad	.Ltmp1437
	.quad	.Ltmp1438
	.quad	.Ltmp1439
	.quad	.Ltmp1440
	.quad	.Ltmp1441
	.quad	.Ltmp1442
	.quad	.Ltmp1443
	.quad	.Ltmp1444
	.quad	.Ltmp1445
	.quad	.Ltmp1446
	.quad	.Ltmp1447
	.quad	.Ltmp1448
	.quad	.Ltmp1449
	.quad	.Ltmp1450
	.quad	.Ltmp1451
	.quad	.Ltmp1452
	.quad	.Ltmp1453
	.quad	.Ltmp1454
	.quad	.Ltmp1455
	.quad	.Ltmp1456
	.quad	.Ltmp1457
	.quad	.Ltmp1458
	.quad	.Ltmp1459
	.quad	.Ltmp1460
	.quad	.Ltmp1461
	.quad	.Ltmp1462
	.quad	.Ltmp1463
	.quad	.Ltmp1464
	.quad	.Ltmp1465
	.quad	.Ltmp1466
	.quad	.Ltmp1467
	.quad	.Ltmp1468
	.quad	.Ltmp1469
	.quad	.Ltmp1470
	.quad	.Ltmp1471
	.quad	.Ltmp1472
	.quad	.Ltmp1473
	.quad	.Ltmp1474
	.quad	.Ltmp1475
	.quad	.Ltmp1476
	.quad	.Ltmp1477
	.quad	.Ltmp1478
	.quad	.Ltmp1479
	.quad	.Ltmp1480
	.quad	.Ltmp1481
	.quad	.Ltmp1482
	.quad	.Ltmp1483
	.quad	.Ltmp1484
	.quad	.Ltmp1485
	.quad	.Ltmp1486
	.quad	.Ltmp1487
	.quad	.Ltmp1488
	.quad	.Ltmp1489
	.quad	.Ltmp1490
	.quad	.Ltmp1491
	.quad	.Ltmp1492
	.quad	.Ltmp1493
	.quad	.Ltmp1494
	.quad	.Ltmp1495
	.quad	.Ltmp1496
	.quad	.Ltmp1497
	.quad	.Ltmp1498
	.quad	.Ltmp1499
	.quad	.Ltmp1500
	.quad	.Ltmp1501
	.quad	.Ltmp1502
	.quad	.Ltmp1503
	.quad	.Ltmp1504
	.quad	.Ltmp1505
	.quad	.Ltmp1506
	.quad	.Ltmp1507
	.quad	.Ltmp1508
	.quad	.Ltmp1509
	.quad	.Ltmp1510
	.quad	.Ltmp1511
	.quad	.Ltmp1512
	.size	_ZN8MEMORY_T6POKE64Edd.tmp$2487, 1296

	.type	_ZN8MEMORY_T6POKE64Edd.tmp$2488,@object # @"_ZN8MEMORY_T6POKE64Edd.tmp$2488"
	.p2align	4
_ZN8MEMORY_T6POKE64Edd.tmp$2488:
	.quad	.Ltmp273
	.quad	.Ltmp274
	.quad	.Ltmp275
	.quad	.Ltmp276
	.quad	.Ltmp277
	.quad	.Ltmp278
	.quad	.Ltmp279
	.quad	.Ltmp536
	.quad	.Ltmp1513
	.quad	.Ltmp793
	.quad	.Ltmp805
	.quad	.Ltmp806
	.quad	.Ltmp807
	.quad	.Ltmp808
	.quad	.Ltmp809
	.quad	.Ltmp810
	.quad	.Ltmp811
	.quad	.Ltmp835
	.quad	.Ltmp1092
	.quad	.Ltmp1349
	.quad	.Ltmp1350
	.size	_ZN8MEMORY_T6POKE64Edd.tmp$2488, 168

	.type	.L.str.1628,@object     # @.str.1628
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1628:
	.asciz	"tmp.bas"
	.size	.L.str.1628, 8

	.type	COMPILER$,@object       # @"COMPILER$"
	.comm	COMPILER$,24,8
	.type	.L.str.1629,@object     # @.str.1629
.L.str.1629:
	.asciz	"fbc "
	.size	.L.str.1629, 5

	.type	.L.str.1630,@object     # @.str.1630
.L.str.1630:
	.asciz	"fbc -lang qb "
	.size	.L.str.1630, 14

	.type	.L.str.1631,@object     # @.str.1631
.L.str.1631:
	.asciz	"tmp.glsl"
	.size	.L.str.1631, 9

	.type	.L.str.1632,@object     # @.str.1632
.L.str.1632:
	.asciz	"tmp.cob"
	.size	.L.str.1632, 8

	.type	.L.str.1633,@object     # @.str.1633
.L.str.1633:
	.asciz	"cobc "
	.size	.L.str.1633, 6

	.type	.L.str.1634,@object     # @.str.1634
.L.str.1634:
	.asciz	"tmp.f77"
	.size	.L.str.1634, 8

	.type	.L.str.1635,@object     # @.str.1635
.L.str.1635:
	.asciz	"gfortran "
	.size	.L.str.1635, 10

	.type	.L.str.1636,@object     # @.str.1636
.L.str.1636:
	.asciz	"tmp.pas"
	.size	.L.str.1636, 8

	.type	.L.str.1637,@object     # @.str.1637
.L.str.1637:
	.asciz	"fpc "
	.size	.L.str.1637, 5

	.type	.L.str.1638,@object     # @.str.1638
.L.str.1638:
	.asciz	"tmp.osl"
	.size	.L.str.1638, 8

	.type	.L.str.1639,@object     # @.str.1639
.L.str.1639:
	.asciz	"povray "
	.size	.L.str.1639, 8

	.type	.L.str.1640,@object     # @.str.1640
.L.str.1640:
	.asciz	"tmp.java"
	.size	.L.str.1640, 9

	.type	.L.str.1641,@object     # @.str.1641
.L.str.1641:
	.asciz	"java "
	.size	.L.str.1641, 6

	.type	.L.str.1642,@object     # @.str.1642
.L.str.1642:
	.asciz	"tmp.c"
	.size	.L.str.1642, 6

	.type	.L.str.1643,@object     # @.str.1643
.L.str.1643:
	.asciz	"gcc "
	.size	.L.str.1643, 5

	.type	.L.str.1644,@object     # @.str.1644
.L.str.1644:
	.asciz	"tmp.cpp"
	.size	.L.str.1644, 8

	.type	.L.str.1645,@object     # @.str.1645
.L.str.1645:
	.asciz	"g++ "
	.size	.L.str.1645, 5

	.type	.L.str.1646,@object     # @.str.1646
.L.str.1646:
	.asciz	"tmp.cs"
	.size	.L.str.1646, 7

	.type	.L.str.1647,@object     # @.str.1647
.L.str.1647:
	.asciz	"csc "
	.size	.L.str.1647, 5

	.type	.L.str.1648,@object     # @.str.1648
.L.str.1648:
	.asciz	"tmp.js"
	.size	.L.str.1648, 7

	.type	.L.str.1649,@object     # @.str.1649
.L.str.1649:
	.asciz	"node "
	.size	.L.str.1649, 6

	.type	.L.str.1650,@object     # @.str.1650
.L.str.1650:
	.asciz	"tmp.php"
	.size	.L.str.1650, 8

	.type	.L.str.1651,@object     # @.str.1651
.L.str.1651:
	.asciz	"php -f "
	.size	.L.str.1651, 8

	.type	.L.str.1652,@object     # @.str.1652
.L.str.1652:
	.asciz	"tmp.py"
	.size	.L.str.1652, 7

	.type	.L.str.1653,@object     # @.str.1653
.L.str.1653:
	.asciz	"python "
	.size	.L.str.1653, 8

	.type	.L.str.1654,@object     # @.str.1654
.L.str.1654:
	.asciz	"tmp.swift"
	.size	.L.str.1654, 10

	.type	.L.str.1655,@object     # @.str.1655
.L.str.1655:
	.asciz	"swift "
	.size	.L.str.1655, 7

	.type	.L.str.1656,@object     # @.str.1656
.L.str.1656:
	.asciz	"tmp.m"
	.size	.L.str.1656, 6

	.type	.L.str.1657,@object     # @.str.1657
.L.str.1657:
	.asciz	"octave --persist "
	.size	.L.str.1657, 18

	.type	.L.str.1658,@object     # @.str.1658
.L.str.1658:
	.asciz	"tmp.kt"
	.size	.L.str.1658, 7

	.type	.L.str.1659,@object     # @.str.1659
.L.str.1659:
	.asciz	"kotlinc "
	.size	.L.str.1659, 9

	.type	.L.str.1660,@object     # @.str.1660
.L.str.1660:
	.asciz	"tmp.r"
	.size	.L.str.1660, 6

	.type	.L.str.1661,@object     # @.str.1661
.L.str.1661:
	.asciz	"rscript "
	.size	.L.str.1661, 9

	.type	.L.str.1662,@object     # @.str.1662
.L.str.1662:
	.asciz	"tmp.dart"
	.size	.L.str.1662, 9

	.type	.L.str.1663,@object     # @.str.1663
.L.str.1663:
	.asciz	"dart "
	.size	.L.str.1663, 6

	.type	.L.str.1664,@object     # @.str.1664
.L.str.1664:
	.asciz	"tmp.scala"
	.size	.L.str.1664, 10

	.type	.L.str.1665,@object     # @.str.1665
.L.str.1665:
	.asciz	"scalac "
	.size	.L.str.1665, 8

	.type	SCR_POS$,@object        # @"SCR_POS$"
	.comm	SCR_POS$,8,8
	.type	INDEX$,@object          # @"INDEX$"
	.data
	.p2align	1
INDEX$:
	.short	34                      # 0x22
	.size	INDEX$, 2

	.type	.L.str.1666,@object     # @.str.1666
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1666:
	.asciz	"press any key to continue."
	.size	.L.str.1666, 27

	.type	.L.str.1667,@object     # @.str.1667
.L.str.1667:
	.asciz	"rm ./tmp; ./"
	.size	.L.str.1667, 13

	.type	.L.str.1668,@object     # @.str.1668
.L.str.1668:
	.asciz	"./chargen/"
	.size	.L.str.1668, 11

	.type	.L.str.1669,@object     # @.str.1669
.L.str.1669:
	.asciz	".c64"
	.size	.L.str.1669, 5

	.type	.L.str.1670,@object     # @.str.1670
.L.str.1670:
	.asciz	"wine "
	.size	.L.str.1670, 6

	.type	.L.str.1671,@object     # @.str.1671
.L.str.1671:
	.asciz	"dosbox "
	.size	.L.str.1671, 8

	.type	.L.str.1672,@object     # @.str.1672
.L.str.1672:
	.asciz	" -fullscreen -exit"
	.size	.L.str.1672, 19

	.type	.L.str.1673,@object     # @.str.1673
.L.str.1673:
	.asciz	".asm"
	.size	.L.str.1673, 5

	.type	.L.str.1674,@object     # @.str.1674
.L.str.1674:
	.asciz	"nasm "
	.size	.L.str.1674, 6

	.type	.L.str.1675,@object     # @.str.1675
.L.str.1675:
	.asciz	".asm -f bin -o"
	.size	.L.str.1675, 15

	.type	.L.str.1676,@object     # @.str.1676
.L.str.1676:
	.asciz	".bin"
	.size	.L.str.1676, 5

	.type	.L.str.1677,@object     # @.str.1677
.L.str.1677:
	.asciz	"dosbox -c 'boot "
	.size	.L.str.1677, 17

	.type	.L.str.1678,@object     # @.str.1678
.L.str.1678:
	.asciz	" -exit"
	.size	.L.str.1678, 7

	.type	.L.str.1679,@object     # @.str.1679
.L.str.1679:
	.asciz	"rm "
	.size	.L.str.1679, 4

	.type	_ZN8MEMORY_T6POKE64Edd.tmp$2489,@object # @"_ZN8MEMORY_T6POKE64Edd.tmp$2489"
	.data
	.p2align	4
_ZN8MEMORY_T6POKE64Edd.tmp$2489:
	.quad	.Ltmp1514
	.quad	.Ltmp1515
	.quad	.Ltmp1516
	.quad	.Ltmp1517
	.size	_ZN8MEMORY_T6POKE64Edd.tmp$2489, 32

	.type	_ZN8MEMORY_T6POKE64Edd.tmp$2490,@object # @"_ZN8MEMORY_T6POKE64Edd.tmp$2490"
	.p2align	4
_ZN8MEMORY_T6POKE64Edd.tmp$2490:
	.quad	.Ltmp1518
	.quad	.Ltmp1519
	.quad	.Ltmp1520
	.quad	.Ltmp1521
	.quad	.Ltmp1522
	.quad	.Ltmp1523
	.quad	.Ltmp1524
	.size	_ZN8MEMORY_T6POKE64Edd.tmp$2490, 56

	.type	_ZN8MEMORY_T6POKE64Edd.tmp$2491,@object # @"_ZN8MEMORY_T6POKE64Edd.tmp$2491"
	.p2align	4
_ZN8MEMORY_T6POKE64Edd.tmp$2491:
	.quad	.Ltmp1525
	.quad	.Ltmp1526
	.quad	.Ltmp1527
	.quad	.Ltmp1528
	.quad	.Ltmp1529
	.quad	.Ltmp1530
	.size	_ZN8MEMORY_T6POKE64Edd.tmp$2491, 48

	.type	label$5073,@object      # @"label$5073"
	.p2align	4
label$5073:
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	3                       # 0x3
	.quad	.L.str.1697
	.short	1                       # 0x1
	.quad	.L.str.88
	.short	1                       # 0x1
	.quad	.L.str.94
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_BRK
	.short	65535                   # 0xffff
	.quad	label$5460
	.size	label$5073, 70

	.type	label$5079,@object      # @"label$5079"
	.p2align	4
label$5079:
	.short	3                       # 0x3
	.quad	.L.str.2004
	.short	65535                   # 0xffff
	.quad	label$5970
	.size	label$5079, 20

	.type	.L.str.1680,@object     # @.str.1680
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1680:
	.asciz	"PC:"
	.size	.L.str.1680, 4

	.type	.L.str.1681,@object     # @.str.1681
.L.str.1681:
	.asciz	" A:"
	.size	.L.str.1681, 4

	.type	.L.str.1682,@object     # @.str.1682
.L.str.1682:
	.asciz	" X:"
	.size	.L.str.1682, 4

	.type	.L.str.1683,@object     # @.str.1683
.L.str.1683:
	.asciz	" Y:"
	.size	.L.str.1683, 4

	.type	.L.str.1684,@object     # @.str.1684
.L.str.1684:
	.asciz	" S:"
	.size	.L.str.1684, 4

	.type	.L.str.1685,@object     # @.str.1685
.L.str.1685:
	.asciz	" N:"
	.size	.L.str.1685, 4

	.type	.L.str.1686,@object     # @.str.1686
.L.str.1686:
	.asciz	" V:"
	.size	.L.str.1686, 4

	.type	.L.str.1687,@object     # @.str.1687
.L.str.1687:
	.asciz	" -"
	.size	.L.str.1687, 3

	.type	.L.str.1688,@object     # @.str.1688
.L.str.1688:
	.asciz	" B:"
	.size	.L.str.1688, 4

	.type	.L.str.1689,@object     # @.str.1689
.L.str.1689:
	.asciz	" D:"
	.size	.L.str.1689, 4

	.type	.L.str.1690,@object     # @.str.1690
.L.str.1690:
	.asciz	" I:"
	.size	.L.str.1690, 4

	.type	.L.str.1691,@object     # @.str.1691
.L.str.1691:
	.asciz	" Z:"
	.size	.L.str.1691, 4

	.type	.L.str.1692,@object     # @.str.1692
.L.str.1692:
	.asciz	" C:"
	.size	.L.str.1692, 4

	.type	_ZN7CPU65104TICKEd.tmp$2534,@object # @"_ZN7CPU65104TICKEd.tmp$2534"
	.data
	.p2align	4
_ZN7CPU65104TICKEd.tmp$2534:
	.quad	.Ltmp1531
	.quad	.Ltmp1532
	.quad	.Ltmp1533
	.quad	.Ltmp1534
	.quad	.Ltmp1535
	.quad	.Ltmp1536
	.quad	.Ltmp1537
	.quad	.Ltmp1538
	.quad	.Ltmp1539
	.quad	.Ltmp1540
	.quad	.Ltmp1541
	.quad	.Ltmp1542
	.quad	.Ltmp1543
	.size	_ZN7CPU65104TICKEd.tmp$2534, 104

	.type	CARY$,@object           # @"CARY$"
	.local	CARY$
	.comm	CARY$,8,8
	.type	INTERRUPTSERVICE.S$1,@object # @"INTERRUPTSERVICE.S$1"
	.local	INTERRUPTSERVICE.S$1
	.comm	INTERRUPTSERVICE.S$1,24,8
	.type	.L.str.1693,@object     # @.str.1693
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1693:
	.asciz	"save filename:"
	.size	.L.str.1693, 15

	.type	.L.str.1694,@object     # @.str.1694
.L.str.1694:
	.asciz	"can't create: "
	.size	.L.str.1694, 15

	.type	.L.str.1695,@object     # @.str.1695
.L.str.1695:
	.asciz	"load filename:"
	.size	.L.str.1695, 15

	.type	.L.str.1696,@object     # @.str.1696
.L.str.1696:
	.asciz	"can't open: "
	.size	.L.str.1696, 13

	.type	FLAG$,@object           # @"FLAG$"
	.local	FLAG$
	.comm	FLAG$,8,8
	.type	EOL$,@object            # @"EOL$"
	.local	EOL$
	.comm	EOL$,24,8
	.type	IMAGE$,@object          # @"IMAGE$"
	.comm	IMAGE$,8,8
	.type	STR_LEN$,@object        # @"STR_LEN$"
	.comm	STR_LEN$,8,8
	.type	CNT$,@object            # @"CNT$"
	.comm	CNT$,8,8
	.type	.L.str.1697,@object     # @.str.1697
.L.str.1697:
	.asciz	"BRK"
	.size	.L.str.1697, 4

	.type	label$5460,@object      # @"label$5460"
	.data
	.p2align	4
label$5460:
	.short	1                       # 0x1
	.quad	.L.str.88
	.short	3                       # 0x3
	.quad	.L.str.1698
	.short	2                       # 0x2
	.quad	.L.str.1699
	.short	1                       # 0x1
	.quad	.L.str.93
	.short	1                       # 0x1
	.quad	.L.str.89
	.short	65534                   # 0xfffe
	.quad	INS_ORA
	.short	65535                   # 0xffff
	.quad	label$5462
	.size	label$5460, 70

	.type	.L.str.1698,@object     # @.str.1698
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1698:
	.asciz	"ORA"
	.size	.L.str.1698, 4

	.type	.L.str.1699,@object     # @.str.1699
.L.str.1699:
	.asciz	"10"
	.size	.L.str.1699, 3

	.type	label$5462,@object      # @"label$5462"
	.data
	.p2align	4
label$5462:
	.short	1                       # 0x1
	.quad	.L.str.89
	.short	3                       # 0x3
	.quad	.L.str.1700
	.short	1                       # 0x1
	.quad	.L.str.90
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_R32
	.short	65535                   # 0xffff
	.quad	label$5464
	.size	label$5462, 70

	.type	.L.str.1700,@object     # @.str.1700
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1700:
	.asciz	"R32"
	.size	.L.str.1700, 4

	.type	label$5464,@object      # @"label$5464"
	.data
	.p2align	4
label$5464:
	.short	1                       # 0x1
	.quad	.L.str.90
	.short	3                       # 0x3
	.quad	.L.str.1701
	.short	1                       # 0x1
	.quad	.L.str.90
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_W32
	.short	65535                   # 0xffff
	.quad	label$5466
	.size	label$5464, 70

	.type	.L.str.1701,@object     # @.str.1701
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1701:
	.asciz	"W32"
	.size	.L.str.1701, 4

	.type	label$5466,@object      # @"label$5466"
	.data
	.p2align	4
label$5466:
	.short	1                       # 0x1
	.quad	.L.str.91
	.short	3                       # 0x3
	.quad	.L.str.1702
	.short	1                       # 0x1
	.quad	.L.str.90
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_R64
	.short	65535                   # 0xffff
	.quad	label$5468
	.size	label$5466, 70

	.type	.L.str.1702,@object     # @.str.1702
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1702:
	.asciz	"R64"
	.size	.L.str.1702, 4

	.type	label$5468,@object      # @"label$5468"
	.data
	.p2align	4
label$5468:
	.short	1                       # 0x1
	.quad	.L.str.92
	.short	3                       # 0x3
	.quad	.L.str.1698
	.short	1                       # 0x1
	.quad	.L.str.91
	.short	1                       # 0x1
	.quad	.L.str.90
	.short	1                       # 0x1
	.quad	.L.str.89
	.short	65534                   # 0xfffe
	.quad	INS_ORA
	.short	65535                   # 0xffff
	.quad	label$5470
	.size	label$5468, 70

	.type	label$5470,@object      # @"label$5470"
	.p2align	4
label$5470:
	.short	1                       # 0x1
	.quad	.L.str.93
	.short	3                       # 0x3
	.quad	.L.str.1703
	.short	1                       # 0x1
	.quad	.L.str.91
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_ASL
	.short	65535                   # 0xffff
	.quad	label$5472
	.size	label$5470, 70

	.type	.L.str.1703,@object     # @.str.1703
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1703:
	.asciz	"ASL"
	.size	.L.str.1703, 4

	.type	label$5472,@object      # @"label$5472"
	.data
	.p2align	4
label$5472:
	.short	1                       # 0x1
	.quad	.L.str.94
	.short	3                       # 0x3
	.quad	.L.str.1704
	.short	1                       # 0x1
	.quad	.L.str.90
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_W64
	.short	65535                   # 0xffff
	.quad	label$5474
	.size	label$5472, 70

	.type	.L.str.1704,@object     # @.str.1704
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1704:
	.asciz	"W64"
	.size	.L.str.1704, 4

	.type	label$5474,@object      # @"label$5474"
	.data
	.p2align	4
label$5474:
	.short	1                       # 0x1
	.quad	.L.str.95
	.short	3                       # 0x3
	.quad	.L.str.1705
	.short	1                       # 0x1
	.quad	.L.str.88
	.short	1                       # 0x1
	.quad	.L.str.90
	.short	1                       # 0x1
	.quad	.L.str.88
	.short	65534                   # 0xfffe
	.quad	INS_PHP
	.short	65535                   # 0xffff
	.quad	label$5476
	.size	label$5474, 70

	.type	.L.str.1705,@object     # @.str.1705
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1705:
	.asciz	"PHP"
	.size	.L.str.1705, 4

	.type	label$5476,@object      # @"label$5476"
	.data
	.p2align	4
label$5476:
	.short	1                       # 0x1
	.quad	.L.str.96
	.short	3                       # 0x3
	.quad	.L.str.1698
	.short	1                       # 0x1
	.quad	.L.str.89
	.short	1                       # 0x1
	.quad	.L.str.89
	.short	1                       # 0x1
	.quad	.L.str.89
	.short	65534                   # 0xfffe
	.quad	INS_ORA
	.short	65535                   # 0xffff
	.quad	label$5478
	.size	label$5476, 70

	.type	label$5478,@object      # @"label$5478"
	.p2align	4
label$5478:
	.short	2                       # 0x2
	.quad	.L.str.1699
	.short	3                       # 0x3
	.quad	.L.str.1703
	.short	1                       # 0x1
	.quad	.L.str.88
	.short	1                       # 0x1
	.quad	.L.str.89
	.short	1                       # 0x1
	.quad	.L.str.88
	.short	65534                   # 0xfffe
	.quad	INS_ASLA
	.short	65535                   # 0xffff
	.quad	label$5480
	.size	label$5478, 70

	.type	label$5480,@object      # @"label$5480"
	.p2align	4
label$5480:
	.short	2                       # 0x2
	.quad	.L.str.1706
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5482
	.size	label$5480, 70

	.type	.L.str.1706,@object     # @.str.1706
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1706:
	.asciz	"11"
	.size	.L.str.1706, 3

	.type	.L.str.1707,@object     # @.str.1707
.L.str.1707:
	.asciz	"***"
	.size	.L.str.1707, 4

	.type	label$5482,@object      # @"label$5482"
	.data
	.p2align	4
label$5482:
	.short	2                       # 0x2
	.quad	.L.str.1708
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5484
	.size	label$5482, 70

	.type	.L.str.1708,@object     # @.str.1708
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1708:
	.asciz	"12"
	.size	.L.str.1708, 3

	.type	label$5484,@object      # @"label$5484"
	.data
	.p2align	4
label$5484:
	.short	2                       # 0x2
	.quad	.L.str.1709
	.short	3                       # 0x3
	.quad	.L.str.1698
	.short	1                       # 0x1
	.quad	.L.str.90
	.short	1                       # 0x1
	.quad	.L.str.91
	.short	1                       # 0x1
	.quad	.L.str.90
	.short	65534                   # 0xfffe
	.quad	INS_ORA
	.short	65535                   # 0xffff
	.quad	label$5486
	.size	label$5484, 70

	.type	.L.str.1709,@object     # @.str.1709
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1709:
	.asciz	"13"
	.size	.L.str.1709, 3

	.type	label$5486,@object      # @"label$5486"
	.data
	.p2align	4
label$5486:
	.short	2                       # 0x2
	.quad	.L.str.1710
	.short	3                       # 0x3
	.quad	.L.str.1703
	.short	1                       # 0x1
	.quad	.L.str.90
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_ASL
	.short	65535                   # 0xffff
	.quad	label$5488
	.size	label$5486, 70

	.type	.L.str.1710,@object     # @.str.1710
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1710:
	.asciz	"14"
	.size	.L.str.1710, 3

	.type	label$5488,@object      # @"label$5488"
	.data
	.p2align	4
label$5488:
	.short	2                       # 0x2
	.quad	.L.str.1711
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5490
	.size	label$5488, 70

	.type	.L.str.1711,@object     # @.str.1711
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1711:
	.asciz	"15"
	.size	.L.str.1711, 3

	.type	label$5490,@object      # @"label$5490"
	.data
	.p2align	4
label$5490:
	.short	2                       # 0x2
	.quad	.L.str.1712
	.short	3                       # 0x3
	.quad	.L.str.1713
	.short	1                       # 0x1
	.quad	.L.str.96
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_BPL
	.short	65535                   # 0xffff
	.quad	label$5492
	.size	label$5490, 70

	.type	.L.str.1712,@object     # @.str.1712
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1712:
	.asciz	"16"
	.size	.L.str.1712, 3

	.type	.L.str.1713,@object     # @.str.1713
.L.str.1713:
	.asciz	"BPL"
	.size	.L.str.1713, 4

	.type	label$5492,@object      # @"label$5492"
	.data
	.p2align	4
label$5492:
	.short	2                       # 0x2
	.quad	.L.str.1714
	.short	3                       # 0x3
	.quad	.L.str.1698
	.short	2                       # 0x2
	.quad	.L.str.1706
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_ORA
	.short	65535                   # 0xffff
	.quad	label$5494
	.size	label$5492, 70

	.type	.L.str.1714,@object     # @.str.1714
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1714:
	.asciz	"17"
	.size	.L.str.1714, 3

	.type	label$5494,@object      # @"label$5494"
	.data
	.p2align	4
label$5494:
	.short	2                       # 0x2
	.quad	.L.str.1715
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5496
	.size	label$5494, 70

	.type	.L.str.1715,@object     # @.str.1715
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1715:
	.asciz	"18"
	.size	.L.str.1715, 3

	.type	label$5496,@object      # @"label$5496"
	.data
	.p2align	4
label$5496:
	.short	2                       # 0x2
	.quad	.L.str.1716
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5498
	.size	label$5496, 70

	.type	.L.str.1716,@object     # @.str.1716
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1716:
	.asciz	"19"
	.size	.L.str.1716, 3

	.type	label$5498,@object      # @"label$5498"
	.data
	.p2align	4
label$5498:
	.short	2                       # 0x2
	.quad	.L.str.1717
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5500
	.size	label$5498, 70

	.type	.L.str.1717,@object     # @.str.1717
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1717:
	.asciz	"20"
	.size	.L.str.1717, 3

	.type	label$5500,@object      # @"label$5500"
	.data
	.p2align	4
label$5500:
	.short	2                       # 0x2
	.quad	.L.str.1718
	.short	3                       # 0x3
	.quad	.L.str.1698
	.short	1                       # 0x1
	.quad	.L.str.92
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_ORA
	.short	65535                   # 0xffff
	.quad	label$5502
	.size	label$5500, 70

	.type	.L.str.1718,@object     # @.str.1718
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1718:
	.asciz	"21"
	.size	.L.str.1718, 3

	.type	label$5502,@object      # @"label$5502"
	.data
	.p2align	4
label$5502:
	.short	2                       # 0x2
	.quad	.L.str.1719
	.short	3                       # 0x3
	.quad	.L.str.1703
	.short	1                       # 0x1
	.quad	.L.str.92
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_ASL
	.short	65535                   # 0xffff
	.quad	label$5504
	.size	label$5502, 70

	.type	.L.str.1719,@object     # @.str.1719
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1719:
	.asciz	"22"
	.size	.L.str.1719, 3

	.type	label$5504,@object      # @"label$5504"
	.data
	.p2align	4
label$5504:
	.short	2                       # 0x2
	.quad	.L.str.1720
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5506
	.size	label$5504, 70

	.type	.L.str.1720,@object     # @.str.1720
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1720:
	.asciz	"23"
	.size	.L.str.1720, 3

	.type	label$5506,@object      # @"label$5506"
	.data
	.p2align	4
label$5506:
	.short	2                       # 0x2
	.quad	.L.str.1721
	.short	3                       # 0x3
	.quad	.L.str.1722
	.short	1                       # 0x1
	.quad	.L.str.88
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_CLC
	.short	65535                   # 0xffff
	.quad	label$5508
	.size	label$5506, 70

	.type	.L.str.1721,@object     # @.str.1721
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1721:
	.asciz	"24"
	.size	.L.str.1721, 3

	.type	.L.str.1722,@object     # @.str.1722
.L.str.1722:
	.asciz	"CLC"
	.size	.L.str.1722, 4

	.type	label$5508,@object      # @"label$5508"
	.data
	.p2align	4
label$5508:
	.short	2                       # 0x2
	.quad	.L.str.1723
	.short	3                       # 0x3
	.quad	.L.str.1698
	.short	1                       # 0x1
	.quad	.L.str.95
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_ORA
	.short	65535                   # 0xffff
	.quad	label$5510
	.size	label$5508, 70

	.type	.L.str.1723,@object     # @.str.1723
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1723:
	.asciz	"25"
	.size	.L.str.1723, 3

	.type	label$5510,@object      # @"label$5510"
	.data
	.p2align	4
label$5510:
	.short	2                       # 0x2
	.quad	.L.str.1724
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5512
	.size	label$5510, 70

	.type	.L.str.1724,@object     # @.str.1724
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1724:
	.asciz	"26"
	.size	.L.str.1724, 3

	.type	label$5512,@object      # @"label$5512"
	.data
	.p2align	4
label$5512:
	.short	2                       # 0x2
	.quad	.L.str.1725
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5514
	.size	label$5512, 70

	.type	.L.str.1725,@object     # @.str.1725
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1725:
	.asciz	"27"
	.size	.L.str.1725, 3

	.type	label$5514,@object      # @"label$5514"
	.data
	.p2align	4
label$5514:
	.short	2                       # 0x2
	.quad	.L.str.1726
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5516
	.size	label$5514, 70

	.type	.L.str.1726,@object     # @.str.1726
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1726:
	.asciz	"28"
	.size	.L.str.1726, 3

	.type	label$5516,@object      # @"label$5516"
	.data
	.p2align	4
label$5516:
	.short	2                       # 0x2
	.quad	.L.str.1727
	.short	3                       # 0x3
	.quad	.L.str.1698
	.short	1                       # 0x1
	.quad	.L.str.94
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_ORA
	.short	65535                   # 0xffff
	.quad	label$5518
	.size	label$5516, 70

	.type	.L.str.1727,@object     # @.str.1727
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1727:
	.asciz	"29"
	.size	.L.str.1727, 3

	.type	label$5518,@object      # @"label$5518"
	.data
	.p2align	4
label$5518:
	.short	2                       # 0x2
	.quad	.L.str.1728
	.short	3                       # 0x3
	.quad	.L.str.1703
	.short	1                       # 0x1
	.quad	.L.str.94
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_ASL
	.short	65535                   # 0xffff
	.quad	label$5520
	.size	label$5518, 70

	.type	.L.str.1728,@object     # @.str.1728
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1728:
	.asciz	"30"
	.size	.L.str.1728, 3

	.type	label$5520,@object      # @"label$5520"
	.data
	.p2align	4
label$5520:
	.short	2                       # 0x2
	.quad	.L.str.1729
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5522
	.size	label$5520, 70

	.type	.L.str.1729,@object     # @.str.1729
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1729:
	.asciz	"31"
	.size	.L.str.1729, 3

	.type	label$5522,@object      # @"label$5522"
	.data
	.p2align	4
label$5522:
	.short	2                       # 0x2
	.quad	.L.str.1730
	.short	3                       # 0x3
	.quad	.L.str.1731
	.short	1                       # 0x1
	.quad	.L.str.90
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_JSR
	.short	65535                   # 0xffff
	.quad	label$5524
	.size	label$5522, 70

	.type	.L.str.1730,@object     # @.str.1730
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1730:
	.asciz	"32"
	.size	.L.str.1730, 3

	.type	.L.str.1731,@object     # @.str.1731
.L.str.1731:
	.asciz	"JSR"
	.size	.L.str.1731, 4

	.type	label$5524,@object      # @"label$5524"
	.data
	.p2align	4
label$5524:
	.short	2                       # 0x2
	.quad	.L.str.1732
	.short	3                       # 0x3
	.quad	.L.str.1733
	.short	2                       # 0x2
	.quad	.L.str.1699
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_AND
	.short	65535                   # 0xffff
	.quad	label$5526
	.size	label$5524, 70

	.type	.L.str.1732,@object     # @.str.1732
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1732:
	.asciz	"33"
	.size	.L.str.1732, 3

	.type	.L.str.1733,@object     # @.str.1733
.L.str.1733:
	.asciz	"AND"
	.size	.L.str.1733, 4

	.type	label$5526,@object      # @"label$5526"
	.data
	.p2align	4
label$5526:
	.short	2                       # 0x2
	.quad	.L.str.1734
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5528
	.size	label$5526, 70

	.type	.L.str.1734,@object     # @.str.1734
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1734:
	.asciz	"34"
	.size	.L.str.1734, 3

	.type	label$5528,@object      # @"label$5528"
	.data
	.p2align	4
label$5528:
	.short	2                       # 0x2
	.quad	.L.str.1735
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5530
	.size	label$5528, 70

	.type	.L.str.1735,@object     # @.str.1735
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1735:
	.asciz	"35"
	.size	.L.str.1735, 3

	.type	label$5530,@object      # @"label$5530"
	.data
	.p2align	4
label$5530:
	.short	2                       # 0x2
	.quad	.L.str.1736
	.short	3                       # 0x3
	.quad	.L.str.1737
	.short	1                       # 0x1
	.quad	.L.str.91
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_BIT
	.short	65535                   # 0xffff
	.quad	label$5532
	.size	label$5530, 70

	.type	.L.str.1736,@object     # @.str.1736
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1736:
	.asciz	"36"
	.size	.L.str.1736, 3

	.type	.L.str.1737,@object     # @.str.1737
.L.str.1737:
	.asciz	"BIT"
	.size	.L.str.1737, 4

	.type	label$5532,@object      # @"label$5532"
	.data
	.p2align	4
label$5532:
	.short	2                       # 0x2
	.quad	.L.str.1738
	.short	3                       # 0x3
	.quad	.L.str.1733
	.short	1                       # 0x1
	.quad	.L.str.91
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_AND
	.short	65535                   # 0xffff
	.quad	label$5534
	.size	label$5532, 70

	.type	.L.str.1738,@object     # @.str.1738
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1738:
	.asciz	"37"
	.size	.L.str.1738, 3

	.type	label$5534,@object      # @"label$5534"
	.data
	.p2align	4
label$5534:
	.short	2                       # 0x2
	.quad	.L.str.1739
	.short	3                       # 0x3
	.quad	.L.str.1740
	.short	1                       # 0x1
	.quad	.L.str.91
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_ROL
	.short	65535                   # 0xffff
	.quad	label$5536
	.size	label$5534, 70

	.type	.L.str.1739,@object     # @.str.1739
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1739:
	.asciz	"38"
	.size	.L.str.1739, 3

	.type	.L.str.1740,@object     # @.str.1740
.L.str.1740:
	.asciz	"ROL"
	.size	.L.str.1740, 4

	.type	label$5536,@object      # @"label$5536"
	.data
	.p2align	4
label$5536:
	.short	2                       # 0x2
	.quad	.L.str.1741
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5538
	.size	label$5536, 70

	.type	.L.str.1741,@object     # @.str.1741
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1741:
	.asciz	"39"
	.size	.L.str.1741, 3

	.type	label$5538,@object      # @"label$5538"
	.data
	.p2align	4
label$5538:
	.short	2                       # 0x2
	.quad	.L.str.1742
	.short	3                       # 0x3
	.quad	.L.str.1743
	.short	1                       # 0x1
	.quad	.L.str.88
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_PLP
	.short	65535                   # 0xffff
	.quad	label$5540
	.size	label$5538, 70

	.type	.L.str.1742,@object     # @.str.1742
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1742:
	.asciz	"40"
	.size	.L.str.1742, 3

	.type	.L.str.1743,@object     # @.str.1743
.L.str.1743:
	.asciz	"PLP"
	.size	.L.str.1743, 4

	.type	label$5540,@object      # @"label$5540"
	.data
	.p2align	4
label$5540:
	.short	2                       # 0x2
	.quad	.L.str.1744
	.short	3                       # 0x3
	.quad	.L.str.1733
	.short	1                       # 0x1
	.quad	.L.str.89
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_AND
	.short	65535                   # 0xffff
	.quad	label$5542
	.size	label$5540, 70

	.type	.L.str.1744,@object     # @.str.1744
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1744:
	.asciz	"41"
	.size	.L.str.1744, 3

	.type	label$5542,@object      # @"label$5542"
	.data
	.p2align	4
label$5542:
	.short	2                       # 0x2
	.quad	.L.str.1745
	.short	3                       # 0x3
	.quad	.L.str.1740
	.short	1                       # 0x1
	.quad	.L.str.88
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_ROLA
	.short	65535                   # 0xffff
	.quad	label$5544
	.size	label$5542, 70

	.type	.L.str.1745,@object     # @.str.1745
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1745:
	.asciz	"42"
	.size	.L.str.1745, 3

	.type	label$5544,@object      # @"label$5544"
	.data
	.p2align	4
label$5544:
	.short	2                       # 0x2
	.quad	.L.str.1746
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5546
	.size	label$5544, 70

	.type	.L.str.1746,@object     # @.str.1746
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1746:
	.asciz	"43"
	.size	.L.str.1746, 3

	.type	label$5546,@object      # @"label$5546"
	.data
	.p2align	4
label$5546:
	.short	2                       # 0x2
	.quad	.L.str.1747
	.short	3                       # 0x3
	.quad	.L.str.1737
	.short	1                       # 0x1
	.quad	.L.str.90
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_BIT
	.short	65535                   # 0xffff
	.quad	label$5548
	.size	label$5546, 70

	.type	.L.str.1747,@object     # @.str.1747
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1747:
	.asciz	"44"
	.size	.L.str.1747, 3

	.type	label$5548,@object      # @"label$5548"
	.data
	.p2align	4
label$5548:
	.short	2                       # 0x2
	.quad	.L.str.1748
	.short	3                       # 0x3
	.quad	.L.str.1733
	.short	1                       # 0x1
	.quad	.L.str.90
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_AND
	.short	65535                   # 0xffff
	.quad	label$5550
	.size	label$5548, 70

	.type	.L.str.1748,@object     # @.str.1748
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1748:
	.asciz	"45"
	.size	.L.str.1748, 3

	.type	label$5550,@object      # @"label$5550"
	.data
	.p2align	4
label$5550:
	.short	2                       # 0x2
	.quad	.L.str.1749
	.short	3                       # 0x3
	.quad	.L.str.1740
	.short	1                       # 0x1
	.quad	.L.str.90
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_ROL
	.short	65535                   # 0xffff
	.quad	label$5552
	.size	label$5550, 70

	.type	.L.str.1749,@object     # @.str.1749
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1749:
	.asciz	"46"
	.size	.L.str.1749, 3

	.type	label$5552,@object      # @"label$5552"
	.data
	.p2align	4
label$5552:
	.short	2                       # 0x2
	.quad	.L.str.1750
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5554
	.size	label$5552, 70

	.type	.L.str.1750,@object     # @.str.1750
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1750:
	.asciz	"47"
	.size	.L.str.1750, 3

	.type	label$5554,@object      # @"label$5554"
	.data
	.p2align	4
label$5554:
	.short	2                       # 0x2
	.quad	.L.str.1751
	.short	3                       # 0x3
	.quad	.L.str.1752
	.short	1                       # 0x1
	.quad	.L.str.96
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_BMI
	.short	65535                   # 0xffff
	.quad	label$5556
	.size	label$5554, 70

	.type	.L.str.1751,@object     # @.str.1751
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1751:
	.asciz	"48"
	.size	.L.str.1751, 3

	.type	.L.str.1752,@object     # @.str.1752
.L.str.1752:
	.asciz	"BMI"
	.size	.L.str.1752, 4

	.type	label$5556,@object      # @"label$5556"
	.data
	.p2align	4
label$5556:
	.short	2                       # 0x2
	.quad	.L.str.1753
	.short	3                       # 0x3
	.quad	.L.str.1733
	.short	2                       # 0x2
	.quad	.L.str.1706
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_AND
	.short	65535                   # 0xffff
	.quad	label$5558
	.size	label$5556, 70

	.type	.L.str.1753,@object     # @.str.1753
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1753:
	.asciz	"49"
	.size	.L.str.1753, 3

	.type	label$5558,@object      # @"label$5558"
	.data
	.p2align	4
label$5558:
	.short	2                       # 0x2
	.quad	.L.str.1754
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5560
	.size	label$5558, 70

	.type	.L.str.1754,@object     # @.str.1754
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1754:
	.asciz	"50"
	.size	.L.str.1754, 3

	.type	label$5560,@object      # @"label$5560"
	.data
	.p2align	4
label$5560:
	.short	2                       # 0x2
	.quad	.L.str.1755
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5562
	.size	label$5560, 70

	.type	.L.str.1755,@object     # @.str.1755
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1755:
	.asciz	"51"
	.size	.L.str.1755, 3

	.type	label$5562,@object      # @"label$5562"
	.data
	.p2align	4
label$5562:
	.short	2                       # 0x2
	.quad	.L.str.1756
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5564
	.size	label$5562, 70

	.type	.L.str.1756,@object     # @.str.1756
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1756:
	.asciz	"52"
	.size	.L.str.1756, 3

	.type	label$5564,@object      # @"label$5564"
	.data
	.p2align	4
label$5564:
	.short	2                       # 0x2
	.quad	.L.str.1757
	.short	3                       # 0x3
	.quad	.L.str.1733
	.short	1                       # 0x1
	.quad	.L.str.92
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_AND
	.short	65535                   # 0xffff
	.quad	label$5566
	.size	label$5564, 70

	.type	.L.str.1757,@object     # @.str.1757
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1757:
	.asciz	"53"
	.size	.L.str.1757, 3

	.type	label$5566,@object      # @"label$5566"
	.data
	.p2align	4
label$5566:
	.short	2                       # 0x2
	.quad	.L.str.1758
	.short	3                       # 0x3
	.quad	.L.str.1740
	.short	1                       # 0x1
	.quad	.L.str.92
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_ROL
	.short	65535                   # 0xffff
	.quad	label$5568
	.size	label$5566, 70

	.type	.L.str.1758,@object     # @.str.1758
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1758:
	.asciz	"54"
	.size	.L.str.1758, 3

	.type	label$5568,@object      # @"label$5568"
	.data
	.p2align	4
label$5568:
	.short	2                       # 0x2
	.quad	.L.str.1759
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5570
	.size	label$5568, 70

	.type	.L.str.1759,@object     # @.str.1759
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1759:
	.asciz	"55"
	.size	.L.str.1759, 3

	.type	label$5570,@object      # @"label$5570"
	.data
	.p2align	4
label$5570:
	.short	2                       # 0x2
	.quad	.L.str.1760
	.short	3                       # 0x3
	.quad	.L.str.1761
	.short	1                       # 0x1
	.quad	.L.str.88
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_SEC
	.short	65535                   # 0xffff
	.quad	label$5572
	.size	label$5570, 70

	.type	.L.str.1760,@object     # @.str.1760
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1760:
	.asciz	"56"
	.size	.L.str.1760, 3

	.type	.L.str.1761,@object     # @.str.1761
.L.str.1761:
	.asciz	"SEC"
	.size	.L.str.1761, 4

	.type	label$5572,@object      # @"label$5572"
	.data
	.p2align	4
label$5572:
	.short	2                       # 0x2
	.quad	.L.str.1762
	.short	3                       # 0x3
	.quad	.L.str.1733
	.short	1                       # 0x1
	.quad	.L.str.95
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_AND
	.short	65535                   # 0xffff
	.quad	label$5574
	.size	label$5572, 70

	.type	.L.str.1762,@object     # @.str.1762
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1762:
	.asciz	"57"
	.size	.L.str.1762, 3

	.type	label$5574,@object      # @"label$5574"
	.data
	.p2align	4
label$5574:
	.short	2                       # 0x2
	.quad	.L.str.1763
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5576
	.size	label$5574, 70

	.type	.L.str.1763,@object     # @.str.1763
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1763:
	.asciz	"58"
	.size	.L.str.1763, 3

	.type	label$5576,@object      # @"label$5576"
	.data
	.p2align	4
label$5576:
	.short	2                       # 0x2
	.quad	.L.str.1764
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5578
	.size	label$5576, 70

	.type	.L.str.1764,@object     # @.str.1764
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1764:
	.asciz	"59"
	.size	.L.str.1764, 3

	.type	label$5578,@object      # @"label$5578"
	.data
	.p2align	4
label$5578:
	.short	2                       # 0x2
	.quad	.L.str.1765
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5580
	.size	label$5578, 70

	.type	.L.str.1765,@object     # @.str.1765
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1765:
	.asciz	"60"
	.size	.L.str.1765, 3

	.type	label$5580,@object      # @"label$5580"
	.data
	.p2align	4
label$5580:
	.short	2                       # 0x2
	.quad	.L.str.1766
	.short	3                       # 0x3
	.quad	.L.str.1733
	.short	1                       # 0x1
	.quad	.L.str.94
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_AND
	.short	65535                   # 0xffff
	.quad	label$5582
	.size	label$5580, 70

	.type	.L.str.1766,@object     # @.str.1766
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1766:
	.asciz	"61"
	.size	.L.str.1766, 3

	.type	label$5582,@object      # @"label$5582"
	.data
	.p2align	4
label$5582:
	.short	2                       # 0x2
	.quad	.L.str.1767
	.short	3                       # 0x3
	.quad	.L.str.1740
	.short	1                       # 0x1
	.quad	.L.str.94
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_ROL
	.short	65535                   # 0xffff
	.quad	label$5584
	.size	label$5582, 70

	.type	.L.str.1767,@object     # @.str.1767
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1767:
	.asciz	"62"
	.size	.L.str.1767, 3

	.type	label$5584,@object      # @"label$5584"
	.data
	.p2align	4
label$5584:
	.short	2                       # 0x2
	.quad	.L.str.1768
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5586
	.size	label$5584, 70

	.type	.L.str.1768,@object     # @.str.1768
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1768:
	.asciz	"63"
	.size	.L.str.1768, 3

	.type	label$5586,@object      # @"label$5586"
	.data
	.p2align	4
label$5586:
	.short	2                       # 0x2
	.quad	.L.str.1769
	.short	3                       # 0x3
	.quad	.L.str.1770
	.short	1                       # 0x1
	.quad	.L.str.88
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_RTI
	.short	65535                   # 0xffff
	.quad	label$5588
	.size	label$5586, 70

	.type	.L.str.1769,@object     # @.str.1769
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1769:
	.asciz	"64"
	.size	.L.str.1769, 3

	.type	.L.str.1770,@object     # @.str.1770
.L.str.1770:
	.asciz	"RTI"
	.size	.L.str.1770, 4

	.type	label$5588,@object      # @"label$5588"
	.data
	.p2align	4
label$5588:
	.short	2                       # 0x2
	.quad	.L.str.1771
	.short	3                       # 0x3
	.quad	.L.str.1772
	.short	2                       # 0x2
	.quad	.L.str.1699
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_EOR
	.short	65535                   # 0xffff
	.quad	label$5590
	.size	label$5588, 70

	.type	.L.str.1771,@object     # @.str.1771
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1771:
	.asciz	"65"
	.size	.L.str.1771, 3

	.type	.L.str.1772,@object     # @.str.1772
.L.str.1772:
	.asciz	"EOR"
	.size	.L.str.1772, 4

	.type	label$5590,@object      # @"label$5590"
	.data
	.p2align	4
label$5590:
	.short	2                       # 0x2
	.quad	.L.str.1773
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5592
	.size	label$5590, 70

	.type	.L.str.1773,@object     # @.str.1773
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1773:
	.asciz	"66"
	.size	.L.str.1773, 3

	.type	label$5592,@object      # @"label$5592"
	.data
	.p2align	4
label$5592:
	.short	2                       # 0x2
	.quad	.L.str.1774
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5594
	.size	label$5592, 70

	.type	.L.str.1774,@object     # @.str.1774
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1774:
	.asciz	"67"
	.size	.L.str.1774, 3

	.type	label$5594,@object      # @"label$5594"
	.data
	.p2align	4
label$5594:
	.short	2                       # 0x2
	.quad	.L.str.1775
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5596
	.size	label$5594, 70

	.type	.L.str.1775,@object     # @.str.1775
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1775:
	.asciz	"68"
	.size	.L.str.1775, 3

	.type	label$5596,@object      # @"label$5596"
	.data
	.p2align	4
label$5596:
	.short	2                       # 0x2
	.quad	.L.str.1776
	.short	3                       # 0x3
	.quad	.L.str.1772
	.short	1                       # 0x1
	.quad	.L.str.91
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_EOR
	.short	65535                   # 0xffff
	.quad	label$5598
	.size	label$5596, 70

	.type	.L.str.1776,@object     # @.str.1776
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1776:
	.asciz	"69"
	.size	.L.str.1776, 3

	.type	label$5598,@object      # @"label$5598"
	.data
	.p2align	4
label$5598:
	.short	2                       # 0x2
	.quad	.L.str.1777
	.short	3                       # 0x3
	.quad	.L.str.1778
	.short	1                       # 0x1
	.quad	.L.str.91
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_LSR
	.short	65535                   # 0xffff
	.quad	label$5600
	.size	label$5598, 70

	.type	.L.str.1777,@object     # @.str.1777
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1777:
	.asciz	"70"
	.size	.L.str.1777, 3

	.type	.L.str.1778,@object     # @.str.1778
.L.str.1778:
	.asciz	"LSR"
	.size	.L.str.1778, 4

	.type	label$5600,@object      # @"label$5600"
	.data
	.p2align	4
label$5600:
	.short	2                       # 0x2
	.quad	.L.str.1779
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5602
	.size	label$5600, 70

	.type	.L.str.1779,@object     # @.str.1779
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1779:
	.asciz	"71"
	.size	.L.str.1779, 3

	.type	label$5602,@object      # @"label$5602"
	.data
	.p2align	4
label$5602:
	.short	2                       # 0x2
	.quad	.L.str.1780
	.short	3                       # 0x3
	.quad	.L.str.1781
	.short	1                       # 0x1
	.quad	.L.str.88
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_PHA
	.short	65535                   # 0xffff
	.quad	label$5604
	.size	label$5602, 70

	.type	.L.str.1780,@object     # @.str.1780
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1780:
	.asciz	"72"
	.size	.L.str.1780, 3

	.type	.L.str.1781,@object     # @.str.1781
.L.str.1781:
	.asciz	"PHA"
	.size	.L.str.1781, 4

	.type	label$5604,@object      # @"label$5604"
	.data
	.p2align	4
label$5604:
	.short	2                       # 0x2
	.quad	.L.str.1782
	.short	3                       # 0x3
	.quad	.L.str.1772
	.short	1                       # 0x1
	.quad	.L.str.89
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_EOR
	.short	65535                   # 0xffff
	.quad	label$5606
	.size	label$5604, 70

	.type	.L.str.1782,@object     # @.str.1782
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1782:
	.asciz	"73"
	.size	.L.str.1782, 3

	.type	label$5606,@object      # @"label$5606"
	.data
	.p2align	4
label$5606:
	.short	2                       # 0x2
	.quad	.L.str.1783
	.short	3                       # 0x3
	.quad	.L.str.1778
	.short	1                       # 0x1
	.quad	.L.str.88
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_LSRA
	.short	65535                   # 0xffff
	.quad	label$5608
	.size	label$5606, 70

	.type	.L.str.1783,@object     # @.str.1783
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1783:
	.asciz	"74"
	.size	.L.str.1783, 3

	.type	label$5608,@object      # @"label$5608"
	.data
	.p2align	4
label$5608:
	.short	2                       # 0x2
	.quad	.L.str.1784
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5610
	.size	label$5608, 70

	.type	.L.str.1784,@object     # @.str.1784
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1784:
	.asciz	"75"
	.size	.L.str.1784, 3

	.type	label$5610,@object      # @"label$5610"
	.data
	.p2align	4
label$5610:
	.short	2                       # 0x2
	.quad	.L.str.1785
	.short	3                       # 0x3
	.quad	.L.str.1786
	.short	1                       # 0x1
	.quad	.L.str.90
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_JMP
	.short	65535                   # 0xffff
	.quad	label$5612
	.size	label$5610, 70

	.type	.L.str.1785,@object     # @.str.1785
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1785:
	.asciz	"76"
	.size	.L.str.1785, 3

	.type	.L.str.1786,@object     # @.str.1786
.L.str.1786:
	.asciz	"JMP"
	.size	.L.str.1786, 4

	.type	label$5612,@object      # @"label$5612"
	.data
	.p2align	4
label$5612:
	.short	2                       # 0x2
	.quad	.L.str.1787
	.short	3                       # 0x3
	.quad	.L.str.1772
	.short	1                       # 0x1
	.quad	.L.str.90
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_EOR
	.short	65535                   # 0xffff
	.quad	label$5614
	.size	label$5612, 70

	.type	.L.str.1787,@object     # @.str.1787
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1787:
	.asciz	"77"
	.size	.L.str.1787, 3

	.type	label$5614,@object      # @"label$5614"
	.data
	.p2align	4
label$5614:
	.short	2                       # 0x2
	.quad	.L.str.1788
	.short	3                       # 0x3
	.quad	.L.str.1778
	.short	1                       # 0x1
	.quad	.L.str.90
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_LSR
	.short	65535                   # 0xffff
	.quad	label$5616
	.size	label$5614, 70

	.type	.L.str.1788,@object     # @.str.1788
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1788:
	.asciz	"78"
	.size	.L.str.1788, 3

	.type	label$5616,@object      # @"label$5616"
	.data
	.p2align	4
label$5616:
	.short	2                       # 0x2
	.quad	.L.str.1789
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5618
	.size	label$5616, 70

	.type	.L.str.1789,@object     # @.str.1789
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1789:
	.asciz	"79"
	.size	.L.str.1789, 3

	.type	label$5618,@object      # @"label$5618"
	.data
	.p2align	4
label$5618:
	.short	2                       # 0x2
	.quad	.L.str.1790
	.short	3                       # 0x3
	.quad	.L.str.1791
	.short	1                       # 0x1
	.quad	.L.str.96
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_BVC
	.short	65535                   # 0xffff
	.quad	label$5620
	.size	label$5618, 70

	.type	.L.str.1790,@object     # @.str.1790
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1790:
	.asciz	"80"
	.size	.L.str.1790, 3

	.type	.L.str.1791,@object     # @.str.1791
.L.str.1791:
	.asciz	"BVC"
	.size	.L.str.1791, 4

	.type	label$5620,@object      # @"label$5620"
	.data
	.p2align	4
label$5620:
	.short	2                       # 0x2
	.quad	.L.str.1792
	.short	3                       # 0x3
	.quad	.L.str.1772
	.short	2                       # 0x2
	.quad	.L.str.1706
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_EOR
	.short	65535                   # 0xffff
	.quad	label$5622
	.size	label$5620, 70

	.type	.L.str.1792,@object     # @.str.1792
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1792:
	.asciz	"81"
	.size	.L.str.1792, 3

	.type	label$5622,@object      # @"label$5622"
	.data
	.p2align	4
label$5622:
	.short	2                       # 0x2
	.quad	.L.str.1793
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5624
	.size	label$5622, 70

	.type	.L.str.1793,@object     # @.str.1793
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1793:
	.asciz	"82"
	.size	.L.str.1793, 3

	.type	label$5624,@object      # @"label$5624"
	.data
	.p2align	4
label$5624:
	.short	2                       # 0x2
	.quad	.L.str.1794
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5626
	.size	label$5624, 70

	.type	.L.str.1794,@object     # @.str.1794
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1794:
	.asciz	"83"
	.size	.L.str.1794, 3

	.type	label$5626,@object      # @"label$5626"
	.data
	.p2align	4
label$5626:
	.short	2                       # 0x2
	.quad	.L.str.1795
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5628
	.size	label$5626, 70

	.type	.L.str.1795,@object     # @.str.1795
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1795:
	.asciz	"84"
	.size	.L.str.1795, 3

	.type	label$5628,@object      # @"label$5628"
	.data
	.p2align	4
label$5628:
	.short	2                       # 0x2
	.quad	.L.str.1796
	.short	3                       # 0x3
	.quad	.L.str.1772
	.short	1                       # 0x1
	.quad	.L.str.92
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_EOR
	.short	65535                   # 0xffff
	.quad	label$5630
	.size	label$5628, 70

	.type	.L.str.1796,@object     # @.str.1796
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1796:
	.asciz	"85"
	.size	.L.str.1796, 3

	.type	label$5630,@object      # @"label$5630"
	.data
	.p2align	4
label$5630:
	.short	2                       # 0x2
	.quad	.L.str.1797
	.short	3                       # 0x3
	.quad	.L.str.1778
	.short	1                       # 0x1
	.quad	.L.str.92
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_LSR
	.short	65535                   # 0xffff
	.quad	label$5632
	.size	label$5630, 70

	.type	.L.str.1797,@object     # @.str.1797
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1797:
	.asciz	"86"
	.size	.L.str.1797, 3

	.type	label$5632,@object      # @"label$5632"
	.data
	.p2align	4
label$5632:
	.short	2                       # 0x2
	.quad	.L.str.1798
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5634
	.size	label$5632, 70

	.type	.L.str.1798,@object     # @.str.1798
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1798:
	.asciz	"87"
	.size	.L.str.1798, 3

	.type	label$5634,@object      # @"label$5634"
	.data
	.p2align	4
label$5634:
	.short	2                       # 0x2
	.quad	.L.str.1799
	.short	3                       # 0x3
	.quad	.L.str.1800
	.short	1                       # 0x1
	.quad	.L.str.88
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_CLI
	.short	65535                   # 0xffff
	.quad	label$5636
	.size	label$5634, 70

	.type	.L.str.1799,@object     # @.str.1799
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1799:
	.asciz	"88"
	.size	.L.str.1799, 3

	.type	.L.str.1800,@object     # @.str.1800
.L.str.1800:
	.asciz	"CLI"
	.size	.L.str.1800, 4

	.type	label$5636,@object      # @"label$5636"
	.data
	.p2align	4
label$5636:
	.short	2                       # 0x2
	.quad	.L.str.1801
	.short	3                       # 0x3
	.quad	.L.str.1772
	.short	1                       # 0x1
	.quad	.L.str.95
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_EOR
	.short	65535                   # 0xffff
	.quad	label$5638
	.size	label$5636, 70

	.type	.L.str.1801,@object     # @.str.1801
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1801:
	.asciz	"89"
	.size	.L.str.1801, 3

	.type	label$5638,@object      # @"label$5638"
	.data
	.p2align	4
label$5638:
	.short	2                       # 0x2
	.quad	.L.str.1802
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5640
	.size	label$5638, 70

	.type	.L.str.1802,@object     # @.str.1802
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1802:
	.asciz	"90"
	.size	.L.str.1802, 3

	.type	label$5640,@object      # @"label$5640"
	.data
	.p2align	4
label$5640:
	.short	2                       # 0x2
	.quad	.L.str.1803
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5642
	.size	label$5640, 70

	.type	.L.str.1803,@object     # @.str.1803
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1803:
	.asciz	"91"
	.size	.L.str.1803, 3

	.type	label$5642,@object      # @"label$5642"
	.data
	.p2align	4
label$5642:
	.short	2                       # 0x2
	.quad	.L.str.1804
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5644
	.size	label$5642, 70

	.type	.L.str.1804,@object     # @.str.1804
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1804:
	.asciz	"92"
	.size	.L.str.1804, 3

	.type	label$5644,@object      # @"label$5644"
	.data
	.p2align	4
label$5644:
	.short	2                       # 0x2
	.quad	.L.str.1805
	.short	3                       # 0x3
	.quad	.L.str.1772
	.short	1                       # 0x1
	.quad	.L.str.94
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_EOR
	.short	65535                   # 0xffff
	.quad	label$5646
	.size	label$5644, 70

	.type	.L.str.1805,@object     # @.str.1805
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1805:
	.asciz	"93"
	.size	.L.str.1805, 3

	.type	label$5646,@object      # @"label$5646"
	.data
	.p2align	4
label$5646:
	.short	2                       # 0x2
	.quad	.L.str.1806
	.short	3                       # 0x3
	.quad	.L.str.1778
	.short	1                       # 0x1
	.quad	.L.str.94
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_LSR
	.short	65535                   # 0xffff
	.quad	label$5648
	.size	label$5646, 70

	.type	.L.str.1806,@object     # @.str.1806
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1806:
	.asciz	"94"
	.size	.L.str.1806, 3

	.type	label$5648,@object      # @"label$5648"
	.data
	.p2align	4
label$5648:
	.short	2                       # 0x2
	.quad	.L.str.1807
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5650
	.size	label$5648, 70

	.type	.L.str.1807,@object     # @.str.1807
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1807:
	.asciz	"95"
	.size	.L.str.1807, 3

	.type	label$5650,@object      # @"label$5650"
	.data
	.p2align	4
label$5650:
	.short	2                       # 0x2
	.quad	.L.str.1808
	.short	3                       # 0x3
	.quad	.L.str.1809
	.short	1                       # 0x1
	.quad	.L.str.88
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_RTS
	.short	65535                   # 0xffff
	.quad	label$5652
	.size	label$5650, 70

	.type	.L.str.1808,@object     # @.str.1808
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1808:
	.asciz	"96"
	.size	.L.str.1808, 3

	.type	.L.str.1809,@object     # @.str.1809
.L.str.1809:
	.asciz	"RTS"
	.size	.L.str.1809, 4

	.type	label$5652,@object      # @"label$5652"
	.data
	.p2align	4
label$5652:
	.short	2                       # 0x2
	.quad	.L.str.1810
	.short	3                       # 0x3
	.quad	.L.str.1811
	.short	2                       # 0x2
	.quad	.L.str.1699
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_ADC
	.short	65535                   # 0xffff
	.quad	label$5654
	.size	label$5652, 70

	.type	.L.str.1810,@object     # @.str.1810
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1810:
	.asciz	"97"
	.size	.L.str.1810, 3

	.type	.L.str.1811,@object     # @.str.1811
.L.str.1811:
	.asciz	"ADC"
	.size	.L.str.1811, 4

	.type	label$5654,@object      # @"label$5654"
	.data
	.p2align	4
label$5654:
	.short	2                       # 0x2
	.quad	.L.str.1812
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5656
	.size	label$5654, 70

	.type	.L.str.1812,@object     # @.str.1812
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1812:
	.asciz	"98"
	.size	.L.str.1812, 3

	.type	label$5656,@object      # @"label$5656"
	.data
	.p2align	4
label$5656:
	.short	2                       # 0x2
	.quad	.L.str.1813
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5658
	.size	label$5656, 70

	.type	.L.str.1813,@object     # @.str.1813
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1813:
	.asciz	"99"
	.size	.L.str.1813, 3

	.type	label$5658,@object      # @"label$5658"
	.data
	.p2align	4
label$5658:
	.short	3                       # 0x3
	.quad	.L.str.1814
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5660
	.size	label$5658, 70

	.type	.L.str.1814,@object     # @.str.1814
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1814:
	.asciz	"100"
	.size	.L.str.1814, 4

	.type	label$5660,@object      # @"label$5660"
	.data
	.p2align	4
label$5660:
	.short	3                       # 0x3
	.quad	.L.str.1815
	.short	3                       # 0x3
	.quad	.L.str.1811
	.short	1                       # 0x1
	.quad	.L.str.91
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_ADC
	.short	65535                   # 0xffff
	.quad	label$5662
	.size	label$5660, 70

	.type	.L.str.1815,@object     # @.str.1815
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1815:
	.asciz	"101"
	.size	.L.str.1815, 4

	.type	label$5662,@object      # @"label$5662"
	.data
	.p2align	4
label$5662:
	.short	3                       # 0x3
	.quad	.L.str.1816
	.short	3                       # 0x3
	.quad	.L.str.1817
	.short	1                       # 0x1
	.quad	.L.str.91
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_ROR
	.short	65535                   # 0xffff
	.quad	label$5664
	.size	label$5662, 70

	.type	.L.str.1816,@object     # @.str.1816
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1816:
	.asciz	"102"
	.size	.L.str.1816, 4

	.type	.L.str.1817,@object     # @.str.1817
.L.str.1817:
	.asciz	"ROR"
	.size	.L.str.1817, 4

	.type	label$5664,@object      # @"label$5664"
	.data
	.p2align	4
label$5664:
	.short	3                       # 0x3
	.quad	.L.str.1818
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5666
	.size	label$5664, 70

	.type	.L.str.1818,@object     # @.str.1818
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1818:
	.asciz	"103"
	.size	.L.str.1818, 4

	.type	label$5666,@object      # @"label$5666"
	.data
	.p2align	4
label$5666:
	.short	3                       # 0x3
	.quad	.L.str.1819
	.short	3                       # 0x3
	.quad	.L.str.1820
	.short	1                       # 0x1
	.quad	.L.str.88
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_PLA
	.short	65535                   # 0xffff
	.quad	label$5668
	.size	label$5666, 70

	.type	.L.str.1819,@object     # @.str.1819
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1819:
	.asciz	"104"
	.size	.L.str.1819, 4

	.type	.L.str.1820,@object     # @.str.1820
.L.str.1820:
	.asciz	"PLA"
	.size	.L.str.1820, 4

	.type	label$5668,@object      # @"label$5668"
	.data
	.p2align	4
label$5668:
	.short	3                       # 0x3
	.quad	.L.str.1821
	.short	3                       # 0x3
	.quad	.L.str.1811
	.short	1                       # 0x1
	.quad	.L.str.89
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_ADC
	.short	65535                   # 0xffff
	.quad	label$5670
	.size	label$5668, 70

	.type	.L.str.1821,@object     # @.str.1821
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1821:
	.asciz	"105"
	.size	.L.str.1821, 4

	.type	label$5670,@object      # @"label$5670"
	.data
	.p2align	4
label$5670:
	.short	3                       # 0x3
	.quad	.L.str.1822
	.short	3                       # 0x3
	.quad	.L.str.1817
	.short	1                       # 0x1
	.quad	.L.str.88
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_RORA
	.short	65535                   # 0xffff
	.quad	label$5672
	.size	label$5670, 70

	.type	.L.str.1822,@object     # @.str.1822
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1822:
	.asciz	"106"
	.size	.L.str.1822, 4

	.type	label$5672,@object      # @"label$5672"
	.data
	.p2align	4
label$5672:
	.short	3                       # 0x3
	.quad	.L.str.1823
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5674
	.size	label$5672, 70

	.type	.L.str.1823,@object     # @.str.1823
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1823:
	.asciz	"107"
	.size	.L.str.1823, 4

	.type	label$5674,@object      # @"label$5674"
	.data
	.p2align	4
label$5674:
	.short	3                       # 0x3
	.quad	.L.str.1824
	.short	3                       # 0x3
	.quad	.L.str.1786
	.short	2                       # 0x2
	.quad	.L.str.1708
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_JMP
	.short	65535                   # 0xffff
	.quad	label$5676
	.size	label$5674, 70

	.type	.L.str.1824,@object     # @.str.1824
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1824:
	.asciz	"108"
	.size	.L.str.1824, 4

	.type	label$5676,@object      # @"label$5676"
	.data
	.p2align	4
label$5676:
	.short	3                       # 0x3
	.quad	.L.str.1825
	.short	3                       # 0x3
	.quad	.L.str.1811
	.short	1                       # 0x1
	.quad	.L.str.90
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_ADC
	.short	65535                   # 0xffff
	.quad	label$5678
	.size	label$5676, 70

	.type	.L.str.1825,@object     # @.str.1825
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1825:
	.asciz	"109"
	.size	.L.str.1825, 4

	.type	label$5678,@object      # @"label$5678"
	.data
	.p2align	4
label$5678:
	.short	3                       # 0x3
	.quad	.L.str.1826
	.short	3                       # 0x3
	.quad	.L.str.1817
	.short	1                       # 0x1
	.quad	.L.str.90
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_ROR
	.short	65535                   # 0xffff
	.quad	label$5680
	.size	label$5678, 70

	.type	.L.str.1826,@object     # @.str.1826
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1826:
	.asciz	"110"
	.size	.L.str.1826, 4

	.type	label$5680,@object      # @"label$5680"
	.data
	.p2align	4
label$5680:
	.short	3                       # 0x3
	.quad	.L.str.1827
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5682
	.size	label$5680, 70

	.type	.L.str.1827,@object     # @.str.1827
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1827:
	.asciz	"111"
	.size	.L.str.1827, 4

	.type	label$5682,@object      # @"label$5682"
	.data
	.p2align	4
label$5682:
	.short	3                       # 0x3
	.quad	.L.str.1828
	.short	3                       # 0x3
	.quad	.L.str.1829
	.short	1                       # 0x1
	.quad	.L.str.96
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_BVS
	.short	65535                   # 0xffff
	.quad	label$5684
	.size	label$5682, 70

	.type	.L.str.1828,@object     # @.str.1828
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1828:
	.asciz	"112"
	.size	.L.str.1828, 4

	.type	.L.str.1829,@object     # @.str.1829
.L.str.1829:
	.asciz	"BVS"
	.size	.L.str.1829, 4

	.type	label$5684,@object      # @"label$5684"
	.data
	.p2align	4
label$5684:
	.short	3                       # 0x3
	.quad	.L.str.1830
	.short	3                       # 0x3
	.quad	.L.str.1811
	.short	2                       # 0x2
	.quad	.L.str.1706
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_ADC
	.short	65535                   # 0xffff
	.quad	label$5686
	.size	label$5684, 70

	.type	.L.str.1830,@object     # @.str.1830
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1830:
	.asciz	"113"
	.size	.L.str.1830, 4

	.type	label$5686,@object      # @"label$5686"
	.data
	.p2align	4
label$5686:
	.short	3                       # 0x3
	.quad	.L.str.1831
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5688
	.size	label$5686, 70

	.type	.L.str.1831,@object     # @.str.1831
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1831:
	.asciz	"114"
	.size	.L.str.1831, 4

	.type	label$5688,@object      # @"label$5688"
	.data
	.p2align	4
label$5688:
	.short	3                       # 0x3
	.quad	.L.str.1832
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5690
	.size	label$5688, 70

	.type	.L.str.1832,@object     # @.str.1832
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1832:
	.asciz	"115"
	.size	.L.str.1832, 4

	.type	label$5690,@object      # @"label$5690"
	.data
	.p2align	4
label$5690:
	.short	3                       # 0x3
	.quad	.L.str.1833
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5692
	.size	label$5690, 70

	.type	.L.str.1833,@object     # @.str.1833
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1833:
	.asciz	"116"
	.size	.L.str.1833, 4

	.type	label$5692,@object      # @"label$5692"
	.data
	.p2align	4
label$5692:
	.short	3                       # 0x3
	.quad	.L.str.1834
	.short	3                       # 0x3
	.quad	.L.str.1811
	.short	1                       # 0x1
	.quad	.L.str.92
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_ADC
	.short	65535                   # 0xffff
	.quad	label$5694
	.size	label$5692, 70

	.type	.L.str.1834,@object     # @.str.1834
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1834:
	.asciz	"117"
	.size	.L.str.1834, 4

	.type	label$5694,@object      # @"label$5694"
	.data
	.p2align	4
label$5694:
	.short	3                       # 0x3
	.quad	.L.str.1835
	.short	3                       # 0x3
	.quad	.L.str.1817
	.short	1                       # 0x1
	.quad	.L.str.92
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_ROR
	.short	65535                   # 0xffff
	.quad	label$5696
	.size	label$5694, 70

	.type	.L.str.1835,@object     # @.str.1835
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1835:
	.asciz	"118"
	.size	.L.str.1835, 4

	.type	label$5696,@object      # @"label$5696"
	.data
	.p2align	4
label$5696:
	.short	3                       # 0x3
	.quad	.L.str.1836
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5698
	.size	label$5696, 70

	.type	.L.str.1836,@object     # @.str.1836
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1836:
	.asciz	"119"
	.size	.L.str.1836, 4

	.type	label$5698,@object      # @"label$5698"
	.data
	.p2align	4
label$5698:
	.short	3                       # 0x3
	.quad	.L.str.1837
	.short	3                       # 0x3
	.quad	.L.str.1838
	.short	1                       # 0x1
	.quad	.L.str.88
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_SEI
	.short	65535                   # 0xffff
	.quad	label$5700
	.size	label$5698, 70

	.type	.L.str.1837,@object     # @.str.1837
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1837:
	.asciz	"120"
	.size	.L.str.1837, 4

	.type	.L.str.1838,@object     # @.str.1838
.L.str.1838:
	.asciz	"SEI"
	.size	.L.str.1838, 4

	.type	label$5700,@object      # @"label$5700"
	.data
	.p2align	4
label$5700:
	.short	3                       # 0x3
	.quad	.L.str.1839
	.short	3                       # 0x3
	.quad	.L.str.1811
	.short	1                       # 0x1
	.quad	.L.str.95
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_ADC
	.short	65535                   # 0xffff
	.quad	label$5702
	.size	label$5700, 70

	.type	.L.str.1839,@object     # @.str.1839
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1839:
	.asciz	"121"
	.size	.L.str.1839, 4

	.type	label$5702,@object      # @"label$5702"
	.data
	.p2align	4
label$5702:
	.short	3                       # 0x3
	.quad	.L.str.1840
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5704
	.size	label$5702, 70

	.type	.L.str.1840,@object     # @.str.1840
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1840:
	.asciz	"122"
	.size	.L.str.1840, 4

	.type	label$5704,@object      # @"label$5704"
	.data
	.p2align	4
label$5704:
	.short	3                       # 0x3
	.quad	.L.str.1841
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5706
	.size	label$5704, 70

	.type	.L.str.1841,@object     # @.str.1841
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1841:
	.asciz	"123"
	.size	.L.str.1841, 4

	.type	label$5706,@object      # @"label$5706"
	.data
	.p2align	4
label$5706:
	.short	3                       # 0x3
	.quad	.L.str.1842
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5708
	.size	label$5706, 70

	.type	.L.str.1842,@object     # @.str.1842
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1842:
	.asciz	"124"
	.size	.L.str.1842, 4

	.type	label$5708,@object      # @"label$5708"
	.data
	.p2align	4
label$5708:
	.short	3                       # 0x3
	.quad	.L.str.1843
	.short	3                       # 0x3
	.quad	.L.str.1811
	.short	1                       # 0x1
	.quad	.L.str.94
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_ADC
	.short	65535                   # 0xffff
	.quad	label$5710
	.size	label$5708, 70

	.type	.L.str.1843,@object     # @.str.1843
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1843:
	.asciz	"125"
	.size	.L.str.1843, 4

	.type	label$5710,@object      # @"label$5710"
	.data
	.p2align	4
label$5710:
	.short	3                       # 0x3
	.quad	.L.str.1844
	.short	3                       # 0x3
	.quad	.L.str.1817
	.short	1                       # 0x1
	.quad	.L.str.94
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_ROR
	.short	65535                   # 0xffff
	.quad	label$5712
	.size	label$5710, 70

	.type	.L.str.1844,@object     # @.str.1844
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1844:
	.asciz	"126"
	.size	.L.str.1844, 4

	.type	label$5712,@object      # @"label$5712"
	.data
	.p2align	4
label$5712:
	.short	3                       # 0x3
	.quad	.L.str.1845
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5714
	.size	label$5712, 70

	.type	.L.str.1845,@object     # @.str.1845
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1845:
	.asciz	"127"
	.size	.L.str.1845, 4

	.type	label$5714,@object      # @"label$5714"
	.data
	.p2align	4
label$5714:
	.short	3                       # 0x3
	.quad	.L.str.1846
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5716
	.size	label$5714, 70

	.type	.L.str.1846,@object     # @.str.1846
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1846:
	.asciz	"128"
	.size	.L.str.1846, 4

	.type	label$5716,@object      # @"label$5716"
	.data
	.p2align	4
label$5716:
	.short	3                       # 0x3
	.quad	.L.str.1847
	.short	3                       # 0x3
	.quad	.L.str.1848
	.short	2                       # 0x2
	.quad	.L.str.1699
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_STA
	.short	65535                   # 0xffff
	.quad	label$5718
	.size	label$5716, 70

	.type	.L.str.1847,@object     # @.str.1847
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1847:
	.asciz	"129"
	.size	.L.str.1847, 4

	.type	.L.str.1848,@object     # @.str.1848
.L.str.1848:
	.asciz	"STA"
	.size	.L.str.1848, 4

	.type	label$5718,@object      # @"label$5718"
	.data
	.p2align	4
label$5718:
	.short	3                       # 0x3
	.quad	.L.str.1849
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5720
	.size	label$5718, 70

	.type	.L.str.1849,@object     # @.str.1849
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1849:
	.asciz	"130"
	.size	.L.str.1849, 4

	.type	label$5720,@object      # @"label$5720"
	.data
	.p2align	4
label$5720:
	.short	3                       # 0x3
	.quad	.L.str.1850
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5722
	.size	label$5720, 70

	.type	.L.str.1850,@object     # @.str.1850
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1850:
	.asciz	"131"
	.size	.L.str.1850, 4

	.type	label$5722,@object      # @"label$5722"
	.data
	.p2align	4
label$5722:
	.short	3                       # 0x3
	.quad	.L.str.1851
	.short	3                       # 0x3
	.quad	.L.str.1852
	.short	1                       # 0x1
	.quad	.L.str.91
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_STY
	.short	65535                   # 0xffff
	.quad	label$5724
	.size	label$5722, 70

	.type	.L.str.1851,@object     # @.str.1851
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1851:
	.asciz	"132"
	.size	.L.str.1851, 4

	.type	.L.str.1852,@object     # @.str.1852
.L.str.1852:
	.asciz	"STY"
	.size	.L.str.1852, 4

	.type	label$5724,@object      # @"label$5724"
	.data
	.p2align	4
label$5724:
	.short	3                       # 0x3
	.quad	.L.str.1853
	.short	3                       # 0x3
	.quad	.L.str.1848
	.short	1                       # 0x1
	.quad	.L.str.91
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_STA
	.short	65535                   # 0xffff
	.quad	label$5726
	.size	label$5724, 70

	.type	.L.str.1853,@object     # @.str.1853
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1853:
	.asciz	"133"
	.size	.L.str.1853, 4

	.type	label$5726,@object      # @"label$5726"
	.data
	.p2align	4
label$5726:
	.short	3                       # 0x3
	.quad	.L.str.1854
	.short	3                       # 0x3
	.quad	.L.str.1855
	.short	1                       # 0x1
	.quad	.L.str.91
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_STX
	.short	65535                   # 0xffff
	.quad	label$5728
	.size	label$5726, 70

	.type	.L.str.1854,@object     # @.str.1854
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1854:
	.asciz	"134"
	.size	.L.str.1854, 4

	.type	.L.str.1855,@object     # @.str.1855
.L.str.1855:
	.asciz	"STX"
	.size	.L.str.1855, 4

	.type	label$5728,@object      # @"label$5728"
	.data
	.p2align	4
label$5728:
	.short	3                       # 0x3
	.quad	.L.str.1856
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5730
	.size	label$5728, 70

	.type	.L.str.1856,@object     # @.str.1856
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1856:
	.asciz	"135"
	.size	.L.str.1856, 4

	.type	label$5730,@object      # @"label$5730"
	.data
	.p2align	4
label$5730:
	.short	3                       # 0x3
	.quad	.L.str.1857
	.short	3                       # 0x3
	.quad	.L.str.1858
	.short	1                       # 0x1
	.quad	.L.str.88
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_DEY
	.short	65535                   # 0xffff
	.quad	label$5732
	.size	label$5730, 70

	.type	.L.str.1857,@object     # @.str.1857
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1857:
	.asciz	"136"
	.size	.L.str.1857, 4

	.type	.L.str.1858,@object     # @.str.1858
.L.str.1858:
	.asciz	"DEY"
	.size	.L.str.1858, 4

	.type	label$5732,@object      # @"label$5732"
	.data
	.p2align	4
label$5732:
	.short	3                       # 0x3
	.quad	.L.str.1859
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5734
	.size	label$5732, 70

	.type	.L.str.1859,@object     # @.str.1859
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1859:
	.asciz	"137"
	.size	.L.str.1859, 4

	.type	label$5734,@object      # @"label$5734"
	.data
	.p2align	4
label$5734:
	.short	3                       # 0x3
	.quad	.L.str.1860
	.short	3                       # 0x3
	.quad	.L.str.1861
	.short	1                       # 0x1
	.quad	.L.str.88
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_TXA
	.short	65535                   # 0xffff
	.quad	label$5736
	.size	label$5734, 70

	.type	.L.str.1860,@object     # @.str.1860
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1860:
	.asciz	"138"
	.size	.L.str.1860, 4

	.type	.L.str.1861,@object     # @.str.1861
.L.str.1861:
	.asciz	"TXA"
	.size	.L.str.1861, 4

	.type	label$5736,@object      # @"label$5736"
	.data
	.p2align	4
label$5736:
	.short	3                       # 0x3
	.quad	.L.str.1862
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5738
	.size	label$5736, 70

	.type	.L.str.1862,@object     # @.str.1862
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1862:
	.asciz	"139"
	.size	.L.str.1862, 4

	.type	label$5738,@object      # @"label$5738"
	.data
	.p2align	4
label$5738:
	.short	3                       # 0x3
	.quad	.L.str.1863
	.short	3                       # 0x3
	.quad	.L.str.1852
	.short	1                       # 0x1
	.quad	.L.str.90
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_STY
	.short	65535                   # 0xffff
	.quad	label$5740
	.size	label$5738, 70

	.type	.L.str.1863,@object     # @.str.1863
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1863:
	.asciz	"140"
	.size	.L.str.1863, 4

	.type	label$5740,@object      # @"label$5740"
	.data
	.p2align	4
label$5740:
	.short	3                       # 0x3
	.quad	.L.str.1864
	.short	3                       # 0x3
	.quad	.L.str.1848
	.short	1                       # 0x1
	.quad	.L.str.90
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_STA
	.short	65535                   # 0xffff
	.quad	label$5742
	.size	label$5740, 70

	.type	.L.str.1864,@object     # @.str.1864
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1864:
	.asciz	"141"
	.size	.L.str.1864, 4

	.type	label$5742,@object      # @"label$5742"
	.data
	.p2align	4
label$5742:
	.short	3                       # 0x3
	.quad	.L.str.1865
	.short	3                       # 0x3
	.quad	.L.str.1855
	.short	1                       # 0x1
	.quad	.L.str.90
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_STX
	.short	65535                   # 0xffff
	.quad	label$5744
	.size	label$5742, 70

	.type	.L.str.1865,@object     # @.str.1865
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1865:
	.asciz	"142"
	.size	.L.str.1865, 4

	.type	label$5744,@object      # @"label$5744"
	.data
	.p2align	4
label$5744:
	.short	3                       # 0x3
	.quad	.L.str.1866
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5746
	.size	label$5744, 70

	.type	.L.str.1866,@object     # @.str.1866
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1866:
	.asciz	"143"
	.size	.L.str.1866, 4

	.type	label$5746,@object      # @"label$5746"
	.data
	.p2align	4
label$5746:
	.short	3                       # 0x3
	.quad	.L.str.1867
	.short	3                       # 0x3
	.quad	.L.str.1868
	.short	1                       # 0x1
	.quad	.L.str.96
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_BCC
	.short	65535                   # 0xffff
	.quad	label$5748
	.size	label$5746, 70

	.type	.L.str.1867,@object     # @.str.1867
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1867:
	.asciz	"144"
	.size	.L.str.1867, 4

	.type	.L.str.1868,@object     # @.str.1868
.L.str.1868:
	.asciz	"BCC"
	.size	.L.str.1868, 4

	.type	label$5748,@object      # @"label$5748"
	.data
	.p2align	4
label$5748:
	.short	3                       # 0x3
	.quad	.L.str.1869
	.short	3                       # 0x3
	.quad	.L.str.1848
	.short	2                       # 0x2
	.quad	.L.str.1706
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_STA
	.short	65535                   # 0xffff
	.quad	label$5750
	.size	label$5748, 70

	.type	.L.str.1869,@object     # @.str.1869
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1869:
	.asciz	"145"
	.size	.L.str.1869, 4

	.type	label$5750,@object      # @"label$5750"
	.data
	.p2align	4
label$5750:
	.short	3                       # 0x3
	.quad	.L.str.1870
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5752
	.size	label$5750, 70

	.type	.L.str.1870,@object     # @.str.1870
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1870:
	.asciz	"146"
	.size	.L.str.1870, 4

	.type	label$5752,@object      # @"label$5752"
	.data
	.p2align	4
label$5752:
	.short	3                       # 0x3
	.quad	.L.str.1871
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5754
	.size	label$5752, 70

	.type	.L.str.1871,@object     # @.str.1871
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1871:
	.asciz	"147"
	.size	.L.str.1871, 4

	.type	label$5754,@object      # @"label$5754"
	.data
	.p2align	4
label$5754:
	.short	3                       # 0x3
	.quad	.L.str.1872
	.short	3                       # 0x3
	.quad	.L.str.1852
	.short	1                       # 0x1
	.quad	.L.str.92
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_STY
	.short	65535                   # 0xffff
	.quad	label$5756
	.size	label$5754, 70

	.type	.L.str.1872,@object     # @.str.1872
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1872:
	.asciz	"148"
	.size	.L.str.1872, 4

	.type	label$5756,@object      # @"label$5756"
	.data
	.p2align	4
label$5756:
	.short	3                       # 0x3
	.quad	.L.str.1873
	.short	3                       # 0x3
	.quad	.L.str.1848
	.short	1                       # 0x1
	.quad	.L.str.92
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_STA
	.short	65535                   # 0xffff
	.quad	label$5758
	.size	label$5756, 70

	.type	.L.str.1873,@object     # @.str.1873
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1873:
	.asciz	"149"
	.size	.L.str.1873, 4

	.type	label$5758,@object      # @"label$5758"
	.data
	.p2align	4
label$5758:
	.short	3                       # 0x3
	.quad	.L.str.1874
	.short	3                       # 0x3
	.quad	.L.str.1855
	.short	1                       # 0x1
	.quad	.L.str.93
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_STX
	.short	65535                   # 0xffff
	.quad	label$5760
	.size	label$5758, 70

	.type	.L.str.1874,@object     # @.str.1874
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1874:
	.asciz	"150"
	.size	.L.str.1874, 4

	.type	label$5760,@object      # @"label$5760"
	.data
	.p2align	4
label$5760:
	.short	3                       # 0x3
	.quad	.L.str.1875
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5762
	.size	label$5760, 70

	.type	.L.str.1875,@object     # @.str.1875
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1875:
	.asciz	"151"
	.size	.L.str.1875, 4

	.type	label$5762,@object      # @"label$5762"
	.data
	.p2align	4
label$5762:
	.short	3                       # 0x3
	.quad	.L.str.1876
	.short	3                       # 0x3
	.quad	.L.str.1877
	.short	1                       # 0x1
	.quad	.L.str.88
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_TYA
	.short	65535                   # 0xffff
	.quad	label$5764
	.size	label$5762, 70

	.type	.L.str.1876,@object     # @.str.1876
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1876:
	.asciz	"152"
	.size	.L.str.1876, 4

	.type	.L.str.1877,@object     # @.str.1877
.L.str.1877:
	.asciz	"TYA"
	.size	.L.str.1877, 4

	.type	label$5764,@object      # @"label$5764"
	.data
	.p2align	4
label$5764:
	.short	3                       # 0x3
	.quad	.L.str.1878
	.short	3                       # 0x3
	.quad	.L.str.1848
	.short	1                       # 0x1
	.quad	.L.str.95
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_STA
	.short	65535                   # 0xffff
	.quad	label$5766
	.size	label$5764, 70

	.type	.L.str.1878,@object     # @.str.1878
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1878:
	.asciz	"153"
	.size	.L.str.1878, 4

	.type	label$5766,@object      # @"label$5766"
	.data
	.p2align	4
label$5766:
	.short	3                       # 0x3
	.quad	.L.str.1879
	.short	3                       # 0x3
	.quad	.L.str.1880
	.short	1                       # 0x1
	.quad	.L.str.88
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_TXS
	.short	65535                   # 0xffff
	.quad	label$5768
	.size	label$5766, 70

	.type	.L.str.1879,@object     # @.str.1879
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1879:
	.asciz	"154"
	.size	.L.str.1879, 4

	.type	.L.str.1880,@object     # @.str.1880
.L.str.1880:
	.asciz	"TXS"
	.size	.L.str.1880, 4

	.type	label$5768,@object      # @"label$5768"
	.data
	.p2align	4
label$5768:
	.short	3                       # 0x3
	.quad	.L.str.1881
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5770
	.size	label$5768, 70

	.type	.L.str.1881,@object     # @.str.1881
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1881:
	.asciz	"155"
	.size	.L.str.1881, 4

	.type	label$5770,@object      # @"label$5770"
	.data
	.p2align	4
label$5770:
	.short	3                       # 0x3
	.quad	.L.str.1882
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5772
	.size	label$5770, 70

	.type	.L.str.1882,@object     # @.str.1882
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1882:
	.asciz	"156"
	.size	.L.str.1882, 4

	.type	label$5772,@object      # @"label$5772"
	.data
	.p2align	4
label$5772:
	.short	3                       # 0x3
	.quad	.L.str.1883
	.short	3                       # 0x3
	.quad	.L.str.1848
	.short	1                       # 0x1
	.quad	.L.str.94
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_STA
	.short	65535                   # 0xffff
	.quad	label$5774
	.size	label$5772, 70

	.type	.L.str.1883,@object     # @.str.1883
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1883:
	.asciz	"157"
	.size	.L.str.1883, 4

	.type	label$5774,@object      # @"label$5774"
	.data
	.p2align	4
label$5774:
	.short	3                       # 0x3
	.quad	.L.str.1884
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5776
	.size	label$5774, 70

	.type	.L.str.1884,@object     # @.str.1884
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1884:
	.asciz	"158"
	.size	.L.str.1884, 4

	.type	label$5776,@object      # @"label$5776"
	.data
	.p2align	4
label$5776:
	.short	3                       # 0x3
	.quad	.L.str.1885
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5778
	.size	label$5776, 70

	.type	.L.str.1885,@object     # @.str.1885
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1885:
	.asciz	"159"
	.size	.L.str.1885, 4

	.type	label$5778,@object      # @"label$5778"
	.data
	.p2align	4
label$5778:
	.short	3                       # 0x3
	.quad	.L.str.1886
	.short	3                       # 0x3
	.quad	.L.str.1887
	.short	1                       # 0x1
	.quad	.L.str.89
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_LDY
	.short	65535                   # 0xffff
	.quad	label$5780
	.size	label$5778, 70

	.type	.L.str.1886,@object     # @.str.1886
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1886:
	.asciz	"160"
	.size	.L.str.1886, 4

	.type	.L.str.1887,@object     # @.str.1887
.L.str.1887:
	.asciz	"LDY"
	.size	.L.str.1887, 4

	.type	label$5780,@object      # @"label$5780"
	.data
	.p2align	4
label$5780:
	.short	3                       # 0x3
	.quad	.L.str.1888
	.short	3                       # 0x3
	.quad	.L.str.1889
	.short	2                       # 0x2
	.quad	.L.str.1699
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_LDA
	.short	65535                   # 0xffff
	.quad	label$5782
	.size	label$5780, 70

	.type	.L.str.1888,@object     # @.str.1888
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1888:
	.asciz	"161"
	.size	.L.str.1888, 4

	.type	.L.str.1889,@object     # @.str.1889
.L.str.1889:
	.asciz	"LDA"
	.size	.L.str.1889, 4

	.type	label$5782,@object      # @"label$5782"
	.data
	.p2align	4
label$5782:
	.short	3                       # 0x3
	.quad	.L.str.1890
	.short	3                       # 0x3
	.quad	.L.str.1891
	.short	1                       # 0x1
	.quad	.L.str.89
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_LDX
	.short	65535                   # 0xffff
	.quad	label$5784
	.size	label$5782, 70

	.type	.L.str.1890,@object     # @.str.1890
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1890:
	.asciz	"162"
	.size	.L.str.1890, 4

	.type	.L.str.1891,@object     # @.str.1891
.L.str.1891:
	.asciz	"LDX"
	.size	.L.str.1891, 4

	.type	label$5784,@object      # @"label$5784"
	.data
	.p2align	4
label$5784:
	.short	3                       # 0x3
	.quad	.L.str.1892
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5786
	.size	label$5784, 70

	.type	.L.str.1892,@object     # @.str.1892
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1892:
	.asciz	"163"
	.size	.L.str.1892, 4

	.type	label$5786,@object      # @"label$5786"
	.data
	.p2align	4
label$5786:
	.short	3                       # 0x3
	.quad	.L.str.1893
	.short	3                       # 0x3
	.quad	.L.str.1887
	.short	1                       # 0x1
	.quad	.L.str.91
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_LDY
	.short	65535                   # 0xffff
	.quad	label$5788
	.size	label$5786, 70

	.type	.L.str.1893,@object     # @.str.1893
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1893:
	.asciz	"164"
	.size	.L.str.1893, 4

	.type	label$5788,@object      # @"label$5788"
	.data
	.p2align	4
label$5788:
	.short	3                       # 0x3
	.quad	.L.str.1894
	.short	3                       # 0x3
	.quad	.L.str.1889
	.short	1                       # 0x1
	.quad	.L.str.91
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_LDA
	.short	65535                   # 0xffff
	.quad	label$5790
	.size	label$5788, 70

	.type	.L.str.1894,@object     # @.str.1894
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1894:
	.asciz	"165"
	.size	.L.str.1894, 4

	.type	label$5790,@object      # @"label$5790"
	.data
	.p2align	4
label$5790:
	.short	3                       # 0x3
	.quad	.L.str.1895
	.short	3                       # 0x3
	.quad	.L.str.1891
	.short	1                       # 0x1
	.quad	.L.str.91
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_LDX
	.short	65535                   # 0xffff
	.quad	label$5792
	.size	label$5790, 70

	.type	.L.str.1895,@object     # @.str.1895
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1895:
	.asciz	"166"
	.size	.L.str.1895, 4

	.type	label$5792,@object      # @"label$5792"
	.data
	.p2align	4
label$5792:
	.short	3                       # 0x3
	.quad	.L.str.1896
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5794
	.size	label$5792, 70

	.type	.L.str.1896,@object     # @.str.1896
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1896:
	.asciz	"167"
	.size	.L.str.1896, 4

	.type	label$5794,@object      # @"label$5794"
	.data
	.p2align	4
label$5794:
	.short	3                       # 0x3
	.quad	.L.str.1897
	.short	3                       # 0x3
	.quad	.L.str.1898
	.short	1                       # 0x1
	.quad	.L.str.88
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_TAY
	.short	65535                   # 0xffff
	.quad	label$5796
	.size	label$5794, 70

	.type	.L.str.1897,@object     # @.str.1897
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1897:
	.asciz	"168"
	.size	.L.str.1897, 4

	.type	.L.str.1898,@object     # @.str.1898
.L.str.1898:
	.asciz	"TAY"
	.size	.L.str.1898, 4

	.type	label$5796,@object      # @"label$5796"
	.data
	.p2align	4
label$5796:
	.short	3                       # 0x3
	.quad	.L.str.1899
	.short	3                       # 0x3
	.quad	.L.str.1889
	.short	1                       # 0x1
	.quad	.L.str.89
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_LDA
	.short	65535                   # 0xffff
	.quad	label$5798
	.size	label$5796, 70

	.type	.L.str.1899,@object     # @.str.1899
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1899:
	.asciz	"169"
	.size	.L.str.1899, 4

	.type	label$5798,@object      # @"label$5798"
	.data
	.p2align	4
label$5798:
	.short	3                       # 0x3
	.quad	.L.str.1900
	.short	3                       # 0x3
	.quad	.L.str.1901
	.short	1                       # 0x1
	.quad	.L.str.88
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_TAX
	.short	65535                   # 0xffff
	.quad	label$5800
	.size	label$5798, 70

	.type	.L.str.1900,@object     # @.str.1900
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1900:
	.asciz	"170"
	.size	.L.str.1900, 4

	.type	.L.str.1901,@object     # @.str.1901
.L.str.1901:
	.asciz	"TAX"
	.size	.L.str.1901, 4

	.type	label$5800,@object      # @"label$5800"
	.data
	.p2align	4
label$5800:
	.short	3                       # 0x3
	.quad	.L.str.1902
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5802
	.size	label$5800, 70

	.type	.L.str.1902,@object     # @.str.1902
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1902:
	.asciz	"171"
	.size	.L.str.1902, 4

	.type	label$5802,@object      # @"label$5802"
	.data
	.p2align	4
label$5802:
	.short	3                       # 0x3
	.quad	.L.str.1903
	.short	3                       # 0x3
	.quad	.L.str.1887
	.short	1                       # 0x1
	.quad	.L.str.90
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_LDY
	.short	65535                   # 0xffff
	.quad	label$5804
	.size	label$5802, 70

	.type	.L.str.1903,@object     # @.str.1903
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1903:
	.asciz	"172"
	.size	.L.str.1903, 4

	.type	label$5804,@object      # @"label$5804"
	.data
	.p2align	4
label$5804:
	.short	3                       # 0x3
	.quad	.L.str.1904
	.short	3                       # 0x3
	.quad	.L.str.1889
	.short	1                       # 0x1
	.quad	.L.str.90
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_LDA
	.short	65535                   # 0xffff
	.quad	label$5806
	.size	label$5804, 70

	.type	.L.str.1904,@object     # @.str.1904
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1904:
	.asciz	"173"
	.size	.L.str.1904, 4

	.type	label$5806,@object      # @"label$5806"
	.data
	.p2align	4
label$5806:
	.short	3                       # 0x3
	.quad	.L.str.1905
	.short	3                       # 0x3
	.quad	.L.str.1891
	.short	1                       # 0x1
	.quad	.L.str.90
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_LDX
	.short	65535                   # 0xffff
	.quad	label$5808
	.size	label$5806, 70

	.type	.L.str.1905,@object     # @.str.1905
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1905:
	.asciz	"174"
	.size	.L.str.1905, 4

	.type	label$5808,@object      # @"label$5808"
	.data
	.p2align	4
label$5808:
	.short	3                       # 0x3
	.quad	.L.str.1906
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5810
	.size	label$5808, 70

	.type	.L.str.1906,@object     # @.str.1906
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1906:
	.asciz	"175"
	.size	.L.str.1906, 4

	.type	label$5810,@object      # @"label$5810"
	.data
	.p2align	4
label$5810:
	.short	3                       # 0x3
	.quad	.L.str.1907
	.short	3                       # 0x3
	.quad	.L.str.1908
	.short	1                       # 0x1
	.quad	.L.str.96
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_BCS
	.short	65535                   # 0xffff
	.quad	label$5812
	.size	label$5810, 70

	.type	.L.str.1907,@object     # @.str.1907
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1907:
	.asciz	"176"
	.size	.L.str.1907, 4

	.type	.L.str.1908,@object     # @.str.1908
.L.str.1908:
	.asciz	"BCS"
	.size	.L.str.1908, 4

	.type	label$5812,@object      # @"label$5812"
	.data
	.p2align	4
label$5812:
	.short	3                       # 0x3
	.quad	.L.str.1909
	.short	3                       # 0x3
	.quad	.L.str.1889
	.short	2                       # 0x2
	.quad	.L.str.1706
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_LDA
	.short	65535                   # 0xffff
	.quad	label$5814
	.size	label$5812, 70

	.type	.L.str.1909,@object     # @.str.1909
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1909:
	.asciz	"177"
	.size	.L.str.1909, 4

	.type	label$5814,@object      # @"label$5814"
	.data
	.p2align	4
label$5814:
	.short	3                       # 0x3
	.quad	.L.str.1910
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5816
	.size	label$5814, 70

	.type	.L.str.1910,@object     # @.str.1910
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1910:
	.asciz	"178"
	.size	.L.str.1910, 4

	.type	label$5816,@object      # @"label$5816"
	.data
	.p2align	4
label$5816:
	.short	3                       # 0x3
	.quad	.L.str.1911
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5818
	.size	label$5816, 70

	.type	.L.str.1911,@object     # @.str.1911
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1911:
	.asciz	"179"
	.size	.L.str.1911, 4

	.type	label$5818,@object      # @"label$5818"
	.data
	.p2align	4
label$5818:
	.short	3                       # 0x3
	.quad	.L.str.1912
	.short	3                       # 0x3
	.quad	.L.str.1887
	.short	1                       # 0x1
	.quad	.L.str.92
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_LDY
	.short	65535                   # 0xffff
	.quad	label$5820
	.size	label$5818, 70

	.type	.L.str.1912,@object     # @.str.1912
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1912:
	.asciz	"180"
	.size	.L.str.1912, 4

	.type	label$5820,@object      # @"label$5820"
	.data
	.p2align	4
label$5820:
	.short	3                       # 0x3
	.quad	.L.str.1913
	.short	3                       # 0x3
	.quad	.L.str.1889
	.short	1                       # 0x1
	.quad	.L.str.92
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_LDA
	.short	65535                   # 0xffff
	.quad	label$5822
	.size	label$5820, 70

	.type	.L.str.1913,@object     # @.str.1913
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1913:
	.asciz	"181"
	.size	.L.str.1913, 4

	.type	label$5822,@object      # @"label$5822"
	.data
	.p2align	4
label$5822:
	.short	3                       # 0x3
	.quad	.L.str.1914
	.short	3                       # 0x3
	.quad	.L.str.1891
	.short	1                       # 0x1
	.quad	.L.str.93
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_LDX
	.short	65535                   # 0xffff
	.quad	label$5824
	.size	label$5822, 70

	.type	.L.str.1914,@object     # @.str.1914
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1914:
	.asciz	"182"
	.size	.L.str.1914, 4

	.type	label$5824,@object      # @"label$5824"
	.data
	.p2align	4
label$5824:
	.short	3                       # 0x3
	.quad	.L.str.1915
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5826
	.size	label$5824, 70

	.type	.L.str.1915,@object     # @.str.1915
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1915:
	.asciz	"183"
	.size	.L.str.1915, 4

	.type	label$5826,@object      # @"label$5826"
	.data
	.p2align	4
label$5826:
	.short	3                       # 0x3
	.quad	.L.str.1916
	.short	3                       # 0x3
	.quad	.L.str.1917
	.short	1                       # 0x1
	.quad	.L.str.88
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_CLV
	.short	65535                   # 0xffff
	.quad	label$5828
	.size	label$5826, 70

	.type	.L.str.1916,@object     # @.str.1916
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1916:
	.asciz	"184"
	.size	.L.str.1916, 4

	.type	.L.str.1917,@object     # @.str.1917
.L.str.1917:
	.asciz	"CLV"
	.size	.L.str.1917, 4

	.type	label$5828,@object      # @"label$5828"
	.data
	.p2align	4
label$5828:
	.short	3                       # 0x3
	.quad	.L.str.1918
	.short	3                       # 0x3
	.quad	.L.str.1889
	.short	1                       # 0x1
	.quad	.L.str.95
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_LDA
	.short	65535                   # 0xffff
	.quad	label$5830
	.size	label$5828, 70

	.type	.L.str.1918,@object     # @.str.1918
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1918:
	.asciz	"185"
	.size	.L.str.1918, 4

	.type	label$5830,@object      # @"label$5830"
	.data
	.p2align	4
label$5830:
	.short	3                       # 0x3
	.quad	.L.str.1919
	.short	3                       # 0x3
	.quad	.L.str.1920
	.short	1                       # 0x1
	.quad	.L.str.88
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_TSX
	.short	65535                   # 0xffff
	.quad	label$5832
	.size	label$5830, 70

	.type	.L.str.1919,@object     # @.str.1919
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1919:
	.asciz	"186"
	.size	.L.str.1919, 4

	.type	.L.str.1920,@object     # @.str.1920
.L.str.1920:
	.asciz	"TSX"
	.size	.L.str.1920, 4

	.type	label$5832,@object      # @"label$5832"
	.data
	.p2align	4
label$5832:
	.short	3                       # 0x3
	.quad	.L.str.1921
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5834
	.size	label$5832, 70

	.type	.L.str.1921,@object     # @.str.1921
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1921:
	.asciz	"187"
	.size	.L.str.1921, 4

	.type	label$5834,@object      # @"label$5834"
	.data
	.p2align	4
label$5834:
	.short	3                       # 0x3
	.quad	.L.str.1922
	.short	3                       # 0x3
	.quad	.L.str.1887
	.short	1                       # 0x1
	.quad	.L.str.94
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_LDY
	.short	65535                   # 0xffff
	.quad	label$5836
	.size	label$5834, 70

	.type	.L.str.1922,@object     # @.str.1922
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1922:
	.asciz	"188"
	.size	.L.str.1922, 4

	.type	label$5836,@object      # @"label$5836"
	.data
	.p2align	4
label$5836:
	.short	3                       # 0x3
	.quad	.L.str.1923
	.short	3                       # 0x3
	.quad	.L.str.1889
	.short	1                       # 0x1
	.quad	.L.str.94
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_LDA
	.short	65535                   # 0xffff
	.quad	label$5838
	.size	label$5836, 70

	.type	.L.str.1923,@object     # @.str.1923
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1923:
	.asciz	"189"
	.size	.L.str.1923, 4

	.type	label$5838,@object      # @"label$5838"
	.data
	.p2align	4
label$5838:
	.short	3                       # 0x3
	.quad	.L.str.1924
	.short	3                       # 0x3
	.quad	.L.str.1891
	.short	1                       # 0x1
	.quad	.L.str.95
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_LDX
	.short	65535                   # 0xffff
	.quad	label$5840
	.size	label$5838, 70

	.type	.L.str.1924,@object     # @.str.1924
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1924:
	.asciz	"190"
	.size	.L.str.1924, 4

	.type	label$5840,@object      # @"label$5840"
	.data
	.p2align	4
label$5840:
	.short	3                       # 0x3
	.quad	.L.str.1925
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5842
	.size	label$5840, 70

	.type	.L.str.1925,@object     # @.str.1925
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1925:
	.asciz	"191"
	.size	.L.str.1925, 4

	.type	label$5842,@object      # @"label$5842"
	.data
	.p2align	4
label$5842:
	.short	3                       # 0x3
	.quad	.L.str.1926
	.short	3                       # 0x3
	.quad	.L.str.1927
	.short	1                       # 0x1
	.quad	.L.str.89
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_CPY
	.short	65535                   # 0xffff
	.quad	label$5844
	.size	label$5842, 70

	.type	.L.str.1926,@object     # @.str.1926
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1926:
	.asciz	"192"
	.size	.L.str.1926, 4

	.type	.L.str.1927,@object     # @.str.1927
.L.str.1927:
	.asciz	"CPY"
	.size	.L.str.1927, 4

	.type	label$5844,@object      # @"label$5844"
	.data
	.p2align	4
label$5844:
	.short	3                       # 0x3
	.quad	.L.str.1928
	.short	3                       # 0x3
	.quad	.L.str.1929
	.short	2                       # 0x2
	.quad	.L.str.1699
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_CMP
	.short	65535                   # 0xffff
	.quad	label$5846
	.size	label$5844, 70

	.type	.L.str.1928,@object     # @.str.1928
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1928:
	.asciz	"193"
	.size	.L.str.1928, 4

	.type	.L.str.1929,@object     # @.str.1929
.L.str.1929:
	.asciz	"CMP"
	.size	.L.str.1929, 4

	.type	label$5846,@object      # @"label$5846"
	.data
	.p2align	4
label$5846:
	.short	3                       # 0x3
	.quad	.L.str.1930
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5848
	.size	label$5846, 70

	.type	.L.str.1930,@object     # @.str.1930
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1930:
	.asciz	"194"
	.size	.L.str.1930, 4

	.type	label$5848,@object      # @"label$5848"
	.data
	.p2align	4
label$5848:
	.short	3                       # 0x3
	.quad	.L.str.1931
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5850
	.size	label$5848, 70

	.type	.L.str.1931,@object     # @.str.1931
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1931:
	.asciz	"195"
	.size	.L.str.1931, 4

	.type	label$5850,@object      # @"label$5850"
	.data
	.p2align	4
label$5850:
	.short	3                       # 0x3
	.quad	.L.str.1932
	.short	3                       # 0x3
	.quad	.L.str.1927
	.short	1                       # 0x1
	.quad	.L.str.91
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_CPY
	.short	65535                   # 0xffff
	.quad	label$5852
	.size	label$5850, 70

	.type	.L.str.1932,@object     # @.str.1932
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1932:
	.asciz	"196"
	.size	.L.str.1932, 4

	.type	label$5852,@object      # @"label$5852"
	.data
	.p2align	4
label$5852:
	.short	3                       # 0x3
	.quad	.L.str.1933
	.short	3                       # 0x3
	.quad	.L.str.1929
	.short	1                       # 0x1
	.quad	.L.str.91
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_CMP
	.short	65535                   # 0xffff
	.quad	label$5854
	.size	label$5852, 70

	.type	.L.str.1933,@object     # @.str.1933
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1933:
	.asciz	"197"
	.size	.L.str.1933, 4

	.type	label$5854,@object      # @"label$5854"
	.data
	.p2align	4
label$5854:
	.short	3                       # 0x3
	.quad	.L.str.1934
	.short	3                       # 0x3
	.quad	.L.str.1935
	.short	1                       # 0x1
	.quad	.L.str.91
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_DEC
	.short	65535                   # 0xffff
	.quad	label$5856
	.size	label$5854, 70

	.type	.L.str.1934,@object     # @.str.1934
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1934:
	.asciz	"198"
	.size	.L.str.1934, 4

	.type	.L.str.1935,@object     # @.str.1935
.L.str.1935:
	.asciz	"DEC"
	.size	.L.str.1935, 4

	.type	label$5856,@object      # @"label$5856"
	.data
	.p2align	4
label$5856:
	.short	3                       # 0x3
	.quad	.L.str.1936
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5858
	.size	label$5856, 70

	.type	.L.str.1936,@object     # @.str.1936
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1936:
	.asciz	"199"
	.size	.L.str.1936, 4

	.type	label$5858,@object      # @"label$5858"
	.data
	.p2align	4
label$5858:
	.short	3                       # 0x3
	.quad	.L.str.1937
	.short	3                       # 0x3
	.quad	.L.str.1938
	.short	1                       # 0x1
	.quad	.L.str.88
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_INY
	.short	65535                   # 0xffff
	.quad	label$5860
	.size	label$5858, 70

	.type	.L.str.1937,@object     # @.str.1937
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1937:
	.asciz	"200"
	.size	.L.str.1937, 4

	.type	.L.str.1938,@object     # @.str.1938
.L.str.1938:
	.asciz	"INY"
	.size	.L.str.1938, 4

	.type	label$5860,@object      # @"label$5860"
	.data
	.p2align	4
label$5860:
	.short	3                       # 0x3
	.quad	.L.str.1939
	.short	3                       # 0x3
	.quad	.L.str.1929
	.short	1                       # 0x1
	.quad	.L.str.89
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_CMP
	.short	65535                   # 0xffff
	.quad	label$5862
	.size	label$5860, 70

	.type	.L.str.1939,@object     # @.str.1939
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1939:
	.asciz	"201"
	.size	.L.str.1939, 4

	.type	label$5862,@object      # @"label$5862"
	.data
	.p2align	4
label$5862:
	.short	3                       # 0x3
	.quad	.L.str.1940
	.short	3                       # 0x3
	.quad	.L.str.1941
	.short	1                       # 0x1
	.quad	.L.str.88
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_DEX
	.short	65535                   # 0xffff
	.quad	label$5864
	.size	label$5862, 70

	.type	.L.str.1940,@object     # @.str.1940
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1940:
	.asciz	"202"
	.size	.L.str.1940, 4

	.type	.L.str.1941,@object     # @.str.1941
.L.str.1941:
	.asciz	"DEX"
	.size	.L.str.1941, 4

	.type	label$5864,@object      # @"label$5864"
	.data
	.p2align	4
label$5864:
	.short	3                       # 0x3
	.quad	.L.str.1942
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5866
	.size	label$5864, 70

	.type	.L.str.1942,@object     # @.str.1942
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1942:
	.asciz	"203"
	.size	.L.str.1942, 4

	.type	label$5866,@object      # @"label$5866"
	.data
	.p2align	4
label$5866:
	.short	3                       # 0x3
	.quad	.L.str.1943
	.short	3                       # 0x3
	.quad	.L.str.1927
	.short	1                       # 0x1
	.quad	.L.str.90
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_CPY
	.short	65535                   # 0xffff
	.quad	label$5868
	.size	label$5866, 70

	.type	.L.str.1943,@object     # @.str.1943
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1943:
	.asciz	"204"
	.size	.L.str.1943, 4

	.type	label$5868,@object      # @"label$5868"
	.data
	.p2align	4
label$5868:
	.short	3                       # 0x3
	.quad	.L.str.1944
	.short	3                       # 0x3
	.quad	.L.str.1929
	.short	1                       # 0x1
	.quad	.L.str.90
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_CMP
	.short	65535                   # 0xffff
	.quad	label$5870
	.size	label$5868, 70

	.type	.L.str.1944,@object     # @.str.1944
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1944:
	.asciz	"205"
	.size	.L.str.1944, 4

	.type	label$5870,@object      # @"label$5870"
	.data
	.p2align	4
label$5870:
	.short	3                       # 0x3
	.quad	.L.str.1945
	.short	3                       # 0x3
	.quad	.L.str.1935
	.short	1                       # 0x1
	.quad	.L.str.90
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_DEC
	.short	65535                   # 0xffff
	.quad	label$5872
	.size	label$5870, 70

	.type	.L.str.1945,@object     # @.str.1945
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1945:
	.asciz	"206"
	.size	.L.str.1945, 4

	.type	label$5872,@object      # @"label$5872"
	.data
	.p2align	4
label$5872:
	.short	3                       # 0x3
	.quad	.L.str.1946
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5874
	.size	label$5872, 70

	.type	.L.str.1946,@object     # @.str.1946
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1946:
	.asciz	"207"
	.size	.L.str.1946, 4

	.type	label$5874,@object      # @"label$5874"
	.data
	.p2align	4
label$5874:
	.short	3                       # 0x3
	.quad	.L.str.1947
	.short	3                       # 0x3
	.quad	.L.str.1948
	.short	1                       # 0x1
	.quad	.L.str.96
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_BNE
	.short	65535                   # 0xffff
	.quad	label$5876
	.size	label$5874, 70

	.type	.L.str.1947,@object     # @.str.1947
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1947:
	.asciz	"208"
	.size	.L.str.1947, 4

	.type	.L.str.1948,@object     # @.str.1948
.L.str.1948:
	.asciz	"BNE"
	.size	.L.str.1948, 4

	.type	label$5876,@object      # @"label$5876"
	.data
	.p2align	4
label$5876:
	.short	3                       # 0x3
	.quad	.L.str.1949
	.short	3                       # 0x3
	.quad	.L.str.1929
	.short	2                       # 0x2
	.quad	.L.str.1706
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_CMP
	.short	65535                   # 0xffff
	.quad	label$5878
	.size	label$5876, 70

	.type	.L.str.1949,@object     # @.str.1949
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1949:
	.asciz	"209"
	.size	.L.str.1949, 4

	.type	label$5878,@object      # @"label$5878"
	.data
	.p2align	4
label$5878:
	.short	3                       # 0x3
	.quad	.L.str.1950
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5880
	.size	label$5878, 70

	.type	.L.str.1950,@object     # @.str.1950
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1950:
	.asciz	"210"
	.size	.L.str.1950, 4

	.type	label$5880,@object      # @"label$5880"
	.data
	.p2align	4
label$5880:
	.short	3                       # 0x3
	.quad	.L.str.1951
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5882
	.size	label$5880, 70

	.type	.L.str.1951,@object     # @.str.1951
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1951:
	.asciz	"211"
	.size	.L.str.1951, 4

	.type	label$5882,@object      # @"label$5882"
	.data
	.p2align	4
label$5882:
	.short	3                       # 0x3
	.quad	.L.str.1952
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5884
	.size	label$5882, 70

	.type	.L.str.1952,@object     # @.str.1952
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1952:
	.asciz	"212"
	.size	.L.str.1952, 4

	.type	label$5884,@object      # @"label$5884"
	.data
	.p2align	4
label$5884:
	.short	3                       # 0x3
	.quad	.L.str.1953
	.short	3                       # 0x3
	.quad	.L.str.1929
	.short	1                       # 0x1
	.quad	.L.str.92
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_CMP
	.short	65535                   # 0xffff
	.quad	label$5886
	.size	label$5884, 70

	.type	.L.str.1953,@object     # @.str.1953
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1953:
	.asciz	"213"
	.size	.L.str.1953, 4

	.type	label$5886,@object      # @"label$5886"
	.data
	.p2align	4
label$5886:
	.short	3                       # 0x3
	.quad	.L.str.1954
	.short	3                       # 0x3
	.quad	.L.str.1935
	.short	1                       # 0x1
	.quad	.L.str.92
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_DEC
	.short	65535                   # 0xffff
	.quad	label$5888
	.size	label$5886, 70

	.type	.L.str.1954,@object     # @.str.1954
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1954:
	.asciz	"214"
	.size	.L.str.1954, 4

	.type	label$5888,@object      # @"label$5888"
	.data
	.p2align	4
label$5888:
	.short	3                       # 0x3
	.quad	.L.str.1955
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5890
	.size	label$5888, 70

	.type	.L.str.1955,@object     # @.str.1955
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1955:
	.asciz	"215"
	.size	.L.str.1955, 4

	.type	label$5890,@object      # @"label$5890"
	.data
	.p2align	4
label$5890:
	.short	3                       # 0x3
	.quad	.L.str.1956
	.short	3                       # 0x3
	.quad	.L.str.1957
	.short	1                       # 0x1
	.quad	.L.str.88
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_CLD
	.short	65535                   # 0xffff
	.quad	label$5892
	.size	label$5890, 70

	.type	.L.str.1956,@object     # @.str.1956
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1956:
	.asciz	"216"
	.size	.L.str.1956, 4

	.type	.L.str.1957,@object     # @.str.1957
.L.str.1957:
	.asciz	"CLD"
	.size	.L.str.1957, 4

	.type	label$5892,@object      # @"label$5892"
	.data
	.p2align	4
label$5892:
	.short	3                       # 0x3
	.quad	.L.str.1958
	.short	3                       # 0x3
	.quad	.L.str.1929
	.short	1                       # 0x1
	.quad	.L.str.95
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_CMP
	.short	65535                   # 0xffff
	.quad	label$5894
	.size	label$5892, 70

	.type	.L.str.1958,@object     # @.str.1958
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1958:
	.asciz	"217"
	.size	.L.str.1958, 4

	.type	label$5894,@object      # @"label$5894"
	.data
	.p2align	4
label$5894:
	.short	3                       # 0x3
	.quad	.L.str.1959
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5896
	.size	label$5894, 70

	.type	.L.str.1959,@object     # @.str.1959
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1959:
	.asciz	"218"
	.size	.L.str.1959, 4

	.type	label$5896,@object      # @"label$5896"
	.data
	.p2align	4
label$5896:
	.short	3                       # 0x3
	.quad	.L.str.1960
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5898
	.size	label$5896, 70

	.type	.L.str.1960,@object     # @.str.1960
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1960:
	.asciz	"219"
	.size	.L.str.1960, 4

	.type	label$5898,@object      # @"label$5898"
	.data
	.p2align	4
label$5898:
	.short	3                       # 0x3
	.quad	.L.str.1961
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5900
	.size	label$5898, 70

	.type	.L.str.1961,@object     # @.str.1961
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1961:
	.asciz	"220"
	.size	.L.str.1961, 4

	.type	label$5900,@object      # @"label$5900"
	.data
	.p2align	4
label$5900:
	.short	3                       # 0x3
	.quad	.L.str.1962
	.short	3                       # 0x3
	.quad	.L.str.1929
	.short	1                       # 0x1
	.quad	.L.str.94
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_CMP
	.short	65535                   # 0xffff
	.quad	label$5902
	.size	label$5900, 70

	.type	.L.str.1962,@object     # @.str.1962
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1962:
	.asciz	"221"
	.size	.L.str.1962, 4

	.type	label$5902,@object      # @"label$5902"
	.data
	.p2align	4
label$5902:
	.short	3                       # 0x3
	.quad	.L.str.1963
	.short	3                       # 0x3
	.quad	.L.str.1935
	.short	1                       # 0x1
	.quad	.L.str.94
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_DEC
	.short	65535                   # 0xffff
	.quad	label$5904
	.size	label$5902, 70

	.type	.L.str.1963,@object     # @.str.1963
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1963:
	.asciz	"222"
	.size	.L.str.1963, 4

	.type	label$5904,@object      # @"label$5904"
	.data
	.p2align	4
label$5904:
	.short	3                       # 0x3
	.quad	.L.str.1964
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5906
	.size	label$5904, 70

	.type	.L.str.1964,@object     # @.str.1964
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1964:
	.asciz	"223"
	.size	.L.str.1964, 4

	.type	label$5906,@object      # @"label$5906"
	.data
	.p2align	4
label$5906:
	.short	3                       # 0x3
	.quad	.L.str.1965
	.short	3                       # 0x3
	.quad	.L.str.1966
	.short	1                       # 0x1
	.quad	.L.str.89
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_CPX
	.short	65535                   # 0xffff
	.quad	label$5908
	.size	label$5906, 70

	.type	.L.str.1965,@object     # @.str.1965
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1965:
	.asciz	"224"
	.size	.L.str.1965, 4

	.type	.L.str.1966,@object     # @.str.1966
.L.str.1966:
	.asciz	"CPX"
	.size	.L.str.1966, 4

	.type	label$5908,@object      # @"label$5908"
	.data
	.p2align	4
label$5908:
	.short	3                       # 0x3
	.quad	.L.str.1967
	.short	3                       # 0x3
	.quad	.L.str.1968
	.short	2                       # 0x2
	.quad	.L.str.1699
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_SBC
	.short	65535                   # 0xffff
	.quad	label$5910
	.size	label$5908, 70

	.type	.L.str.1967,@object     # @.str.1967
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1967:
	.asciz	"225"
	.size	.L.str.1967, 4

	.type	.L.str.1968,@object     # @.str.1968
.L.str.1968:
	.asciz	"SBC"
	.size	.L.str.1968, 4

	.type	label$5910,@object      # @"label$5910"
	.data
	.p2align	4
label$5910:
	.short	3                       # 0x3
	.quad	.L.str.1969
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5912
	.size	label$5910, 70

	.type	.L.str.1969,@object     # @.str.1969
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1969:
	.asciz	"226"
	.size	.L.str.1969, 4

	.type	label$5912,@object      # @"label$5912"
	.data
	.p2align	4
label$5912:
	.short	3                       # 0x3
	.quad	.L.str.1970
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5914
	.size	label$5912, 70

	.type	.L.str.1970,@object     # @.str.1970
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1970:
	.asciz	"227"
	.size	.L.str.1970, 4

	.type	label$5914,@object      # @"label$5914"
	.data
	.p2align	4
label$5914:
	.short	3                       # 0x3
	.quad	.L.str.1971
	.short	3                       # 0x3
	.quad	.L.str.1966
	.short	1                       # 0x1
	.quad	.L.str.91
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_CPX
	.short	65535                   # 0xffff
	.quad	label$5916
	.size	label$5914, 70

	.type	.L.str.1971,@object     # @.str.1971
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1971:
	.asciz	"228"
	.size	.L.str.1971, 4

	.type	label$5916,@object      # @"label$5916"
	.data
	.p2align	4
label$5916:
	.short	3                       # 0x3
	.quad	.L.str.1972
	.short	3                       # 0x3
	.quad	.L.str.1968
	.short	1                       # 0x1
	.quad	.L.str.91
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_SBC
	.short	65535                   # 0xffff
	.quad	label$5918
	.size	label$5916, 70

	.type	.L.str.1972,@object     # @.str.1972
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1972:
	.asciz	"229"
	.size	.L.str.1972, 4

	.type	label$5918,@object      # @"label$5918"
	.data
	.p2align	4
label$5918:
	.short	3                       # 0x3
	.quad	.L.str.1973
	.short	3                       # 0x3
	.quad	.L.str.1974
	.short	1                       # 0x1
	.quad	.L.str.91
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_INC
	.short	65535                   # 0xffff
	.quad	label$5920
	.size	label$5918, 70

	.type	.L.str.1973,@object     # @.str.1973
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1973:
	.asciz	"230"
	.size	.L.str.1973, 4

	.type	.L.str.1974,@object     # @.str.1974
.L.str.1974:
	.asciz	"INC"
	.size	.L.str.1974, 4

	.type	label$5920,@object      # @"label$5920"
	.data
	.p2align	4
label$5920:
	.short	3                       # 0x3
	.quad	.L.str.1975
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5922
	.size	label$5920, 70

	.type	.L.str.1975,@object     # @.str.1975
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1975:
	.asciz	"231"
	.size	.L.str.1975, 4

	.type	label$5922,@object      # @"label$5922"
	.data
	.p2align	4
label$5922:
	.short	3                       # 0x3
	.quad	.L.str.1976
	.short	3                       # 0x3
	.quad	.L.str.1977
	.short	1                       # 0x1
	.quad	.L.str.88
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_INX
	.short	65535                   # 0xffff
	.quad	label$5924
	.size	label$5922, 70

	.type	.L.str.1976,@object     # @.str.1976
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1976:
	.asciz	"232"
	.size	.L.str.1976, 4

	.type	.L.str.1977,@object     # @.str.1977
.L.str.1977:
	.asciz	"INX"
	.size	.L.str.1977, 4

	.type	label$5924,@object      # @"label$5924"
	.data
	.p2align	4
label$5924:
	.short	3                       # 0x3
	.quad	.L.str.1978
	.short	3                       # 0x3
	.quad	.L.str.1968
	.short	1                       # 0x1
	.quad	.L.str.89
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_SBC
	.short	65535                   # 0xffff
	.quad	label$5926
	.size	label$5924, 70

	.type	.L.str.1978,@object     # @.str.1978
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1978:
	.asciz	"233"
	.size	.L.str.1978, 4

	.type	label$5926,@object      # @"label$5926"
	.data
	.p2align	4
label$5926:
	.short	3                       # 0x3
	.quad	.L.str.1979
	.short	3                       # 0x3
	.quad	.L.str.1980
	.short	1                       # 0x1
	.quad	.L.str.88
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_NOP
	.short	65535                   # 0xffff
	.quad	label$5928
	.size	label$5926, 70

	.type	.L.str.1979,@object     # @.str.1979
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1979:
	.asciz	"234"
	.size	.L.str.1979, 4

	.type	.L.str.1980,@object     # @.str.1980
.L.str.1980:
	.asciz	"NOP"
	.size	.L.str.1980, 4

	.type	label$5928,@object      # @"label$5928"
	.data
	.p2align	4
label$5928:
	.short	3                       # 0x3
	.quad	.L.str.1981
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5930
	.size	label$5928, 70

	.type	.L.str.1981,@object     # @.str.1981
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1981:
	.asciz	"235"
	.size	.L.str.1981, 4

	.type	label$5930,@object      # @"label$5930"
	.data
	.p2align	4
label$5930:
	.short	3                       # 0x3
	.quad	.L.str.1982
	.short	3                       # 0x3
	.quad	.L.str.1966
	.short	1                       # 0x1
	.quad	.L.str.90
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_CPX
	.short	65535                   # 0xffff
	.quad	label$5932
	.size	label$5930, 70

	.type	.L.str.1982,@object     # @.str.1982
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1982:
	.asciz	"236"
	.size	.L.str.1982, 4

	.type	label$5932,@object      # @"label$5932"
	.data
	.p2align	4
label$5932:
	.short	3                       # 0x3
	.quad	.L.str.1983
	.short	3                       # 0x3
	.quad	.L.str.1968
	.short	1                       # 0x1
	.quad	.L.str.90
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_SBC
	.short	65535                   # 0xffff
	.quad	label$5934
	.size	label$5932, 70

	.type	.L.str.1983,@object     # @.str.1983
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1983:
	.asciz	"237"
	.size	.L.str.1983, 4

	.type	label$5934,@object      # @"label$5934"
	.data
	.p2align	4
label$5934:
	.short	3                       # 0x3
	.quad	.L.str.1984
	.short	3                       # 0x3
	.quad	.L.str.1974
	.short	1                       # 0x1
	.quad	.L.str.90
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_INC
	.short	65535                   # 0xffff
	.quad	label$5936
	.size	label$5934, 70

	.type	.L.str.1984,@object     # @.str.1984
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1984:
	.asciz	"238"
	.size	.L.str.1984, 4

	.type	label$5936,@object      # @"label$5936"
	.data
	.p2align	4
label$5936:
	.short	3                       # 0x3
	.quad	.L.str.1985
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5938
	.size	label$5936, 70

	.type	.L.str.1985,@object     # @.str.1985
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1985:
	.asciz	"239"
	.size	.L.str.1985, 4

	.type	label$5938,@object      # @"label$5938"
	.data
	.p2align	4
label$5938:
	.short	3                       # 0x3
	.quad	.L.str.1986
	.short	3                       # 0x3
	.quad	.L.str.1987
	.short	1                       # 0x1
	.quad	.L.str.96
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_BEQ
	.short	65535                   # 0xffff
	.quad	label$5940
	.size	label$5938, 70

	.type	.L.str.1986,@object     # @.str.1986
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1986:
	.asciz	"240"
	.size	.L.str.1986, 4

	.type	.L.str.1987,@object     # @.str.1987
.L.str.1987:
	.asciz	"BEQ"
	.size	.L.str.1987, 4

	.type	label$5940,@object      # @"label$5940"
	.data
	.p2align	4
label$5940:
	.short	3                       # 0x3
	.quad	.L.str.1988
	.short	3                       # 0x3
	.quad	.L.str.1968
	.short	2                       # 0x2
	.quad	.L.str.1706
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_SBC
	.short	65535                   # 0xffff
	.quad	label$5942
	.size	label$5940, 70

	.type	.L.str.1988,@object     # @.str.1988
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1988:
	.asciz	"241"
	.size	.L.str.1988, 4

	.type	label$5942,@object      # @"label$5942"
	.data
	.p2align	4
label$5942:
	.short	3                       # 0x3
	.quad	.L.str.1989
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5944
	.size	label$5942, 70

	.type	.L.str.1989,@object     # @.str.1989
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1989:
	.asciz	"242"
	.size	.L.str.1989, 4

	.type	label$5944,@object      # @"label$5944"
	.data
	.p2align	4
label$5944:
	.short	3                       # 0x3
	.quad	.L.str.1990
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5946
	.size	label$5944, 70

	.type	.L.str.1990,@object     # @.str.1990
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1990:
	.asciz	"243"
	.size	.L.str.1990, 4

	.type	label$5946,@object      # @"label$5946"
	.data
	.p2align	4
label$5946:
	.short	3                       # 0x3
	.quad	.L.str.1991
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5948
	.size	label$5946, 70

	.type	.L.str.1991,@object     # @.str.1991
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1991:
	.asciz	"244"
	.size	.L.str.1991, 4

	.type	label$5948,@object      # @"label$5948"
	.data
	.p2align	4
label$5948:
	.short	3                       # 0x3
	.quad	.L.str.1992
	.short	3                       # 0x3
	.quad	.L.str.1968
	.short	1                       # 0x1
	.quad	.L.str.92
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_SBC
	.short	65535                   # 0xffff
	.quad	label$5950
	.size	label$5948, 70

	.type	.L.str.1992,@object     # @.str.1992
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1992:
	.asciz	"245"
	.size	.L.str.1992, 4

	.type	label$5950,@object      # @"label$5950"
	.data
	.p2align	4
label$5950:
	.short	3                       # 0x3
	.quad	.L.str.1993
	.short	3                       # 0x3
	.quad	.L.str.1974
	.short	1                       # 0x1
	.quad	.L.str.92
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_INC
	.short	65535                   # 0xffff
	.quad	label$5952
	.size	label$5950, 70

	.type	.L.str.1993,@object     # @.str.1993
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1993:
	.asciz	"246"
	.size	.L.str.1993, 4

	.type	label$5952,@object      # @"label$5952"
	.data
	.p2align	4
label$5952:
	.short	3                       # 0x3
	.quad	.L.str.1994
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5954
	.size	label$5952, 70

	.type	.L.str.1994,@object     # @.str.1994
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1994:
	.asciz	"247"
	.size	.L.str.1994, 4

	.type	label$5954,@object      # @"label$5954"
	.data
	.p2align	4
label$5954:
	.short	3                       # 0x3
	.quad	.L.str.1995
	.short	3                       # 0x3
	.quad	.L.str.1996
	.short	1                       # 0x1
	.quad	.L.str.88
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_SED
	.short	65535                   # 0xffff
	.quad	label$5956
	.size	label$5954, 70

	.type	.L.str.1995,@object     # @.str.1995
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1995:
	.asciz	"248"
	.size	.L.str.1995, 4

	.type	.L.str.1996,@object     # @.str.1996
.L.str.1996:
	.asciz	"SED"
	.size	.L.str.1996, 4

	.type	label$5956,@object      # @"label$5956"
	.data
	.p2align	4
label$5956:
	.short	3                       # 0x3
	.quad	.L.str.1997
	.short	3                       # 0x3
	.quad	.L.str.1968
	.short	1                       # 0x1
	.quad	.L.str.95
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_SBC
	.short	65535                   # 0xffff
	.quad	label$5958
	.size	label$5956, 70

	.type	.L.str.1997,@object     # @.str.1997
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1997:
	.asciz	"249"
	.size	.L.str.1997, 4

	.type	label$5958,@object      # @"label$5958"
	.data
	.p2align	4
label$5958:
	.short	3                       # 0x3
	.quad	.L.str.1998
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5960
	.size	label$5958, 70

	.type	.L.str.1998,@object     # @.str.1998
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1998:
	.asciz	"250"
	.size	.L.str.1998, 4

	.type	label$5960,@object      # @"label$5960"
	.data
	.p2align	4
label$5960:
	.short	3                       # 0x3
	.quad	.L.str.1999
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5962
	.size	label$5960, 70

	.type	.L.str.1999,@object     # @.str.1999
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1999:
	.asciz	"251"
	.size	.L.str.1999, 4

	.type	label$5962,@object      # @"label$5962"
	.data
	.p2align	4
label$5962:
	.short	3                       # 0x3
	.quad	.L.str.2000
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5964
	.size	label$5962, 70

	.type	.L.str.2000,@object     # @.str.2000
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.2000:
	.asciz	"252"
	.size	.L.str.2000, 4

	.type	label$5964,@object      # @"label$5964"
	.data
	.p2align	4
label$5964:
	.short	3                       # 0x3
	.quad	.L.str.2001
	.short	3                       # 0x3
	.quad	.L.str.1968
	.short	1                       # 0x1
	.quad	.L.str.94
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_SBC
	.short	65535                   # 0xffff
	.quad	label$5966
	.size	label$5964, 70

	.type	.L.str.2001,@object     # @.str.2001
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.2001:
	.asciz	"253"
	.size	.L.str.2001, 4

	.type	label$5966,@object      # @"label$5966"
	.data
	.p2align	4
label$5966:
	.short	3                       # 0x3
	.quad	.L.str.2002
	.short	3                       # 0x3
	.quad	.L.str.1974
	.short	1                       # 0x1
	.quad	.L.str.94
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_INC
	.short	65535                   # 0xffff
	.quad	label$5968
	.size	label$5966, 70

	.type	.L.str.2002,@object     # @.str.2002
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.2002:
	.asciz	"254"
	.size	.L.str.2002, 4

	.type	label$5968,@object      # @"label$5968"
	.data
	.p2align	4
label$5968:
	.short	3                       # 0x3
	.quad	.L.str.2003
	.short	3                       # 0x3
	.quad	.L.str.1707
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	1                       # 0x1
	.quad	.L.str.87
	.short	65534                   # 0xfffe
	.quad	INS_UNK
	.short	65535                   # 0xffff
	.quad	label$5079
	.size	label$5968, 70

	.type	.L.str.2003,@object     # @.str.2003
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.2003:
	.asciz	"255"
	.size	.L.str.2003, 4

	.type	.L.str.2004,@object     # @.str.2004
.L.str.2004:
	.asciz	"UNK"
	.size	.L.str.2004, 4

	.type	label$5970,@object      # @"label$5970"
	.data
	.p2align	4
label$5970:
	.short	3                       # 0x3
	.quad	.L.str.2005
	.short	65535                   # 0xffff
	.quad	label$5972
	.size	label$5970, 20

	.type	.L.str.2005,@object     # @.str.2005
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.2005:
	.asciz	"IMP"
	.size	.L.str.2005, 4

	.type	label$5972,@object      # @"label$5972"
	.data
	.p2align	4
label$5972:
	.short	3                       # 0x3
	.quad	.L.str.2006
	.short	65535                   # 0xffff
	.quad	label$5974
	.size	label$5972, 20

	.type	.L.str.2006,@object     # @.str.2006
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.2006:
	.asciz	"IMM"
	.size	.L.str.2006, 4

	.type	label$5974,@object      # @"label$5974"
	.data
	.p2align	4
label$5974:
	.short	3                       # 0x3
	.quad	.L.str.2007
	.short	65535                   # 0xffff
	.quad	label$5976
	.size	label$5974, 20

	.type	.L.str.2007,@object     # @.str.2007
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.2007:
	.asciz	"ABS"
	.size	.L.str.2007, 4

	.type	label$5976,@object      # @"label$5976"
	.data
	.p2align	4
label$5976:
	.short	4                       # 0x4
	.quad	.L.str.2008
	.short	65535                   # 0xffff
	.quad	label$5978
	.size	label$5976, 20

	.type	.L.str.2008,@object     # @.str.2008
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.2008:
	.asciz	"ZERO"
	.size	.L.str.2008, 5

	.type	label$5978,@object      # @"label$5978"
	.data
	.p2align	4
label$5978:
	.short	5                       # 0x5
	.quad	.L.str.2009
	.short	65535                   # 0xffff
	.quad	label$5980
	.size	label$5978, 20

	.type	.L.str.2009,@object     # @.str.2009
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.2009:
	.asciz	"ZEROX"
	.size	.L.str.2009, 6

	.type	label$5980,@object      # @"label$5980"
	.data
	.p2align	4
label$5980:
	.short	5                       # 0x5
	.quad	.L.str.2010
	.short	65535                   # 0xffff
	.quad	label$5982
	.size	label$5980, 20

	.type	.L.str.2010,@object     # @.str.2010
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.2010:
	.asciz	"ZEROY"
	.size	.L.str.2010, 6

	.type	label$5982,@object      # @"label$5982"
	.data
	.p2align	4
label$5982:
	.short	4                       # 0x4
	.quad	.L.str.2011
	.short	65535                   # 0xffff
	.quad	label$5984
	.size	label$5982, 20

	.type	.L.str.2011,@object     # @.str.2011
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.2011:
	.asciz	"ABSX"
	.size	.L.str.2011, 5

	.type	label$5984,@object      # @"label$5984"
	.data
	.p2align	4
label$5984:
	.short	4                       # 0x4
	.quad	.L.str.2012
	.short	65535                   # 0xffff
	.quad	label$5986
	.size	label$5984, 20

	.type	.L.str.2012,@object     # @.str.2012
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.2012:
	.asciz	"ABSY"
	.size	.L.str.2012, 5

	.type	label$5986,@object      # @"label$5986"
	.data
	.p2align	4
label$5986:
	.short	3                       # 0x3
	.quad	.L.str.2013
	.short	65535                   # 0xffff
	.quad	label$5988
	.size	label$5986, 20

	.type	.L.str.2013,@object     # @.str.2013
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.2013:
	.asciz	"REL"
	.size	.L.str.2013, 4

	.type	label$5988,@object      # @"label$5988"
	.data
	.p2align	4
label$5988:
	.short	4                       # 0x4
	.quad	.L.str.2014
	.short	65535                   # 0xffff
	.quad	label$5990
	.size	label$5988, 20

	.type	.L.str.2014,@object     # @.str.2014
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.2014:
	.asciz	"INDX"
	.size	.L.str.2014, 5

	.type	label$5990,@object      # @"label$5990"
	.data
	.p2align	4
label$5990:
	.short	4                       # 0x4
	.quad	.L.str.2015
	.short	65535                   # 0xffff
	.quad	label$5992
	.size	label$5990, 20

	.type	.L.str.2015,@object     # @.str.2015
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.2015:
	.asciz	"INDY"
	.size	.L.str.2015, 5

	.type	label$5992,@object      # @"label$5992"
	.data
	.p2align	4
label$5992:
	.short	3                       # 0x3
	.quad	.L.str.2016
	.short	65535                   # 0xffff
	.quad	0
	.size	label$5992, 20

	.type	.L.str.2016,@object     # @.str.2016
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.2016:
	.asciz	"IND"
	.size	.L.str.2016, 4

	.ident	"clang version 10.0.1 "
	.section	".note.GNU-stack","",@progbits
	.addrsig
	.addrsig_sym ERROREXIT
	.addrsig_sym fb_GfxScreenPtr
	.addrsig_sym fb_GfxScreen
	.addrsig_sym fb_PrintString
	.addrsig_sym fb_PrintVoid
	.addrsig_sym fb_StrAllocTempDescZEx
	.addrsig_sym fb_Beep
	.addrsig_sym fb_Sleep
	.addrsig_sym fb_End
	.addrsig_sym GLSCREEN
	.addrsig_sym fb_GfxScreenInfo
	.addrsig_sym fb_GfxControl_i
	.addrsig_sym fb_GfxScreenList
	.addrsig_sym fb_GfxScreenRes
	.addrsig_sym fb_LongintToStr
	.addrsig_sym fb_StrConcat
	.addrsig_sym fb_StrAssign
	.addrsig_sym fb_StrDelete
	.addrsig_sym fb_GfxFlip
	.addrsig_sym fb_GfxGetGLProcAddress
	.addrsig_sym fb_GfxSetWindowTitle
	.addrsig_sym _ZN9SHADERTOYD1Ev
	.addrsig_sym _ZN9SHADERTOY11COMPILEFILEER8FBSTRING
	.addrsig_sym fb_FileFree
	.addrsig_sym fb_FileOpen
	.addrsig_sym fb_FileEof
	.addrsig_sym fb_FileLineInput
	.addrsig_sym fb_StrConcatAssign
	.addrsig_sym fb_FileClose
	.addrsig_sym _ZN9SHADERTOY11COMPILECODEER8FBSTRING
	.addrsig_sym fb_StrInit
	.addrsig_sym fb_SPACE
	.addrsig_sym _ZN5C64_TC1Ev
	.addrsig_sym fb_Cls
	.addrsig_sym fb_GfxImageCreate
	.addrsig_sym fb_DataReadLongint
	.addrsig_sym fb_GfxPalette
	.addrsig_sym malloc
	.addrsig_sym _ZN8MEMORY_TC1Ev
	.addrsig_sym _ZN7CPU6510C1EP8MEMORY_T
	.addrsig_sym _ZN7CPU6510D1Ev
	.addrsig_sym free
	.addrsig_sym _ZN8MEMORY_TD1Ev
	.addrsig_sym fb_GfxImageDestroy
	.addrsig_sym sin
	.addrsig_sym cos
	.addrsig_sym _ZN8MEMORY_T6POKE64Edd
	.addrsig_sym fb_FileGetLarge
	.addrsig_sym fb_FileSeekLarge
	.addrsig_sym fb_GfxPaint
	.addrsig_sym fb_CHR
	.addrsig_sym fb_StrMid
	.addrsig_sym fb_ASC
	.addrsig_sym fb_StrLen
	.addrsig_sym fb_GetMemAvail
	.addrsig_sym fb_ULongintToStr
	.addrsig_sym _ZN8MEMORY_T10SCREENCODEEd
	.addrsig_sym fb_StrCompare
	.addrsig_sym _ZN8MEMORY_T5PEEKBEd
	.addrsig_sym _ZN8MEMORY_T5PEEKWEd
	.addrsig_sym _ZN8MEMORY_T5POKEBEdd
	.addrsig_sym pow
	.addrsig_sym fb_Shell
	.addrsig_sym fb_FileInput
	.addrsig_sym fb_InputString
	.addrsig_sym _ZN8MEMORY_T5POKEWEdd
	.addrsig_sym fb_DoubleToStr
	.addrsig_sym _ZN8MEMORY_T6PEEK64Ed
	.addrsig_sym fb_GfxLine
	.addrsig_sym fb_GfxEllipse
	.addrsig_sym _ZN8MEMORY_T8ISNUMBERE8FBSTRINGd
	.addrsig_sym fb_VAL
	.addrsig_sym fb_GfxPut
	.addrsig_sym fb_hPutAlpha
	.addrsig_sym _ZN9SHADERTOYC1Ev
	.addrsig_sym glGenTextures
	.addrsig_sym fb_Rnd
	.addrsig_sym fb_GfxPset
	.addrsig_sym fb_GfxDrawString
	.addrsig_sym fb_GfxImageInfo
	.addrsig_sym glBindTexture
	.addrsig_sym glTexParameteri
	.addrsig_sym glTexImage2D
	.addrsig_sym glActiveTexture
	.addrsig_sym fb_Timer
	.addrsig_sym fb_Inkey
	.addrsig_sym fb_GetMouse64
	.addrsig_sym glRectf
	.addrsig_sym fb_GfxBload
	.addrsig_sym fb_hPutPSet
	.addrsig_sym fb_UIntToStr
	.addrsig_sym fb_SleepEx
	.addrsig_sym fb_HEX_l
	.addrsig_sym fb_StrLcase2
	.addrsig_sym fb_PageCopy
	.addrsig_sym fb_FileSize
	.addrsig_sym fb_Chain
	.addrsig_sym fb_GfxLock
	.addrsig_sym fb_GfxUnlock
	.addrsig_sym _ZN8MEMORY_T9READUBYTEEd
	.addrsig_sym _ZN8MEMORY_T8READBYTEEd
	.addrsig_sym _ZN8MEMORY_T10READUSHORTEd
	.addrsig_sym _ZN8MEMORY_T9WRITEBYTEEdd
	.addrsig_sym _ZN8MEMORY_T10WRITEUBYTEEdd
	.addrsig_sym _ZN8MEMORY_T11WRITEUSHORTEdd
	.addrsig_sym fb_DataRestore
	.addrsig_sym fb_DataReadULongint
	.addrsig_sym fb_DataReadStr
	.addrsig_sym fb_ArrayDestructStr
	.addrsig_sym fb_HEXEx_b
	.addrsig_sym fb_HEXEx_s
	.addrsig_sym fb_StrAllocTempResult
	.addrsig_sym _ZN7CPU65104TICKEd
	.addrsig_sym _ZN7CPU65107ADR_IMMEv
	.addrsig_sym _ZN7CPU65107ADR_ABSEv
	.addrsig_sym _ZN7CPU65108ADR_ZEROEv
	.addrsig_sym _ZN7CPU65109ADR_ZEROXEv
	.addrsig_sym _ZN7CPU65109ADR_ZEROYEv
	.addrsig_sym _ZN7CPU65108ADR_ABSXEv
	.addrsig_sym _ZN7CPU65108ADR_ABSYEv
	.addrsig_sym _ZN7CPU65107ADR_RELEv
	.addrsig_sym _ZN7CPU65108ADR_INDXEv
	.addrsig_sym _ZN7CPU65108ADR_INDYEv
	.addrsig_sym _ZN7CPU65107ADR_INDEv
	.addrsig_sym _ZN7CPU65104PUSHEd
	.addrsig_sym _ZN7CPU65104PULLEv
	.addrsig_sym INS_UNK
	.addrsig_sym INS_ADC
	.addrsig_sym INS_AND
	.addrsig_sym INS_ASL
	.addrsig_sym INS_ASLA
	.addrsig_sym INS_BCC
	.addrsig_sym INS_BCS
	.addrsig_sym INS_BEQ
	.addrsig_sym INS_BIT
	.addrsig_sym INS_BMI
	.addrsig_sym INS_BNE
	.addrsig_sym INS_BPL
	.addrsig_sym INS_BRK
	.addrsig_sym INS_BVC
	.addrsig_sym INS_BVS
	.addrsig_sym INS_CLC
	.addrsig_sym INS_CLD
	.addrsig_sym INS_CLI
	.addrsig_sym INS_CLV
	.addrsig_sym INS_CMP
	.addrsig_sym INS_CPX
	.addrsig_sym INS_CPY
	.addrsig_sym INS_DEC
	.addrsig_sym INS_DEX
	.addrsig_sym INS_DEY
	.addrsig_sym INS_EOR
	.addrsig_sym INS_INC
	.addrsig_sym INS_INX
	.addrsig_sym INS_INY
	.addrsig_sym INS_JMP
	.addrsig_sym INS_JSR
	.addrsig_sym INS_LDA
	.addrsig_sym INS_LDX
	.addrsig_sym INS_LDY
	.addrsig_sym INS_LSR
	.addrsig_sym INS_LSRA
	.addrsig_sym INS_NOP
	.addrsig_sym INS_ORA
	.addrsig_sym INS_PHA
	.addrsig_sym INS_PHP
	.addrsig_sym INS_PLA
	.addrsig_sym INS_PLP
	.addrsig_sym INS_ROL
	.addrsig_sym INS_ROLA
	.addrsig_sym INS_ROR
	.addrsig_sym INS_RORA
	.addrsig_sym INS_RTI
	.addrsig_sym INS_RTS
	.addrsig_sym INS_SBC
	.addrsig_sym INS_SEC
	.addrsig_sym INS_SED
	.addrsig_sym INS_SEI
	.addrsig_sym INS_STA
	.addrsig_sym INS_STX
	.addrsig_sym INS_STY
	.addrsig_sym INS_TAX
	.addrsig_sym INS_TAY
	.addrsig_sym INS_TSX
	.addrsig_sym INS_TXA
	.addrsig_sym INS_TXS
	.addrsig_sym INS_TYA
	.addrsig_sym INS_R32
	.addrsig_sym INS_W32
	.addrsig_sym INS_R64
	.addrsig_sym INS_W64
	.addrsig_sym INTERRUPTSERVICE
	.addrsig_sym fb_Locate
	.addrsig_sym fb_ConsoleInput
	.addrsig_sym fb_FilePutLarge
	.addrsig_sym fb_Init
	.addrsig_sym fb_hPutOr
	.addrsig_sym __stack_chk_fail
	.addrsig_sym GLCREATESHADER$
	.addrsig_sym GLDELETESHADER$
	.addrsig_sym GLSHADERSOURCE$
	.addrsig_sym GLCOMPILESHADER$
	.addrsig_sym GLGETSHADERIV$
	.addrsig_sym GLGETSHADERINFOLOG$
	.addrsig_sym GLCREATEPROGRAM$
	.addrsig_sym GLDELETEPROGRAM$
	.addrsig_sym GLATTACHSHADER$
	.addrsig_sym GLDETACHSHADER$
	.addrsig_sym GLLINKPROGRAM$
	.addrsig_sym GLGETPROGRAMIV$
	.addrsig_sym GLGETPROGRAMINFOLOG$
	.addrsig_sym GLUSEPROGRAM$
	.addrsig_sym GLGETUNIFORMLOCATION$
	.addrsig_sym GLUNIFORM1I$
	.addrsig_sym GLUNIFORM1F$
	.addrsig_sym GLUNIFORM3F$
	.addrsig_sym GLUNIFORM3FV$
	.addrsig_sym GLUNIFORM4F$
	.addrsig_sym GLUNIFORM4FV$
	.addrsig_sym SWCH$
	.addrsig_sym SCR_W$
	.addrsig_sym SCR_H$
	.addrsig_sym BGIMAGE$
	.addrsig_sym FGIMAGE$
	.addrsig_sym RASTER$
	.addrsig_sym RENDER$
	.addrsig_sym SYS_OFFSET$
	.addrsig_sym CHAR_H$
	.addrsig_sym CHAR_W$
	.addrsig_sym CHAR_PTR$
	.addrsig_sym CHAR_BUFFER$
	.addrsig_sym BITMASK$
	.addrsig_sym PIXEL_SIZE$
	.addrsig_sym RADIUS$
	.addrsig_sym STRING_ADR$
	.addrsig_sym STRING_LEN$
	.addrsig_sym A1$
	.addrsig_sym A2$
	.addrsig_sym A3$
	.addrsig_sym A4$
	.addrsig_sym A5$
	.addrsig_sym A6$
	.addrsig_sym A7$
	.addrsig_sym A8$
	.addrsig_sym PC$
	.addrsig_sym STRING_DATA$
	.addrsig_sym R3$
	.addrsig_sym ADR0$
	.addrsig_sym C$
	.addrsig_sym XS$
	.addrsig_sym YS$
	.addrsig_sym RVS$
	.addrsig_sym Y$
	.addrsig_sym X$
	.addrsig_sym X_AXIS0$
	.addrsig_sym Y_AXIS0$
	.addrsig_sym RED2$
	.addrsig_sym GREEN2$
	.addrsig_sym BLUE2$
	.addrsig_sym XALPHA2$
	.addrsig_sym X_AXIS1$
	.addrsig_sym Y_AXIS1$
	.addrsig_sym GET_DATA$
	.addrsig_sym FCOLOR$
	.addrsig_sym VMCSB$
	.addrsig_sym HIBASE$
	.addrsig_sym _ZN8MEMORY_T6POKE64Edd.tmp$2479
	.addrsig_sym SP0X$
	.addrsig_sym SP1X$
	.addrsig_sym SP2X$
	.addrsig_sym SP3X$
	.addrsig_sym SP4X$
	.addrsig_sym SP5X$
	.addrsig_sym SP6X$
	.addrsig_sym SP7X$
	.addrsig_sym SP0Y$
	.addrsig_sym SP1Y$
	.addrsig_sym SP2Y$
	.addrsig_sym SP3Y$
	.addrsig_sym SP4Y$
	.addrsig_sym SP5Y$
	.addrsig_sym SP6Y$
	.addrsig_sym SP7Y$
	.addrsig_sym SP0COL$
	.addrsig_sym SP1COL$
	.addrsig_sym SP2COL$
	.addrsig_sym SP3COL$
	.addrsig_sym SP4COL$
	.addrsig_sym SP5COL$
	.addrsig_sym SP6COL$
	.addrsig_sym SP7COL$
	.addrsig_sym SPENA$
	.addrsig_sym RASTR$
	.addrsig_sym EXTCOL$
	.addrsig_sym _ZN8MEMORY_T6POKE64Edd.tmp$2480
	.addrsig_sym BGCOL0$
	.addrsig_sym BGCOL1$
	.addrsig_sym BGCOL2$
	.addrsig_sym BGCOL3$
	.addrsig_sym FILENAME$
	.addrsig_sym STRCODE$
	.addrsig_sym OFFSET$
	.addrsig_sym _ZN8MEMORY_T6POKE64Edd.tmp$2481
	.addrsig_sym _ZN8MEMORY_T6POKE64Edd.tmp$2482
	.addrsig_sym _ZN8MEMORY_T6POKE64Edd.tmp$2483
	.addrsig_sym MSG$
	.addrsig_sym _ZN8MEMORY_T6POKE64Edd.tmp$2484
	.addrsig_sym _ZN8MEMORY_T6POKE64Edd.tmp$2485
	.addrsig_sym _ZN8MEMORY_T6POKE64Edd.tmp$2486
	.addrsig_sym _ZN8MEMORY_T6POKE64Edd.tmp$2487
	.addrsig_sym _ZN8MEMORY_T6POKE64Edd.tmp$2488
	.addrsig_sym COMPILER$
	.addrsig_sym SCR_POS$
	.addrsig_sym INDEX$
	.addrsig_sym _ZN8MEMORY_T6POKE64Edd.tmp$2489
	.addrsig_sym _ZN8MEMORY_T6POKE64Edd.tmp$2490
	.addrsig_sym _ZN8MEMORY_T6POKE64Edd.tmp$2491
	.addrsig_sym label$5073
	.addrsig_sym label$5079
	.addrsig_sym _ZN7CPU65104TICKEd.tmp$2534
	.addrsig_sym CARY$
	.addrsig_sym INTERRUPTSERVICE.S$1
	.addrsig_sym FLAG$
	.addrsig_sym EOL$
	.addrsig_sym label$5460
	.addrsig_sym label$5462
	.addrsig_sym label$5464
	.addrsig_sym label$5466
	.addrsig_sym label$5468
	.addrsig_sym label$5470
	.addrsig_sym label$5472
	.addrsig_sym label$5474
	.addrsig_sym label$5476
	.addrsig_sym label$5478
	.addrsig_sym label$5480
	.addrsig_sym label$5482
	.addrsig_sym label$5484
	.addrsig_sym label$5486
	.addrsig_sym label$5488
	.addrsig_sym label$5490
	.addrsig_sym label$5492
	.addrsig_sym label$5494
	.addrsig_sym label$5496
	.addrsig_sym label$5498
	.addrsig_sym label$5500
	.addrsig_sym label$5502
	.addrsig_sym label$5504
	.addrsig_sym label$5506
	.addrsig_sym label$5508
	.addrsig_sym label$5510
	.addrsig_sym label$5512
	.addrsig_sym label$5514
	.addrsig_sym label$5516
	.addrsig_sym label$5518
	.addrsig_sym label$5520
	.addrsig_sym label$5522
	.addrsig_sym label$5524
	.addrsig_sym label$5526
	.addrsig_sym label$5528
	.addrsig_sym label$5530
	.addrsig_sym label$5532
	.addrsig_sym label$5534
	.addrsig_sym label$5536
	.addrsig_sym label$5538
	.addrsig_sym label$5540
	.addrsig_sym label$5542
	.addrsig_sym label$5544
	.addrsig_sym label$5546
	.addrsig_sym label$5548
	.addrsig_sym label$5550
	.addrsig_sym label$5552
	.addrsig_sym label$5554
	.addrsig_sym label$5556
	.addrsig_sym label$5558
	.addrsig_sym label$5560
	.addrsig_sym label$5562
	.addrsig_sym label$5564
	.addrsig_sym label$5566
	.addrsig_sym label$5568
	.addrsig_sym label$5570
	.addrsig_sym label$5572
	.addrsig_sym label$5574
	.addrsig_sym label$5576
	.addrsig_sym label$5578
	.addrsig_sym label$5580
	.addrsig_sym label$5582
	.addrsig_sym label$5584
	.addrsig_sym label$5586
	.addrsig_sym label$5588
	.addrsig_sym label$5590
	.addrsig_sym label$5592
	.addrsig_sym label$5594
	.addrsig_sym label$5596
	.addrsig_sym label$5598
	.addrsig_sym label$5600
	.addrsig_sym label$5602
	.addrsig_sym label$5604
	.addrsig_sym label$5606
	.addrsig_sym label$5608
	.addrsig_sym label$5610
	.addrsig_sym label$5612
	.addrsig_sym label$5614
	.addrsig_sym label$5616
	.addrsig_sym label$5618
	.addrsig_sym label$5620
	.addrsig_sym label$5622
	.addrsig_sym label$5624
	.addrsig_sym label$5626
	.addrsig_sym label$5628
	.addrsig_sym label$5630
	.addrsig_sym label$5632
	.addrsig_sym label$5634
	.addrsig_sym label$5636
	.addrsig_sym label$5638
	.addrsig_sym label$5640
	.addrsig_sym label$5642
	.addrsig_sym label$5644
	.addrsig_sym label$5646
	.addrsig_sym label$5648
	.addrsig_sym label$5650
	.addrsig_sym label$5652
	.addrsig_sym label$5654
	.addrsig_sym label$5656
	.addrsig_sym label$5658
	.addrsig_sym label$5660
	.addrsig_sym label$5662
	.addrsig_sym label$5664
	.addrsig_sym label$5666
	.addrsig_sym label$5668
	.addrsig_sym label$5670
	.addrsig_sym label$5672
	.addrsig_sym label$5674
	.addrsig_sym label$5676
	.addrsig_sym label$5678
	.addrsig_sym label$5680
	.addrsig_sym label$5682
	.addrsig_sym label$5684
	.addrsig_sym label$5686
	.addrsig_sym label$5688
	.addrsig_sym label$5690
	.addrsig_sym label$5692
	.addrsig_sym label$5694
	.addrsig_sym label$5696
	.addrsig_sym label$5698
	.addrsig_sym label$5700
	.addrsig_sym label$5702
	.addrsig_sym label$5704
	.addrsig_sym label$5706
	.addrsig_sym label$5708
	.addrsig_sym label$5710
	.addrsig_sym label$5712
	.addrsig_sym label$5714
	.addrsig_sym label$5716
	.addrsig_sym label$5718
	.addrsig_sym label$5720
	.addrsig_sym label$5722
	.addrsig_sym label$5724
	.addrsig_sym label$5726
	.addrsig_sym label$5728
	.addrsig_sym label$5730
	.addrsig_sym label$5732
	.addrsig_sym label$5734
	.addrsig_sym label$5736
	.addrsig_sym label$5738
	.addrsig_sym label$5740
	.addrsig_sym label$5742
	.addrsig_sym label$5744
	.addrsig_sym label$5746
	.addrsig_sym label$5748
	.addrsig_sym label$5750
	.addrsig_sym label$5752
	.addrsig_sym label$5754
	.addrsig_sym label$5756
	.addrsig_sym label$5758
	.addrsig_sym label$5760
	.addrsig_sym label$5762
	.addrsig_sym label$5764
	.addrsig_sym label$5766
	.addrsig_sym label$5768
	.addrsig_sym label$5770
	.addrsig_sym label$5772
	.addrsig_sym label$5774
	.addrsig_sym label$5776
	.addrsig_sym label$5778
	.addrsig_sym label$5780
	.addrsig_sym label$5782
	.addrsig_sym label$5784
	.addrsig_sym label$5786
	.addrsig_sym label$5788
	.addrsig_sym label$5790
	.addrsig_sym label$5792
	.addrsig_sym label$5794
	.addrsig_sym label$5796
	.addrsig_sym label$5798
	.addrsig_sym label$5800
	.addrsig_sym label$5802
	.addrsig_sym label$5804
	.addrsig_sym label$5806
	.addrsig_sym label$5808
	.addrsig_sym label$5810
	.addrsig_sym label$5812
	.addrsig_sym label$5814
	.addrsig_sym label$5816
	.addrsig_sym label$5818
	.addrsig_sym label$5820
	.addrsig_sym label$5822
	.addrsig_sym label$5824
	.addrsig_sym label$5826
	.addrsig_sym label$5828
	.addrsig_sym label$5830
	.addrsig_sym label$5832
	.addrsig_sym label$5834
	.addrsig_sym label$5836
	.addrsig_sym label$5838
	.addrsig_sym label$5840
	.addrsig_sym label$5842
	.addrsig_sym label$5844
	.addrsig_sym label$5846
	.addrsig_sym label$5848
	.addrsig_sym label$5850
	.addrsig_sym label$5852
	.addrsig_sym label$5854
	.addrsig_sym label$5856
	.addrsig_sym label$5858
	.addrsig_sym label$5860
	.addrsig_sym label$5862
	.addrsig_sym label$5864
	.addrsig_sym label$5866
	.addrsig_sym label$5868
	.addrsig_sym label$5870
	.addrsig_sym label$5872
	.addrsig_sym label$5874
	.addrsig_sym label$5876
	.addrsig_sym label$5878
	.addrsig_sym label$5880
	.addrsig_sym label$5882
	.addrsig_sym label$5884
	.addrsig_sym label$5886
	.addrsig_sym label$5888
	.addrsig_sym label$5890
	.addrsig_sym label$5892
	.addrsig_sym label$5894
	.addrsig_sym label$5896
	.addrsig_sym label$5898
	.addrsig_sym label$5900
	.addrsig_sym label$5902
	.addrsig_sym label$5904
	.addrsig_sym label$5906
	.addrsig_sym label$5908
	.addrsig_sym label$5910
	.addrsig_sym label$5912
	.addrsig_sym label$5914
	.addrsig_sym label$5916
	.addrsig_sym label$5918
	.addrsig_sym label$5920
	.addrsig_sym label$5922
	.addrsig_sym label$5924
	.addrsig_sym label$5926
	.addrsig_sym label$5928
	.addrsig_sym label$5930
	.addrsig_sym label$5932
	.addrsig_sym label$5934
	.addrsig_sym label$5936
	.addrsig_sym label$5938
	.addrsig_sym label$5940
	.addrsig_sym label$5942
	.addrsig_sym label$5944
	.addrsig_sym label$5946
	.addrsig_sym label$5948
	.addrsig_sym label$5950
	.addrsig_sym label$5952
	.addrsig_sym label$5954
	.addrsig_sym label$5956
	.addrsig_sym label$5958
	.addrsig_sym label$5960
	.addrsig_sym label$5962
	.addrsig_sym label$5964
	.addrsig_sym label$5966
	.addrsig_sym label$5968
	.addrsig_sym label$5970
	.addrsig_sym label$5972
	.addrsig_sym label$5974
	.addrsig_sym label$5976
	.addrsig_sym label$5978
	.addrsig_sym label$5980
	.addrsig_sym label$5982
	.addrsig_sym label$5984
	.addrsig_sym label$5986
	.addrsig_sym label$5988
	.addrsig_sym label$5990
	.addrsig_sym label$5992
