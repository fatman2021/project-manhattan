# Blender 2.80 (sub 74), Commit date: 2019-06-13 19:32, Hash 5e626e766459
bpy.ops.transform.translate(value=(0, 1.20047, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0.422872, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.resize(value=(1, 0.963099, 1), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, 0.113952), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.context.space_data.context = 'PHYSICS'  # Property
bpy.data.screens["Layout"].shading.type = 'RENDERED'  # Property
bpy.context.space_data.context = 'WORLD'  # Property
bpy.context.space_data.system_bookmarks_active = 1  # Property
bpy.context.space_data.system_bookmarks_active = 0  # Property
bpy.context.space_data.system_bookmarks_active = 0  # Property
bpy.ops.image.open(filepath="/home/main/HDRI/12.png", directory="/home/main/HDRI/", files=[{"name":"12.png", "name":"12.png"}], relative_path=True, show_multiview=False)  # Operator
Cannot read '/home/main/HDRI/13.png': No such file or directory  # Error
bpy.context.space_data.recent_folders_active = 0  # Property
bpy.context.space_data.recent_folders_active = 1  # Property
bpy.context.space_data.recent_folders_active = 1  # Property
bpy.context.space_data.recent_folders_active = 0  # Property
bpy.ops.image.open(filepath="/home/main/HDRI/16.png", directory="/home/main/HDRI/", files=[{"name":"16.png", "name":"16.png"}], show_multiview=False)  # Operator
bpy.context.space_data.context = 'MATERIAL'  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Transparent BSDF"].inputs[0].default_value[3] = 0.5  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Transparent BSDF"].inputs[0].default_value = (1, 1, 1, 0.5)  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[0].default_value[3] = 0.5  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[0].default_value = (1, 1, 1, 0.5)  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[0].default_value[3] = 0.507143  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[0].default_value = (0.8, 0.8, 0.8, 0.507143)  # Property
bpy.context.object.active_material.blend_method = 'BLEND'  # Property
bpy.context.object.active_material.shadow_method = 'HASHED'  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[1].default_value = 0.125  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF.001"].inputs[0].default_value[3] = 0.507143  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF.001"].inputs[0].default_value = (1, 1, 1, 0.507143)  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF.001"].inputs[2].default_value = 1  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF.001"].inputs[2].default_value = 2  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF.001"].inputs[2].default_value = 4.2  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF.001"].inputs[2].default_value = 1.35  # Property
bpy.context.space_data.context = 'WORLD'  # Property
bpy.ops.object.delete(use_global=False, confirm=False)  # Operator
Deleted 1 object(s)  # Info
bpy.ops.image.open(filepath="/home/main/HDRI/16.png", directory="/home/main/HDRI/", files=[{"name":"16.png", "name":"16.png"}], show_multiview=False)  # Operator
bpy.ops.image.open(filepath="/home/main/HDRI/15.png", directory="/home/main/HDRI/", files=[{"name":"15.png", "name":"15.png"}], show_multiview=False)  # Operator
bpy.ops.image.open(filepath="/home/main/HDRI/13.png", directory="/home/main/HDRI/", files=[{"name":"13.png", "name":"13.png"}], show_multiview=False)  # Operator
bpy.ops.image.open(filepath="/home/main/HDRI/14.png", directory="/home/main/HDRI/", files=[{"name":"14.png", "name":"14.png"}], show_multiview=False)  # Operator
bpy.ops.image.open(filepath="/home/main/HDRI/13.png", directory="/home/main/HDRI/", files=[{"name":"13.png", "name":"13.png"}], show_multiview=False)  # Operator
bpy.ops.image.open(filepath="/home/main/HDRI/14.png", directory="/home/main/HDRI/", files=[{"name":"14.png", "name":"14.png"}], show_multiview=False)  # Operator
bpy.ops.image.open(filepath="/home/main/HDRI/16.png", directory="/home/main/HDRI/", files=[{"name":"16.png", "name":"16.png"}], show_multiview=False)  # Operator
bpy.context.space_data.context = 'PHYSICS'  # Property
bpy.context.object.modifiers["Fluidsim"].settings.use_surface_noobs = False  # Property
bpy.context.space_data.context = 'MATERIAL'  # Property
bpy.ops.node.select(mouse_x=434, mouse_y=346, extend=False)  # Operator
bpy.ops.node.translate_attach(TRANSFORM_OT_translate={"value":(-131.099, -70.2547, 0), "orient_type":'GLOBAL', "orient_matrix":((1, 0, 0), (0, 1, 0), (0, 0, 1)), "orient_matrix_type":'GLOBAL', "constraint_axis":(False, False, False), "mirror":True, "use_proportional_edit":False, "proportional_edit_falloff":'SMOOTH', "proportional_size":1, "use_proportional_connected":False, "use_proportional_projected":False, "snap":False, "snap_target":'CLOSEST', "snap_point":(0, 0, 0), "snap_align":False, "snap_normal":(0, 0, 0), "gpencil_strokes":False, "cursor_transform":False, "texture_space":False, "remove_on_cancel":False, "release_confirm":True, "use_accurate":False}, NODE_OT_attach={}, NODE_OT_insert_offset={})  # Operator
bpy.ops.node.select(mouse_x=653, mouse_y=306, extend=False)  # Operator
bpy.ops.node.translate_attach(TRANSFORM_OT_translate={"value":(204.27, -54.9819, 0), "orient_type":'GLOBAL', "orient_matrix":((1, 0, 0), (0, 1, 0), (0, 0, 1)), "orient_matrix_type":'GLOBAL', "constraint_axis":(False, False, False), "mirror":True, "use_proportional_edit":False, "proportional_edit_falloff":'SMOOTH', "proportional_size":1, "use_proportional_connected":False, "use_proportional_projected":False, "snap":False, "snap_target":'CLOSEST', "snap_point":(0, 0, 0), "snap_align":False, "snap_normal":(0, 0, 0), "gpencil_strokes":False, "cursor_transform":False, "texture_space":False, "remove_on_cancel":False, "release_confirm":True, "use_accurate":False}, NODE_OT_attach={}, NODE_OT_insert_offset={})  # Operator
bpy.ops.node.select(mouse_x=659, mouse_y=260, extend=False)  # Operator
bpy.ops.node.select(mouse_x=570, mouse_y=280, extend=False)  # Operator
bpy.ops.node.translate_attach(TRANSFORM_OT_translate={"value":(-140.245, 94.6911, 0), "orient_type":'GLOBAL', "orient_matrix":((1, 0, 0), (0, 1, 0), (0, 0, 1)), "orient_matrix_type":'GLOBAL', "constraint_axis":(False, False, False), "mirror":True, "use_proportional_edit":False, "proportional_edit_falloff":'SMOOTH', "proportional_size":1, "use_proportional_connected":False, "use_proportional_projected":False, "snap":False, "snap_target":'CLOSEST', "snap_point":(0, 0, 0), "snap_align":False, "snap_normal":(0, 0, 0), "gpencil_strokes":False, "cursor_transform":False, "texture_space":False, "remove_on_cancel":False, "release_confirm":True, "use_accurate":False}, NODE_OT_attach={}, NODE_OT_insert_offset={})  # Operator
bpy.ops.node.select(mouse_x=654, mouse_y=260, extend=False)  # Operator
bpy.ops.node.translate_attach(TRANSFORM_OT_translate={"value":(-51.8297, -128.291, 0), "orient_type":'GLOBAL', "orient_matrix":((1, 0, 0), (0, 1, 0), (0, 0, 1)), "orient_matrix_type":'GLOBAL', "constraint_axis":(False, False, False), "mirror":True, "use_proportional_edit":False, "proportional_edit_falloff":'SMOOTH', "proportional_size":1, "use_proportional_connected":False, "use_proportional_projected":False, "snap":False, "snap_target":'CLOSEST', "snap_point":(0, 0, 0), "snap_align":False, "snap_normal":(0, 0, 0), "gpencil_strokes":False, "cursor_transform":False, "texture_space":False, "remove_on_cancel":False, "release_confirm":True, "use_accurate":False}, NODE_OT_attach={}, NODE_OT_insert_offset={})  # Operator
bpy.ops.node.delete()  # Operator
bpy.ops.node.hide_toggle()  # Operator
bpy.ops.node.translate_attach(TRANSFORM_OT_translate={"value":(-167.684, -70.2547, 0), "orient_type":'GLOBAL', "orient_matrix":((1, 0, 0), (0, 1, 0), (0, 0, 1)), "orient_matrix_type":'GLOBAL', "constraint_axis":(False, False, False), "mirror":True, "use_proportional_edit":False, "proportional_edit_falloff":'SMOOTH', "proportional_size":1, "use_proportional_connected":False, "use_proportional_projected":False, "snap":False, "snap_target":'CLOSEST', "snap_point":(0, 0, 0), "snap_align":False, "snap_normal":(0, 0, 0), "gpencil_strokes":False, "cursor_transform":False, "texture_space":False, "remove_on_cancel":False, "release_confirm":True, "use_accurate":False}, NODE_OT_attach={}, NODE_OT_insert_offset={})  # Operator
bpy.ops.node.select(mouse_x=372, mouse_y=214, extend=False)  # Operator
bpy.ops.node.select(mouse_x=371, mouse_y=214, extend=False)  # Operator
bpy.ops.node.delete()  # Operator
bpy.ops.paint.texture_paint_toggle()  # Operator
bpy.ops.paint.texture_paint_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.object.editmode_toggle()  # Operator
bpy.ops.transform.translate(value=(0, 0, 0.713917), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.anim.keyframe_insert_menu(type='LocRotScale')  # Operator
bpy.context.space_data.context = 'WORLD'  # Property
bpy.ops.image.open(filepath="/home/main/HDRI/15.png", directory="/home/main/HDRI/", files=[{"name":"15.png", "name":"15.png"}], show_multiview=False)  # Operator
bpy.ops.image.open(filepath="/home/main/HDRI/14.png", directory="/home/main/HDRI/", files=[{"name":"14.png", "name":"14.png"}], show_multiview=False)  # Operator
bpy.ops.image.open(filepath="/home/main/HDRI/13.png", directory="/home/main/HDRI/", files=[{"name":"13.png", "name":"13.png"}], show_multiview=False)  # Operator
bpy.data.images["13.png"].colorspace_settings.name = 'Non-Color'  # Property
bpy.ops.image.open(filepath="/home/main/HDRI/0.png", directory="/home/main/HDRI/", files=[{"name":"0.png", "name":"0.png"}], show_multiview=False)  # Operator
bpy.ops.image.open(filepath="/home/main/HDRI/16.png", directory="/home/main/HDRI/", files=[{"name":"16.png", "name":"16.png"}], show_multiview=False)  # Operator
bpy.data.images["16.png"].colorspace_settings.name = 'Non-Color'  # Property
bpy.data.images["16.png"].colorspace_settings.name = 'Linear'  # Property
bpy.data.images["16.png"].colorspace_settings.name = 'Raw'  # Property
bpy.data.images["16.png"].colorspace_settings.name = 'Non-Color'  # Property
bpy.data.images["16.png"].colorspace_settings.name = 'Linear ACES'  # Property
bpy.data.images["16.png"].colorspace_settings.name = 'Linear ACES'  # Property
bpy.data.images["16.png"].colorspace_settings.name = 'sRGB'  # Property
bpy.context.space_data.system_bookmarks_active = 0  # Property
bpy.context.space_data.system_bookmarks_active = 0  # Property
bpy.ops.image.open(filepath="/home/main/Downloads/cloud_layers_1k.hdr", directory="/home/main/Downloads/", files=[{"name":"cloud_layers_1k.hdr", "name":"cloud_layers_1k.hdr"}], show_multiview=False)  # Operator
bpy.context.space_data.recent_folders_active = 1  # Property
bpy.ops.image.open(filepath="/home/main/HDRI/16.png", directory="/home/main/HDRI/", files=[{"name":"16.png", "name":"16.png"}], show_multiview=False)  # Operator
bpy.ops.image.open(filepath="/home/main/HDRI/17.png", directory="/home/main/HDRI/", files=[{"name":"17.png", "name":"17.png"}], show_multiview=False)  # Operator
bpy.context.space_data.context = 'RENDER'  # Property
bpy.context.scene.eevee.use_gtao = True  # Property
bpy.ops.mesh.primitive_plane_add(size=2, enter_editmode=False, location=(0, 0, 0))  # Operator
bpy.ops.transform.resize(value=(10, 10, 10), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.rotate(value=2.51565, orient_axis='Z', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.resize(value=(2.09875, 2.09875, 2.09875), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.context.space_data.context = 'MATERIAL'  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[2].default_value = 2.85  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[2].default_value = 2.85  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[2].default_value = 1.325  # Property
bpy.context.object.active_material.preview_render_type = 'FLAT'  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glossy BSDF"].inputs[1].default_value = 0.616667  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[1].default_value = 0  # Property
bpy.context.object.active_material.preview_render_type = 'CUBE'  # Property
bpy.context.space_data.context = 'PHYSICS'  # Property
bpy.context.space_data.context = 'WORLD'  # Property
bpy.ops.image.open(filepath="/home/main/HDRI/16.png", directory="/home/main/HDRI/", files=[{"name":"16.png", "name":"16.png"}], show_multiview=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, 1.45563), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.anim.keyframe_insert_menu(type='LocRotScale')  # Operator
No more keyframes to jump to in this direction  # Info
bpy.ops.action.delete()  # Operator
bpy.ops.transform.translate(value=(0, 0, 1.20461), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.image.open(filepath="/home/main/HDRI/2.png", directory="/home/main/HDRI/", files=[{"name":"2.png", "name":"2.png"}], show_multiview=False)  # Operator
bpy.ops.image.open(filepath="/home/main/HDRI/10.png", directory="/home/main/HDRI/", files=[{"name":"10.png", "name":"10.png"}], show_multiview=False)  # Operator
bpy.ops.object.delete(use_global=False, confirm=False)  # Operator
Deleted 1 object(s)  # Info
No more keyframes to jump to in this direction  # Info
bpy.ops.transform.translate(value=(0, 0, 0.869146), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.anim.keyframe_insert_menu(type='LocRotScale')  # Operator
bpy.context.space_data.context = 'CONSTRAINT'  # Property
bpy.context.space_data.context = 'PHYSICS'  # Property
bpy.ops.object.shade_smooth()  # Operator
bpy.context.space_data.context = 'MATERIAL'  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[0].default_value[3] = 0  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[0].default_value = (0.8, 0.8, 0.8, 0)  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[0].default_value[0] = 0  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[0].default_value[1] = 0  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[0].default_value[2] = 0  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[0].default_value[0] = 1  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[0].default_value[1] = 1  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[0].default_value[2] = 1  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[0].default_value = (1, 1, 1, 0)  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[0].default_value[3] = 1  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[0].default_value = (1, 1, 1, 1)  # Property
bpy.context.space_data.context = 'OUTPUT'  # Property
bpy.context.space_data.context = 'VIEW_LAYER'  # Property
bpy.context.space_data.context = 'OUTPUT'  # Property
bpy.context.space_data.context = 'RENDER'  # Property
bpy.context.scene.render.engine = 'CYCLES'  # Property
bpy.context.scene.cycles_curves.use_curves = False  # Property
bpy.context.scene.cycles.transmission_bounces = 51  # Property
bpy.context.scene.cycles.diffuse_bounces = 4  # Property
bpy.context.scene.cycles.glossy_bounces = 4  # Property
bpy.context.scene.cycles.transmission_bounces = 8  # Property
bpy.context.scene.cycles.volume_bounces = 8  # Property
bpy.context.scene.cycles.diffuse_bounces = 8  # Property
bpy.context.scene.cycles.glossy_bounces = 8  # Property
bpy.context.scene.cycles.diffuse_bounces = 1024  # Property
bpy.context.scene.cycles.glossy_bounces = 1024  # Property
bpy.context.scene.cycles.transmission_bounces = 1024  # Property
bpy.context.scene.cycles.volume_bounces = 1024  # Property
bpy.context.scene.cycles.volume_bounces = 1023  # Property
bpy.context.scene.cycles.volume_bounces = 1022  # Property
bpy.context.scene.cycles.volume_bounces = 1021  # Property
bpy.context.scene.cycles.volume_bounces = 1020  # Property
bpy.context.scene.cycles.volume_bounces = 1019  # Property
bpy.context.scene.cycles.volume_bounces = 1018  # Property
bpy.context.scene.cycles.volume_bounces = 1017  # Property
bpy.context.scene.cycles.volume_bounces = 1016  # Property
bpy.context.scene.cycles.volume_bounces = 1015  # Property
bpy.context.scene.cycles.volume_bounces = 1014  # Property
bpy.context.scene.cycles.volume_bounces = 1013  # Property
bpy.context.scene.cycles.volume_bounces = 1012  # Property
bpy.context.scene.cycles.volume_bounces = 1011  # Property
bpy.context.scene.cycles.volume_bounces = 1010  # Property
bpy.context.scene.cycles.volume_bounces = 1009  # Property
bpy.context.scene.cycles.volume_bounces = 1008  # Property
bpy.context.scene.cycles.volume_bounces = 1007  # Property
bpy.context.scene.cycles.volume_bounces = 1006  # Property
bpy.context.scene.cycles.volume_bounces = 1005  # Property
bpy.context.scene.cycles.volume_bounces = 1004  # Property
bpy.context.scene.cycles.volume_bounces = 1003  # Property
bpy.context.scene.cycles.volume_bounces = 1002  # Property
bpy.context.scene.cycles.volume_bounces = 1001  # Property
bpy.context.scene.cycles.volume_bounces = 1000  # Property
bpy.context.scene.cycles.volume_bounces = 999  # Property
bpy.context.scene.cycles.volume_bounces = 998  # Property
bpy.context.scene.cycles.volume_bounces = 997  # Property
bpy.context.scene.cycles.volume_bounces = 996  # Property
bpy.context.scene.cycles.volume_bounces = 995  # Property
bpy.context.scene.cycles.volume_bounces = 994  # Property
bpy.context.scene.cycles.volume_bounces = 993  # Property
bpy.context.scene.cycles.volume_bounces = 992  # Property
bpy.context.scene.cycles.volume_bounces = 991  # Property
bpy.context.scene.cycles.volume_bounces = 990  # Property
bpy.context.scene.cycles.volume_bounces = 989  # Property
bpy.context.scene.cycles.volume_bounces = 988  # Property
bpy.context.scene.cycles.volume_bounces = 987  # Property
bpy.context.scene.cycles.volume_bounces = 986  # Property
bpy.context.scene.cycles.volume_bounces = 985  # Property
bpy.context.scene.cycles.volume_bounces = 984  # Property
bpy.context.scene.cycles.volume_bounces = 983  # Property
bpy.context.scene.cycles.volume_bounces = 982  # Property
bpy.context.scene.cycles.volume_bounces = 981  # Property
bpy.context.scene.cycles.volume_bounces = 980  # Property
bpy.context.scene.cycles.volume_bounces = 979  # Property
bpy.context.scene.cycles.volume_bounces = 978  # Property
bpy.context.scene.cycles.volume_bounces = 977  # Property
bpy.context.scene.cycles.volume_bounces = 976  # Property
bpy.context.scene.cycles.volume_bounces = 975  # Property
bpy.context.scene.cycles.volume_bounces = 974  # Property
bpy.context.scene.cycles.volume_bounces = 973  # Property
bpy.context.scene.cycles.volume_bounces = 972  # Property
bpy.context.scene.cycles.volume_bounces = 971  # Property
bpy.context.scene.cycles.volume_bounces = 970  # Property
bpy.context.scene.cycles.volume_bounces = 969  # Property
bpy.context.scene.cycles.volume_bounces = 968  # Property
bpy.context.scene.cycles.volume_bounces = 967  # Property
bpy.context.scene.cycles.volume_bounces = 966  # Property
bpy.context.scene.cycles.volume_bounces = 965  # Property
bpy.context.scene.cycles.volume_bounces = 964  # Property
bpy.context.scene.cycles.volume_bounces = 963  # Property
bpy.context.scene.cycles.volume_bounces = 962  # Property
bpy.context.scene.cycles.volume_bounces = 961  # Property
bpy.context.scene.cycles.volume_bounces = 960  # Property
bpy.context.scene.cycles.volume_bounces = 959  # Property
bpy.context.scene.cycles.volume_bounces = 958  # Property
bpy.context.scene.cycles.volume_bounces = 957  # Property
bpy.context.scene.cycles.volume_bounces = 956  # Property
bpy.context.scene.cycles.volume_bounces = 955  # Property
bpy.context.scene.cycles.volume_bounces = 954  # Property
bpy.context.scene.cycles.volume_bounces = 953  # Property
bpy.context.scene.cycles.volume_bounces = 952  # Property
bpy.context.scene.cycles.volume_bounces = 951  # Property
bpy.context.scene.cycles.volume_bounces = 950  # Property
bpy.context.scene.cycles.volume_bounces = 949  # Property
bpy.context.scene.cycles.volume_bounces = 948  # Property
bpy.context.scene.cycles.volume_bounces = 947  # Property
bpy.context.scene.cycles.volume_bounces = 946  # Property
bpy.context.scene.cycles.volume_bounces = 945  # Property
bpy.context.scene.cycles.volume_bounces = 944  # Property
bpy.context.scene.cycles.volume_bounces = 943  # Property
bpy.context.scene.cycles.volume_bounces = 942  # Property
bpy.context.scene.cycles.volume_bounces = 941  # Property
bpy.context.scene.cycles.volume_bounces = 940  # Property
bpy.context.scene.cycles.volume_bounces = 939  # Property
bpy.context.scene.cycles.volume_bounces = 938  # Property
bpy.context.scene.cycles.volume_bounces = 937  # Property
bpy.context.scene.cycles.volume_bounces = 936  # Property
bpy.context.scene.cycles.volume_bounces = 935  # Property
bpy.context.scene.cycles.volume_bounces = 934  # Property
bpy.context.scene.cycles.volume_bounces = 500  # Property
bpy.context.scene.cycles.volume_bounces = 250  # Property
bpy.context.scene.cycles.volume_bounces = 125  # Property
bpy.context.scene.cycles.volume_bounces = 75  # Property
bpy.context.scene.cycles.volume_bounces = 50  # Property
bpy.context.scene.cycles.volume_bounces = 25  # Property
bpy.context.scene.cycles.volume_bounces = 10  # Property
bpy.context.scene.cycles.volume_bounces = 5  # Property
bpy.context.scene.cycles.volume_bounces = 3  # Property
bpy.context.scene.cycles.volume_bounces = 2  # Property
bpy.context.scene.cycles.volume_bounces = 2  # Property
bpy.context.scene.cycles.volume_bounces = 1  # Property
bpy.context.scene.cycles.volume_bounces = 0  # Property
bpy.context.scene.cycles.transmission_bounces = 512  # Property
bpy.context.scene.cycles.transmission_bounces = 256  # Property
bpy.context.scene.cycles.transmission_bounces = 128  # Property
bpy.context.scene.cycles.transmission_bounces = 64  # Property
bpy.context.scene.cycles.transmission_bounces = 32  # Property
bpy.context.scene.cycles.transmission_bounces = 16  # Property
bpy.context.scene.cycles.transmission_bounces = 8  # Property
bpy.context.scene.cycles.transmission_bounces = 4  # Property
bpy.context.scene.cycles.transmission_bounces = 2  # Property
bpy.context.scene.cycles.transmission_bounces = 1  # Property
bpy.context.scene.cycles.transmission_bounces = 0  # Property
bpy.context.scene.cycles.transmission_bounces = 1  # Property
bpy.context.scene.cycles.transparent_max_bounces = 512  # Property
bpy.context.scene.cycles.transparent_max_bounces = 256  # Property
bpy.context.scene.cycles.transparent_max_bounces = 128  # Property
bpy.context.scene.cycles.transparent_max_bounces = 64  # Property
bpy.context.scene.cycles.transparent_max_bounces = 32  # Property
bpy.context.scene.cycles.transparent_max_bounces = 16  # Property
bpy.context.scene.cycles.transparent_max_bounces = 8  # Property
bpy.context.scene.cycles.transparent_max_bounces = 4  # Property
bpy.context.scene.cycles.transparent_max_bounces = 2  # Property
bpy.context.scene.cycles.transparent_max_bounces = 1  # Property
bpy.context.scene.cycles.transparent_max_bounces = 0  # Property
bpy.context.scene.cycles.transparent_max_bounces = 1  # Property
bpy.context.scene.cycles.transparent_max_bounces = 2  # Property
bpy.context.scene.cycles.transparent_max_bounces = 3  # Property
bpy.context.scene.cycles.transparent_max_bounces = 4  # Property
bpy.context.scene.cycles.transparent_max_bounces = 5  # Property
bpy.context.scene.cycles.transparent_max_bounces = 5  # Property
bpy.context.scene.cycles.transparent_max_bounces = 4  # Property
bpy.context.scene.cycles.transparent_max_bounces = 3  # Property
bpy.context.scene.cycles.transparent_max_bounces = 2  # Property
bpy.context.scene.cycles.transparent_max_bounces = 1  # Property
bpy.context.scene.cycles.transparent_max_bounces = 0  # Property
bpy.context.scene.cycles.transparent_max_bounces = 1  # Property
bpy.context.scene.cycles.transparent_max_bounces = 2  # Property
bpy.context.scene.cycles.transparent_max_bounces = 3  # Property
bpy.context.scene.cycles.transparent_max_bounces = 4  # Property
bpy.context.scene.cycles.transparent_max_bounces = 3  # Property
bpy.ops.transform.translate(value=(0, 0, 0.658089), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.context.scene.cycles.glossy_bounces = 1024  # Property
bpy.context.scene.cycles.glossy_bounces = 1024  # Property
bpy.context.scene.cycles.glossy_bounces = 512  # Property
bpy.context.scene.cycles.glossy_bounces = 256  # Property
bpy.context.scene.cycles.glossy_bounces = 128  # Property
bpy.context.scene.cycles.glossy_bounces = 64  # Property
bpy.context.scene.cycles.glossy_bounces = 32  # Property
bpy.context.scene.cycles.glossy_bounces = 16  # Property
bpy.context.scene.cycles.glossy_bounces = 8  # Property
bpy.context.scene.cycles.glossy_bounces = 4  # Property
bpy.context.scene.cycles.glossy_bounces = 3  # Property
bpy.context.scene.cycles.glossy_bounces = 2  # Property
bpy.context.scene.cycles.glossy_bounces = 1  # Property
bpy.context.scene.cycles.glossy_bounces = 4  # Property
bpy.context.scene.cycles.glossy_bounces = 1  # Property
bpy.context.scene.cycles.glossy_bounces = 0  # Property
bpy.context.scene.cycles.glossy_bounces = 1  # Property
bpy.context.scene.cycles.glossy_bounces = 2  # Property
bpy.context.scene.cycles.glossy_bounces = 3  # Property
bpy.context.scene.cycles.diffuse_bounces = 512  # Property
bpy.context.scene.cycles.diffuse_bounces = 256  # Property
bpy.context.scene.cycles.diffuse_bounces = 128  # Property
bpy.context.scene.cycles.diffuse_bounces = 64  # Property
bpy.context.scene.cycles.max_bounces = 1024  # Property
bpy.context.scene.cycles.diffuse_bounces = 32  # Property
bpy.context.scene.cycles.diffuse_bounces = 16  # Property
bpy.context.scene.cycles.diffuse_bounces = 8  # Property
bpy.context.scene.cycles.diffuse_bounces = 4  # Property
bpy.context.scene.cycles.diffuse_bounces = 3  # Property
bpy.context.scene.cycles.diffuse_bounces = 2  # Property
bpy.context.scene.cycles.diffuse_bounces = 1  # Property
bpy.context.scene.cycles.diffuse_bounces = 0  # Property
bpy.context.scene.cycles.max_bounces = 512  # Property
bpy.context.scene.cycles.max_bounces = 256  # Property
bpy.context.scene.cycles.max_bounces = 128  # Property
bpy.context.scene.cycles.max_bounces = 64  # Property
bpy.context.scene.cycles.max_bounces = 32  # Property
bpy.context.scene.cycles.max_bounces = 16  # Property
bpy.context.scene.cycles.max_bounces = 8  # Property
bpy.context.scene.cycles.max_bounces = 4  # Property
bpy.context.scene.cycles.max_bounces = 3  # Property
bpy.context.scene.cycles.max_bounces = 2  # Property
bpy.context.scene.cycles.max_bounces = 1  # Property
bpy.context.scene.cycles.max_bounces = 2  # Property
bpy.context.scene.render.engine = 'BLENDER_EEVEE'  # Property
bpy.context.scene.render.engine = 'CYCLES'  # Property
bpy.context.scene.render.engine = 'BLENDER_EEVEE'  # Property
bpy.context.scene.render.engine = 'CYCLES'  # Property
bpy.context.area.ui_type = 'INFO'  # Property
bpy.context.scene.cycles.max_bounces = 2  # Property
bpy.context.scene.cycles.diffuse_bounces = 0  # Property
bpy.context.scene.cycles.glossy_bounces = 3  # Property
bpy.context.scene.cycles.transparent_max_bounces = 3  # Property
bpy.context.scene.cycles.transmission_bounces = 1  # Property
bpy.context.scene.cycles.volume_bounces = 0  # Property
bpy.context.area.ui_type = 'CONSOLE'  # Property
bpy.context.area.ui_type = 'VIEW_3D'  # Property
bpy.context.space_data.context = 'WORLD'  # Property
bpy.ops.image.open(filepath="/home/main/HDRI/17.png", directory="/home/main/HDRI/", files=[{"name":"17.png", "name":"17.png"}], show_multiview=False)  # Operator
bpy.ops.image.open(filepath="/home/main/HDRI/16.png", directory="/home/main/HDRI/", files=[{"name":"16.png", "name":"16.png"}], show_multiview=False)  # Operator
bpy.context.space_data.context = 'RENDER'  # Property
bpy.context.scene.render.engine = 'BLENDER_EEVEE'  # Property
bpy.context.scene.render.engine = 'CYCLES'  # Property
bpy.context.space_data.context = 'WORLD'  # Property
bpy.ops.image.open(filepath="/home/main/HDRI/15.png", directory="/home/main/HDRI/", files=[{"name":"15.png", "name":"15.png"}], show_multiview=False)  # Operator
bpy.ops.image.open(filepath="/home/main/HDRI/14.png", directory="/home/main/HDRI/", files=[{"name":"14.png", "name":"14.png"}], show_multiview=False)  # Operator
bpy.ops.image.open(filepath="/home/main/HDRI/13.png", directory="/home/main/HDRI/", files=[{"name":"13.png", "name":"13.png"}], show_multiview=False)  # Operator
bpy.ops.image.open(filepath="/home/main/HDRI/12.png", directory="/home/main/HDRI/", files=[{"name":"12.png", "name":"12.png"}], show_multiview=False)  # Operator
bpy.ops.transform.translate(value=(1.97595, 2.2746, -3.01531), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.image.open(filepath="/home/main/HDRI/11.png", directory="/home/main/HDRI/", files=[{"name":"11.png", "name":"11.png"}], show_multiview=False)  # Operator
bpy.context.scene.frame_current = 100  # Property
bpy.ops.action.delete()  # Operator
bpy.context.scene.frame_current = 100  # Property
No more keyframes to jump to in this direction  # Info
No more keyframes to jump to in this direction  # Info
No more keyframes to jump to in this direction  # Info
bpy.context.scene.frame_current = 0  # Property
bpy.context.scene.frame_current = 100  # Property
bpy.ops.object.select_all(action='SELECT')  # Operator
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.object.origin_set(type='GEOMETRY_ORIGIN', center='MEDIAN')  # Operator
bpy.ops.transform.translate(value=(2.71774, 0.177843, -3.58015), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(-1.0907, 1.19357, 2.07551), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(-0.188815, 0.893985, -1.6403), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0.528906, -0.401556, -0.723775), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, 1.03064), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(2.19672, 2.57386, -1.1736), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, -0.831016), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, -0.706866), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(1.74267, -0.119353, -1.15149), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, -1.6355), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 2.02259, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, -0.313047), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, 0.247957), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.image.open(filepath="/home/main/HDRI/10.png", directory="/home/main/HDRI/", files=[{"name":"10.png", "name":"10.png"}], show_multiview=False)  # Operator
bpy.ops.anim.keyframe_insert_menu(type='LocRotScale')  # Operator
bpy.ops.transform.translate(value=(0, 0, -3.88997), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(1.67708, -0.164433, 0.0266172), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 3.49576, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.anim.keyframe_insert_menu(type='LocRotScale')  # Operator
bpy.ops.image.open(filepath="/home/main/HDRI/2.png", directory="/home/main/HDRI/", files=[{"name":"2.png", "name":"2.png"}], show_multiview=False)  # Operator
bpy.ops.transform.translate(value=(0, 1.13347, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, -1.92909, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, 1.0236), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.anim.keyframe_insert_menu(type='LocRotScale')  # Operator
bpy.ops.image.open(filepath="/home/main/HDRI/0.png", directory="/home/main/HDRI/", files=[{"name":"0.png", "name":"0.png"}], show_multiview=False)  # Operator
bpy.context.space_data.context = 'OUTPUT'  # Property
bpy.context.space_data.context = 'OUTPUT'  # Property
bpy.context.space_data.context = 'RENDER'  # Property
bpy.context.space_data.context = 'OUTPUT'  # Property
bpy.context.space_data.context = 'RENDER'  # Property
bpy.context.scene.render.engine = 'BLENDER_EEVEE'  # Property
bpy.context.space_data.context = 'PHYSICS'  # Property
bpy.ops.transform.translate(value=(0, 0, -3.59171), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, 1.23188), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 3.27582, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(3.65858, 0, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.anim.keyframe_insert_menu(type='LocRotScale')  # Operator
bpy.ops.action.delete()  # Operator
bpy.ops.action.delete()  # Operator
bpy.ops.transform.translate(value=(0, 8.68713, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, -5.45412), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0.436499, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(-1.98805, 0, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, 0.580133), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.anim.keyframe_insert_menu(type='LocRotScale')  # Operator
bpy.context.scene.frame_current = 125  # Property
bpy.ops.transform.translate(value=(0, 0, -2.60318), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, -0.187141), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(-1.67806, 0, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, -1.10655, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.anim.keyframe_insert_menu(type='LocRotScale')  # Operator
bpy.ops.transform.rotate(value=6.28319, orient_axis='Z', orient_type='VIEW', orient_matrix=((-0.0435276, 0.999052, -9.87202e-07), (-0.11809, -0.00514617, -0.99299), (0.992049, 0.0432222, -0.118203)), orient_matrix_type='VIEW', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.anim.keyframe_insert_menu(type='LocRotScale')  # Operator
bpy.ops.transform.rotate(value=6.28319, orient_axis='Z', orient_type='VIEW', orient_matrix=((-0.0435276, 0.999052, -9.87202e-07), (-0.11809, -0.00514617, -0.99299), (0.992049, 0.0432222, -0.118203)), orient_matrix_type='VIEW', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.anim.keyframe_insert_menu(type='LocRotScale')  # Operator
bpy.ops.transform.rotate(value=6.28319, orient_axis='Z', orient_type='VIEW', orient_matrix=((-0.0435276, 0.999052, -9.87202e-07), (-0.11809, -0.00514617, -0.99299), (0.992049, 0.0432222, -0.118203)), orient_matrix_type='VIEW', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.anim.keyframe_insert_menu(type='LocRotScale')  # Operator
bpy.context.space_data.context = 'PHYSICS'  # Property
bpy.context.space_data.context = 'MATERIAL'  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[2].default_value = 1.52  # Property
('unexpected indent', ('<string>', 1, 1, ' 1.2053'))  # Error
('unexpected indent', ('<string>', 1, 1, ' 1.2053'))  # Error
('unexpected indent', ('<string>', 1, 1, ' 1.205'))  # Error
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[2].default_value = 1.2053  # Property
bpy.context.scene.use_preview_range = True  # Property
bpy.context.scene.use_preview_range = False  # Property
bpy.ops.transform.translate(value=(0, 0.0976391, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(5.00888, 0, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, -0.836084), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.context.space_data.context = 'MATERIAL'  # Property
('unexpected indent', ('<string>', 1, 1, ' 1.329'))  # Error
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[2].default_value = 1.329  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[2].default_value = 2.417  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[1].default_value = 0  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[2].default_value = 1.362  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[2].default_value = 1.363  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[0].default_value = (1, 1, 1, 1)  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[0].default_value = (0.520996, 0.527115, 0.854993, 1)  # Property
bpy.context.space_data.context = 'OUTPUT'  # Property
bpy.context.space_data.context = 'VIEW_LAYER'  # Property
bpy.context.space_data.context = 'RENDER'  # Property
bpy.context.scene.render.engine = 'BLENDER_WORKBENCH'  # Property
bpy.context.space_data.context = 'MATERIAL'  # Property
bpy.context.object.active_material.roughness = 0  # Property
bpy.context.object.active_material.diffuse_color = (0.8, 0.8, 0.8, 1)  # Property
bpy.context.object.active_material.diffuse_color[3] = 0.55  # Property
bpy.context.object.active_material.diffuse_color = (0.8, 0.8, 0.8, 0.55)  # Property
bpy.context.object.active_material.diffuse_color = (0.496933, 1, 0.603827, 0.55)  # Property
bpy.context.object.active_material.metallic = 1  # Property
bpy.context.object.active_material.roughness = 0  # Property
bpy.context.object.active_material.metallic = 0  # Property
bpy.context.object.active_material.diffuse_color = (0.8, 0.0678915, 0.0854727, 1)  # Property
bpy.context.object.active_material.diffuse_color = (0.8, 0.0678915, 0.0854727, 1)  # Property
bpy.context.object.active_material.roughness = 0  # Property
bpy.context.object.active_material.metallic = 1  # Property
bpy.context.object.active_material.diffuse_color[3] = 0.278571  # Property
bpy.context.object.active_material.diffuse_color = (0.496933, 1, 0.603828, 0.278571)  # Property
bpy.context.object.active_material.diffuse_color[3] = 0.128571  # Property
bpy.context.object.active_material.diffuse_color = (0.496933, 1, 0.603828, 0.128571)  # Property
bpy.context.object.active_material.metallic = 1  # Property
bpy.context.object.active_material.diffuse_color[3] = 0.528571  # Property
bpy.context.object.active_material.diffuse_color = (0.496933, 1, 0.603828, 0.528571)  # Property
bpy.context.object.active_material.diffuse_color[3] = 0.8  # Property
bpy.context.object.active_material.diffuse_color = (0.496933, 1, 0.603828, 0.8)  # Property
bpy.ops.object.shade_flat()  # Operator
bpy.ops.object.shade_smooth()  # Operator
bpy.context.object.active_material.diffuse_color[3] = 0  # Property
bpy.context.object.active_material.diffuse_color = (0.8, 0.8, 0.8, 0)  # Property
bpy.context.object.active_material.diffuse_color[0] = 0  # Property
bpy.context.object.active_material.diffuse_color[1] = 0  # Property
bpy.context.object.active_material.diffuse_color[3] = 0  # Property
bpy.context.object.active_material.diffuse_color[2] = 0  # Property
bpy.context.object.active_material.diffuse_color = (0, 0, 0, 0)  # Property
bpy.context.space_data.context = 'RENDER'  # Property
bpy.context.scene.render.engine = 'CYCLES'  # Property
bpy.context.scene.render.engine = 'BLENDER_EEVEE'  # Property
bpy.context.space_data.context = 'MATERIAL'  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Transparent BSDF"].inputs[0].default_value[3] = 0.8  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Transparent BSDF"].inputs[0].default_value = (1, 1, 1, 0.8)  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Transparent BSDF"].inputs[0].default_value[3] = 0  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Transparent BSDF"].inputs[0].default_value[2] = 0  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Transparent BSDF"].inputs[0].default_value[1] = 0  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Transparent BSDF"].inputs[0].default_value[0] = 1  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Transparent BSDF"].inputs[0].default_value[1] = 1  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Transparent BSDF"].inputs[0].default_value[2] = 1  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Transparent BSDF"].inputs[0].default_value = (1, 1, 1, 0)  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[0].default_value[3] = 0.8  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[0].default_value = (0.520996, 0.527115, 0.854993, 0.8)  # Property
bpy.context.space_data.context = 'VIEW_LAYER'  # Property
bpy.context.space_data.context = 'OUTPUT'  # Property
bpy.context.space_data.context = 'OUTPUT'  # Property
bpy.context.space_data.context = 'RENDER'  # Property
bpy.context.scene.render.engine = 'CYCLES'  # Property
bpy.context.space_data.context = 'MATERIAL'  # Property
bpy.context.object.active_material.diffuse_color = (0.496933, 1, 0.603827, 0.8)  # Property
bpy.context.object.active_material.metallic = 0  # Property
bpy.context.object.active_material.diffuse_color = (0.496933, 1, 0.603827, 0.8)  # Property
bpy.context.object.active_material.diffuse_color[3] = 0.8  # Property
bpy.context.object.active_material.diffuse_color = (0.520996, 0.527115, 0.854993, 0.8)  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Transparent BSDF"].inputs[0].default_value[3] = 0.8  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Transparent BSDF"].inputs[0].default_value = (0.496933, 1, 0.603827, 0.8)  # Property
bpy.context.object.active_material.diffuse_color = (0.520996, 0.527115, 0.854993, 0.8)  # Property
bpy.context.object.active_material.diffuse_color = (0.520996, 0.527115, 0.854993, 0.8)  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Transparent BSDF"].inputs[0].default_value = (0.496933, 1, 0.603827, 0.8)  # Property
bpy.context.object.active_material.diffuse_color = (0.520996, 0.527115, 0.854993, 0.8)  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Transparent BSDF"].inputs[0].default_value[1] = 0.985714  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Transparent BSDF"].inputs[0].default_value = (0.496933, 0.985714, 0.603827, 0.8)  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Transparent BSDF"].inputs[0].default_value = (0.0561283, 0.545725, 0.212231, 0.8)  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Transparent BSDF"].inputs[0].default_value = (0.520996, 0.527115, 0.854993, 0.8)  # Property
bpy.context.object.active_material.diffuse_color = (0.767336, 0.685158, 0.854993, 0.8)  # Property
bpy.context.object.active_material.diffuse_color = (0.801535, 0.798353, 0.854993, 0.8)  # Property
bpy.context.object.active_material.diffuse_color[2] = 2  # Property
bpy.context.object.active_material.diffuse_color[1] = 2  # Property
bpy.context.object.active_material.diffuse_color[0] = 2  # Property
bpy.context.object.active_material.diffuse_color = (2, 2, 2, 0.8)  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Transparent BSDF"].inputs[0].default_value[2] = 1  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Transparent BSDF"].inputs[0].default_value[1] = 1  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Transparent BSDF"].inputs[0].default_value[0] = 1  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Transparent BSDF"].inputs[0].default_value = (1, 1, 1, 0.8)  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[0].default_value[0] = 1  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[0].default_value[2] = 1  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[0].default_value = (1, 1, 1, 0.8)  # Property
bpy.context.object.active_material.diffuse_color[0] = 1  # Property
bpy.context.object.active_material.diffuse_color[2] = 1  # Property
bpy.context.object.active_material.diffuse_color = (1, 1, 1, 0.8)  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[0].default_value = (0.0512693, 0.371238, 0.737911, 0.8)  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[0].default_value = (0.174647, 0.603827, 0.904661, 0.8)  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[0].default_value[0] = 1  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[0].default_value = (1, 0.603827, 0.904661, 0.8)  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[0].default_value[1] = 1  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[0].default_value = (1, 1, 0.904661, 0.8)  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[0].default_value[1] = 1  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[0].default_value[2] = 1  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[0].default_value = (1, 1, 1, 0.8)  # Property
bpy.context.object.active_material.metallic = 0  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Glass BSDF"].inputs[2].default_value = 1.33283  # Property
bpy.context.space_data.context = 'WORLD'  # Property
bpy.ops.image.open(filepath="/home/main/HDRI/17.png", directory="/home/main/HDRI/", files=[{"name":"17.png", "name":"17.png"}], show_multiview=False)  # Operator
bpy.ops.image.open(filepath="/home/main/HDRI/0.png", directory="/home/main/HDRI/", files=[{"name":"0.png", "name":"0.png"}], show_multiview=False)  # Operator
bpy.ops.image.open(filepath="/home/main/HDRI/1.png", directory="/home/main/HDRI/", files=[{"name":"1.png", "name":"1.png"}], show_multiview=False)  # Operator
bpy.data.node_groups["Shader Nodetree"].nodes["Background"].inputs[1].default_value = 9.5  # Property
bpy.data.node_groups["Shader Nodetree"].nodes["Background"].inputs[1].default_value = 1  # Property
bpy.ops.image.open(filepath="/home/main/HDRI/2.png", directory="/home/main/HDRI/", files=[{"name":"2.png", "name":"2.png"}], show_multiview=False)  # Operator
bpy.ops.transform.rotate(value=-0.460797, orient_axis='Z', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.image.open(filepath="/home/main/HDRI/3.png", directory="/home/main/HDRI/", files=[{"name":"3.png", "name":"3.png"}], show_multiview=False)  # Operator
bpy.ops.image.open(filepath="/home/main/HDRI/4.png", directory="/home/main/HDRI/", files=[{"name":"4.png", "name":"4.png"}], show_multiview=False)  # Operator
bpy.ops.image.open(filepath="/home/main/HDRI/0.png", directory="/home/main/HDRI/", files=[{"name":"0.png", "name":"0.png"}], show_multiview=False)  # Operator
bpy.data.node_groups["Shader Nodetree"].nodes["Background"].inputs[1].default_value = 9.4  # Property
bpy.ops.image.open(filepath="/home/main/HDRI/1.png", directory="/home/main/HDRI/", files=[{"name":"1.png", "name":"1.png"}], show_multiview=False)  # Operator
bpy.data.node_groups["Shader Nodetree"].nodes["Background"].inputs[1].default_value = 10  # Property
bpy.context.scene.world.light_settings.use_ambient_occlusion = True  # Property
bpy.context.scene.world.light_settings.use_ambient_occlusion = False  # Property
bpy.ops.image.open(filepath="/home/main/HDRI/2.png", directory="/home/main/HDRI/", files=[{"name":"2.png", "name":"2.png"}], show_multiview=False)  # Operator
bpy.ops.image.open(filepath="/home/main/HDRI/3.png", directory="/home/main/HDRI/", files=[{"name":"3.png", "name":"3.png"}], show_multiview=False)  # Operator
bpy.ops.image.open(filepath="/home/main/HDRI/4.png", directory="/home/main/HDRI/", files=[{"name":"4.png", "name":"4.png"}], show_multiview=False)  # Operator
bpy.ops.image.open(filepath="/home/main/HDRI/5.png", directory="/home/main/HDRI/", files=[{"name":"5.png", "name":"5.png"}], show_multiview=False)  # Operator
bpy.ops.image.open(filepath="/home/main/HDRI/6.png", directory="/home/main/HDRI/", files=[{"name":"6.png", "name":"6.png"}], show_multiview=False)  # Operator
bpy.ops.image.open(filepath="/home/main/HDRI/7.png", directory="/home/main/HDRI/", files=[{"name":"7.png", "name":"7.png"}], show_multiview=False)  # Operator
bpy.ops.transform.rotate(value=-0.817026, orient_axis='Z', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.rotate(value=-0.148582, orient_axis='Z', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.image.open(filepath="/home/main/HDRI/8.png", directory="/home/main/HDRI/", files=[{"name":"8.png", "name":"8.png"}], show_multiview=False)  # Operator
bpy.ops.transform.rotate(value=0.607602, orient_axis='Z', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.context.space_data.context = 'MATERIAL'  # Property
bpy.context.space_data.context = 'TOOL'  # Property
bpy.context.space_data.context = 'RENDER'  # Property
bpy.context.scene.cycles.transmission_bounces = 2  # Property
bpy.context.scene.cycles.transmission_bounces = 1  # Property
bpy.context.scene.cycles.transparent_max_bounces = 4  # Property
bpy.context.scene.cycles.transparent_max_bounces = 4  # Property
bpy.context.scene.cycles.transparent_max_bounces = 3  # Property
bpy.context.scene.cycles.max_bounces = 19  # Property
bpy.context.scene.cycles.max_bounces = 18  # Property
bpy.context.scene.cycles.max_bounces = 17  # Property
bpy.context.scene.cycles.max_bounces = 16  # Property
bpy.context.scene.cycles.max_bounces = 15  # Property
bpy.context.scene.cycles.max_bounces = 14  # Property
bpy.context.scene.cycles.max_bounces = 13  # Property
bpy.context.scene.cycles.max_bounces = 12  # Property
bpy.context.scene.cycles.max_bounces = 11  # Property
bpy.context.scene.cycles.max_bounces = 10  # Property
bpy.context.scene.cycles.max_bounces = 9  # Property
bpy.context.scene.cycles.max_bounces = 8  # Property
bpy.context.scene.cycles.max_bounces = 7  # Property
bpy.context.scene.cycles.max_bounces = 6  # Property
bpy.context.scene.cycles.max_bounces = 5  # Property
bpy.context.scene.cycles.max_bounces = 4  # Property
bpy.context.scene.cycles.max_bounces = 3  # Property
bpy.context.scene.cycles.max_bounces = 2  # Property
bpy.context.scene.cycles.max_bounces = 3  # Property
bpy.context.scene.cycles.transparent_max_bounces = 4  # Property
bpy.context.scene.cycles.transparent_max_bounces = 5  # Property
bpy.context.scene.cycles.transparent_max_bounces = 4  # Property
bpy.context.scene.cycles.transparent_max_bounces = 3  # Property
bpy.context.scene.cycles.transmission_bounces = 2  # Property
bpy.context.scene.cycles.transmission_bounces = 3  # Property
bpy.context.scene.cycles.transmission_bounces = 4  # Property
bpy.context.scene.cycles.transmission_bounces = 3  # Property
bpy.context.scene.cycles.transmission_bounces = 2  # Property
bpy.context.scene.cycles.transmission_bounces = 1  # Property
bpy.context.scene.cycles.transmission_bounces = 0  # Property
bpy.context.scene.cycles.transmission_bounces = 1  # Property
bpy.context.area.ui_type = 'INFO'  # Property
bpy.context.scene.cycles.max_bounces = 3  # Property
bpy.context.scene.cycles.transmission_bounces = 1  # Property
bpy.context.area.ui_type = 'VIEW_3D'  # Property
bpy.context.scene.cycles.diffuse_bounces = 3  # Property
bpy.context.scene.render.engine = 'BLENDER_WORKBENCH'  # Property
bpy.context.scene.render.engine = 'BLENDER_EEVEE'  # Property
bpy.context.space_data.context = 'PHYSICS'  # Property
bpy.context.object.modifiers["Fluidsim"].settings.resolution = 1000  # Property
bpy.context.object.modifiers["Fluidsim"].settings.resolution = 500  # Property
bpy.context.object.modifiers["Fluidsim"].settings.resolution = 250  # Property
bpy.context.object.modifiers["Fluidsim"].settings.preview_resolution = 100  # Property
bpy.context.object.modifiers["Fluidsim"].settings.viewport_display_mode = 'FINAL'  # Property
bpy.context.scene.tool_settings.use_keyframe_insert_auto = True  # Property
bpy.context.space_data.context = 'CONSTRAINT'  # Property
bpy.context.space_data.context = 'PHYSICS'  # Property
bpy.context.object.modifiers["Fluidsim"].settings.viewport_display_mode = 'GEOMETRY'  # Property
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.ops.transform.resize(value=(1, 1.87381, 1), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.resize(value=(1, 1, 1.28149), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.resize(value=(0.866743, 0.866743, 0.866743), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, 2.87847), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.resize(value=(1, 1, 0.183555), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, -1.88852), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, 0.0304601), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.resize(value=(1, 1, 2.7609), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, 0.67012), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.resize(value=(1, 1, 1.36542), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, 0.12184), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.resize(value=(1, 1, 1.09842), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.resize(value=(1, 1.00964, 1), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.data.screens["Layout"].shading.type = 'WIREFRAME'  # Property
bpy.ops.transform.translate(value=(0, 0, 2.65002), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.resize(value=(0.390983, 1, 1), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0.10661, 0, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 1.83943, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.anim.keyframe_insert_menu(type='LocRotScale')  # Operator
bpy.ops.transform.translate(value=(0, 10.1017, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, -7.28993, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(2.76333, 0, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, 1.51874), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.rotate(value=6.28319, orient_axis='Z', orient_type='VIEW', orient_matrix=((-0.69814, -0.715961, 7.45058e-09), (0.0919581, -0.0896692, -0.991717), (-0.710031, 0.692358, -0.12844)), orient_matrix_type='VIEW', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.anim.keyframe_insert_menu(type='LocRotScale')  # Operator
bpy.ops.transform.translate(value=(2.15803, 0, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, 1.60536), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.rotate(value=6.28319, orient_axis='Z', orient_type='VIEW', orient_matrix=((-1, 0, 0), (0, 1.34359e-07, -1), (-0, 1, 1.34359e-07)), orient_matrix_type='VIEW', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.rotate(value=0.990329, orient_axis='Y', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.anim.keyframe_insert_menu(type='LocRotScale')  # Operator
bpy.ops.transform.rotate(value=-1.25039, orient_axis='Y', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.rotate(value=1.32207, orient_axis='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.rotate(value=0.781985, orient_axis='Z', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.anim.keyframe_insert_menu(type='LocRotScale')  # Operator
bpy.ops.transform.rotate(value=-1.43617, orient_axis='Z', orient_type='VIEW', orient_matrix=((-1, 0, 0), (0, 1.34359e-07, -1), (-0, 1, 1.34359e-07)), orient_matrix_type='VIEW', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.rotate(value=0.910945, orient_axis='Z', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.anim.keyframe_insert_menu(type='LocRotScale')  # Operator
bpy.context.scene.tool_settings.use_keyframe_insert_auto = False  # Property
bpy.ops.object.shade_flat()  # Operator
bpy.data.screens["Layout"].shading.type = 'RENDERED'  # Property
bpy.ops.anim.keyframe_insert_menu(type='LocRotScale')  # Operator
bpy.ops.object.shade_smooth()  # Operator
bpy.ops.anim.keyframe_insert_menu(type='LocRotScale')  # Operator
bpy.data.screens["Layout"].shading.type = 'WIREFRAME'  # Property
bpy.ops.object.shade_flat()  # Operator
bpy.data.screens["Layout"].shading.type = 'RENDERED'  # Property
bpy.ops.transform.translate(value=(0.150877, 0, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.anim.keyframe_insert_menu(type='LocRotScale')  # Operator
bpy.ops.transform.translate(value=(0.160906, 0.919277, 1.39324), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.object.hide_view_set(unselected=True)  # Operator
bpy.data.objects["Cube"].(null) = False  # Property
bpy.data.objects["Cube.001"].(null) = False  # Property
bpy.data.objects["Sphere"].(null) = False  # Property
bpy.ops.transform.translate(value=(0, 0, 0.182921), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, -0.0200601, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, -0.0587111), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.rotate(value=-0.225986, orient_axis='Z', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.rotate(value=0.010812, orient_axis='Y', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(-3.93485, 0, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.rotate(value=-0.021327, orient_axis='X', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, 2.78315), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.context.space_data.context = 'CONSTRAINT'  # Property
bpy.context.space_data.context = 'PHYSICS'  # Property
bpy.ops.object.hide_view_set(unselected=True)  # Operator
bpy.data.objects["Cube"].(null) = False  # Property
bpy.data.objects["Cube.001"].(null) = False  # Property
bpy.data.objects["Sphere"].(null) = False  # Property
bpy.context.object.modifiers["Fluidsim"].settings.render_display_mode = 'PREVIEW'  # Property
bpy.context.object.modifiers["Fluidsim"].settings.render_display_mode = 'FINAL'  # Property
bpy.context.object.modifiers["Fluidsim"].settings.viewport_display_mode = 'FINAL'  # Property
bpy.context.object.modifiers["Fluidsim"].settings.viewport_display_mode = 'GEOMETRY'  # Property
bpy.ops.transform.translate(value=(4.05962, 4.10231, 0.0245513), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.anim.keyframe_insert_menu(type='LocRotScale')  # Operator
bpy.ops.transform.translate(value=(-0.312315, -0.219099, 0.312908), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(-0.0248304, 0.166385, -0.0842826), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0.0237063, 0.0687748, -0.0783366), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0.614725, -0.697579, 0.0938445), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, -0.480182), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0.08721, -0.0159789, -0.0577712), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(-0.260454, 0.26115, 0.324637), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, 0.085032), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0.0191556, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(-0.0381751, 0, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.anim.keyframe_insert_menu(type='LocRotScale')  # Operator
bpy.context.object.modifiers["Fluidsim"].settings.viewport_display_mode = 'PREVIEW'  # Property
bpy.context.space_data.context = 'RENDER'  # Property
bpy.context.scene.render.engine = 'CYCLES'  # Property
bpy.context.scene.cycles.max_bounces = 4  # Property
bpy.context.scene.cycles.max_bounces = 3  # Property
bpy.context.scene.cycles.transparent_max_bounces = 4  # Property
bpy.context.scene.render.engine = 'BLENDER_EEVEE'  # Property
bpy.context.scene.render.engine = 'BLENDER_WORKBENCH'  # Property
bpy.context.space_data.context = 'MATERIAL'  # Property
bpy.context.space_data.context = 'RENDER'  # Property
bpy.context.scene.render.engine = 'BLENDER_EEVEE'  # Property
bpy.context.scene.render.engine = 'BLENDER_WORKBENCH'  # Property
bpy.context.space_data.context = 'MATERIAL'  # Property
bpy.context.object.active_material.diffuse_color[3] = 0  # Property
bpy.context.object.active_material.diffuse_color = (2, 2, 2, 0)  # Property
bpy.context.object.active_material.diffuse_color[2] = 0  # Property
bpy.context.object.active_material.diffuse_color[1] = 0  # Property
bpy.context.object.active_material.diffuse_color[0] = 0  # Property
bpy.context.object.active_material.diffuse_color = (0, 0, 0, 0)  # Property
bpy.context.object.active_material.metallic = 1  # Property
bpy.context.object.active_material.diffuse_color = (1, 1, 1, 0.8)  # Property
bpy.context.object.active_material.diffuse_color = (0.537649, 0.831896, 1, 0.8)  # Property
bpy.context.object.active_material.diffuse_color = (0.537649, 0.831896, 1, 0.8)  # Property
bpy.context.object.active_material.diffuse_color = (0.838799, 1, 0.921582, 0.8)  # Property
bpy.context.object.active_material.metallic = 1  # Property
bpy.context.space_data.context = 'RENDER'  # Property
bpy.context.scene.shading.show_backface_culling = True  # Property
bpy.context.scene.shading.show_shadows = True  # Property
bpy.context.scene.shading.show_xray = True  # Property
bpy.context.scene.render.engine = 'BLENDER_EEVEE'  # Property
bpy.context.scene.eevee.use_volumetric_shadows = True  # Property
bpy.context.scene.eevee.use_soft_shadows = True  # Property
bpy.context.scene.eevee.use_shadow_high_bitdepth = True  # Property
bpy.ops.transform.translate(value=(0, -2.36285, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(-3.39852, 0, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 1.21333, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0.868058, 0, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.context.space_data.context = 'PHYSICS'  # Property
bpy.ops.transform.translate(value=(0, 0, 0.350425), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.object.shade_smooth()  # Operator
bpy.data.screens["Layout"].shading.type = 'MATERIAL'  # Property
bpy.data.screens["Layout"].shading.type = 'SOLID'  # Property
bpy.ops.transform.translate(value=(0, 0, -1), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.anim.keyframe_insert_menu(type='LocRotScale')  # Operator
bpy.context.object.modifiers["Fluidsim"].settings.viewport_display_mode = 'GEOMETRY'  # Property
bpy.data.screens["Layout"].shading.type = 'WIREFRAME'  # Property
bpy.ops.transform.translate(value=(0.243966, 0, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.resize(value=(1.03861, 1.03861, 1.03861), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(-0.0484874, 0.0467347, 0.0459891), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.resize(value=(0.796246, 0.796246, 0.796246), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(-0.348853, 0.0581421, -0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, -0.0581421, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.resize(value=(1.27756, 1, 1), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0.087213, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.resize(value=(1, 1.11806, 1), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.resize(value=(0.974374, 0.974374, 0.974374), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0.394784, -0.099881, -0.219763), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.resize(value=(1.04833, 1.04833, 1.04833), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(-0.849938, 0, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0.55235, 0, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, -0.256558, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.resize(value=(1, 0.745829, 1), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0.04047, -0.0238774, -0.174389), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.resize(value=(1, 1.31626, 1), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(-0.0145355, 0.232568, -0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.resize(value=(1, 1.02431, 1), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.resize(value=(0.804942, 1, 1), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.resize(value=(1, 1.20067, 1), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.resize(value=(0.894022, 1, 1), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.resize(value=(1, 0.927819, 1), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, 0.171542), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.context.scene.type = 'LOCAL'  # Property
bpy.context.scene.type = 'LOCAL'  # Property
bpy.context.scene.type = 'LOCAL'  # Property
bpy.context.scene.type = 'LOCAL'  # Property
bpy.ops.transform.resize(value=(1.18526, 1, 1), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.data.screens["Layout"].shading.type = 'SOLID'  # Property
bpy.ops.transform.resize(value=(0.95557, 1, 1), orient_type='LOCAL', orient_matrix=((0.683096, -0.730329, 0), (0.730329, 0.683096, 0), (0, 0, 1)), orient_matrix_type='LOCAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(1.67638e-08, -0.0135056, 0), orient_type='LOCAL', orient_matrix=((0.683096, -0.730329, 0), (0.730329, 0.683096, 0), (0, 0, 1)), orient_matrix_type='LOCAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(-0.07599, -0.0993078, 0.0272463), orient_type='GLOBAL', orient_matrix=((0.683096, -0.730329, 0), (0.730329, 0.683096, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.resize(value=(1, 0.964357, 1), orient_type='LOCAL', orient_matrix=((0.683096, -0.730329, 0), (0.730329, 0.683096, 0), (0, 0, 1)), orient_matrix_type='LOCAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.data.screens["Layout"].shading.type = 'WIREFRAME'  # Property
bpy.ops.transform.translate(value=(2.98023e-08, 0.0984871, 0), orient_type='LOCAL', orient_matrix=((0.683096, -0.730329, 0), (0.730329, 0.683096, 0), (0, 0, 1)), orient_matrix_type='LOCAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.resize(value=(1, 0.977682, 1), orient_type='LOCAL', orient_matrix=((0.683096, -0.730329, 0), (0.730329, 0.683096, 0), (0, 0, 1)), orient_matrix_type='LOCAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.resize(value=(1, 0.955713, 1), orient_type='LOCAL', orient_matrix=((0.683096, -0.730329, 0), (0.730329, 0.683096, 0), (0, 0, 1)), orient_matrix_type='LOCAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.resize(value=(1, 1, -0.713606), orient_type='LOCAL', orient_matrix=((0.683096, -0.730329, 0), (0.730329, 0.683096, 0), (0, 0, 1)), orient_matrix_type='LOCAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, 0.237305), orient_type='LOCAL', orient_matrix=((0.683096, -0.730329, 0), (0.730329, 0.683096, 0), (0, 0, -1)), orient_matrix_type='LOCAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.context.scene.type = 'GLOBAL'  # Property
bpy.ops.transform.translate(value=(0, 0, 0.35313), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, 0.373758), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.anim.keyframe_insert_menu(type='LocRotScale')  # Operator
bpy.context.object.modifiers["Fluidsim"].settings.viewport_display_mode = 'PREVIEW'  # Property
bpy.data.screens["Layout"].shading.type = 'RENDERED'  # Property
bpy.context.space_data.context = 'TOOL'  # Property
bpy.context.space_data.context = 'RENDER'  # Property
bpy.context.scene.render.engine = 'BLENDER_WORKBENCH'  # Property
bpy.context.scene.render.engine = 'CYCLES'  # Property
bpy.context.scene.render.engine = 'BLENDER_EEVEE'  # Property
bpy.context.space_data.context = 'MATERIAL'  # Property
bpy.context.object.active_material.preview_render_type = 'FLAT'  # Property
bpy.context.object.active_material.preview_render_type = 'SPHERE'  # Property
bpy.context.object.active_material.preview_render_type = 'CUBE'  # Property
bpy.context.space_data.context = 'RENDER'  # Property
bpy.context.scene.render.engine = 'BLENDER_WORKBENCH'  # Property
bpy.ops.object.select_all(action='DESELECT')  # Operator
bpy.context.scene.render.engine = 'BLENDER_EEVEE'  # Property
bpy.context.scene.render.engine = 'CYCLES'  # Property
bpy.context.scene.cycles.transparent_max_bounces = 5  # Property
bpy.context.scene.cycles.transparent_max_bounces = 6  # Property
bpy.context.scene.cycles.transparent_max_bounces = 7  # Property
bpy.context.scene.cycles.transparent_max_bounces = 8  # Property
bpy.context.scene.cycles.transparent_max_bounces = 4  # Property
bpy.context.scene.cycles.transparent_max_bounces = 3  # Property
bpy.context.scene.cycles.transparent_max_bounces = 4  # Property
bpy.context.scene.cycles.feature_set = 'EXPERIMENTAL'  # Property
bpy.context.scene.cycles.device = 'GPU'  # Property
bpy.context.scene.cycles.shading_system = False  # Property
bpy.context.scene.cycles.shading_system = True  # Property
bpy.context.scene.cycles.device = 'CPU'  # Property
bpy.context.scene.render.engine = 'BLENDER_EEVEE'  # Property
bpy.context.scene.eevee.use_bloom = True  # Property
bpy.context.scene.eevee.use_bloom = False  # Property
bpy.context.scene.render.engine = 'BLENDER_WORKBENCH'  # Property
bpy.context.scene.shading.studio_light = 'rim.sl'  # Property
bpy.context.scene.shading.studio_light = 'studio.sl'  # Property
bpy.context.scene.shading.studio_light = 'outdoor.sl'  # Property
bpy.context.scene.shading.studio_light = 'basic.sl'  # Property
bpy.context.scene.shading.studio_light = 'Default'  # Property
bpy.context.scene.shading.studio_light = 'rim.sl'  # Property
bpy.context.scene.shading.studio_light = 'Default'  # Property
bpy.context.scene.shading.color_type = 'OBJECT'  # Property
bpy.context.scene.shading.color_type = 'VERTEX'  # Property
bpy.context.scene.shading.color_type = 'SINGLE'  # Property
bpy.context.scene.shading.color_type = 'RANDOM'  # Property
bpy.context.scene.shading.color_type = 'TEXTURE'  # Property
bpy.context.scene.shading.color_type = 'MATERIAL'  # Property
bpy.context.scene.render.use_simplify = True  # Property
bpy.context.scene.render.use_simplify = False  # Property
bpy.data.screens["Layout"].shading.type = 'SOLID'  # Property
bpy.data.screens["Layout"].shading.type = 'WIREFRAME'  # Property
bpy.data.screens["Layout"].shading.type = 'WIREFRAME'  # Property
bpy.data.screens["Layout"].shading.type = 'SOLID'  # Property
bpy.data.screens["Layout"].shading.type = 'RENDERED'  # Property
bpy.data.screens["Layout"].shading.type = 'RENDERED'  # Property
bpy.data.screens["Layout"].shading.type = 'RENDERED'  # Property
bpy.context.scene.viewport_aa = '8'  # Property
bpy.context.scene.render_aa = '32'  # Property
bpy.context.scene.render.engine = 'BLENDER_EEVEE'  # Property
bpy.context.scene.render.engine = 'CYCLES'  # Property
bpy.context.scene.render.engine = 'BLENDER_WORKBENCH'  # Property
bpy.context.scene.render_aa = '5'  # Property
bpy.context.scene.viewport_aa = '5'  # Property
bpy.data.screens["Layout"].shading.show_xray = True  # Property
bpy.data.screens["Layout"].shading.show_xray = False  # Property
bpy.data.screens["Layout"].shading.show_xray = True  # Property
bpy.data.screens["Layout"].shading.show_xray = False  # Property
bpy.data.screens["Layout"].shading.type = 'WIREFRAME'  # Property
bpy.context.space_data.context = 'PHYSICS'  # Property
bpy.ops.transform.rotate(value=0.841573, orient_axis='Z', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.resize(value=(1.29408, 1, 1), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.rotate(value=-0.0233794, orient_axis='Z', orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.resize(value=(1.06948, 1, 1), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(-0.0627935, 0, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0.0726776, 0, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.resize(value=(1.02828, 1, 1), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.resize(value=(1, 1.41698, 1), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, -0.104656, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.data.screens["Layout"].shading.type = 'SOLID'  # Property
bpy.context.space_data.context = 'RENDER'  # Property
bpy.context.scene.render.engine = 'CYCLES'  # Property
bpy.data.screens["Layout"].shading.type = 'MATERIAL'  # Property
bpy.data.screens["Layout"].shading.type = 'SOLID'  # Property
bpy.data.screens["Layout"].shading.type = 'MATERIAL'  # Property
bpy.ops.transform.translate(value=(0, -0.126158, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0.0244203, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.resize(value=(0.94681, 1, 1), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.data.screens["Layout"].shading.type = 'WIREFRAME'  # Property
bpy.ops.transform.resize(value=(0.951574, 1, 1), orient_type='LOCAL', orient_matrix=((0.683096, -0.730329, 0), (0.730329, 0.683096, 0), (0, 0, 1)), orient_matrix_type='LOCAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.data.screens["Layout"].shading.type = 'SOLID'  # Property
bpy.context.space_data.context = 'PHYSICS'  # Property
bpy.context.space_data.context = 'WORLD'  # Property
bpy.data.screens["Layout"].shading.type = 'RENDERED'  # Property
bpy.context.space_data.context = 'RENDER'  # Property
bpy.context.scene.render.engine = 'BLENDER_WORKBENCH'  # Property
bpy.context.area.ui_type = 'INFO'  # Property
bpy.context.area.ui_type = 'CONSOLE'  # Property
bpy.context.area.ui_type = 'VIEW_3D'  # Property
bpy.context.scene.render.engine = 'CYCLES'  # Property
bpy.context.scene.cycles.device = 'GPU'  # Property
bpy.context.space_data.context = 'PHYSICS'  # Property
bpy.context.object.modifiers["Fluidsim"].settings.resolution = 100  # Property
bpy.context.object.modifiers["Fluidsim"].settings.threads = 4  # Property
bpy.context.space_data.context = 'RENDER'  # Property
bpy.context.scene.render.engine = 'BLENDER_WORKBENCH'  # Property
bpy.ops.action.delete()  # Operator
No more keyframes to jump to in this direction  # Info
No more keyframes to jump to in this direction  # Info
bpy.ops.transform.translate(value=(0, 0, 5.1753), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(12.4471, 0, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, -3.67302, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(-8.93014, 0, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, -1.62096, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.rotate(value=6.28319, orient_axis='Z', orient_type='VIEW', orient_matrix=((-0.670217, 0.742115, -0.00858155), (-0.394257, -0.36581, -0.843057), (0.628785, 0.561648, -0.537756)), orient_matrix_type='VIEW', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.anim.keyframe_insert_menu(type='LocRotScale')  # Operator
bpy.context.scene.frame_current = 125  # Property
bpy.ops.transform.translate(value=(-8.34621, 0, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, -1.95861), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(4.75352, 0, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 5.13438, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, -3.44778), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(0, 0, -0.878246), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, False, True), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.rotate(value=6.28319, orient_axis='Z', orient_type='VIEW', orient_matrix=((0.0666534, 0.997757, -0.00614503), (-0.439548, 0.0238332, -0.897903), (0.895743, -0.0625493, -0.440151)), orient_matrix_type='VIEW', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.anim.keyframe_insert_menu(type='LocRotScale')  # Operator
bpy.ops.transform.translate(value=(0, 5.05762, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(False, True, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.translate(value=(1.00745, 0, 0), orient_type='GLOBAL', orient_matrix=((1, 0, 0), (0, 1, 0), (0, 0, 1)), orient_matrix_type='GLOBAL', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.transform.rotate(value=6.28319, orient_axis='Z', orient_type='VIEW', orient_matrix=((-0.670217, 0.742115, -0.00858155), (-0.394257, -0.36581, -0.843057), (0.628785, 0.561648, -0.537756)), orient_matrix_type='VIEW', mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)  # Operator
bpy.ops.anim.keyframe_insert_menu(type='LocRotScale')  # Operator
bpy.context.space_data.context = 'CONSTRAINT'  # Property
bpy.context.space_data.context = 'PHYSICS'  # Property
bpy.context.space_data.context = 'CONSTRAINT'  # Property
bpy.context.space_data.context = 'PHYSICS'  # Property
bpy.context.space_data.context = 'PARTICLES'  # Property
bpy.context.space_data.context = 'PHYSICS'  # Property
bpy.context.space_data.context = 'MATERIAL'  # Property
bpy.context.space_data.context = 'PHYSICS'  # Property
bpy.context.space_data.context = 'RENDER'  # Property
bpy.context.scene.render.engine = 'CYCLES'  # Property
bpy.context.space_data.context = 'PHYSICS'  # Property
bpy.context.space_data.context = 'RENDER'  # Property
bpy.context.scene.render.engine = 'BLENDER_EEVEE'  # Property
bpy.context.scene.render.engine = 'BLENDER_WORKBENCH'  # Property
bpy.context.scene.render.engine = 'BLENDER_EEVEE'  # Property
bpy.context.scene.render.engine = 'CYCLES'  # Property

# backtrace
/usr/share/blender/blender(BLI_system_backtrace+0x1d) [0x13837cd]
/usr/share/blender/blender() [0x1169fb9]
/usr/lib/libc.so.6(+0x378b0) [0x7fc40a3c78b0]
/usr/share/blender/blender(RE_engine_get_current_tiles+0xa6) [0x1412426]
/usr/share/blender/blender(draw_image_main+0x478) [0x2cd4f38]
/usr/share/blender/blender() [0x2cd1c31]
/usr/share/blender/blender(ED_region_do_draw+0x851) [0x2d70e61]
/usr/share/blender/blender(wm_draw_update+0x462) [0x1530742]
/usr/share/blender/blender(WM_main+0x30) [0x152df00]
/usr/share/blender/blender(main+0x30a) [0x10d02fa]
/usr/lib/libc.so.6(__libc_start_main+0xf3) [0x7fc40a3b3ce3]
/usr/share/blender/blender(_start+0x2a) [0x11668ca]
